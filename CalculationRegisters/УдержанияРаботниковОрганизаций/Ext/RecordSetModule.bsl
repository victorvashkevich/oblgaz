////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Управление необходимостью делать движения по фактическим отпускам
Перем мВыполнятьСписаниеФактическогоОтпуска Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ


Процедура СписатьФактическиеОтпускаУдержаниями(Регистратор) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор",	Регистратор);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Удержания.Сотрудник КАК Сотрудник,
	|	Удержания.ДатаНачалаСобытия КАК ПериодДействия,
	|	Удержания.Сторно КАК Сторно,
	|	Начисления.ВидЕжегодногоОтпуска,
	|	Удержания.Показатель1 КАК ДнейОтпуска,
	|	Удержания.Регистратор.Дата КАК ДатаРегистрации
	|ИЗ
	|	РегистрРасчета.УдержанияРаботниковОрганизаций КАК Удержания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК Начисления
	|		ПО (Начисления.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.КомпенсацияОтпускаКалендарныеДни))
	|			И ((НЕ Начисления.ВидЕжегодногоОтпуска = ЗНАЧЕНИЕ(Справочник.ВидыЕжегодныхОтпусков.ПустаяСсылка)))
	|ГДЕ
	|	Удержания.Регистратор = &Регистратор
	|	И Удержания.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.УдержаниеЗаНеотработанныйОтпускКалендарныеДни)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	Сторно УБЫВ";
	Выборка = Запрос.Выполнить().Выбрать();
	
	НаборЗаписей = РегистрыНакопления.ФактическиеОтпускаОрганизаций.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);
	НаборЗаписей.Прочитать();
	Пока Выборка.Следующий() Цикл
		Движение = НаборЗаписей.Добавить();
		
		// Свойства
		Движение.Период					= Выборка.ПериодДействия;
		
		// Измерения
		Движение.Сотрудник				= Выборка.Сотрудник;
		Движение.ВидЕжегодногоОтпуска	= Выборка.ВидЕжегодногоОтпуска;
		
		// Ресурсы
		Движение.Количество				= -Выборка.ДнейОтпуска * ?(Выборка.Сторно, -1, 1);
		
		// Реквизиты
		Движение.Компенсация			= Истина;
		Движение.ДатаРегистрации		= Выборка.ДатаРегистрации;
	КонецЦикла;
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение, ТолькоЗапись, ЗаписьФактическогоПериодаДействия, ЗаписьПерерасчетов)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если мВыполнятьСписаниеФактическогоОтпуска Тогда
		СписатьФактическиеОтпускаУдержаниями(Отбор.Регистратор.Значение);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мВыполнятьСписаниеФактическогоОтпуска	= Ложь;
