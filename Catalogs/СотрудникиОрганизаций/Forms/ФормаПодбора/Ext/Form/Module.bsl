
&НаКлиенте
Процедура ПеренестиВДокумент()
	
	АдресВыбранныхСотрудниковВХранилище = ПоместитьВоВременноеХранилище(ВыбранныеСотрудники.ВыгрузитьЗначения());
	Закрыть(АдресВыбранныхСотрудниковВХранилище);
	
КонецПроцедуры // ПеренестиВДокумент

&НаКлиенте
Процедура ОбновитьОтображениеВыбранныхСотрудников()
	
	Если ВыбранныеСотрудники.Количество() > 0 Тогда
		ЭлементОтбораДанныхУсловногоОформленияВыбранныхСотрудников.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбораДанныхУсловногоОформленияВыбранныхСотрудников.ПравоеЗначение = ВыбранныеСотрудники;
	Иначе	
		ЭлементОтбораДанныхУсловногоОформленияВыбранныхСотрудников.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
		ЭлементОтбораДанныхУсловногоОформленияВыбранныхСотрудников.ПравоеЗначение = Неопределено;
	КонецЕсли;	

КонецПроцедуры // ОбновитьОтображениеВыбранныхСотрудников

&НаКлиенте
Процедура ВыбратьСотрудника(Сотрудник, Выбрать = Неопределено)
	
	ЭлементСписка = ВыбранныеСотрудники.НайтиПоЗначению(Сотрудник);
	
	Если Выбрать = Неопределено Тогда
		Выбрать = ЭлементСписка = Неопределено;
	КонецЕсли;
	
	Если Выбрать И ЭлементСписка = Неопределено Тогда
		ВыбранныеСотрудники.Добавить(Сотрудник);
	КонецЕсли;	
	Если НЕ Выбрать И ЭлементСписка <> Неопределено Тогда
		ВыбранныеСотрудники.Удалить(ЭлементСписка);
	КонецЕсли;	
	
	ОбновитьОтображениеВыбранныхСотрудников();
	
КонецПроцедуры // ВыбратьСотрудника

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Организация") И ЗначениеЗаполнено(Параметры.Организация) Тогда
		
		ОтборОрганизация = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборОрганизация.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация");
		ОтборОрганизация.ПравоеЗначение = Параметры.Организация;
		ОтборОрганизация.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборОрганизация.Использование = Истина;
		
	КонецЕсли;
	
	Если Параметры.Свойство("ПодразделениеОрганизации") и ЗначениеЗаполнено(Параметры.ПодразделениеОрганизации) Тогда
		
		ОтборПодразделение = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборПодразделение.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПодразделениеОрганизации");
		ОтборПодразделение.ПравоеЗначение = Параметры.ПодразделениеОрганизации;
		ОтборПодразделение.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
		ОтборПодразделение.Использование = Истина;
		
	КонецЕсли;
	
	Если Параметры.Свойство("ПодразделениеКомпании") и ЗначениеЗаполнено(Параметры.ПодразделениеКомпании) Тогда
		
		ОтборПодразделение = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборПодразделение.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТекущееПодразделениеКомпании");
		ОтборПодразделение.ПравоеЗначение = Параметры.ПодразделениеКомпании;
		ОтборПодразделение.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
		ОтборПодразделение.Использование = Истина;
		
	КонецЕсли;
	
	Элементы.ГруппаВОрганизации.Видимость = Параметры.Свойство("Организация");
	Элементы.ГруппаВидДоговораВидЗанятости.Видимость = Параметры.Свойство("Организация");
	Элементы.ГруппаВКомпании.Видимость = Параметры.Свойство("ПодразделениеКомпании");
	
	СотрудникиДокумента = ПолучитьИзВременногоХранилища(Параметры.АдресВыбранныхСотрудниковВХранилище);
	Для Каждого Сотрудник Из СотрудникиДокумента Цикл
		ВыбранныеСотрудники.Добавить(Сотрудник.Ключ)
	КонецЦикла;
	ВыбранныеСотрудники.СортироватьПоЗначению();
	
	ЦветТекстаПодобранногоЭлемента = ЦветаСтиля.ЦветПодобранногоЭлемента;
	
КонецПроцедуры // ПриСозданииНаСервере

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЭлементУсловногоОформления = Список.УсловноеОформление.Элементы.Добавить();
		
	ЭлементОтбораДанныхУсловногоОформленияВыбранныхСотрудников = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораДанныхУсловногоОформленияВыбранныхСотрудников.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	ЭлементОтбораДанныхУсловногоОформленияВыбранныхСотрудников.Использование = Истина;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветТекстаПодобранногоЭлемента);
	ЭлементУсловногоОформления.Использование = Истина;
	
	ОбновитьОтображениеВыбранныхСотрудников();	
	
КонецПроцедуры // ПриОткрытии

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ВыбратьВыделенные(Команда)
	
	Для Каждого ВыделеннаяСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
		ВыбратьСотрудника(ВыделеннаяСтрока, Истина);
	КонецЦикла;
	
КонецПроцедуры // ВыбратьВыделенные

&НаКлиенте
Процедура ИсключитьВыделенные(Команда)
	
	Для Каждого ВыделеннаяСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
		ВыбратьСотрудника(ВыделеннаяСтрока, Ложь);
	КонецЦикла;
	
КонецПроцедуры // ИсключитьВыделенные

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ВыбратьСотрудника(ВыбраннаяСтрока);
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры // СписокВыбор
