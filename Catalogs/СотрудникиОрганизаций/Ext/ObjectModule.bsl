////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем ПолучитьКадровыеДанныеФизлица Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//

// Формирует запрос по документу
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросДляПечатиТрудовогоДоговора()

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("СправочникСсылка", Ссылка);
	Запрос.УстановитьПараметр("Руководитель",	Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
    Запрос.УстановитьПараметр("ДатаДокумента",	 ДатаДоговора);
	Запрос.УстановитьПараметр("ВидАдресаРегистрации" , Справочники.ВидыКонтактнойИнформации.ЮрАдресФизЛица);
	Запрос.УстановитьПараметр("ВидТелефонаДомашний" , Справочники.ВидыКонтактнойИнформации.ТелефонФизЛица);
 	Запрос.УстановитьПараметр("ВидАдресаОрганизации" , Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
	Запрос.УстановитьПараметр("ВидТелефонаОрганизации" , Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
	Запрос.УстановитьПараметр("ОсновноеМестоРаботы",	Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы);

		Запрос.Текст =
		"ВЫБРАТЬ
		|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность КАК ДолжностьРуководителя,
		|	ТрудовойДоговор.НомерДоговора КАК НомерДок,
		|	ТрудовойДоговор.ДатаДоговора КАК ДатаДок,
		|	ВЫРАЗИТЬ(ТрудовойДоговор.Организация.НаименованиеПолное КАК СТРОКА(300)) КАК ПолноеНазваниеОрганизации,
		|	ЕСТЬNULL(ФИООтветственныхЛиц.Фамилия + "" "" + ФИООтветственныхЛиц.Имя + "" "" + ФИООтветственныхЛиц.Отчество, ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо.Наименование) КАК ФИОРуководителя,
		|	ЕСТЬNULL(ФИОФизЛиц.Фамилия + "" "" + ФИОФизЛиц.Имя + "" "" + ФИОФизЛиц.Отчество, ТрудовойДоговор.Физлицо.Наименование) КАК ФИОРаботника,
		|	ТрудовойДоговор.ДатаОкончания КАК ДатаУвольнения,
		|	ТрудовойДоговор.ДатаНачала КАК ДатаПриема,
		|	ТрудовойДоговор.Должность.Наименование КАК Должность,
		|	ТрудовойДоговор.ЗанимаемыхСтавок,
		|	ТрудовойДоговор.ИспытательныйСрок,
		|	ТрудовойДоговор.ПодразделениеОрганизации.Наименование КАК Подразделение,
		|	ВЫБОР
		|		КОГДА ТрудовойДоговор.ВидЗанятости = &ОсновноеМестоРаботы
		|			ТОГДА ""основной работе""
		|		ИНАЧЕ ""совместительству""
		|	КОНЕЦ КАК ВидЗанятости,
		|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументСерия,
		|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументНомер,
		|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументДатаВыдачи,
		|	ВЫРАЗИТЬ(ПаспортныеДанныеФизЛицСрезПоследних.ДокументКемВыдан КАК СТРОКА(300)) КАК ДокументКемВыдан,
		|	АдресРегистрации.Представление КАК АдресРегистрации,
		|	ТелефонДомашний.Представление КАК Телефоны,
		|	КонтактнаяИнформация.Представление КАК АдресОрганизации,
		|	ТелефонОрганизации.Представление КАК ТелефоныОрганизации,
		|	ТрудовойДоговор.Организация.Наименование КАК НазваниеОрганизации,
		|	ТрудовойДоговор.Организация.ИНН + ""/"" + ТрудовойДоговор.Организация.КПП КАК ИНН,
		|	ТрудовойДоговор.ГрафикРаботы.ВидГрафика КАК ВидГрафика,
		|	ТрудовойДоговор.ГрафикРаботы.ДлительностьРабочейНедели КАК ДлительностьРабочейНедели,
		|	ТрудовойДоговор.ВидРасчета,
		|	ТрудовойДоговор.ТарифнаяСтавка,
		|	ТрудовойДоговор.ВалютаТарифнойСтавки.Наименование КАК ВалютаТарифнойСтавки,
		|	ТрудовойДоговор.ПерсональныеНадбавки.(
		|		Ссылка,
		|		НомерСтроки,
		|		Надбавка КАК Надбавка,
		|		Показатель1
		|	)
		|ИЗ
		|	Справочник.СотрудникиОрганизаций КАК ТрудовойДоговор
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаДокумента, ОтветственноеЛицо = &Руководитель) КАК ОтветственныеЛицаОрганизацийСрезПоследних
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаДокумента, ) КАК ФИООтветственныхЛиц
		|			ПО ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо = ФИООтветственныхЛиц.ФизЛицо
		|		ПО ТрудовойДоговор.Организация = ОтветственныеЛицаОрганизацийСрезПоследних.СтруктурнаяЕдиница
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаДокумента, ) КАК ФИОФизЛиц
		|		ПО ТрудовойДоговор.Физлицо = ФИОФизЛиц.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(&ДатаДокумента, ) КАК ПаспортныеДанныеФизЛицСрезПоследних
		|		ПО ТрудовойДоговор.Физлицо = ПаспортныеДанныеФизЛицСрезПоследних.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресРегистрации
		|		ПО ТрудовойДоговор.Физлицо = АдресРегистрации.Объект
		|			И (АдресРегистрации.Вид = &ВидАдресаРегистрации)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ТелефонДомашний
		|		ПО ТрудовойДоговор.Физлицо = ТелефонДомашний.Объект
		|			И (АдресРегистрации.Вид = &ВидТелефонаДомашний)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ПО ТрудовойДоговор.Организация = КонтактнаяИнформация.Объект
		|			И (КонтактнаяИнформация.Вид = &ВидАдресаОрганизации)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ТелефонОрганизации
		|		ПО ТрудовойДоговор.Организация = ТелефонОрганизации.Объект
		|			И (ТелефонОрганизации.Вид = &ВидТелефонаОрганизации)
		|ГДЕ
		|	ТрудовойДоговор.Ссылка = &СправочникСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросДляПечати()

///////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Функция формирует уникальный номер трудового договора
// уникальность в пределах года
// 
Функция ПолучитьНомерТрудовогоДоговора() Экспорт
	
	Если Организация.Пустая() Тогда
		Возврат "0000000001";
	КонецЕсли;
	
	Если ВидДоговора <> Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор Тогда
		Возврат НомерДоговора;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	//vvv
	//Запрос.УстановитьПараметр("парамОрганизация",Организация);
	Запрос.УстановитьПараметр("парамОрганизация",ОбособленноеПодразделение);
	//
	Запрос.УстановитьПараметр("парамНачалоГода" ,НачалоГода(НачалоДня(ДатаДоговора)));
	Запрос.УстановитьПараметр("парамКонецГода"  ,КонецГода(КонецДня(ДатаДоговора)));
	
	ТекстЗапроса =
	//vvv
	//"ВЫБРАТЬ
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(СотрудникиОрганизаций.НомерДоговора) КАК НомерДок
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|ГДЕ
	//vvv
	//|	СотрудникиОрганизаций.Организация = &парамОрганизация
	|	СотрудникиОрганизаций.ТекущееОбособленноеПодразделение = &парамОрганизация
	//
	|	И СотрудникиОрганизаций.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
	|	И СотрудникиОрганизаций.ДатаДоговора МЕЖДУ &парамНачалоГода И &парамКонецГода";
	
	Запрос.Текст = ТекстЗапроса;
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат Организация.Префикс + "0000001";
	Иначе
		
		СтрокаРезультата = Запрос.Выполнить().Выгрузить()[0];
		Если НЕ ЗначениеЗаполнено(СтрокаРезультата.НомерДок) Тогда
			//vvv
			//Возврат Организация.Префикс + "0000001";
			Возврат ОбособленноеПодразделение.Префикс + "0000001";
			//
		Иначе
			Возврат ПроцедурыУправленияПерсоналом.ПолучитьСледующийНомер(СокрП(СтрокаРезультата.НомерДок));
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецФункции // ПолучитьНомерТрудовогоДоговора()

Процедура ПроверитьНомерТрудовогоДоговора(НачальнаяДатаДокумента) Экспорт
	
	//определяем разность старой и новой даты договора
	РазностьДат = НачалоГода(НачальнаяДатаДокумента) - НачалоГода(ДатаДоговора);

	Если РазностьДат <> 0 Тогда
		НомерДоговора = ПолучитьНомерТрудовогоДоговора();
	КонецЕсли;

КонецПроцедуры // РаботаСДиалогами.ПроверитьНомерДокумента() 

// Функция формирует очередной табельный номер сотрудника
// уникальность в пределах организации и вида договора
// Возвращаемое значение:
//   Строка   – табельный номер
//
Функция ПолучитьОчереднойТабельныйНомер() Экспорт

	Если Не ЗначениеЗаполнено(ВидДоговора) Тогда
		Возврат "";
	КонецЕсли;
	
	Префикс = "";
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("парамОрганизация",Организация);
	парамВидДоговора = Новый Массив;
	Если ВидДоговора = Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор Тогда
		парамВидДоговора.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);
	ИначеЕсли ВидДоговора = Перечисления.ВидыДоговоровСФизЛицами.ДоговорУправленческий Тогда
		парамВидДоговора.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ДоговорУправленческий);
	Иначе
		Префикс = "д";
		парамВидДоговора.Добавить(Перечисления.ВидыДоговоровСФизЛицами.Авторский);
		парамВидДоговора.Добавить(Перечисления.ВидыДоговоровСФизЛицами.Подряда);
	КонецЕсли;
	Запрос.УстановитьПараметр("парамВидДоговора",парамВидДоговора);
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(СотрудникиОрганизаций.Код) КАК Код
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|ГДЕ
	|	СотрудникиОрганизаций.Организация = &парамОрганизация
	|	И СотрудникиОрганизаций.ВидДоговора В(&парамВидДоговора)
	|	И СотрудникиОрганизаций.Ссылка <> &Ссылка";
	
	Запрос.Текст = ТекстЗапроса;
	РезультатаЗапроса = Запрос.Выполнить();
	Если РезультатаЗапроса.Пустой() Тогда
		Возврат ?(ЗначениеЗаполнено(Префикс), Префикс + "000000001", "0000000001");
	Иначе
		СтрокаРезультата = РезультатаЗапроса.Выгрузить()[0];
		Если НЕ ЗначениеЗаполнено(СтрокаРезультата.Код) Тогда
			Возврат ?(ЗначениеЗаполнено(Префикс), Префикс + "000000001", "0000000001");
		Иначе
			Возврат ПроцедурыУправленияПерсоналом.ПолучитьСледующийНомер(СокрП(СтрокаРезультата.Код));
		КонецЕсли;
	КонецЕсли;

КонецФункции // ПолучитьОчереднойТабельныйНомер()


#Если Клиент Тогда

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "Печать" Тогда
		
		ТабДокумент = Новый ТабличныйДокумент;
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТрудовойДоговор_Печать";
		
		// получаем данные для печати
		Выборка = СформироватьЗапросДляПечатиТрудовогоДоговора().Выбрать();
		
		// получаем макет
		Макет = ПолучитьМакет("Макет");
		
		// выводим данные 
		Если Выборка.Следующий() Тогда
			Макет.Параметры.Заполнить(Выборка);
			Макет.Параметры.ИспытательныйСрокСтрокой = ?(НЕ ЗначениеЗаполнено(Выборка.ИспытательныйСрок),"             месяцев", "" + Выборка.ИспытательныйСрок + " месяца(ев)" );
			Макет.Параметры.РежимРаботы = "" + Выборка.ВидГрафика + "; " + Выборка.ДлительностьРабочейНедели + " - часовая рабочая неделя";
			Макет.Параметры.ФормаОплаты = "Форма оплаты: " + Выборка.ВидРасчета + "; Оклад (тариф) = " + Выборка.ТарифнаяСтавка + " ("+Выборка.ВалютаТарифнойСтавки+")";  
			Макет.Параметры.ПолноеНазваниеОрганизации = СокрЛП(Макет.Параметры.ПолноеНазваниеОрганизации);
			Макет.Параметры.ДокументКемВыдан = СокрЛП(Макет.Параметры.ДокументКемВыдан);
			
			ВыборкаПерсональныхНадбавок = Выборка.ПерсональныеНадбавки.Выбрать();
			Если ВыборкаПерсональныхНадбавок.Количество()>0 Тогда
				СтрокаНадбавки = "Персональные надбавки: ";
				Пока ВыборкаПерсональныхНадбавок.Следующий() Цикл
					СтрокаНадбавки = СтрокаНадбавки + ВыборкаПерсональныхНадбавок.Надбавка + "- " + ВыборкаПерсональныхНадбавок.Показатель1 + "; ";
				КонецЦикла; 
				Макет.Параметры.Надбавки = СтрокаНадбавки;
			КонецЕсли; 
		КонецЕсли;
		
		// выводим готовый документ
		ТабДокумент.Вывести(Макет);
	//vvv
	ИначеЕсли ИмяМакета="Заявление" Тогда
		Запрос=Новый Запрос;
		Запрос.Текст=
		"ВЫБРАТЬ
		|	ФИОФизЛицСрезПоследних.Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя,
		|	ФИОФизЛицСрезПоследних.Отчество,
		|	ПаспортныеДанные.ДокументВид,
		|	ПаспортныеДанные.ДокументСерия,
		|	ПаспортныеДанные.ДокументНомер,
		|	ПаспортныеДанные.ДокументДатаВыдачи,
		|	ПаспортныеДанные.ДокументКемВыдан,
		|	ПаспортныеДанные.ДокументСрокДействия,
		|	ПаспортныеДанные.ЛичныйНомер,
		|	ФизическиеЛица.ДатаРождения,
		|	ФизическиеЛица.МестоРождения,
		|	ФизическиеЛица.Пол,
		|	СемейноеПоложениеФизЛиц.СемейныйСтатус,
		|	РаботникиОрганизаций.Должность,
		|	РаботникиОрганизаций.Подразделение,
		|	КонтактнаяИнформация.АдресПрописки,
		|	КонтактнаяИнформация1.АдресПроживания,
		|	КонтактнаяИнформация2.ТелМобильный,
		|	КонтактнаяИнформация3.ТелефонРаб,
		|	КонтактнаяИнформация4.ТелефонДом,
		|	КонтактнаяИнформация5.EMail,
		|	КонтактнаяИнформация6.АдресОрганизации,
		|	Гражданство.Резидент,
		|	СоставСемьи.КоличествоЧленов + 1 КАК КоличествоЧленовСемьи
		|ИЗ
		|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаАктуальности, ФизЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ПаспортныеДанныеФизЛицСрезПоследних.ФизЛицо КАК ФизЛицо,
		|			ПаспортныеДанныеФизЛицСрезПоследних.ДокументВид КАК ДокументВид,
		|			ПаспортныеДанныеФизЛицСрезПоследних.ДокументСерия КАК ДокументСерия,
		|			ПаспортныеДанныеФизЛицСрезПоследних.ДокументНомер КАК ДокументНомер,
		|			ПаспортныеДанныеФизЛицСрезПоследних.ДокументДатаВыдачи КАК ДокументДатаВыдачи,
		|			ПаспортныеДанныеФизЛицСрезПоследних.ДокументКемВыдан КАК ДокументКемВыдан,
		|			ПаспортныеДанныеФизЛицСрезПоследних.ДокументСрокДействия КАК ДокументСрокДействия,
		|			ПаспортныеДанныеФизЛицСрезПоследних.ЛичныйНомер КАК ЛичныйНомер
		|		ИЗ
		|			РегистрСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(&ДатаАктуальности, ФизЛицо = &ФизЛицо) КАК ПаспортныеДанныеФизЛицСрезПоследних) КАК ПаспортныеДанные
		|		ПО ФИОФизЛицСрезПоследних.ФизЛицо = ПаспортныеДанные.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ФизическиеЛица.Ссылка КАК ФизЛицо,
		|			ФизическиеЛица.ДатаРождения КАК ДатаРождения,
		|			ФизическиеЛица.Пол КАК Пол,
		|			ФизическиеЛица.МестоРождения КАК МестоРождения
		|		ИЗ
		|			Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ГДЕ
		|			ФизическиеЛица.Ссылка = &ФизЛицо) КАК ФизическиеЛица
		|		ПО ФИОФизЛицСрезПоследних.ФизЛицо = ФизическиеЛица.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			РаботникиОрганизаций.Сотрудник.Физлицо КАК ФизЛицо,
		|			РаботникиОрганизаций.Организация КАК Организация,
		|			РаботникиОрганизаций.ПодразделениеОрганизации КАК Подразделение,
		|			РаботникиОрганизаций.Должность КАК Должность
		|		ИЗ
		|			РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|					&ДатаАктуальности,
		|					Сотрудник.ФизЛицо = &ФизЛицо
		|						И Организация = &Организация) КАК РаботникиОрганизаций) КАК РаботникиОрганизаций
		|		ПО ФИОФизЛицСрезПоследних.ФизЛицо = РаботникиОрганизаций.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СемейноеПоложениеФизЛицСрезПоследних.ФизЛицо КАК ФизЛицо,
		|			СемейноеПоложениеФизЛицСрезПоследних.СемейноеПоложение КАК СемейныйСтатус
		|		ИЗ
		|			РегистрСведений.СемейноеПоложениеФизЛиц.СрезПоследних(&ДатаАктуальности, ФизЛицо = &ФизЛицо) КАК СемейноеПоложениеФизЛицСрезПоследних) КАК СемейноеПоложениеФизЛиц
		|		ПО ФИОФизЛицСрезПоследних.ФизЛицо = СемейноеПоложениеФизЛиц.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ГражданствоФизЛицСрезПоследних.ФизЛицо КАК ФизЛицо,
		|			НЕ ГражданствоФизЛицСрезПоследних.НеЯвляетсяНалоговымРезидентомРФ КАК Резидент
		|		ИЗ
		|			РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&ДатаАктуальности, ФизЛицо = &ФизЛицо) КАК ГражданствоФизЛицСрезПоследних) КАК Гражданство
		|		ПО ФИОФизЛицСрезПоследних.ФизЛицо = Гражданство.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			КонтактнаяИнформация.Объект КАК ФизЛицо,
		|			КонтактнаяИнформация.Представление КАК АдресПрописки
		|		ИЗ
		|			РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ГДЕ
		|			КонтактнаяИнформация.Объект = &ФизЛицо
		|			И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресФизЛица)) КАК КонтактнаяИнформация
		|		ПО ФИОФизЛицСрезПоследних.ФизЛицо = КонтактнаяИнформация.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			КонтактнаяИнформация.Объект КАК ФизЛицо,
		|			КонтактнаяИнформация.Представление КАК АдресПроживания
		|		ИЗ
		|			РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ГДЕ
		|			КонтактнаяИнформация.Объект = &ФизЛицо
		|			И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресФизЛица)) КАК КонтактнаяИнформация1
		|		ПО ФИОФизЛицСрезПоследних.ФизЛицо = КонтактнаяИнформация1.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			КонтактнаяИнформация.Объект КАК ФизЛицо,
		|			КонтактнаяИнформация.Представление КАК ТелМобильный
		|		ИЗ
		|			РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ГДЕ
		|			КонтактнаяИнформация.Объект = &ФизЛицо
		|			И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонМобильный)) КАК КонтактнаяИнформация2
		|		ПО ФИОФизЛицСрезПоследних.ФизЛицо = КонтактнаяИнформация2.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			КонтактнаяИнформация.Объект КАК ФизЛицо,
		|			КонтактнаяИнформация.Представление КАК ТелефонРаб
		|		ИЗ
		|			РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ГДЕ
		|			КонтактнаяИнформация.Объект = &ФизЛицо
		|			И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонСлужебный)) КАК КонтактнаяИнформация3
		|		ПО ФИОФизЛицСрезПоследних.ФизЛицо = КонтактнаяИнформация3.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			КонтактнаяИнформация.Объект КАК ФизЛицо,
		|			КонтактнаяИнформация.Представление КАК ТелефонДом
		|		ИЗ
		|			РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ГДЕ
		|			КонтактнаяИнформация.Объект = &ФизЛицо
		|			И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонФизЛица)) КАК КонтактнаяИнформация4
		|		ПО ФИОФизЛицСрезПоследних.ФизЛицо = КонтактнаяИнформация4.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			КонтактнаяИнформация.Объект КАК ФизЛицо,
		|			КонтактнаяИнформация.Представление КАК EMail
		|		ИЗ
		|			РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ГДЕ
		|			КонтактнаяИнформация.Объект = &ФизЛицо
		|			И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресЭлектроннойПочты)) КАК КонтактнаяИнформация5
		|		ПО ФИОФизЛицСрезПоследних.ФизЛицо = КонтактнаяИнформация5.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			КонтактнаяИнформация.Представление КАК АдресОрганизации
		|		ИЗ
		|			РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ГДЕ
		|			КонтактнаяИнформация.Объект = &Организация
		|			И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации)) КАК КонтактнаяИнформация6
		|		ПО ИСТИНА
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			КОЛИЧЕСТВО(*) КАК КоличествоЧленов,
		|			ФизическиеЛицаСоставСемьи.Ссылка КАК ФизЛицо
		|		ИЗ
		|			Справочник.ФизическиеЛица.СоставСемьи КАК ФизическиеЛицаСоставСемьи
		|		ГДЕ
		|			ФизическиеЛицаСоставСемьи.Ссылка = &ФизЛицо
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ФизическиеЛицаСоставСемьи.Ссылка) КАК СоставСемьи
		|		ПО ФИОФизЛицСрезПоследних.ФизЛицо = СоставСемьи.ФизЛицо";

        Запрос.УстановитьПараметр("ДатаАктуальности",РабочаяДата);
		Запрос.УстановитьПараметр("Организация",Организация);
		Запрос.УстановитьПараметр("ФизЛицо",Физлицо);
		
		Выборка=Запрос.Выполнить().Выбрать();
		
		Фамилия=" "; Имя=" "; Отчество=" "; ДатаРождения=" "; МестоРождения=" "; Резидент =" "; Пол=" "; Подразделение=" "; АдресОрганизации=" ";
		АдресПрописки=" "; АдресПроживания=" "; СемейныйСтатус=""; ТелефонДом=" "; ТелМобильный=" "; EMail=" "; ОфициальноеНазваниеОрганизации=" "; АдресОрганизации=" "; ПечДолжность=" "; ТелефонРаб=" ";
		ДокументСерия=" "; ДокументНомер=" "; ДокументДатаВыдачи=" ";ДокументКемВыдан=" ";ДокументСрокДействия=" ";ЛичныйНомер=" "; КоличествоЧленовСемьи=" ";
		
		Если Выборка.Следующий() ТОгда
			
			Фамилия=?(СокрЛП(Выборка.Фамилия)=""," ",Выборка.Фамилия);
			Имя=?(СокрЛП(Выборка.Имя)=""," ",Выборка.Имя);
			Отчество=?(СокрЛП(Выборка.Отчество)=""," ",Выборка.Отчество);
			
			ДокументСерия=?(СокрЛП(Выборка.ДокументСерия)=""," ",Выборка.ДокументСерия);
			ДокументНомер=ДокументСерия+?(СокрЛП(Выборка.ДокументНомер)=""," ",Выборка.ДокументНомер);
			ДокументСерия=" ";
			ДокументДатаВыдачи=?(СокрЛП(Выборка.ДокументДатаВыдачи)=""," ",Выборка.ДокументДатаВыдачи);
			ДокументКемВыдан=?(СокрЛП(Выборка.ДокументКемВыдан)=""," ",Выборка.ДокументКемВыдан);
			ДокументСрокДействия=?(СокрЛП(Выборка.ДокументСрокДействия)=""," ",Выборка.ДокументСрокДействия);
			ЛичныйНомер=?(СокрЛП(Выборка.ЛичныйНомер)=""," ",Выборка.ЛичныйНомер);
			МестоРождения=?(СокрЛП(Выборка.МестоРождения)=""," ",Выборка.МестоРождения);
			ДатаРождения=?(СокрЛП(Выборка.ДатаРождения)=""," ",Выборка.ДатаРождения);
			ПечДолжность=?(СокрЛП(Выборка.Должность)=""," ",Выборка.Должность);
			АдресПрописки=?(СокрЛП(Выборка.АдресПрописки)=""," ",Выборка.АдресПрописки);
			АдресПроживания=?(СокрЛП(Выборка.АдресПроживания)="",АдресПрописки,Выборка.АдресПроживания);
			СемейныйСтатус=?(СокрЛП(Выборка.СемейныйСтатус)=""," ",Выборка.СемейныйСтатус);
			КоличествоЧленовСемьи=?(СокрЛП(Выборка.КоличествоЧленовСемьи)=""," ",Выборка.КоличествоЧленовСемьи);
			Пол=?(СокрЛП(Выборка.Пол)=""," ",Выборка.Пол);
			Подразделение=?(СокрЛП(Выборка.Подразделение)=""," ",Выборка.Подразделение);
			Резидент=?(СокрЛП(Выборка.Резидент)=""," ",Выборка.Резидент);
			АдресОрганизации=?(СокрЛП(Выборка.АдресОрганизации)=""," ",Выборка.АдресОрганизации);
			
			Если АдресПроживания=АдресПрописки ТОгда
				АдресПроживания=" ";	
			КонецЕсли;			
			
		КонецЕсли;
		
		АктивныйДокумент = ПолучитьМакет("Заявление");
		КомОбъект = АктивныйДокумент.Получить();	
		КомОбъект.Application.Visible=1;
		КомОбъект.Variables.Item("Фамилия").Value=ВРЕГ(Фамилия);
		КомОбъект.Variables.Item("Имя").Value=ВРЕГ(Имя);
		КомОбъект.Variables.Item("Отчество").Value=ВРЕГ(Отчество);
		КомОбъект.Variables.Item("СерияДок").Value=ВРЕГ(ДокументСерия);
		КомОбъект.Variables.Item("НомерДок").Value=ВРЕГ(ДокументНомер);
		КомОбъект.Variables.Item("ЛичныйНомер").Value=ВРЕГ(ЛичныйНомер);
		КомОбъект.Variables.Item("ДатаВыдачи").Value=Формат(ДокументДатаВыдачи,"ДФ=dd.MM.yyyy");
		КомОбъект.Variables.Item("КемВыдан").Value=ВРЕГ(ДокументКемВыдан);
		КомОбъект.Variables.Item("МестоРождения").Value=ВРЕГ(МестоРождения);
		КомОбъект.Variables.Item("СрокДействия").Value=ФОРМАТ(ДокументСрокДействия,"ДФ=dd.MM.yyyy");
		КомОбъект.Variables.Item("ДатаРождения").Value=ФОРМАТ(ДатаРождения,"ДФ=dd.MM.yyyy");
		КомОбъект.Variables.Item("Резидент").Value=ВРЕГ(Резидент);
		КомОбъект.Variables.Item("ТелефонДом").Value=ВРЕГ(ТелефонДом);
		КомОбъект.Variables.Item("ТелМобильный").Value=ВРЕГ(ТелМобильный);
		КомОбъект.Variables.Item("EMail").Value=ВРЕГ(EMail);
		КомОбъект.Variables.Item("ОфициальноеНазваниеОрганизации").Value=ВРЕГ(ОфициальноеНазваниеОрганизации);
		КомОбъект.Variables.Item("АдресОрганизации").Value=ВРЕГ(АдресОрганизации);
		КомОбъект.Variables.Item("Должность").Value=ВРЕГ(ПечДолжность);
		КомОбъект.Variables.Item("ТелефонРаб").Value=ВРЕГ(ТелефонРаб);
		КомОбъект.Variables.Item("ОфициальноеНазваниеОрганизации").Value=ВРЕГ(Строка(Организация));
		КомОбъект.Variables.Item("СемейныйСтатус").Value=ВРЕГ(Строка(СемейныйСтатус));
		КомОбъект.Variables.Item("КоличествоЧленовСемьи").Value=ВРЕГ(Строка(КоличествоЧленовСемьи));
		КомОбъект.Variables.Item("АдресПроживания").Value=ВРЕГ(Строка(АдресПроживания));
		КомОбъект.Variables.Item("АдресПрописки").Value=ВРЕГ(Строка(АдресПрописки));
		КомОбъект.Variables.Item("Подразделение").Value=ВРЕГ(Строка(Подразделение));
		КомОбъект.Variables.Item("Пол").Value=ВРЕГ(Строка(Пол));
		КомОбъект.Variables.Item("Резидент").Value=ВРЕГ(Строка(Резидент));
		КомОбъект.Variables.Item("ДатаПриема").Value=ФОРМАТ(ДатаПриемаНаРаботу,"ДФ=dd.MM.yyyy");
		КомОбъект.Variables.Item("АдресОрганизации").Value=ВРЕГ(Строка(АдресОрганизации));

		КомОбъект.Fields.UpDate();
		КомОбъект = 0;
	ИначеЕсли ИмяМакета="Справка" Тогда	
		
		Запрос=Новый Запрос;
		Запрос.Текст=
		"ВЫБРАТЬ
		|	ФИОФизЛицСрезПоследних.Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя,
		|	ФИОФизЛицСрезПоследних.Отчество,
		|	РаботникиОрганизацийСрезПоследних.Должность,
		|	РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации,
		|	РаботникиОрганизацийСрезПоследних.РазрядЕТС,
		|	РаботникиОрганизацийСрезПоследних.ПериодДолжности КАК ДатаДолжности,
		|	РаботникиОрганизацийСрезПоследних.КатегорияДолжности
		|ИЗ
		|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаАктуальности, ФизЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних
		//дату работу в тек. должности приходится выбирать через ж... т.к. кадровое перемещение горидит запись РС "Работники организаций" даже если менялся только оклад,
		//т.е. реально не было изменений в РС "Работники организаций"
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
		|			РаботникиОрганизаций.Сотрудник КАК Сотрудник,
		|			РаботникиОрганизаций.Должность КАК Должность,
		|			РаботникиОрганизаций.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|			РаботникиОрганизаций.КатегорияДолжности КАК КатегорияДолжности,
		|			РаботникиОрганизаций.РазрядЕТС КАК РазрядЕТС,
		|			РаботникиОрганизаций.Период КАК ПериодДолжности
		|		ИЗ
		|			(ВЫБРАТЬ
		|				РаботникиОрганизаций.Сотрудник КАК Сотрудник,
		|				РаботникиОрганизаций.Должность КАК Должность,
		|				РаботникиОрганизаций.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|				РаботникиОрганизаций.КатегорияДолжности КАК КатегорияДолжности,
		|				РаботникиОрганизаций.РазрядЕТС КАК РазрядЕТС,
		|				МИНИМУМ(РаботникиОрганизаций.Период) КАК Период
		|			ИЗ
		|				РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|			ГДЕ
		|				РаботникиОрганизаций.Сотрудник=&Сотрудник
		|			СГРУППИРОВАТЬ ПО
		|				РаботникиОрганизаций.Сотрудник,
		|				РаботникиОрганизаций.Должность,
		|				РаботникиОрганизаций.КатегорияДолжности,
		|				РаботникиОрганизаций.ПодразделениеОрганизации,
		|				РаботникиОрганизаций.РазрядЕТС) КАК РаботникиОрганизаций
		|		
		|		УПОРЯДОЧИТЬ ПО
		|			РаботникиОрганизаций.Период УБЫВ) КАК РаботникиОрганизацийСрезПоследних
		|		ПО ФИОФизЛицСрезПоследних.ФизЛицо = РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо";
		
		
		Запрос.УстановитьПараметр("ДатаАктуальности",РабочаяДата);
		Запрос.УстановитьПараметр("ФизЛицо",Физлицо);
		Запрос.УстановитьПараметр("Сотрудник",Ссылка);
		
		Выборка=Запрос.Выполнить().Выбрать();		
		Фамилия=" "; Имя=" "; Отчество=" "; ДолжностьС=""; Отдел=""; ДатаДолжности=""; ДатаПриемаС="";
		
		Если Выборка.Следующий() ТОгда
			
			Фамилия=?(СокрЛП(Выборка.Фамилия)="","",Выборка.Фамилия);
			Имя=?(СокрЛП(Выборка.Имя)="","",Выборка.Имя);
			Отчество=?(СокрЛП(Выборка.Отчество)="","",Выборка.Отчество);
			Отдел=Выборка.ПодразделениеОрганизации;
			ДатаДолжности=Выборка.ДатаДолжности;
			ДатаПриемаС=ДатаПриемаНаРаботу;
			
			Если ЗначениеЗаполнено(Выборка.КатегорияДолжности) ТОгда
				ЧислоКатегории="";
				Если Выборка.КатегорияДолжности=Перечисления.Категории.ПерваяКатегория ТОгда
					ЧислоКатегории="1 категории";
				ИначеЕсли Выборка.КатегорияДолжности=Перечисления.Категории.Вторая ТОгда
					ЧислоКатегории="2 категории";
				ИначеЕсли Выборка.КатегорияДолжности=Перечисления.Категории.Третья ТОгда
					ЧислоКатегории="3 категории";	
				ИначеЕсли Выборка.КатегорияДолжности=Перечисления.Категории.Высшая ТОгда
					ЧислоКатегории="высшей категории";		
				КонецЕсли;				
				ДолжностьС=?(СокрЛП(Выборка.Должность)="","",СокрЛП(Выборка.Должность.Наименование)+" "+ЧислоКатегории);
			ИначеЕсли НЕ ЗначениеЗаполнено(Выборка.РазрядЕТС) ТОгда
				ДолжностьС=?(СокрЛП(Выборка.Должность)="","",Выборка.Должность);
			Иначе					
				ЧислоКатегории=Выборка.РазрядЕТС+" разряда";				
				ДолжностьС=?(СокрЛП(Выборка.Должность)="","",СокрЛП(Выборка.Должность.Наименование)+" "+ЧислоКатегории);
			КонецЕсли;			
			
		КонецЕсли;
		
		МесяцГода=СокрЛП(Формат(РабочаяДата,"ДФ=ММММ"));
		МесяцТекДолжность=СокрЛП(Формат(ДатаДолжности,"ДФ=ММММ"));
		МесяцПриема=СокрЛП(Формат(ДатаПриемаС,"ДФ=ММММ"));
		
		УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"),МесяцГода,2,Перечисления.ПолФизическихЛиц.Мужской,МесяцГода);
		УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"),МесяцТекДолжность,2,Перечисления.ПолФизическихЛиц.Мужской,МесяцТекДолжность);
		УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"),МесяцПриема,2,Перечисления.ПолФизическихЛиц.Мужской,МесяцПриема);
		УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"),ДолжностьС,5,Перечисления.ПолФизическихЛиц.Мужской,ДолжностьС);
		УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"),Отдел,2,Перечисления.ПолФизическихЛиц.Мужской,Отдел);
		
		АктивныйДокумент = ПолучитьМакет("СправкаОМестеРаботы");
		КомОбъект = АктивныйДокумент.Получить();	
		КомОбъект.Application.Visible=1;
		КомОбъект.Variables.Item("Фамилия").Value=ВРЕГ(Фамилия);
		КомОбъект.Variables.Item("Имя").Value=Имя;
		КомОбъект.Variables.Item("Отчество").Value=Отчество;
		КомОбъект.Variables.Item("ДатаМесяца").Value=День(РабочаяДата);		
		КомОбъект.Variables.Item("МесяцГода").Value=" "+ НРег(МесяцГода)+" ";
		КомОбъект.Variables.Item("Год").Value=Год(РабочаяДата);
		КомОбъект.Variables.Item("ЧислоСостояние").Value=День(РабочаяДата);		
		КомОбъект.Variables.Item("МесяцСостояние").Value=" "+ НРег(МесяцГода)+" ";
		КомОбъект.Variables.Item("ГодСостояние").Value=Год(РабочаяДата);
		КомОбъект.Variables.Item("ЧислоПриема").Value=День(ДатаПриемаС);		
		КомОбъект.Variables.Item("МесяцПриема").Value=" "+ НРег(МесяцПриема)+" ";
		КомОбъект.Variables.Item("ГодПриема").Value=Год(ДатаПриемаС);
		КомОбъект.Variables.Item("ЧислоТекДолжность").Value=День(ДатаДолжности);		
		КомОбъект.Variables.Item("МесяцТекДолжность").Value=" "+ НРег(МесяцТекДолжность)+" ";
		КомОбъект.Variables.Item("ГодТекДолжность").Value=Год(ДатаДолжности);
		КомОбъект.Variables.Item("Должность").Value=НРег(ДолжностьС);
		КомОбъект.Variables.Item("Отдел").Value=НРЕГ(Отдел);
		КомОбъект.Fields.UpDate();
		КомОбъект = 0;
	//
	КонецЕсли;
	
	Возврат РаботаСДиалогами.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "Трудовой договор");
	
КонецФункции // Печать

#КонецЕсли

// Возвращает доступные варианты печати 
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтркутураПечатныхФорм = Новый Структура;
	СтркутураПечатныхФорм.Вставить("Печать","Трудовой договор");
	//vvv
	СтркутураПечатныхФорм.Вставить("Заявление","Заявление на открытие карт-счета");
	СтркутураПечатныхФорм.Вставить("Справка","Справка о месте работы");
	//
	Возврат СтркутураПечатныхФорм;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "Копирование" объекта
Процедура ПриКопировании(ОбъектКопирования)
	
	Если Не ЭтоГруппа Тогда
		Физлицо = Справочники.ФизическиеЛица.ПустаяСсылка();
		Наименование = "";
		Если ВидДоговора = Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор Тогда
			НомерДоговора = ПолучитьНомерТрудовогоДоговора();	
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

// Процедура - обработчик события "Заполнение" объекта
Процедура ОбработкаЗаполнения(Основание)

	ТипОснования = ТипЗнч(Основание);
	
	Если ТипОснования = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		Физлицо = Основание;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ПередЗаписью" объекта
//
Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЭтоГруппа И Физлицо.Пустая() Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Для сотрудника не задано физическое лицо!", Отказ);
	КонецЕсли;
	
	//vvv
	Если Не ЭтоГруппа И Родитель.Пустая() Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Для сотрудника не задана группа!", Отказ);
	КонецЕсли;
	//
	
	Если Не ЭтоГруппа И ОбособленноеПодразделение.Пустая() Тогда
		ОбособленноеПодразделение = Организация
	КонецЕсли;
		
КонецПроцедуры // ПередЗаписью()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

ПолучитьКадровыеДанныеФизлица = Истина;
