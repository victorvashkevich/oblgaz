
Перем ПрошлыйИзмененныйРодительОбъектаДоступа;

// Обработчик события "ПередЗаписью" Объекта
//
Процедура ПередЗаписью(Отказ)
	
	Если НЕ ОбменДанными.Загрузка Тогда
		Если Ссылка.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо И ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
			ЗапросОрганизации = Новый Запрос;
			ЗапросОрганизации.УстановитьПараметр("ГоловнаяОрганизация", Ссылка);
			ЗапросОрганизации.Текст =
			"ВЫБРАТЬ
			|	Организации.Ссылка
			|ИЗ
			|	Справочник.Организации КАК Организации
			|ГДЕ
			|	Организации.ГоловнаяОрганизация = &ГоловнаяОрганизация";
	        Если Не ЗапросОрганизации.Выполнить().Пустой() Тогда
				Сообщить("Организация не может быть индивидуальным предпринимателем, для неё зарегистрированы обособленные подразделения!", СтатусСообщения.Важное);
				Отказ = Истина;
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо И НЕ ЗначениеЗаполнено(ИндивидуальныйПредприниматель) Тогда
			Сообщить("Организации - индивидуальному предпринимателю не сопоставлено физ. лицо!", СтатусСообщения.Важное);
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		ИННОрг = ?(ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо, ИндивидуальныйПредприниматель.ИНН, ИНН);
		Если Ссылка.ИНН <> ИННОрг Тогда
			Если НЕ ПустаяСтрока(ИННОрг) И НЕ РегламентированнаяОтчетность.ИННСоответствуетТребованиям(ИННОрг, ЮрФизЛицо) Тогда
				Сообщить("УНП организации задан неверно!", СтатусСообщения.Важное);
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
		Если ЮрФизЛицо <> Перечисления.ЮрФизЛицо.ФизЛицо И Ссылка.КПП <> КПП Тогда
			Если НЕ ПустаяСтрока(КПП) И СтрДлина(КПП) <> 9 Тогда
				Сообщить("КПП организации задан неверно!", СтатусСообщения.Важное);
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
		//Если Ссылка.ОГРН <> ОГРН Тогда
		//	Если НЕ ПустаяСтрока(ОГРН) Тогда
		//		ОшибкаОГРН = Ложь;
		//		Если ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		//			Если СтрДлина(СокрЛП(ОГРН)) <> 15 Тогда
		//				Сообщить("ОГРНИП указан неверно! ОГРНИП должен состоять из 15 цифр!", СтатусСообщения.Важное);
		//				ОшибкаОГРН = Истина;
		//				Отказ = Истина;
		//			КонецЕсли;
		//			Если НЕ ОбщегоНазначения.ТолькоЦифрыВСтроке(ОГРН) Тогда
		//				Сообщить("ОГРНИП указан неверно! ОГРН должен состоять только из цифр!", СтатусСообщения.Важное);
		//				ОшибкаОГРН = Истина;
		//				Отказ = Истина;
		//			КонецЕсли;
		//			ОГРН14 = Число(Лев(Строка(ОГРН), 14));
		//			Если НЕ ОшибкаОГРН И Прав(Формат(ОГРН14 % 13, "ЧН=0; ЧГ=0"), 1) <> Прав(ОГРН, 1) Тогда
		//				Сообщить("Возможно, ОГРНИП указан неверно (контрольный разряд не совпадает с вычисленным)!", СтатусСообщения.Важное);
		//			КонецЕсли;
		//		Иначе
		//			Если СтрДлина(ОГРН) <> 13 Тогда
		//				Сообщить("ОГРН организации указан неверно! ОГРН должен состоять из 13 цифр!", СтатусСообщения.Важное);
		//				ОшибкаОГРН = Истина;
		//				Отказ = Истина;
		//			КонецЕсли;
		//			Если НЕ ОбщегоНазначения.ТолькоЦифрыВСтроке(ОГРН) Тогда
		//				Сообщить("ОГРН организации указан неверно! ОГРН должен состоять только из цифр!", СтатусСообщения.Важное);
		//				ОшибкаОГРН = Истина;
		//				Отказ = Истина;
		//			КонецЕсли;
		//			ОГРН12 = Число(Лев(Строка(ОГРН), 12));
		//			Если НЕ ОшибкаОГРН И Прав(Формат(ОГРН12 % 11, "ЧН=0; ЧГ=0"), 1) <> Прав(ОГРН, 1) Тогда
		//				Сообщить("Возможно, ОГРН организации указан неверно (контрольный разряд не совпадает с вычисленным)!", СтатусСообщения.Важное);
		//			КонецЕсли;
		//		КонецЕсли;
		//	КонецЕсли;
		//КонецЕсли;
		Если НЕ Отказ Тогда
			Если ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо И ЗначениеЗаполнено(ИндивидуальныйПредприниматель) Тогда
				ИНН = ИндивидуальныйПредприниматель.ИНН;
			КонецЕсли;
			Если ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
				КПП								= "";
				КодОКОНХ						= "";
				ГоловнаяОрганизация 			= Неопределено;
			ИначеЕсли ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
				ИндивидуальныйПредприниматель 	= Неопределено;
			КонецЕсли;
			ИНН = СокрЛП(ИНН);
			ОГРН = СокрЛП(ОГРН);
		КонецЕсли;
		
		ПрошлыйИзмененныйРодительОбъектаДоступа = ?(Не ЭтоНовый() и Не Ссылка.Родитель = Родитель, Ссылка.Родитель, Неопределено);
		НастройкаПравДоступа.ПередЗаписьюНовогоОбъектаСПравамиДоступаПользователей(ЭтотОбъект, Отказ, Родитель);
		
	КонецЕсли;
	
КонецПроцедуры


Процедура ПриЗаписи(Отказ)
	
	Если НЕ ОбменДанными.Загрузка Тогда
		НастройкаПравДоступа.ОбновитьПраваДоступаКИерархическимОбъектамПриНеобходимости(Ссылка, ПрошлыйИзмененныйРодительОбъектаДоступа, Отказ);
	КонецЕсли;
	
КонецПроцедуры
