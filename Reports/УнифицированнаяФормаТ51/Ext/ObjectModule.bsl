
#Если Клиент Тогда

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция формирует основной запрос по сбору данных для расчетной ведомости.
//
// Параметры
//
// Возвращаемое значение:
//   РезультатЗапроса   – результат запроса.
//
Функция СформироватьЗапрос()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Период", 		  	 Период);
	Запрос.УстановитьПараметр("КонецМесяцаПериода",	 КонецМесяца(Период));
	Запрос.УстановитьПараметр("ПустаяОрганизация",	 Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("СледующийПериод",	 НачалоМесяца(КонецМесяца(Период)+1)); 
	Запрос.УстановитьПараметр("ВидСтроки",    		 Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Начисление);
	Запрос.УстановитьПараметр("Приход", 			 ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("Расход", 			 ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("НеДействует",		 Перечисления.ВидыДействияСНачислением.Прекратить);
	Запрос.УстановитьПараметр("Рубли", 				 Константы.ВалютаРегламентированногоУчета.Получить());

	ТекстУсловия = "";
	Если ОтборОрганизации Тогда
		
		Запрос.УстановитьПараметр("Организация", Организация);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА Организации.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			ТОГДА Организации.Ссылка
		|		ИНАЧЕ Организации.ГоловнаяОрганизация
		|	КОНЕЦ КАК ГоловнаяОрганизация
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка В(&Организация)";
		
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ГоловнаяОрганизация"));
		
		Если ВидСравненияОрганизации = ВидСравнения.Равно Тогда
			ВидСравненияОрганизацииСтрокой = " В (&Организация)" 
		ИначеЕсли ВидСравненияОрганизации = ВидСравнения.НеРавно Тогда
			ВидСравненияОрганизацииСтрокой = " НЕ В (&Организация)"
		ИначеЕсли ВидСравненияОрганизации = ВидСравнения.ВСписке Тогда
			ВидСравненияОрганизацииСтрокой = " В (&Организация)"
		Иначе
			ВидСравненияОрганизацииСтрокой = " НЕ В (&Организация)"
		КонецЕсли; 
		
		ТекстУсловия = "<имя поля организация>" + ВидСравненияОрганизацииСтрокой;
		
	КонецЕсли;  
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Физлицо КАК Физлицо,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ЕСТЬNULL(МАКСИМУМ(ВложенныйЗапрос.РаботникиОрганизацииПодразделениеОрганизации), МАКСИМУМ(ВложенныйЗапрос.ДоговорникиОрганизацийСрезПоследнихПодразделениеОрганизации)) КАК ПодразделениеОрганизации,
	|	ЕСТЬNULL(МАКСИМУМ(ВложенныйЗапрос.РаботникиОрганизацииПодразделениеОрганизации.Наименование), МАКСИМУМ(ВложенныйЗапрос.ДоговорникиОрганизацийСрезПоследнихПодразделениеОрганизации.Наименование)) КАК ПодразделениеОрганизацииНаименование,
	|	ЕСТЬNULL(МАКСИМУМ(ВложенныйЗапрос.Сотрудник), ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка)) КАК Сотрудник,
	|	МАКСИМУМ(ВложенныйЗапрос.Должность.Наименование) КАК Должность,
	|	МАКСИМУМ(ВложенныйЗапрос.ТабельныйНомер) КАК ТабельныйНомер
	|ПОМЕСТИТЬ ВТПодразделенияРаботников
	|ИЗ
	|	(ВЫБРАТЬ
	|		РаботникиОрганизации.Физлицо КАК Физлицо,
	|		РаботникиОрганизации.Организация КАК Организация,
	|		РаботникиОрганизации.ПодразделениеОрганизации КАК РаботникиОрганизацииПодразделениеОрганизации,
	|		РаботникиОрганизации.Должность КАК Должность,
	|		РаботникиОрганизации.Сотрудник КАК Сотрудник,
	|		РаботникиОрганизации.ТабельныйНомер КАК ТабельныйНомер,
	|		NULL КАК ДоговорникиОрганизацийСрезПоследнихПодразделениеОрганизации
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ПоследниеДаты.Физлицо КАК Физлицо,
	|			ПоследниеДаты.Организация КАК Организация,
	|			ВЫБОР
	|				КОГДА РаботникиОрганизаций.ПериодЗавершения < &КонецМесяцаПериода
	|						И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА РаботникиОрганизаций.ПодразделениеОрганизацииЗавершения
	|				ИНАЧЕ РаботникиОрганизаций.ПодразделениеОрганизации
	|			КОНЕЦ КАК ПодразделениеОрганизации,
	|			ВЫБОР
	|				КОГДА РаботникиОрганизаций.ПериодЗавершения < &КонецМесяцаПериода
	|						И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА РаботникиОрганизаций.ДолжностьЗавершения
	|				ИНАЧЕ РаботникиОрганизаций.Должность
	|			КОНЕЦ КАК Должность,
	|			РаботникиОрганизаций.Сотрудник КАК Сотрудник,
	|			РаботникиОрганизаций.Сотрудник.Код КАК ТабельныйНомер
	|		ИЗ
	|			(ВЫБРАТЬ
	|				МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период,
	|				РаботникиОрганизаций.Сотрудник.Физлицо КАК Физлицо,
	|				РаботникиОрганизаций.Организация КАК Организация
	|			ИЗ
	|				РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|			ГДЕ
	|				РаботникиОрганизаций.Период < &СледующийПериод
	|				И РаботникиОрганизаций.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)";
	Если ОтборОрганизации Тогда
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + " И " + Символы.ПС + 
						СтрЗаменить(СтрЗаменить(ТекстУсловия,"<имя поля организация>","РаботникиОрганизаций.Организация"),"&Организация","&ГоловнаяОрганизация")
		
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса	+
	"		
		|		
		|		СГРУППИРОВАТЬ ПО
		|			РаботникиОрганизаций.Сотрудник.Физлицо,
		|			РаботникиОрганизаций.Организация) КАК ПоследниеДаты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|			ПО ПоследниеДаты.Период = РаботникиОрганизаций.Период
		|				И (РаботникиОрганизаций.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
		|				И ПоследниеДаты.Организация = РаботникиОрганизаций.Организация
		|				И ПоследниеДаты.Физлицо = РаботникиОрганизаций.Сотрудник.Физлицо) КАК РаботникиОрганизации
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ДоговорникиОрганизацийСрезПоследних.Физлицо,
		|	ДоговорникиОрганизацийСрезПоследних.Организация,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	ДоговорникиОрганизацийСрезПоследних.ПодразделениеОрганизации
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДатыПоследнихДоговоров.Физлицо КАК Физлицо,
		|		ДатыПоследнихДоговоров.Организация КАК Организация,
		|		МАКСИМУМ(ДоговорНаВыполнениеРаботСФизЛицом.ПодразделениеОрганизации) КАК ПодразделениеОрганизации
		|	ИЗ
		|		(ВЫБРАТЬ
		|			ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Физлицо КАК Физлицо,
		|			ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Организация КАК Организация,
		|			МАКСИМУМ(ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала) КАК ДатаНачала
		|		ИЗ
		|			Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
		|		ГДЕ
		|			ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала < &СледующийПериод
		|			И ДоговорНаВыполнениеРаботСФизЛицом.Проведен";
	Если ОтборОрганизации Тогда
		
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + " И " + Символы.ПС + 
						СтрЗаменить(ТекстУсловия,"<имя поля организация>","ДоговорНаВыполнениеРаботСФизЛицом.Организация")
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса	+
	"		
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Физлицо,
	|				ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Организация) КАК ДатыПоследнихДоговоров
	|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
	|				ПО ДатыПоследнихДоговоров.Физлицо = ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Физлицо
	|					И ДатыПоследнихДоговоров.Организация = ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Организация
	|					И ДатыПоследнихДоговоров.ДатаНачала = ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала
	|					И (ДоговорНаВыполнениеРаботСФизЛицом.Проведен)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ДатыПоследнихДоговоров.Физлицо,
	|			ДатыПоследнихДоговоров.Организация) КАК ДоговорникиОрганизацийСрезПоследних) КАК ВложенныйЗапрос

	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Физлицо,
	|	ВложенныйЗапрос.Организация

	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Физлицо";	
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	ДанныеРаботниковТекст = "ВТПодразделенияРаботников";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Данные.Организация КАК Организация,
	|	Данные.Организация.КодПоОКПО КАК ОрганизацияКодПоОКПО,
	|	Данные.ФизЛицо КАК ФизЛицо,
	|	Данные.Организация.Наименование КАК ОрганизацияПредставление,
	|	Данные.ФизЛицо.Наименование КАК ФизЛицоНаименование,
	|	Данные.Группа,
	|	Данные.ВидРасчета,
	|	Данные.СпособРасчета,
	|	СУММА(Данные.Результат) КАК Результат,
	|	СУММА(Данные.ОтработаноДней) КАК ОтработаноДней,
	|	СУММА(Данные.ОтработаноЧасов) КАК ОтработаноЧасов,
	|	ДанныеРаботников.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ДанныеРаботников.ПодразделениеОрганизацииНаименование КАК ПодразделениеОрганизацииНаименование,
	|	ДанныеРаботников.Должность КАК Должность,
	|	ДанныеРаботников.ТабельныйНомер КАК ТабельныйНомер,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВЫБОР
	|						КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецМесяцаПериода
	|								И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|							ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|						ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					КОНЕЦ, ЛОЖЬ)
	|				ТОГДА РазмерТарифныхСтавокСрезПоследних.Размер
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецМесяцаПериода
	|					И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Показатель1Завершения
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Показатель1
	|		КОНЕЦ, 0) КАК ТарифнаяСтавка,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВЫБОР
	|						КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецМесяцаПериода
	|								И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|							ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|						ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					КОНЕЦ, ЛОЖЬ)
	|				ТОГДА РазмерТарифныхСтавокСрезПоследних.Валюта.Наименование
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецМесяцаПериода
	|					И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Валюта1Завершения.Наименование
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Валюта1.Наименование
	|		КОНЕЦ, """") КАК ВалютаНаименованиеТарифнойСтавки,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВЫБОР
	|						КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецМесяцаПериода
	|								И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|							ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|						ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					КОНЕЦ, ЛОЖЬ)
	|				ТОГДА РазмерТарифныхСтавокСрезПоследних.Валюта
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецМесяцаПериода
	|					И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Валюта1Завершения
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Валюта1
	|		КОНЕЦ, &Рубли) КАК Валюта,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецМесяцаПериода
	|					И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ВидРасчета.ТребуетВводаТарифногоРазряда
	|		КОНЕЦ, ЛОЖЬ) КАК ТребуетВводаТарифногоРазряда,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецМесяцаПериода
	|					И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ТарифныйРазряд1Завершения.Наименование
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ТарифныйРазряд1.Наименование
	|		КОНЕЦ, """") КАК ТарифныйРазряд
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОсновныеНачисленияРаботниковОрганизации.ОбособленноеПодразделение КАК Организация,
	|		ОсновныеНачисленияРаботниковОрганизации.Организация КАК ГоловнаяОрганизация,
	|		ОсновныеНачисленияРаботниковОрганизации.ФизЛицо КАК ФизЛицо,
	|		ОсновныеНачисленияРаботниковОрганизации.ВидРасчета КАК ВидРасчета,
	|		ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|		""Всего начислено"" КАК Группа,
	|		ОсновныеНачисленияРаботниковОрганизации.Результат КАК Результат,
	|		ОсновныеНачисленияРаботниковОрганизации.ОтработаноДней КАК ОтработаноДней,
	|		ОсновныеНачисленияРаботниковОрганизации.ОтработаноЧасов КАК ОтработаноЧасов
	|	ИЗ
	|		" + ДанныеРаботниковТекст + " КАК ДанныеРаботников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизации
	|		ПО ОсновныеНачисленияРаботниковОрганизации.ФизЛицо = ДанныеРаботников.Физлицо
	|			И ОсновныеНачисленияРаботниковОрганизации.Организация = ДанныеРаботников.Организация
	|	
	|	ГДЕ
	|		ОсновныеНачисленияРаботниковОрганизации.ПериодРегистрации = НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|		И НЕ (ОсновныеНачисленияРаботниковОрганизации.Результат = 0
	|			И ОсновныеНачисленияРаботниковОрганизации.ОтработаноДней = 0
	|			И ОсновныеНачисленияРаботниковОрганизации.ОтработаноЧасов = 0)";
	
	Если ОтборОрганизации Тогда
		
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + " И " + Символы.ПС + 
						СтрЗаменить(ТекстУсловия,"<имя поля организация>","ОсновныеНачисленияРаботниковОрганизации.ОбособленноеПодразделение")
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса	+
	"	
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДополнительныеНачисленияРаботниковОрганизации.ОбособленноеПодразделение,
	|		ДополнительныеНачисленияРаботниковОрганизации.Организация,
	|		ДополнительныеНачисленияРаботниковОрганизации.ФизЛицо,
	|		ДополнительныеНачисленияРаботниковОрганизации.ВидРасчета,
	|		ДополнительныеНачисленияРаботниковОрганизации.ВидРасчета.СпособРасчета,
	|		""Всего начислено"",
	|		ДополнительныеНачисленияРаботниковОрганизации.Результат,
	|		NULL,
	|		NULL
	|	ИЗ
	|		" + ДанныеРаботниковТекст + " КАК ДанныеРаботников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисленияРаботниковОрганизации
	|		ПО ДополнительныеНачисленияРаботниковОрганизации.ФизЛицо = ДанныеРаботников.Физлицо
	|			И ДополнительныеНачисленияРаботниковОрганизации.Организация = ДанныеРаботников.Организация
	|	                                                             
	|	ГДЕ
	|		ДополнительныеНачисленияРаботниковОрганизации.ПериодРегистрации МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
	|		И ДополнительныеНачисленияРаботниковОрганизации.Результат <> 0";
	
	Если ОтборОрганизации Тогда
		
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + " И " + Символы.ПС + 
						СтрЗаменить(ТекстУсловия,"<имя поля организация>","ДополнительныеНачисленияРаботниковОрганизации.ОбособленноеПодразделение")
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса	+
	
	"	
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		УдержанияРаботниковОрганизации.ОбособленноеПодразделение,
	|		УдержанияРаботниковОрганизации.Организация,
	|		УдержанияРаботниковОрганизации.ФизЛицо,
	|		УдержанияРаботниковОрганизации.ВидРасчета,
	|		УдержанияРаботниковОрганизации.ВидРасчета.СпособРасчета,
	|		""Всего удержано"",
	|		УдержанияРаботниковОрганизации.Результат,
	|		NULL,
	|		NULL
	|	ИЗ
	|		" + ДанныеРаботниковТекст + " КАК ДанныеРаботников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.УдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизации
	|		ПО УдержанияРаботниковОрганизации.ФизЛицо = ДанныеРаботников.Физлицо
	|			И УдержанияРаботниковОрганизации.Организация = ДанныеРаботников.Организация
	|	
	|	ГДЕ
	|		(УдержанияРаботниковОрганизации.ПериодРегистрации = НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)) И
	|		(УдержанияРаботниковОрганизации.Результат <> 0)";
	
	Если ОтборОрганизации Тогда
		
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + " И " + Символы.ПС + 
						СтрЗаменить(ТекстУсловия,"<имя поля организация>","УдержанияРаботниковОрганизации.ОбособленноеПодразделение")
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса	+
	"		
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЕСНИсчисленный.ОбособленноеПодразделение,
	|		ВЫБОР
	|			КОГДА ЕСНИсчисленный.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ЕСНИсчисленный.Организация
	|			ИНАЧЕ ЕСНИсчисленный.Организация.ГоловнаяОрганизация
	|		КОНЕЦ,
	|		ЕСНИсчисленный.ФизЛицо,
	|		""Пенисонный фонд"",
	|		""Пенисонный фонд"",
	|		""Всего удержано"",
	|		ЕСНИсчисленный.ПенсионныйФонд,
	|		NULL,
	|		NULL
	|	ИЗ
	|		" + ДанныеРаботниковТекст + " КАК ДанныеРаботников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЕСНИсчисленный КАК ЕСНИсчисленный
	|		ПО ЕСНИсчисленный.ФизЛицо = ДанныеРаботников.Физлицо
	|			И ВЫБОР
	|			КОГДА ЕСНИсчисленный.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ЕСНИсчисленный.Организация
	|			ИНАЧЕ ЕСНИсчисленный.Организация.ГоловнаяОрганизация
	|		КОНЕЦ = ДанныеРаботников.Организация
	|	
	|	ГДЕ
	|		ЕСНИсчисленный.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)";
		
	Если ОтборОрганизации Тогда
		
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + " И " + Символы.ПС + 
						СтрЗаменить(ТекстУсловия,"<имя поля организация>","ЕСНИсчисленный.ОбособленноеПодразделение")
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса	+
	"		
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НДФЛРасчетыСБюджетом.ОбособленноеПодразделение,
	|		ВЫБОР
	|			КОГДА НДФЛРасчетыСБюджетом.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА НДФЛРасчетыСБюджетом.Организация
	|			ИНАЧЕ НДФЛРасчетыСБюджетом.Организация.ГоловнаяОрганизация
	|		КОНЕЦ,
	|		НДФЛРасчетыСБюджетом.ФизЛицо,
	|		""НДФЛ"",
	|		""НДФЛ"",
	|		""Всего удержано"",
	|		НДФЛРасчетыСБюджетом.Налог,
	|		NULL,
	|		NULL
	|	ИЗ
	|		" + ДанныеРаботниковТекст + " КАК ДанныеРаботников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
	|		ПО НДФЛРасчетыСБюджетом.ФизЛицо = ДанныеРаботников.Физлицо
	|			И ВЫБОР
	|			КОГДА НДФЛРасчетыСБюджетом.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА НДФЛРасчетыСБюджетом.Организация
	|			ИНАЧЕ НДФЛРасчетыСБюджетом.Организация.ГоловнаяОрганизация
	|		КОНЕЦ = ДанныеРаботников.Организация
	|	
	|	ГДЕ
	|		НДФЛРасчетыСБюджетом.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
	|		И НДФЛРасчетыСБюджетом.ВидДвижения = &Приход 
	|		И НДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты
	|		И НДФЛРасчетыСБюджетом.ВидСтроки = &ВидСтроки";
		
	Если ОтборОрганизации Тогда
		
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + " И " + Символы.ПС + 
						СтрЗаменить(ТекстУсловия,"<имя поля организация>","НДФЛРасчетыСБюджетом.ОбособленноеПодразделение")
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса	+
	"
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ПогашениеЗаймовРаботникамиОрганизаций.Организация,
	|		ВЫБОР
	|			КОГДА ПогашениеЗаймовРаботникамиОрганизаций.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ПогашениеЗаймовРаботникамиОрганизаций.Организация
	|			ИНАЧЕ ПогашениеЗаймовРаботникамиОрганизаций.Организация.ГоловнаяОрганизация
	|		КОНЕЦ,
	|		ПогашениеЗаймовРаботникамиОрганизаций.ФизЛицо,
	|		""Погашение"",
	|		""Погашение"",
	|		""Всего удержано"",
	|		ПогашениеЗаймовРаботникамиОрганизаций.ОсновнойДолг + ПогашениеЗаймовРаботникамиОрганизаций.Проценты,
	|		NULL,
	|		NULL
	|	ИЗ
	|		" + ДанныеРаботниковТекст + " КАК ДанныеРаботников
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПогашениеЗаймовРаботникамиОрганизаций КАК ПогашениеЗаймовРаботникамиОрганизаций
	|			ПО ПогашениеЗаймовРаботникамиОрганизаций.ФизЛицо = ДанныеРаботников.Физлицо
	|				И (ВЫБОР
	|					КОГДА ПогашениеЗаймовРаботникамиОрганизаций.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|						ТОГДА ПогашениеЗаймовРаботникамиОрганизаций.Организация
	|					ИНАЧЕ ПогашениеЗаймовРаботникамиОрганизаций.Организация.ГоловнаяОрганизация
	|				КОНЕЦ = ДанныеРаботников.Организация)
	|	ГДЕ
	|		ПогашениеЗаймовРаботникамиОрганизаций.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ) 
	|			И ПогашениеЗаймовРаботникамиОрганизаций.ВидДвижения = &Расход 
	|			И ПогашениеЗаймовРаботникамиОрганизаций.УдержаноИзЗарплаты";
		
	Если ОтборОрганизации Тогда
		
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + " И " + Символы.ПС + 
						СтрЗаменить(ТекстУсловия,"<имя поля организация>","ПогашениеЗаймовРаботникамиОрганизаций.Организация")
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса	+
	"		
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РегистрНДФЛКЗачету.Организация,
	|		ВЫБОР
	|			КОГДА РегистрНДФЛКЗачету.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА РегистрНДФЛКЗачету.Организация
	|			ИНАЧЕ РегистрНДФЛКЗачету.Организация.ГоловнаяОрганизация
	|		КОНЕЦ,
	|		РегистрНДФЛКЗачету.ФизЛицо,
	|		""Конечное сальдо"",
	|		""Конечное сальдо"",
	|		""Я"",
	|		РегистрНДФЛКЗачету.СуммаНДФЛКЗачетуОстаток,
	|		NULL,
	|		NULL
	|	ИЗ
	|		РегистрНакопления.НДФЛКЗачету.Остатки(
	|			&СледующийПериод,
	|			ФизЛицо В
	|					(ВЫБРАТЬ
	|						Физлицо
	|					ИЗ " + ДанныеРаботниковТекст + " КАК ДанныеРаботников)" + ?(ОтборОрганизации, " И ","") + СтрЗаменить(ТекстУсловия,"<имя поля организация>","Организация") + ") КАК РегистрНДФЛКЗачету
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СальдоКонечное.Организация,
	|		ВЫБОР
	|			КОГДА СальдоКонечное.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА СальдоКонечное.Организация
	|			ИНАЧЕ СальдоКонечное.Организация.ГоловнаяОрганизация
	|		КОНЕЦ,
	|		СальдоКонечное.Физлицо,
	|		""Конечное сальдо"",
	|		""Конечное сальдо"",
	|		""Я"",
	|		СальдоКонечное.СуммаВзаиморасчетовОстаток,
	|		NULL,
	|		NULL
	|	ИЗ
	|		РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций.Остатки(
	|			&СледующийПериод,
	|			Организация В
	|					(ВЫБРАТЬ
	|						УчетнаяПолитикаПоПерсоналуОрганизаций.Организация
	|					ИЗ
	|						РегистрСведений.УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций КАК УчетнаяПолитикаПоПерсоналуОрганизаций
	|					ГДЕ
	|						УчетнаяПолитикаПоПерсоналуОрганизаций.УчетЗадолженностиПоМесяцам)
	|			И ФизЛицо В
	|					(ВЫБРАТЬ
	|						Физлицо
	|					ИЗ " + ДанныеРаботниковТекст + " КАК ДанныеРаботников)" + ?(ОтборОрганизации, " И ","") + СтрЗаменить(ТекстУсловия,"<имя поля организация>","Организация") + ") КАК СальдоКонечное
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СальдоКонечное.Организация,
	|		ВЫБОР
	|			КОГДА СальдоКонечное.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА СальдоКонечное.Организация
	|			ИНАЧЕ СальдоКонечное.Организация.ГоловнаяОрганизация
	|		КОНЕЦ,
	|		СальдоКонечное.Физлицо,
	|		""К выплате"",
	|		""К выплате"",
	|		""ЯЯ"",
	|		СальдоКонечное.СуммаВзаиморасчетовОстаток,
	|		NULL,
	|		NULL
	|	ИЗ
	|		РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций.Остатки(
	|			&СледующийПериод,
	|			(ПериодВзаиморасчетов = &Период
	|				ИЛИ Организация В
	|					(ВЫБРАТЬ
	|						УчетнаяПолитикаПоПерсоналуОрганизаций.Организация
	|					ИЗ
	|						РегистрСведений.УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций КАК УчетнаяПолитикаПоПерсоналуОрганизаций
	|					ГДЕ
	|						(НЕ УчетнаяПолитикаПоПерсоналуОрганизаций.УчетЗадолженностиПоМесяцам)))
	|				И ФизЛицо В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						Физлицо
	|					ИЗ " + ДанныеРаботниковТекст + " КАК ДанныеРаботников)" + ?(ОтборОрганизации, " И ","") + СтрЗаменить(ТекстУсловия,"<имя поля организация>","Организация") + ") КАК СальдоКонечное) КАК Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ " + ДанныеРаботниковТекст + " КАК ДанныеРаботников
	|		ПО Данные.ФизЛицо = ДанныеРаботников.Физлицо
	|			И Данные.ГоловнаяОрганизация = ДанныеРаботников.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
	|		&КонецМесяцаПериода,
	|		ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО
	|		    И Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ " + ДанныеРаботниковТекст + " КАК ДанныеРаботников)) КАК ПлановыеНачисленияРаботниковОрганизацииСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок.СрезПоследних(&КонецМесяцаПериода, ) КАК РазмерТарифныхСтавокСрезПоследних
	|			ПО (ВЫБОР
	|					КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецМесяцаПериода
	|							И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ТарифныйРазряд1Завершения
	|					ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ТарифныйРазряд1
	|				КОНЕЦ = РазмерТарифныхСтавокСрезПоследних.ТарифныйРазряд)
	|		ПО ДанныеРаботников.Сотрудник = ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Сотрудник
	|			И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Организация = Данные.ГоловнаяОрганизация";
	
	Если ОтборПодразделения Тогда
		Запрос.УстановитьПараметр("ПодразделениеОрганизации", Подразделение);
		Если ВидСравненияПодразделения = ВидСравнения.Равно Тогда
			ВидСравненияСтрокой = " = &ПодразделениеОрганизации" 
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.НеРавно Тогда
			ВидСравненияСтрокой = " <> &ПодразделениеОрганизации"
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.ВСписке Тогда
			ВидСравненияСтрокой = " В (&ПодразделениеОрганизации)"
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.НеВСписке Тогда
			ВидСравненияСтрокой = " НЕ В (&ПодразделениеОрганизации)"
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.ВСпискеПоИерархии ИЛИ ВидСравненияПодразделения = ВидСравнения.ВИерархии Тогда
			ВидСравненияСтрокой = " В ИЕРАРХИИ (&ПодразделениеОрганизации)"
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.НеВСпискеПоИерархии ИЛИ ВидСравненияПодразделения = ВидСравнения.НеВИерархии Тогда
			ВидСравненияСтрокой = " НЕ В ИЕРАРХИИ (&ПодразделениеОрганизации)"
		КонецЕсли; 
		
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + " 
	|				
	|ГДЕ				
	|	ДанныеРаботников.ПодразделениеОрганизации " + ВидСравненияСтрокой
		
	КонецЕсли;	
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|СГРУППИРОВАТЬ ПО
	|	Данные.Организация,
	|	Данные.ФизЛицо,
	|	Данные.Группа,
	|	Данные.ВидРасчета,
	|	Данные.СпособРасчета,
	|	ДанныеРаботников.ПодразделениеОрганизации,
	|	ДанныеРаботников.ПодразделениеОрганизацииНаименование,
	|	ДанныеРаботников.Должность,
	|	ДанныеРаботников.ТабельныйНомер,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВЫБОР
	|						КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецМесяцаПериода
	|								И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|							ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|						ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					КОНЕЦ, ЛОЖЬ)
	|				ТОГДА РазмерТарифныхСтавокСрезПоследних.Валюта
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецМесяцаПериода
	|					И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Валюта1Завершения
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Валюта1
	|		КОНЕЦ, &Рубли),
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецМесяцаПериода
	|					И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ВидРасчета.ТребуетВводаТарифногоРазряда
	|		КОНЕЦ, ЛОЖЬ),
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецМесяцаПериода
	|					И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ТарифныйРазряд1Завершения.Наименование
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ТарифныйРазряд1.Наименование
	|		КОНЕЦ, """"),
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВЫБОР
	|						КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецМесяцаПериода
	|								И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|							ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|						ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					КОНЕЦ, ЛОЖЬ)
	|				ТОГДА РазмерТарифныхСтавокСрезПоследних.Валюта.Наименование
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецМесяцаПериода
	|					И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Валюта1Завершения.Наименование
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Валюта1.Наименование
	|		КОНЕЦ, """"),
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВЫБОР
	|						КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецМесяцаПериода
	|								И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|							ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|						ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					КОНЕЦ, ЛОЖЬ)
	|				ТОГДА РазмерТарифныхСтавокСрезПоследних.Размер
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецМесяцаПериода
	|					И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Показатель1Завершения
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Показатель1
	|		КОНЕЦ, 0)
    |
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицоНаименование,
    |   Группа
    |
	|ИТОГИ
    |	СУММА(Результат),
	|	СУММА(ОтработаноДней),
	|	СУММА(ОтработаноЧасов)
    |ПО
	|	Организация, 
    |	ФизЛицо";
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапрос()

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ 
// 

Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Ложь, ВысотаЗаголовка = 0, ТолькоЗаголовок = Ложь) Экспорт

	ДокументРезультат.Очистить(); 
	
	Макет					= ПолучитьМакет("Т51");
	ОбластьШапкаДокумента	= Макет.ПолучитьОбласть("ШапкаДокумента");
	ОбластьШапка			= Макет.ПолучитьОбласть("Шапка");
	ОбластьПодвал			= Макет.ПолучитьОбласть("Подвал");
	ОбластьСтрока			= Макет.ПолучитьОбласть("Строка");
	ОбластьПодвалСтр		= Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ОбластьПодвалВед		= Макет.ПолучитьОбласть("ИтогоПоВедомости");

	РезультатЗапроса = СформироватьЗапрос();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		// массив с двумя строками - для разбиения на страницы
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьСтрока);
		ВыводимыеОбласти.Добавить(ОбластьПодвалСтр);
		ВыводимыеОбласти.Добавить(ОбластьПодвалВед);
		
		ДокументРезультат.Вывести(ОбластьШапкаДокумента);
		ДокументРезультат.Вывести(ОбластьШапка);
		
		ВыводимыеОбласти.Добавить(ОбластьПодвал);
		ОбластьСтрока.Параметры.ФизЛицо	 = " " + Символы.ПС + " ";
		Пока ДокументРезультат.ПроверитьВывод(ВыводимыеОбласти) Цикл
			ДокументРезультат.Вывести(ОбластьСтрока);
		КонецЦикла;
		
		ДокументРезультат.Вывести(ОбластьПодвалСтр);
		ДокументРезультат.Вывести(ОбластьПодвалВед);
		ДокументРезультат.Вывести(ОбластьПодвал);
		ДокументРезультат.ПолеСлева  = 5;
		ДокументРезультат.ПолеСправа = 0;
		
		Возврат;
		
	КонецЕсли;
	
	НомерОрганизации = 1;
	ВыборкаПоОрганизациям = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	КоличествоОрганизаций = ВыборкаПоОрганизациям.Количество();
	РеглВалюта = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Пока ВыборкаПоОрганизациям.Следующий() Цикл
		
		// массив с двумя строками - для разбиения на страницы
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьСтрока);
		ВыводимыеОбласти.Добавить(ОбластьПодвалСтр);
		// Начинаем новый отсчет итогов
		ОбластьПодвалСтр.Параметры.Повременно			  = 0;
		ОбластьПодвалВед.Параметры.Повременно			  = 0;
		ОбластьПодвалСтр.Параметры.Сдельно				  = 0;
		ОбластьПодвалВед.Параметры.Сдельно				  = 0;
		ОбластьПодвалСтр.Параметры.Другое				  = 0;
		ОбластьПодвалВед.Параметры.Другое				  = 0;
		ОбластьПодвалСтр.Параметры.ВсегоНачислено		  = 0;
		ОбластьПодвалВед.Параметры.ВсегоНачислено		  = 0;
		ОбластьПодвалСтр.Параметры.НДФЛ					  = 0;
		ОбластьПодвалВед.Параметры.НДФЛ					  = 0;
		ОбластьПодвалСтр.Параметры.ДругоеУдержано		  = 0;
		ОбластьПодвалВед.Параметры.ДругоеУдержано		  = 0;
		ОбластьПодвалСтр.Параметры.ДолгЗаОрганизацией	  = 0;
		ОбластьПодвалВед.Параметры.ДолгЗаОрганизацией	  = 0;
		ОбластьПодвалСтр.Параметры.ДолгЗаРаботником		  = 0;
		ОбластьПодвалВед.Параметры.ДолгЗаРаботником		  = 0;
		ОбластьПодвалСтр.Параметры.КВыплате				  = 0;
		ОбластьПодвалВед.Параметры.КВыплате				  = 0;
		ОбластьПодвалСтр.Параметры.ДоходВНатуральнойФорме = 0;
		ОбластьПодвалВед.Параметры.ДоходВНатуральнойФорме = 0;
		
		
		ВыводитьПодразделение = ОтборПодразделения И ТипЗнч(Подразделение) = Тип("СправочникСсылка.ПодразделенияОрганизаций");

		// Разделитель строки для следующей организации
		Если НомерОрганизации > 1 Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц()
		КонецЕсли;
	
		//ОбластьШапкаДокумента.Параметры.КодПоОКПО		 = ВыборкаПоОрганизациям.ОрганизацияКодПоОКПО;
		ОбластьШапкаДокумента.Параметры.Организация		 = ВыборкаПоОрганизациям.ОрганизацияПредставление;
		ОбластьШапкаДокумента.Параметры.ОтчетныйПериодС  = НачалоМесяца(Период);
		ОбластьШапкаДокумента.Параметры.ОтчетныйПериодПо = КонецМесяца(Период);
		ОбластьШапкаДокумента.Параметры.ДатаД			 = ОбщегоНазначения.ПолучитьРабочуюДату();
		
		ДокументРезультат.Вывести(ОбластьШапкаДокумента);
		//ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		ДокументРезультат.Вывести(ОбластьШапка);
	
		НомерПП     = 1;
		ВыборкаПоФЛ = ВыборкаПоОрганизациям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		ВсегоСтрокДокумента = ВыборкаПоФЛ.Количество(); // всего количество физлиц в данной ведомости
		
		Пока ВыборкаПоФЛ.Следующий() Цикл
			
			ОбластьСтрока.Параметры.Повременно	 	   = 0;
			ОбластьСтрока.Параметры.Сдельно	    	   = 0;
			ОбластьСтрока.Параметры.Другое	     	   = 0;
			ОбластьСтрока.Параметры.НДФЛ		   	   = 0;
			ОбластьСтрока.Параметры.ВсегоНачислено	   = 0;
			ОбластьСтрока.Параметры.ДругоеУдержано	   = 0;
			ОбластьСтрока.Параметры.ВсегоУдержано	   = 0;
			ОбластьСтрока.Параметры.ДолгЗаОрганизацией = 0;
			ОбластьСтрока.Параметры.ДолгЗаРаботником   = 0;
			ОбластьСтрока.Параметры.КВыплате		   = 0;
			ОбластьСтрока.Параметры.ОтработаноДнейЧасовПраздничные = 0;
			ОбластьСтрока.Параметры.ОтработаноДнейЧасов            = 0;
			ОбластьСтрока.Параметры.ДоходВНатуральнойФорме         = 0;
			
			
			Выборка = ВыборкаПоФЛ.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				Если ВыводитьПодразделение Тогда
					ВыводитьПодразделение = Не ВыводитьПодразделение;
					ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы - 11,1).Текст = Выборка.ПодразделениеОрганизацииНаименование;
				КонецЕсли;
				
				// тарифная ставка
				ОписаниеТарифнаяСтавка = Формат(Выборка.ТарифнаяСтавка,"ЧЦ=15; ЧДЦ=2; ЧН=' '; ЧГ=0");
				
				Если Выборка.Валюта = РеглВалюта Или Не ЗначениеЗаполнено(Выборка.Валюта) Тогда
					Если Выборка.ТребуетВводаТарифногоРазряда Тогда
						Если ЗначениеЗаполнено(Выборка.ТарифнаяСтавка) Тогда
							ОписаниеТарифнаяСтавка = ОписаниеТарифнаяСтавка	+ " (" + Выборка.ТарифныйРазряд + ")"
						Иначе
							ОписаниеТарифнаяСтавка = Выборка.ТарифныйРазряд 
						КонецЕсли;
					КонецЕсли;
				Иначе
					
					Если НЕ ЗначениеЗаполнено(Выборка.ТарифнаяСтавка) И Выборка.ТребуетВводаТарифногоРазряда Тогда
						ОписаниеТарифнаяСтавка = Выборка.ТарифныйРазряд
					Иначе
						ОписаниеТарифнаяСтавка = ОписаниеТарифнаяСтавка 
							+ " (" + Выборка.ВалютаНаименованиеТарифнойСтавки + ?(Выборка.ТребуетВводаТарифногоРазряда,", " + Выборка.ТарифныйРазряд,"") + ")"
					КонецЕсли;
							
				КонецЕсли;
				ОбластьСтрока.Параметры.ТарифнаяСтавка = ОписаниеТарифнаяСтавка;
				ОбластьСтрока.Параметры.ТабельныйНомер = Выборка.ТабельныйНомер;
				ОбластьСтрока.Параметры.Должность = Выборка.Должность;
					
				Если Выборка.Группа = "Всего начислено" Тогда
				
					Если Выборка.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПраздничныхИВыходных Тогда
						
						Если НЕ ЗначениеЗаполнено(ОбластьСтрока.Параметры.ОтработаноДнейЧасовПраздничные) Тогда
							
							ОбластьСтрока.Параметры.ОтработаноДнейЧасовПраздничные = Выборка.ОтработаноДней;
							
							Если ЗначениеЗаполнено(Выборка.ОтработаноЧасов) Тогда
								ОбластьСтрока.Параметры.ОтработаноДнейЧасовПраздничные = "" + Выборка.ОтработаноДней + " (" + Выборка.ОтработаноЧасов + ")"
							КонецЕсли;
							
						КонецЕсли; 
						
					Иначе
						
						Если НЕ ЗначениеЗаполнено(ОбластьСтрока.Параметры.ОтработаноДнейЧасов) Тогда
							
							ОбластьСтрока.Параметры.ОтработаноДнейЧасов = Выборка.ОтработаноДней;
							
							Если ЗначениеЗаполнено(Выборка.ОтработаноЧасов) Тогда
								ОбластьСтрока.Параметры.ОтработаноДнейЧасов = "" + Выборка.ОтработаноДней + " (" + Выборка.ОтработаноЧасов + ")"
							КонецЕсли; 
							
						КонецЕсли; 
						
					КонецЕсли; 
					
					Если Выборка.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме Тогда
						ОбластьСтрока.Параметры.ДоходВНатуральнойФорме	  = ОбластьСтрока.Параметры.ДоходВНатуральнойФорме	    + Выборка.Результат;
						ОбластьПодвалСтр.Параметры.ДоходВНатуральнойФорме = ОбластьПодвалСтр.Параметры.ДоходВНатуральнойФорме	+ Выборка.Результат;
						ОбластьПодвалВед.Параметры.ДоходВНатуральнойФорме = ОбластьПодвалВед.Параметры.ДоходВНатуральнойФорме	+ Выборка.Результат;
					ИначеЕсли Выборка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням ИЛИ
						Выборка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам ИЛИ 
						Выборка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке ИЛИ 
						Выборка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке Тогда
						
						ОбластьСтрока.Параметры.Повременно = ОбластьСтрока.Параметры.Повременно + Выборка.Результат;
						
						// подсчет итогов по странице и ведомости
						ОбластьПодвалСтр.Параметры.Повременно	= ОбластьПодвалСтр.Параметры.Повременно + Выборка.Результат;
						ОбластьПодвалВед.Параметры.Повременно	= ОбластьПодвалВед.Параметры.Повременно + Выборка.Результат;
						
					ИначеЕсли Выборка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.СдельныйЗаработок Тогда
						ОбластьСтрока.Параметры.Сдельно		= ОбластьСтрока.Параметры.Сдельно		+ Выборка.Результат;
						ОбластьПодвалСтр.Параметры.Сдельно	= ОбластьПодвалСтр.Параметры.Сдельно	+ Выборка.Результат;
						ОбластьПодвалВед.Параметры.Сдельно	= ОбластьПодвалВед.Параметры.Сдельно	+ Выборка.Результат;
						
					ИначеЕсли Выборка.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме Тогда
						ОбластьСтрока.Параметры.ДоходВНатуральнойФорме	  = ОбластьСтрока.Параметры.ДоходВНатуральнойФорме	    + Выборка.Результат;
						ОбластьПодвалСтр.Параметры.ДоходВНатуральнойФорме = ОбластьПодвалСтр.Параметры.ДоходВНатуральнойФорме	+ Выборка.Результат;
						ОбластьПодвалВед.Параметры.ДоходВНатуральнойФорме = ОбластьПодвалВед.Параметры.ДоходВНатуральнойФорме	+ Выборка.Результат;
					Иначе						
						ОбластьСтрока.Параметры.Другое		= ОбластьСтрока.Параметры.Другое	+ Выборка.Результат;
						ОбластьПодвалСтр.Параметры.Другое	= ОбластьПодвалСтр.Параметры.Другое	+ Выборка.Результат;
						ОбластьПодвалВед.Параметры.Другое	= ОбластьПодвалВед.Параметры.Другое	+ Выборка.Результат;
					КонецЕсли; 
			
					ОбластьСтрока.Параметры.ВсегоНачислено		= ОбластьСтрока.Параметры.ВсегоНачислено	+ Выборка.Результат;
					ОбластьПодвалСтр.Параметры.ВсегоНачислено	= ОбластьПодвалСтр.Параметры.ВсегоНачислено	+ Выборка.Результат;
					ОбластьПодвалВед.Параметры.ВсегоНачислено	= ОбластьПодвалВед.Параметры.ВсегоНачислено	+ Выборка.Результат;
					
				ИначеЕсли Выборка.Группа = "Всего удержано" Тогда
					
					Если Выборка.ВидРасчета = "НДФЛ" Тогда
						ОбластьСтрока.Параметры.НДФЛ	= ОбластьСтрока.Параметры.НДФЛ		+ Выборка.Результат;
						ОбластьПодвалСтр.Параметры.НДФЛ	= ОбластьПодвалСтр.Параметры.НДФЛ	+ Выборка.Результат;
						ОбластьПодвалВед.Параметры.НДФЛ	= ОбластьПодвалВед.Параметры.НДФЛ	+ Выборка.Результат;
					Иначе
						ОбластьСтрока.Параметры.ДругоеУдержано		= ОбластьСтрока.Параметры.ДругоеУдержано	+ Выборка.Результат;
						ОбластьПодвалСтр.Параметры.ДругоеУдержано	= ОбластьПодвалСтр.Параметры.ДругоеУдержано	+ Выборка.Результат;
						ОбластьПодвалВед.Параметры.ДругоеУдержано	= ОбластьПодвалВед.Параметры.ДругоеУдержано	+ Выборка.Результат;
					КонецЕсли;
			
					ОбластьСтрока.Параметры.ВсегоУдержано = ОбластьСтрока.Параметры.ВсегоУдержано + Выборка.Результат;
					
				ИначеЕсли Выборка.Группа = "Я" Тогда // Конечное сальдо
					
					Если Выборка.Результат > 0 Тогда
						ОбластьСтрока.Параметры.ДолгЗаОрганизацией		= Выборка.Результат;
						ОбластьПодвалСтр.Параметры.ДолгЗаОрганизацией	= ОбластьПодвалСтр.Параметры.ДолгЗаОрганизацией	+ Выборка.Результат;
						ОбластьПодвалВед.Параметры.ДолгЗаОрганизацией	= ОбластьПодвалВед.Параметры.ДолгЗаОрганизацией	+ Выборка.Результат;
					Иначе
						ОбластьСтрока.Параметры.ДолгЗаРаботником	= 0 - Выборка.Результат;
						ОбластьПодвалСтр.Параметры.ДолгЗаРаботником	= ОбластьПодвалСтр.Параметры.ДолгЗаРаботником - Выборка.Результат;
						ОбластьПодвалВед.Параметры.ДолгЗаРаботником	= ОбластьПодвалВед.Параметры.ДолгЗаРаботником - Выборка.Результат;
					КонецЕсли; 
					
				ИначеЕсли Выборка.Группа = "ЯЯ" Тогда // К выплате
					
					Если Выборка.Результат > 0 Тогда
						ОбластьСтрока.Параметры.КВыплате	= Выборка.Результат;
						ОбластьПодвалСтр.Параметры.КВыплате	= ОбластьПодвалСтр.Параметры.КВыплате + Выборка.Результат;
						ОбластьПодвалВед.Параметры.КВыплате	= ОбластьПодвалВед.Параметры.КВыплате + Выборка.Результат;
					КонецЕсли; 
				КонецЕсли; 
				
			КонецЦикла;
			
			ОбластьСтрока.Параметры.НомерПП  = НомерПП;
			ОбластьСтрока.Параметры.ФизЛицо	 = ПроцедурыУправленияПерсоналом.ФамилияИнициалыФизЛица(ВыборкаПоФЛ.ФизЛицоНаименование);
			
			// Проверим, уместится ли строка на странице или надо открывать новую страницу
			ВывестиПодвалЛиста = Не ДокументРезультат.ПроверитьВывод(ВыводимыеОбласти);
			Если Не ВывестиПодвалЛиста и НомерПП = ВсегоСтрокДокумента Тогда
				//все строки отчета перебрали, они все еще умещаются на странице
				ВыводимыеОбласти.Добавить(ОбластьПодвалВед);
				ВыводимыеОбласти.Добавить(ОбластьПодвал);
				// умещаются ли теперь, вместе подвалом:
				ВывестиПодвалЛиста = Не ДокументРезультат.ПроверитьВывод(ВыводимыеОбласти);
			КонецЕсли;
			Если ВывестиПодвалЛиста Тогда
				ДокументРезультат.Вывести(ОбластьПодвалСтр);
				
				// обнулим итоги по странице
				ОбластьПодвалСтр.Параметры.Повременно			  = 0;
				ОбластьПодвалСтр.Параметры.Сдельно				  = 0;
				ОбластьПодвалСтр.Параметры.Другое				  = 0;
				ОбластьПодвалСтр.Параметры.ВсегоНачислено		  = 0;
				ОбластьПодвалСтр.Параметры.НДФЛ					  = 0;
				ОбластьПодвалСтр.Параметры.ДругоеУдержано		  = 0;
				ОбластьПодвалСтр.Параметры.ДолгЗаОрганизацией	  = 0;
				ОбластьПодвалСтр.Параметры.ДолгЗаРаботником		  = 0;
				ОбластьПодвалСтр.Параметры.КВыплате				  = 0;
				ОбластьПодвалСтр.Параметры.ДоходВНатуральнойФорме = 0;

				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				ДокументРезультат.Вывести(ОбластьШапка);
			КонецЕсли;
			
			ДокументРезультат.Вывести(ОбластьСтрока);
			НомерПП = НомерПП + 1;
			
		КонецЦикла;	
		
		// Если выводим несколько организаций, то нужно вывести подвал для не последних организаций.
		Если КоличествоОрганизаций > 1 И НомерОрганизации < КоличествоОрганизаций Тогда
			ВыводимыеОбласти.Добавить(ОбластьПодвалВед);
			ВыводимыеОбласти.Добавить(ОбластьПодвал);
			Для Сч = 1 По ОбластьСтрока.Параметры.Количество() Цикл
				ОбластьСтрока.Параметры.Установить(Сч - 1,""); 
			КонецЦикла;
			ОбластьСтрока.Параметры.ФизЛицо = " " + Символы.ПС + " ";
			Пока ДокументРезультат.ПроверитьВывод(ВыводимыеОбласти) Цикл
				ДокументРезультат.Вывести(ОбластьСтрока);
			КонецЦикла;
			ДокументРезультат.Вывести(ОбластьПодвалСтр);
			// обнулим итоги по странице
			ОбластьПодвалСтр.Параметры.Повременно			  = 0;
			ОбластьПодвалСтр.Параметры.Сдельно				  = 0;
			ОбластьПодвалСтр.Параметры.Другое			      = 0;
			ОбластьПодвалСтр.Параметры.ВсегоНачислено		  = 0;
			ОбластьПодвалСтр.Параметры.НДФЛ					  = 0;
			ОбластьПодвалСтр.Параметры.ДругоеУдержано		  = 0;
			ОбластьПодвалСтр.Параметры.ДолгЗаОрганизацией	  = 0;
			ОбластьПодвалСтр.Параметры.ДолгЗаРаботником		  = 0;
			ОбластьПодвалСтр.Параметры.КВыплате				  = 0;
			ОбластьПодвалСтр.Параметры.ДоходВНатуральнойФорме = 0;

			ДокументРезультат.Вывести(ОбластьПодвалВед);
			ДокументРезультат.Вывести(ОбластьПодвал);
		КонецЕсли; 
		
		НомерОрганизации = НомерОрганизации + 1;
		
	КонецЦикла;
	
	ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ОбластьСтрока);
	ВыводимыеОбласти.Добавить(ОбластьПодвалСтр);
	ВыводимыеОбласти.Добавить(ОбластьПодвалВед);
	ВыводимыеОбласти.Добавить(ОбластьПодвал);
	Для Сч = 1 По ОбластьСтрока.Параметры.Количество() Цикл
		ОбластьСтрока.Параметры.Установить(Сч - 1,""); 
	КонецЦикла;
	ОбластьСтрока.Параметры.ФизЛицо = " " + Символы.ПС + " ";
	Пока ДокументРезультат.ПроверитьВывод(ВыводимыеОбласти) Цикл
		ДокументРезультат.Вывести(ОбластьСтрока);
	КонецЦикла;
	ДокументРезультат.Вывести(ОбластьПодвалСтр);
	ДокументРезультат.Вывести(ОбластьПодвалВед);
	ДокументРезультат.Вывести(ОбластьПодвал);
	ДокументРезультат.ПолеСлева  = 5;
	ДокументРезультат.ПолеСправа = 0;
	
КонецПроцедуры // СформироватьОтчет()

#КонецЕсли

