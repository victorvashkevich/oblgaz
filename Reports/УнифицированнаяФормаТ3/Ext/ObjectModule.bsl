
#Если Клиент Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

//Функция возвращают строку-представление двух чисел
//
Функция ПолучитьСтрокуИзДвухЧисел(Число1,Число2)
	Если Число1=Число2 Тогда
		Возврат ФормированиеПечатныхФорм.ФорматСумм(Число1);
	Иначе
		Возврат ""+ФормированиеПечатныхФорм.ФорматСумм(Число1)+" - "+ФормированиеПечатныхФорм.ФорматСумм(Число2);
	КонецЕсли;
КонецФункции	 

// Выводит строки по подразделениям очередного уровня
Процедура ВывестиСтрокиПодразделения(ВыборкаСтрокШтРасписания, ВыведеноСтрокВОтчет, КоличествоСтрокОтчета, ДокументРезультат, ОбластьСтрока, ОбластьПодвалЛиста, ОбластьШапкаЛиста, 
	    ВыводимаяСтрока,  КоличествоСтавокЛиста, КоличествоСтавокЛистаДляРасчетаМФЗП, ФондЛиста , ВыводимыеОбласти, Макет)
		
	ДокументРезультат.НачатьАвтогруппировкуСтрок();

	КурсВалютыОтчета = ОбщегоНазначения.ПолучитьКурсВалюты(Константы.ВалютаРегламентированногоУчета.Получить(),ДатаАктуальности).Курс;
	
	ТаблицаПовышений = Новый ТаблицаЗначений;
	ТаблицаПовышений.Колонки.Добавить("ВидКоэф");
	ТаблицаПовышений.Колонки.Добавить("РазмерКоэф");
	ТаблицаПовышений.Колонки.Добавить("ВидПовышения");
	ТаблицаПовышений.Колонки.Добавить("РазмерПовышения");
	ТаблицаПовышений.Колонки.Добавить("ВидНадбавкиПредставление");
	ТаблицаПовышений.Колонки.Добавить("ПроцентНадбавки");
	ТаблицаПовышений.Колонки.Добавить("РезультатНадбавки");
	
	ЗапросКоэф = Новый Запрос;
	
	ТекстЗапросаКоэф =
	"ВЫБРАТЬ
	|	КоэфПовышенияТОПоШтатномуСрезПоследних.Коэффициент КАК ВидКоэф,
	|	КоэфПовышенияТОПоШтатномуСрезПоследних.Размер КАК РазмерКоэф
	|ИЗ
	|	РегистрСведений.КоэфПовышенияТОПоШтатному.СрезПоследних(
	|			&ДатаАктуальности,
	|			ПодразделениеОрганизации = &Подразделение
	|				И Должность = &Должность
	|				И ВидДеятельностиИзмерение = &ВидДеятельности
	|				И УсловияТрудаИзмерение = &УсловияТруда) КАК КоэфПовышенияТОПоШтатномуСрезПоследних
	|ГДЕ
	|	КоэфПовышенияТОПоШтатномуСрезПоследних.Размер <> 0";	
	
	ЗапросКоэф.УстановитьПараметр("ДатаАктуальности",	ДатаАктуальности);
		
	ЗапросКоэф.Текст = ТекстЗапросаКоэф;
	
	ЗапросПовышения = Новый Запрос;
	
	ТекстЗапросаПовышения =
	"ВЫБРАТЬ
	|	ПовышенияПоИнструкцииПоШтатномуСрезПоследних.Размер КАК РазмерПовышения,
	|	ПовышенияПоИнструкцииПоШтатномуСрезПоследних.Коэффициент.Представление КАК ВидПовышения
	|ИЗ
	|	РегистрСведений.ПовышенияПоИнструкцииПоШтатному.СрезПоследних(
	|			&ДатаАктуальности,
	|			ПодразделениеОрганизации = &Подразделение
	|				И Должность = &Должность
	|				И ВидДеятельностиИзмерение = &ВидДеятельности
	|				И УсловияТрудаИзмерение = &УсловияТруда) КАК ПовышенияПоИнструкцииПоШтатномуСрезПоследних
	|ГДЕ
	|	ПовышенияПоИнструкцииПоШтатномуСрезПоследних.Размер <> 0";
	
	
	
	ЗапросПовышения.УстановитьПараметр("ДатаАктуальности",	ДатаАктуальности);
	
	ЗапросПовышения.Текст = ТекстЗапросаПовышения;
	
	ЗапросНадбавки = Новый Запрос;
	
	ТекстЗапросаНадбавки =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.ВидНадбавки.СпособРасчета = &НадбавкаПроцентом
	|			ТОГДА НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Показатель1
	|	КОНЕЦ КАК ПроцентНадбавки,
	|	ВЫБОР
	|		КОГДА НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.ВидНадбавки.СпособРасчета <> &НадбавкаПроцентом
	|			ТОГДА НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Показатель1 + НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Показатель2 + НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Показатель3 + НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Показатель4 + НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Показатель5 + НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Показатель6
	|	КОНЕЦ КАК РезультатНадбавки,
	|	НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.ВидНадбавки.Представление КАК ВидНадбавкиПредставление
	|ИЗ
	|	РегистрСведений.НадбавкиПоШтатномуРасписаниюОрганизаций.СрезПоследних(
	|			&ДатаАктуальности,
	|			ПодразделениеОрганизации = &Подразделение
	|				И Должность = &Должность
	|				И ВидДеятельностиИзмерение = &ВидДеятельности
	|				И УсловияТрудаИзмерение = &УсловияТруда) КАК НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних
	|ГДЕ
	|	НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Показатель1 <> 0
	|	ИЛИ НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Показатель2 <> 0
	|	ИЛИ НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Показатель3 <> 0
	|	ИЛИ НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Показатель4 <> 0
	|	ИЛИ НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Показатель5 <> 0
	|	ИЛИ НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Показатель6 <> 0";
	
	
	
	ЗапросНадбавки.УстановитьПараметр("ДатаАктуальности",	ДатаАктуальности);
	ЗапросНадбавки.УстановитьПараметр("НадбавкаПроцентом",	Перечисления.СпособыРасчетаОплатыТруда.Процентом);
	ЗапросНадбавки.Текст = ТекстЗапросаНадбавки;
				
	Пока ВыборкаСтрокШтРасписания.Следующий() Цикл 
		
	    ВыборкаПодразделенийСледующегоУровня = ВыборкаСтрокШтРасписания.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);		
		КоличествоСтавок = 0;
		КоличествоСтавокДляРасчетаМФЗП = 0;		
		//РБ
		Фонд = 0;
		ТарифнаяСтавка = 0;
		Ставка =0;
		
		
			
		ТаблицаПовышений.Очистить();
		// Готовим строку отчета для последующего вывода
		ВыводимаяСтрока.Очистить();
		ВыведеноНадбавок = 0;
		
		Если ЗначениеЗаполнено(ВыборкаСтрокШтРасписания.БезЕТС) Тогда
			Если НЕ ВыборкаСтрокШтРасписания.БезЕТС Тогда
				ЗапросКоэф.УстановитьПараметр("Подразделение",ВыборкаСтрокШтРасписания.ПодразделениеОрганизации);
				ЗапросКоэф.УстановитьПараметр("Должность",ВыборкаСтрокШтРасписания.Должность); 
				ЗапросКоэф.УстановитьПараметр("ВидДеятельности",ВыборкаСтрокШтРасписания.ВидДеятельностиИзмерение); 
				ЗапросКоэф.УстановитьПараметр("УсловияТруда",ВыборкаСтрокШтРасписания.УсловияТрудаИзмерение); 
				//
				ВременнаяТаблица = ЗапросКоэф.Выполнить().Выгрузить();
				Для Н=1 По ВременнаяТаблица.Количество() Цикл
					ТаблицаПовышений.Добавить();
				КонецЦикла;
						
				ТаблицаПовышений.ЗагрузитьКолонку(ВременнаяТаблица.ВыгрузитьКолонку("ВидКоэф"),"ВидКоэф");
				ТаблицаПовышений.ЗагрузитьКолонку(ВременнаяТаблица.ВыгрузитьКолонку("РазмерКоэф"),"РазмерКоэф");

				ЗапросПовышения.УстановитьПараметр("Подразделение",ВыборкаСтрокШтРасписания.ПодразделениеОрганизации);
				ЗапросПовышения.УстановитьПараметр("Должность",ВыборкаСтрокШтРасписания.Должность); 
				ЗапросПовышения.УстановитьПараметр("ВидДеятельности",ВыборкаСтрокШтРасписания.ВидДеятельностиИзмерение); 
				ЗапросПовышения.УстановитьПараметр("УсловияТруда",ВыборкаСтрокШтРасписания.УсловияТрудаИзмерение);
						
				ВременнаяТаблица = ЗапросПовышения.Выполнить().Выгрузить();
				Если ДатаАктуальности < НачалоДня(Дата("20090901")) Тогда	
					Если ЗначениеЗаполнено(ВыборкаСтрокШтРасписания.ПроцентПовышения) тогда
						ПроцентПоКонтрактуСтрока  = ВременнаяТаблица.Добавить();
						ПроцентПоКонтрактуСтрока.ВидПовышения = "Процент по контракту";
						ПроцентПоКонтрактуСтрока.РазмерПовышения = ВыборкаСтрокШтРасписания.ПроцентПовышения;
			       	КонецЕсли;
				КонецЕсли;
							
				Для Н=1 По ВременнаяТаблица.Количество() - ТаблицаПовышений.Количество() Цикл
					ТаблицаПовышений.Добавить();
				КонецЦикла;
						
				ТаблицаПовышений.ЗагрузитьКолонку(ВременнаяТаблица.ВыгрузитьКолонку("ВидПовышения"),"ВидПовышения");
				ТаблицаПовышений.ЗагрузитьКолонку(ВременнаяТаблица.ВыгрузитьКолонку("РазмерПовышения"),"РазмерПовышения");
				
			КонецЕсли;		
		КонецЕсли;
		
		
		ЗапросНадбавки.УстановитьПараметр("Подразделение",ВыборкаСтрокШтРасписания.ПодразделениеОрганизации);
		ЗапросНадбавки.УстановитьПараметр("Должность",ВыборкаСтрокШтРасписания.Должность); 
		ЗапросНадбавки.УстановитьПараметр("ВидДеятельности",ВыборкаСтрокШтРасписания.ВидДеятельностиИзмерение); 
		ЗапросНадбавки.УстановитьПараметр("УсловияТруда",ВыборкаСтрокШтРасписания.УсловияТрудаИзмерение);
						
		ТаблицаНадбавок = ЗапросНадбавки.Выполнить().Выгрузить();
		КурсТарифнойСтавки = ОбщегоНазначения.ПолучитьКурсВалюты(ВыборкаСтрокШтРасписания.ВалютаТарифнойСтавки,ДатаАктуальности).Курс;
		ФондНадбавок = 0;
		Для Каждого Строка Из ТаблицаНадбавок Цикл
			Если ЗначениеЗаполнено(Строка.ПроцентНадбавки) тогда
				Строка.РезультатНадбавки = ОбщегоНазначения.ОкруглитьПоВалюте(Строка.ПроцентНадбавки*ВыборкаСтрокШтРасписания.РасчетнаяТарифнаяСтавка/100*КурсТарифнойСтавки/КурсВалютыОтчета,Константы.ВалютаРегламентированногоУчета.Получить());
			Иначе
				Строка.РезультатНадбавки =  Строка.РезультатНадбавки*КурсТарифнойСтавки/КурсВалютыОтчета;
			КонецЕсли;
			ФондНадбавок = ФондНадбавок + Строка.РезультатНадбавки;
		КонецЦикла;
		
		Для Н=1 По ТаблицаНадбавок.Количество() - ТаблицаПовышений.Количество() Цикл
			ТаблицаПовышений.Добавить();
		КонецЦикла;
		
		ТаблицаПовышений.ЗагрузитьКолонку(ТаблицаНадбавок.ВыгрузитьКолонку("РезультатНадбавки"),"РезультатНадбавки");
		ТаблицаПовышений.ЗагрузитьКолонку(ТаблицаНадбавок.ВыгрузитьКолонку("ВидНадбавкиПредставление"),"ВидНадбавкиПредставление");
		ТаблицаПовышений.ЗагрузитьКолонку(ТаблицаНадбавок.ВыгрузитьКолонку("ПроцентНадбавки"),"ПроцентНадбавки");
     
		КоличествоСтавок = ?(ВыборкаСтрокШтРасписания.КоличествоСтавок <> NULL,ВыборкаСтрокШтРасписания.КоличествоСтавок,0);
		КоличествоСтавокДляРасчетаМФЗП = ?(ВыборкаСтрокШтРасписания.КоличествоСтавокДляРасчетаМФЗП <> NULL,ВыборкаСтрокШтРасписания.КоличествоСтавокДляРасчетаМФЗП,0);
		
		ОбластьСтрока.Параметры.Заполнить(ВыборкаСтрокШтРасписания);
		Отступ = "";
		Счетчик = 0;
		Пока Счетчик < ВыборкаСтрокШтРасписания.Уровень() Цикл
			Отступ = Отступ + "•"; 
			Счетчик = Счетчик + 1;
		КонецЦикла;
		Если ЗначениеЗаполнено(ВыборкаСтрокШтРасписания.Должность) тогда
			ОбластьСтрока.Параметры.ПодразделениеОрганизацииПредставление = ВыборкаСтрокШтРасписания.Должность;	
			Фонд = ?(ВыборкаСтрокШтРасписания.РасчетнаяТарифнаяСтавка <> NULL,(ВыборкаСтрокШтРасписания.РасчетнаяТарифнаяСтавка+ФондНадбавок)*ВыборкаСтрокШтРасписания.КоличествоСтавокДляРасчетаМФЗП,0);
		Иначе
			
			ОбластьСтрока.Параметры.ПодразделениеОрганизацииПредставление = Отступ + ВыборкаСтрокШтРасписания.ПодразделениеОрганизацииПредставление;
			Фонд = ВыборкаСтрокШтРасписания.МесячныйФонд;
		КонецЕсли;
		ОбластьСтрока.Параметры.РазмерКоэф = "";
		ОбластьСтрока.Параметры.РазмерПовышения = "";
		ОбластьСтрока.Параметры.ВидКоэф = "";
		ОбластьСтрока.Параметры.ВидПовышения = "";
		ОбластьСтрока.Параметры.ВидНадбавкиПредставление = "";
		ОбластьСтрока.Параметры.ПроцентНадбавки = "";
		ОбластьСтрока.Параметры.РезультатНадбавки = "";
		ОбластьСтрока.Параметры.РезультатНадбавки = "";
		//ОбластьСтрока.Параметры.Примечание = "";
		СтрокНадбавок = 0;
		Если ТаблицаПовышений.Количество() > 0 тогда
					
			Для Каждого СтрокаНадбавок Из ТаблицаПовышений Цикл
				СтрокНадбавок = СтрокНадбавок + 1;
				Если СтрокНадбавок = 1 тогда 
					ОбластьСтрока.Параметры.Заполнить(СтрокаНадбавок);
				Иначе
					Для Сч = 1 По ОбластьСтрока.Параметры.Количество() Цикл
						ОбластьСтрока.Параметры.Установить(Сч - 1,""); 
					КонецЦикла;
	               	ОбластьСтрока.Параметры.Заполнить(СтрокаНадбавок);
				КонецЕсли;
				Если СтрокНадбавок = ТаблицаПовышений.Количество() тогда
					ОбластьСтрока.Области.СтрокаПодчеркиваение.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1); 
				Иначе
					ОбластьСтрока.Области.СтрокаПодчеркиваение.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии,0);
	            КонецЕсли;
				ВыводимаяСтрока.Вывести(ОбластьСтрока);
				ВыведеноСтрокВОтчет = ВыведеноСтрокВОтчет + 1; 
			КонецЦикла;
		Иначе
			ОбластьСтрока.Области.СтрокаПодчеркиваение.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1);
			ВыводимаяСтрока.Вывести(ОбластьСтрока);
			ВыведеноСтрокВОтчет = ВыведеноСтрокВОтчет + 1;
		КонецЕсли;
							
				// Проверим, уместится ли строка на странице или надо открывать новую страницу
		ВывестиПодвалЛиста = Не ДокументРезультат.ПроверитьВывод(ВыводимыеОбласти);
							//
		// Если нужно, выводим подвал листа
		Если ВывестиПодвалЛиста Тогда
							
		//Начнем новую страницу
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			КоличествоСтавокЛиста = 0;
			КоличествоСтавокЛистаДляРасчетаМФЗП = 0;
			ФондЛиста = 0;
					
			//Выводим шапку нового листа
			ДокументРезультат.Вывести(ОбластьШапкаЛиста);
		КонецЕсли;
				
		//Теперь выводим строку
		Если ЗначениеЗаполнено(ВыборкаСтрокШтРасписания.Должность) тогда
			Область = ДокументРезультат.Вывести(ВыводимаяСтрока);	
		Иначе
			ДокументРезультат.ТекущаяОбласть.Шрифт = Новый Шрифт(ДокументРезультат.ТекущаяОбласть.Шрифт,,,Истина);
			Область = ДокументРезультат.Вывести(ВыводимаяСтрока);
			Область.Шрифт = Новый Шрифт(ДокументРезультат.ТекущаяОбласть.Шрифт,,,Истина);
	    КонецЕсли;

				
			
				
				//Увеличиваем счетчики по листу
		КоличествоСтавокЛиста = КоличествоСтавокЛиста + КоличествоСтавок;
		КоличествоСтавокЛистаДляРасчетаМФЗП = КоличествоСтавокЛистаДляРасчетаМФЗП + КоличествоСтавокДляРасчетаМФЗП;
		ФондЛиста = ФондЛиста + Фонд;
		
	
		
		ВывестиСтрокиПодразделения(ВыборкаПодразделенийСледующегоУровня, ВыведеноСтрокВОтчет, КоличествоСтрокОтчета, ДокументРезультат, ОбластьСтрока, ОбластьПодвалЛиста, ОбластьШапкаЛиста, 
			 ВыводимаяСтрока,КоличествоСтавокЛиста,КоличествоСтавокЛистаДляРасчетаМФЗП,ФондЛиста, ВыводимыеОбласти, Макет)
		
	КонецЦикла;//цикл по подразделениям текущего уровня 
	
	

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//  Дописать - булево.  Истина - табличный документ дописывается формируемым отчетом, 
//                      Ложь - заполняется формируемым отчетом (с предварительной очистой 
//                      табличного документа)
//
Процедура СформироватьОтчет(ДокументРезультат, Дописать = Ложь) Экспорт

	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Расписание.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	Расписание.Должность КАК Должность,
	|	Расписание.КоличествоСтавок КАК КоличествоСтавок,
	|	Расписание.ВидТарифнойСтавки КАК ВидТарифнойСтавки,
	|	Расписание.РазмерСтавкиПервогоРазряда,
	|	Расписание.РазрядЕТС КАК РазрядЕТС,
	|	Расписание.КоэффициентЕТС КАК КоэфЕТС,
	|	Расписание.ПроцентПоКонтракту КАК ПроцентПовышения,
	|	Расписание.ТарифнаяСтавка КАК ТарифнаяСтавка,
	|	Расписание.РасчетнаяТарифнаяСтавка КАК РасчетнаяТарифнаяСтавка,
	|	Расписание.ВидДеятельностиИзмерение КАК ВидДеятельностиИзмерение,
	|	Расписание.УсловияТрудаИзмерение КАК УсловияТрудаИзмерение,
	|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
	|					КОГДА Надбавки.ВидНадбавки.СпособРасчета = &НадбавкаПроцентом
	|						ТОГДА Расписание.РасчетнаяТарифнаяСтавка * Надбавки.Показатель1 / 100
	|					ИНАЧЕ Надбавки.Показатель1 * СрезКурсовВалют.Курс / &КурсВалютыОтчета
	|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК СуммаНадбавки,
	|	Расписание.ПовышенныйКоэффициентЕТС,
	|	Расписание.ИтоговоеПовышениеПоИнструкции,
	|	Расписание.ВалютаТарифнойСтавки,
	|	Расписание.Должность.Представление КАК ДолжностьПредставление,
	|	Расписание.ПодразделениеОрганизации.Представление КАК ПодразделениеОрганизацииПредставление,
	|	Расписание.КоличествоСтавокДляРасчетаМФЗП КАК КоличествоСтавокДляРасчетаМФЗП,
	|	Расписание.Примечание,
//1с-минск	
	//|	(Расписание.РасчетнаяТарифнаяСтавка + ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
	//|					КОГДА Надбавки.ВидНадбавки.СпособРасчета = &НадбавкаПроцентом
	//|						ТОГДА Расписание.РасчетнаяТарифнаяСтавка * Надбавки.Показатель1 / 100
	//|					ИНАЧЕ (Надбавки.Показатель1 + Надбавки.Показатель2 + Надбавки.Показатель3 + Надбавки.Показатель4 + Надбавки.Показатель5 + Надбавки.Показатель6) * СрезКурсовВалют.Курс / &КурсВалютыОтчета
	//|				КОНЕЦ КАК ЧИСЛО(15, 0))), 0)) * Расписание.КоличествоСтавокДляРасчетаМФЗП КАК МесячныйФонд,
	|	ВЫРАЗИТЬ(((ВЫРАЗИТЬ(Расписание.РасчетнаяТарифнаяСтавка КАК ЧИСЛО(15, 5))) + ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
	|						КОГДА Надбавки.ВидНадбавки.СпособРасчета = &НадбавкаПроцентом
	|							ТОГДА ВЫРАЗИТЬ(Расписание.РасчетнаяТарифнаяСтавка * Надбавки.Показатель1 / 100 КАК ЧИСЛО(15, 5))
	|						ИНАЧЕ ((ВЫРАЗИТЬ(Надбавки.Показатель1 КАК ЧИСЛО(15, 5))) + (ВЫРАЗИТЬ(Надбавки.Показатель2 КАК ЧИСЛО(15, 5))) + (ВЫРАЗИТЬ(Надбавки.Показатель3 КАК ЧИСЛО(15, 5))) + (ВЫРАЗИТЬ(Надбавки.Показатель4 КАК ЧИСЛО(15, 5))) + (ВЫРАЗИТЬ(Надбавки.Показатель5 КАК ЧИСЛО(15, 5))) + (ВЫРАЗИТЬ(Надбавки.Показатель6 КАК ЧИСЛО(15, 5)))) * СрезКурсовВалют.Курс / &КурсВалютыОтчета
	|					КОНЕЦ КАК ЧИСЛО(15, 5))), 0)) * Расписание.КоличествоСтавокДляРасчетаМФЗП КАК ЧИСЛО(15, 2)) КАК МесячныйФонд,	
//конец 1с-минск	
	|	Расписание.ПодразделениеОрганизации.Код КАК ПодразделениеОрганизацииКод,
	|	Расписание.БезЕТС
	|ИЗ
	|	РегистрСведений.ШтатноеРасписаниеОрганизаций.СрезПоследних(&ДатаАктуальности, ПодразделениеОрганизации.Владелец = &Организация) КАК Расписание
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом.СрезПоследних(&ДатаАктуальности, ) КАК СрезКурсовВалют
	|		ПО (СрезКурсовВалют.Валюта = Расписание.ВалютаТарифнойСтавки)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НадбавкиПоШтатномуРасписаниюОрганизаций.СрезПоследних(&ДатаАктуальности, ПодразделениеОрганизации.Владелец = &Организация) КАК Надбавки
	|		ПО (Надбавки.ПодразделениеОрганизации = Расписание.ПодразделениеОрганизации)
	|			И (Надбавки.Должность = Расписание.Должность)
	|			И (Надбавки.ВидДеятельностиИзмерение = Расписание.ВидДеятельностиИзмерение)
	|			И (Надбавки.УсловияТрудаИзмерение = Расписание.УсловияТрудаИзмерение)
	|ГДЕ
	|	Расписание.КоличествоСтавок > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Расписание.ПодразделениеОрганизации,
	|	Расписание.Должность,
	|	Расписание.КоличествоСтавок,
	|	Расписание.ВидТарифнойСтавки,
	|	Расписание.РазмерСтавкиПервогоРазряда,
	|	Расписание.РазрядЕТС,
	|	Расписание.КоэффициентЕТС,
	|	Расписание.ПроцентПоКонтракту,
	|	Расписание.ТарифнаяСтавка,
	|	Расписание.РасчетнаяТарифнаяСтавка,
	|	Расписание.ВидДеятельностиИзмерение,
	|	Расписание.УсловияТрудаИзмерение,
	|	Расписание.ПовышенныйКоэффициентЕТС,
	|	Расписание.ИтоговоеПовышениеПоИнструкции,
	|	Расписание.ВалютаТарифнойСтавки,
	|	Расписание.Должность.Представление,
	|	Расписание.ПодразделениеОрганизации.Представление,
	|	Расписание.КоличествоСтавокДляРасчетаМФЗП,
	|	Расписание.Примечание,
	|	Расписание.ПодразделениеОрганизации.Код,
	|	Расписание.БезЕТС
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПодразделениеОрганизацииКод,
	|	КоэфЕТС УБЫВ
	|ИТОГИ
	|	СУММА(КоличествоСтавок),
	|	СУММА(СуммаНадбавки),
	|	СУММА(КоличествоСтавокДляРасчетаМФЗП),
	|	СУММА(МесячныйФонд)
	|ПО
	|	ПодразделениеОрганизации ИЕРАРХИЯ";
 
	Запрос.УстановитьПараметр("ДатаАктуальности",	ДатаАктуальности);
	Запрос.УстановитьПараметр("Организация",		Организация);   
	Запрос.УстановитьПараметр("Подразделение",      Подразделение);

	Запрос.УстановитьПараметр("НадбавкаПроцентом",	Перечисления.СпособыРасчетаОплатыТруда.Процентом);
	КурсВалютыОтчета = ОбщегоНазначения.ПолучитьКурсВалюты(Константы.ВалютаРегламентированногоУчета.Получить(),ДатаАктуальности).Курс;
	Запрос.УстановитьПараметр("КурсВалютыОтчета",	?(КурсВалютыОтчета = 0,1,КурсВалютыОтчета));

	Если Не Подразделение.Пустая() Тогда
    	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ПодразделениеОрганизации.Владелец = &Организация","ПодразделениеОрганизации В ИЕРАРХИИ(&Подразделение)")
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	
	МассивВидовРуководителей = Новый Массив();
	МассивВидовРуководителей.Добавить(Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
	МассивВидовРуководителей.Добавить(Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер);
	МассивВидовРуководителей.Добавить(Перечисления.ОтветственныеЛицаОрганизаций.РуководительКадровойСлужбы);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидЛица",		  МассивВидовРуководителей);
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	Запрос.УстановитьПараметр("Организация",      Организация);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность.Представление КАК ДолжностьРуководителя,
	|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество, ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо.Наименование) КАК ФИОРуководителя,
	|	ОтветственныеЛицаОрганизацийСрезПоследних.ОтветственноеЛицо
	|ИЗ
	|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
	|		&ДатаАктуальности,
	|		ОтветственноеЛицо В (&ВидЛица)
	|		    И СтруктурнаяЕдиница = &Организация) КАК ОтветственныеЛицаОрганизацийСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаАктуальности, ) КАК ФИОФизЛицСрезПоследних
	|		ПО ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизЛицо";
	
	РезультатДляПодвала = Запрос.Выполнить();
	
	
	
	
	
	Макет = ПолучитьМакет("ШтатноеРасписаниеРБ1");
    Если не Дописать Тогда
	    ДокументРезультат.Очистить();
    КонецЕсли;
    
	//Параметры документа
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.ПолеСлева			 = 0;
	ДокументРезультат.ПолеСправа		 = 0;
	ДокументРезультат.Защита             = Ложь;
	ДокументРезультат.ТолькоПросмотр     = Истина;
	ДокументРезультат.АвтоМасштаб		 = Истина;
	//ДокументРезультат.
	
	ФондОрганизации = 0;
	ВсегоСтавокОрганизации = 0;
	ВсегоСтавокОрганизацииДляРасчетаМФЗП = 0;

	
	//Первый обход выборки: Заполняем список названий надбавок и рассчитываем итоги по организации для вывода шапки
	СписокНадбавок = Новый СписокЗначений;
	ВыборкаДетали = РезультатЗапроса.Выбрать();
	КоличествоСтрокОтчета = ВыборкаДетали.Количество();
	ПерваяДолжность = Истина;
	
	// массив подразделений для подписи
	СписокПодразделений = Новый Массив();
	
	Пока ВыборкаДетали.СледующийПоЗначениюПоля("ПодразделениеОрганизации") Цикл 
		
		СписокПодразделений.Добавить(ВыборкаДетали.ПодразделениеОрганизации);
		
		КоличествоСтавок = 0;
		КоличествоСтавокДляРасчетаМФЗП = 0;
		Фонд = 0;
		Ставка = 0;
		ПерваяНадбавка = Истина;
		
		Пока ВыборкаДетали.Следующий() Цикл
			
			Если ЗначениеЗаполнено(ВыборкаДетали.Должность) тогда
			
				Фонд = ?(ВыборкаДетали.РасчетнаяТарифнаяСтавка <> NULL,ОбщегоНазначения.ОкруглитьПоВалюте(ВыборкаДетали.РасчетнаяТарифнаяСтавка*ВыборкаДетали.КоличествоСтавокДляРасчетаМФЗП,Константы.ВалютаРегламентированногоУчета.Получить()),0);
				КоличествоСтавокДляРасчетаМФЗП = ?(ВыборкаДетали.КоличествоСтавокДляРасчетаМФЗП <> NULL,ВыборкаДетали.КоличествоСтавокДляРасчетаМФЗП,0);
				КоличествоСтавок = ?(ВыборкаДетали.КоличествоСтавок <> NULL,ВыборкаДетали.КоличествоСтавок,0);
							
				Если ВыборкаДетали.СуммаНадбавки <> NULL Тогда
					Фонд = Фонд+ОбщегоНазначения.ОкруглитьПоВалюте(ВыборкаДетали.СуммаНадбавки*КоличествоСтавокДляРасчетаМФЗП,Константы.ВалютаРегламентированногоУчета.Получить()); 
				КонецЕсли;	 
	 	       				
				ВсегоСтавокОрганизации = ВсегоСтавокОрганизации + КоличествоСтавок;
				ВсегоСтавокОрганизацииДляРасчетаМФЗП = ВсегоСтавокОрганизацииДляРасчетаМФЗП + КоличествоСтавокДляРасчетаМФЗП;

				ФондОрганизации =ФондОрганизации + Фонд;
			КонецЕсли;
		КонецЦикла;	
	КонецЦикла;
	
	//Выводим шапку
    ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаЛиста = Макет.ПолучитьОбласть("ШапкаЛиста");

	ОбластьШапка.Параметры.НазваниеОрганизации = Организация.НаименованиеПолное;
		
	
	ОбластьШапка.Параметры.ДатаДокумента =Формат(ДатаАктуальности,"ДЛФ=Д");
	ОбластьШапка.Параметры.ШтатВКоличестве = Формат(ВсегоСтавокОрганизации,"ЧГ=0")+" единиц";
	ОбластьШапка.Параметры.МесячныйФонд	 = Формат(ФондОрганизации)+" рублей";

	ВыборкаДляПодвала = РезультатДляПодвала.Выбрать();
	
	Если ВыборкаДляПодвала.НайтиСледующий(Перечисления.ОтветственныеЛицаОрганизаций.Руководитель,"ОтветственноеЛицо") Тогда
		Инициалы = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(ВыборкаДляПодвала.ФИОРуководителя," ");			
		ОбластьШапка.Параметры.ФИОРуководителяОрганизации = Инициалы[0]+" "+Лев(СокрЛП(Инициалы[1]),1)+". "+Лев(СокрЛП(Инициалы[2]),1+".");
		ОбластьШапка.Параметры.ДолжностьРуководителя = ВыборкаДляПодвала.ДолжностьРуководителя;
	КонецЕсли;
	
	
	ДокументРезультат.Вывести(ОбластьШапка);
    ДокументРезультат.Вывести(ОбластьШапкаЛиста);
	
	
	КоличествоСтавокЛиста = 0;
	КоличествоСтавокЛистаДляРасчетаМФЗП = 0;
	ФондЛиста = 0;
	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвалЛиста = Макет.ПолучитьОбласть("ПодвалЛиста");
	// массив с двумя строками - для разбиения на страницы
	ВыводимыеОбласти = Новый Массив();
	ВыводимаяСтрока = Новый ТабличныйДокумент();
	ВыводимыеОбласти.Добавить(ВыводимаяСтрока);
	ВыводимыеОбласти.Добавить(Макет.ПолучитьОбласть("ПодвалЛиста"));
	
	
	//Второй обход выборки:Выводим строки штатного расписания
	ВыведеноСтрокВОтчет = 0;
	
	ВыборкаОбщая = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
   
	
	ВывестиСтрокиПодразделения(ВыборкаОбщая, ВыведеноСтрокВОтчет, КоличествоСтрокОтчета, ДокументРезультат,ОбластьСтрока, ОбластьПодвалЛиста, ОбластьШапкаЛиста,ВыводимаяСтрока,  
			КоличествоСтавокЛиста, КоличествоСтавокЛистаДляРасчетаМФЗП, ФондЛиста, ВыводимыеОбласти, Макет);
			
	Для Сч = 1 По ОбластьСтрока.Параметры.Количество() Цикл
		ОбластьСтрока.Параметры.Установить(Сч - 1,""); 
	КонецЦикла;

	ВыводимаяСтрока = Новый ТабличныйДокумент();
	ВыводимаяСтрока.Вывести(ОбластьСтрока);
	ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ВыводимаяСтрока);
	
	ВыводимыеОбласти.Добавить(Макет.ПолучитьОбласть("Подвал"));
	Пока ДокументРезультат.ПроверитьВывод(ВыводимыеОбласти) Цикл
		ДокументРезультат.Вывести(ВыводимаяСтрока);
	КонецЦикла;
	
	//Выводим подвал документа
	НомерВерхнейСтрокиПодвала = ДокументРезультат.ВысотаТаблицы+1;
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвал.Параметры.КоличествоСтавок = ВсегоСтавокОрганизации;
	ОбластьПодвал.Параметры.КоличествоСтавокДляРасчетаМФЗП = ВсегоСтавокОрганизацииДляРасчетаМФЗП;
	ОбластьПодвал.Параметры.МесячныйФонд = ФондОрганизации;
	ВыборкаДляПодвала = РезультатДляПодвала.Выбрать();
	Если ВыборкаДляПодвала.НайтиСледующий(Перечисления.ОтветственныеЛицаОрганизаций.РуководительКадровойСлужбы,"ОтветственноеЛицо") Тогда
			Инициалы = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(ВыборкаДляПодвала.ФИОРуководителя," ");			
			ОбластьПодвал.Параметры.ФИОРуководителяКС =  Инициалы[0]+" "+Лев(СокрЛП(Инициалы[1]),1)+". "+Лев(СокрЛП(Инициалы[2]),1+".");;
	КонецЕсли;
			
	ДокументРезультат.Вывести(ОбластьПодвал);

КонецПроцедуры


#КонецЕсли

