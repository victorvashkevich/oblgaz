
#Если Клиент Тогда

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура СформироватьОтчет(ДокументРезультат, ЕстьОшибки = Ложь) Экспорт

	РеглВалюта = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Дата актуальности установим на последний день года. 
	Запрос.УстановитьПараметр("ДатаАктуальности",	Дата(Год, 12, 31, 23, 59, 59));
	Запрос.УстановитьПараметр("Физлицо",			Физлицо);
	Запрос.УстановитьПараметр("Организация",		Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",ОбщегоНазначения.ГоловнаяОрганизация(Организация));

	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество, ФизическиеЛица.Наименование) КАК ФамилияИмяОтчество,
	|	ФизическиеЛица.ДатаРождения,
	|	ФизическиеЛица.МестоРождения,
	|	ФизическиеЛица.Пол,
	|	ФизическиеЛица.ИНН,
	|	ФизическиеЛица.СтраховойНомерПФР,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
	|			ТОГДА ""Основная""
	|		ИНАЧЕ ""По совместительству""
	|	КОНЕЦ КАК ВидРаботы,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаАктуальности
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации
	|	КОНЕЦ КАК ПодразделениеОрганизации,
	|	РаботникиОрганизацииСрезПоследних.Сотрудник,
	|	РаботникиОрганизацииСрезПоследних.Сотрудник.Код КАК ТабельныйНомер,
	|	СемейноеПоложениеФизЛицСрезПоследних.СемейноеПоложение,
	|	НДФЛСтандартныеВычетыФизлицСрезПоследних.КодВычетаЛичный.Код КАК КодВычетаЛичный,
	|	НДФЛСтандартныеВычетыФизлицСрезПоследних.КодВычетаНаДетей.Код КАК КодВычетаНаДетей,
	|	НДФЛСтандартныеВычетыФизлицСрезПоследних.КоличествоДетей,
	|	ПриемНаРаботу.Период КАК ДатаПриема,
	|	ВЫБОР
	|		КОГДА Увольнение.ПериодЗавершения <= &ДатаАктуальности
	|				И Увольнение.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА Увольнение.ПериодЗавершения
	|		ИНАЧЕ Увольнение.Период
	|	КОНЕЦ КАК ДатаУвольнения
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаАктуальности, ФизЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СемейноеПоложениеФизЛиц.СрезПоследних(&ДатаАктуальности, ФизЛицо = &ФизЛицо) КАК СемейноеПоложениеФизЛицСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛСтандартныеВычетыФизлиц.СрезПоследних(&ДатаАктуальности, Физлицо = &Физлицо) КАК НДФЛСтандартныеВычетыФизлицСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&ДатаАктуальности,
	|				Сотрудник.ФизЛицо = &ФизЛицо
	|					И Организация = &ГоловнаяОрганизация
	|					И Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК РаботникиОрганизацииСрезПоследних
	|		ПО (ВЫБОР
	|				КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаАктуальности
	|						И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделениеЗавершения
	|				ИНАЧЕ РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделение
	|			КОНЕЦ = &Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ПриемНаРаботу
	|		ПО (ПриемНаРаботу.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу))
	|			И (ПриемНаРаботу.Сотрудник.Физлицо = &ФизЛицо)
	|			И (ПриемНаРаботу.Организация = &ГоловнаяОрганизация)
	|			И (ПриемНаРаботу.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&ДатаАктуальности,
	|				ВЫБОР
	|						КОГДА ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|								И ПериодЗавершения <= &ДатаАктуальности
	|							ТОГДА ПричинаИзмененияСостоянияЗавершения
	|						ИНАЧЕ ПричинаИзмененияСостояния
	|					КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|					И Сотрудник.ФизЛицо = &ФизЛицо
	|					И Организация = &ГоловнаяОрганизация
	|					И Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК Увольнение
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ФизическиеЛица.Ссылка = &Физлицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	РаботникиОрганизацииСрезПоследних.Период УБЫВ";
	
	ВыборкаРезультата	=	Запрос.Выполнить().Выбрать();
	
	ДокументРезультат.Очистить();
	Макет 		 = ПолучитьМакет("Т54");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	
	Если ВыборкаРезультата.Следующий() Тогда
		
		ОбластьШапка.Параметры.Заполнить(ВыборкаРезультата);
		
		// Организация
		ОбластьШапка.Параметры.НаименованиеОрганизации	= Организация.НаименованиеПолное;
		ОбластьШапка.Параметры.КодПоОКПО				= Организация.КодПоОКПО;
		
		ОбластьШапка.Параметры.РасчетныйПериодС	 = Дата(Год, 01, 01);
		ОбластьШапка.Параметры.РасчетныйПериодПо = Дата(Год, 12, 31);
		ОбластьШапка.Параметры.КоличествоДетей	 = ВыборкаРезультата.КоличествоДетей;
		
	КонецЕсли;	

	ДокументРезультат.Вывести(ОбластьШапка);
	
	// Общая таблица значений, в которую соберем данные по кадровым документам, отпускам и удержаниям.
	ТаблицаКадрыОтпускаУдержания = Новый ТаблицаЗначений;
	
	// ПРИЕМ И ПЕРЕВОДЫ НА ДРУГУЮ РАБОТУ
	Запрос.УстановитьПараметр("ДатаАктуальностиС",	Дата(Год, 01, 01));
	Запрос.УстановитьПараметр("ДатаАктуальностиПо",	Дата(Год, 12, 31, 23, 59, 59));
	Запрос.УстановитьПараметр("ДатаКонУвольнений", Дата(Год+1, 01, 01));
	Запрос.УстановитьПараметр("ДатаНачУвольнений", Дата(Год, 01, 02));
	Запрос.УстановитьПараметр("РеглВалюта",РеглВалюта);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	&ДатаАктуальностиС КАК Период,
	|	РаботникиОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
	|	РаботникиОрганизацийСрезПоследних.Регистратор КАК Регистратор,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаАктуальностиС
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизацииЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
	|	КОНЕЦ КАК ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаАктуальностиС
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ДолжностьЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.Должность
	|	КОНЕЦ КАК Должность,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаАктуальностиС
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостоянияЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния
	|	КОНЕЦ КАК ПричинаИзмененияСостояния
	|ПОМЕСТИТЬ ВТДвиженияРаботника
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|		&ДатаАктуальностиС,
	|		Сотрудник.Физлицо = &Физлицо
	|			И Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|			И Организация = &ГоловнаяОрганизация) КАК РаботникиОрганизацийСрезПоследних
	|ГДЕ
	|	ВЫБОР
	|			КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаАктуальностиС
	|					И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостоянияЗавершения
	|			ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния
	|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|	И ВЫБОР
	|			КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаАктуальностиС
	|					И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделениеЗавершения
	|			ИНАЧЕ РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделение
	|		КОНЕЦ = &Организация
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Работники.Период,
	|	Работники.Сотрудник,
	|	Работники.Регистратор,
	|	Работники.ПодразделениеОрганизации,
	|	Работники.Должность,
	|	Работники.ПричинаИзмененияСостояния
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК Работники
	|ГДЕ
	|	(Работники.Период МЕЖДУ &ДатаАктуальностиС И &ДатаАктуальностиПо
	|				И Работники.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|			ИЛИ Работники.Период МЕЖДУ &ДатаНачУвольнений И &ДатаКонУвольнений
	|				И Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение))
	|	И Работники.Сотрудник.Физлицо = &Физлицо
	|	И Работники.Организация = &ГоловнаяОрганизация
	|	И Работники.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|	И Работники.ОбособленноеПодразделение = &Организация
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Работники.ПериодЗавершения,
	|	Работники.Сотрудник,
	|	Работники.Регистратор,
	|	Работники.ПодразделениеОрганизацииЗавершения,
	|	Работники.ДолжностьЗавершения,
	|	Работники.ПричинаИзмененияСостоянияЗавершения
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК Работники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ПериодыПерекрытия
	|		ПО ПериодыПерекрытия.Период <= Работники.ПериодЗавершения
	|			И ПериодыПерекрытия.Период > Работники.Период
	|			И ПериодыПерекрытия.Сотрудник.Физлицо = Работники.Сотрудник.Физлицо
	|			И (ПериодыПерекрытия.Организация = &ГоловнаяОрганизация)
	|			И (ПериодыПерекрытия.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
	|			И (ПериодыПерекрытия.ОбособленноеПодразделение = &Организация)
	|ГДЕ
	|	Работники.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И (Работники.ПериодЗавершения МЕЖДУ &ДатаАктуальностиС И &ДатаАктуальностиПо
	|				И Работники.ПричинаИзмененияСостоянияЗавершения <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|			ИЛИ Работники.ПериодЗавершения МЕЖДУ &ДатаНачУвольнений И &ДатаКонУвольнений
	|				И Работники.ПричинаИзмененияСостоянияЗавершения = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение))
	|	И Работники.Сотрудник.Физлицо = &Физлицо
	|	И Работники.Организация = &ГоловнаяОрганизация
	|	И Работники.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|	И Работники.ОбособленноеПодразделениеЗавершения = &Организация
	|	И ПериодыПерекрытия.Период ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	Период";
	
	Запрос.Выполнить();
	ДвиженияРаботникаТекст = "ВТДвиженияРаботника";
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Работники.Должность.Наименование КАК Должность,
	|	Работники.ПодразделениеОрганизации.Наименование КАК ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|			ТОГДА ДОБАВИТЬКДАТЕ(Работники.Период, ДЕНЬ, -1)
	|		ИНАЧЕ Работники.Период
	|	КОНЕЦ КАК ДатаСобытия,
	|	Работники.ПричинаИзмененияСостояния,
	|	Работники.Регистратор.Дата КАК ДатаПриказа,
	|	Работники.Регистратор.Номер КАК НомерПриказа,
	|	ЕСТЬNULL(ПлановыеНачисленияРаботниковОрганизаций.ТребуетВводаТарифногоРазряда, ЛОЖЬ) КАК ТребуетВводаТарифногоРазряда,
	|	ЕСТЬNULL(ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд.Наименование, """") КАК ТарифныйРазряд,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизаций.ТребуетВводаТарифногоРазряда
	|				ТОГДА РазмерыТарифныхРазрядов.Размер
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Размер
	|		КОНЕЦ, 0) КАК Ставка,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизаций.ТребуетВводаТарифногоРазряда
	|				ТОГДА РазмерыТарифныхРазрядов.Валюта.Наименование
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Валюта.Наименование
	|		КОНЕЦ, """") КАК ИмяВалюты,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизаций.ТребуетВводаТарифногоРазряда
	|				ТОГДА РазмерыТарифныхРазрядов.Валюта
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Валюта
	|		КОНЕЦ, &РеглВалюта) КАК Валюта
	|ИЗ
	|	" + ДвиженияРаботникаТекст + " КАК Работники
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВложенныйЗапрос.ДатаПеревода КАК ДатаПеревода,
	|			ВложенныйЗапрос.Сотрудник КАК Сотрудник,
	|			ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета.ТребуетВводаТарифногоРазряда КАК ТребуетВводаТарифногоРазряда,
	|			ПлановыеНачисленияРаботниковОрганизаций.Валюта1 КАК Валюта,
	|			ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд1 КАК ТарифныйРазряд,
	|			ПлановыеНачисленияРаботниковОрганизаций.Показатель1 КАК Размер
	|		ИЗ
	|			(ВЫБРАТЬ
	|				РаботникиОрганизаций.Период КАК ДатаПеревода,
	|				РаботникиОрганизаций.Сотрудник КАК Сотрудник,
	|				МАКСИМУМ(ПлановыеНачисленияРаботниковОрганизаций.Период) КАК Период
	|			ИЗ
	|				" + ДвиженияРаботникаТекст + " КАК РаботникиОрганизаций
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
	|					ПО РаботникиОрганизаций.Сотрудник = ПлановыеНачисленияРаботниковОрганизаций.Сотрудник
	|						И РаботникиОрганизаций.Период >= ПлановыеНачисленияРаботниковОрганизаций.Период
	|			ГДЕ
	|				ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО
	|			
	|			СГРУППИРОВАТЬ ПО
	|				РаботникиОрганизаций.Период,
	|				РаботникиОрганизаций.Сотрудник) КАК ВложенныйЗапрос
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
	|				ПО ВложенныйЗапрос.Сотрудник = ПлановыеНачисленияРаботниковОрганизаций.Сотрудник
	|					И ВложенныйЗапрос.Период = ПлановыеНачисленияРаботниковОрганизаций.Период
	|					И (ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО)) КАК ПлановыеНачисленияРаботниковОрганизаций
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ВложенныйЗапрос.ДатаПеревода КАК ДатаПеревода,
	|				РазмерТарифныхСтавок.Валюта КАК Валюта,
	|				РазмерТарифныхСтавок.ТарифныйРазряд КАК ТарифныйРазряд,
	|				РазмерТарифныхСтавок.Размер КАК Размер
	|			ИЗ
	|				(ВЫБРАТЬ
	|					РаботникиОрганизаций.Период КАК ДатаПеревода,
	|					РазмерТарифныхСтавок.ТарифныйРазряд КАК ТарифныйРазряд,
	|					МАКСИМУМ(РазмерТарифныхСтавок.Период) КАК Период
	|				ИЗ
	|					" + ДвиженияРаботникаТекст + " КАК РаботникиОрганизаций
	|						ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
	|						ПО РаботникиОрганизаций.Период >= РазмерТарифныхСтавок.Период
	|				
	|				СГРУППИРОВАТЬ ПО
	|					РаботникиОрганизаций.Период,
	|					РазмерТарифныхСтавок.ТарифныйРазряд) КАК ВложенныйЗапрос
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
	|					ПО ВложенныйЗапрос.ТарифныйРазряд = РазмерТарифныхСтавок.ТарифныйРазряд
	|						И ВложенныйЗапрос.Период = РазмерТарифныхСтавок.Период) КАК РазмерыТарифныхРазрядов
	|			ПО ПлановыеНачисленияРаботниковОрганизаций.ДатаПеревода = РазмерыТарифныхРазрядов.ДатаПеревода
	|				И ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд = РазмерыТарифныхРазрядов.ТарифныйРазряд
	|		ПО Работники.Период = ПлановыеНачисленияРаботниковОрганизаций.ДатаПеревода
	|			И Работники.Сотрудник = ПлановыеНачисленияРаботниковОрганизаций.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаСобытия";
		
	// Выгрузили в общую таблицу данные по кадровым документам.
	ТаблицаКадрыОтпускаУдержания = Запрос.Выполнить().Выгрузить();
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("ТарифнаяСтавка"); 
	Для каждого СтрокаТЗ Из ТаблицаКадрыОтпускаУдержания Цикл
		
		ОписаниеТарифнаяСтавка = Формат(СтрокаТЗ.Ставка,"ЧЦ=15; ЧДЦ=2; ЧН=' '");
		Если СтрокаТЗ.Валюта = РеглВалюта Тогда
			Если СтрокаТЗ.ТребуетВводаТарифногоРазряда Тогда
				ОписаниеТарифнаяСтавка = ОписаниеТарифнаяСтавка	+ " (" + СтрокаТЗ.ТарифныйРазряд + ")"
			КонецЕсли;
		Иначе
			ОписаниеТарифнаяСтавка = ОписаниеТарифнаяСтавка + " (" + СтрокаТЗ.ИмяВалюты + 
					?(СтрокаТЗ.ТребуетВводаТарифногоРазряда,", " + СтрокаТЗ.ТарифныйРазряд,"") + ")"
		КонецЕсли;
		СтрокаТЗ.ТарифнаяСтавка = ОписаниеТарифнаяСтавка
	КонецЦикла; 
	
	// ОТПУСКА
	СписокОтпусков	=	Новый СписокЗначений;
	СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускЕжегодный);
	СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускБезСохраненияЗарплаты);
	СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускУчебный);
	СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускУчебныйНеоплачиваемый);
	СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком);
	Запрос.УстановитьПараметр("СписокОтпусков",	СписокОтпусков);
	Запрос.УстановитьПараметр("ЕжегодныйОтпуск",Перечисления.СостоянияРаботникаОрганизации.ОтпускЕжегодный);
	Запрос.УстановитьПараметр("Праздник",	Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОтпускаРаботника.ДатаС,
	|	ОтпускаРаботника.ДатаПо,
	|	ОтпускаРаботника.РабочийГодС,
	|	ОтпускаРаботника.РабочийГодПо,
	|	ОтпускаРаботника.ВидОтпуска,
	|	ОтпускаРаботника.ДатаПриказаОтпуск,
	|	ОтпускаРаботника.НомерПриказаОтпуск,
	|	ВЫБОР
	|		КОГДА ОтпускаРаботника.ПричинаОтсутствия <> &ЕжегодныйОтпуск
	|			ТОГДА РАЗНОСТЬДАТ(ОтпускаРаботника.ДатаС, ОтпускаРаботника.ДатаПо, ДЕНЬ) + 1
	|		ИНАЧЕ ЕСТЬNULL(СУММА(ВЫБОР
	|						КОГДА РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ ОтпускаРаботника.ДатаС И ОтпускаРаботника.ДатаПоОсн
	|							ТОГДА РегламентированныйПроизводственныйКалендарь.КалендарныеДни
	|						ИНАЧЕ 0
	|					КОНЕЦ), 0)
	|	КОНЕЦ КАК ДнейОтпуска,
	|	ВЫБОР
	|		КОГДА ОтпускаРаботника.ПричинаОтсутствия <> &ЕжегодныйОтпуск
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СУММА(ВЫБОР
	|						КОГДА РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ ОтпускаРаботника.ДатаНачалаДоп И ОтпускаРаботника.ДатаОкончанияДоп
	|							ТОГДА РегламентированныйПроизводственныйКалендарь.КалендарныеДни
	|						ИНАЧЕ 0
	|					КОНЕЦ), 0)
	|	КОНЕЦ КАК ДнейОтпускаДоп
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ПериодыОтпуска.Состояние = &ЕжегодныйОтпуск
	|					И ПериодыОтпуска.ДатаС = ОтпускаОрганизацииРаботники.ДатаНачалаДоп
	|				ТОГДА ОтпускаОрганизацииРаботники.ВидДополнительногоОтпуска.Наименование
	|			ИНАЧЕ ПериодыОтпуска.Состояние
	|		КОНЕЦ КАК ВидОтпуска,
	|		ПериодыОтпуска.ДатаС КАК ДатаС,
	|		ПериодыОтпуска.ДатаПо КАК ДатаПо,
	|		ПериодыОтпуска.Регистратор.Дата КАК ДатаПриказаОтпуск,
	|		ПериодыОтпуска.Регистратор.Номер КАК НомерПриказаОтпуск,
	|		ОтпускаОрганизацииРаботники.РабочийГодС КАК РабочийГодС,
	|		ОтпускаОрганизацииРаботники.РабочийГодПо КАК РабочийГодПо,
	|		ПериодыОтпуска.Состояние КАК ПричинаОтсутствия,
	|		ВЫБОР
	|			КОГДА ПериодыОтпуска.Состояние = &ЕжегодныйОтпуск
	|				ТОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(ОтпускаОрганизацииРаботники.ДатаНачалаДоп, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|							ТОГДА ПериодыОтпуска.ДатаПо
	|						ИНАЧЕ ВЫБОР
	|								КОГДА ПериодыОтпуска.ДатаПо < ОтпускаОрганизацииРаботники.ДатаНачалаДоп
	|									ТОГДА ПериодыОтпуска.ДатаПо
	|								ИНАЧЕ ДОБАВИТЬКДАТЕ(ОтпускаОрганизацииРаботники.ДатаНачалаДоп, ДЕНЬ, -1)
	|							КОНЕЦ
	|					КОНЕЦ
	|			ИНАЧЕ ПериодыОтпуска.ДатаПо
	|		КОНЕЦ КАК ДатаПоОсн,
	|		ЕСТЬNULL(ОтпускаОрганизацииРаботники.ДатаНачалаДоп, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаНачалаДоп,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ОтпускаОрганизацииРаботники.ДатаНачалаДоп, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ИНАЧЕ ПериодыОтпуска.ДатаПо
	|		КОНЕЦ КАК ДатаОкончанияДоп
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ДатыУходаВОтпуск.Период КАК ДатаС,
	|			ДОБАВИТЬКДАТЕ(ВЫБОР
	|				КОГДА ДатыУходаВОтпуск.ПериодЗавершения >= МИНИМУМ(ДатыВозвращенияИзОтпуска.Период)
	|						ИЛИ ДатыУходаВОтпуск.ПериодЗавершения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА МИНИМУМ(ДатыВозвращенияИзОтпуска.Период)
	|				ИНАЧЕ ДатыУходаВОтпуск.ПериодЗавершения
	|			КОНЕЦ, ДЕНЬ, -1) КАК ДатаПо,
	|			ДатыУходаВОтпуск.Состояние КАК Состояние,
	|			ДатыУходаВОтпуск.Регистратор КАК Регистратор,
	|			ДатыУходаВОтпуск.Организация КАК Организация,
	|			ДатыУходаВОтпуск.Сотрудник КАК Сотрудник
	|		ИЗ
	|			РегистрСведений.СостояниеРаботниковОрганизаций КАК ДатыУходаВОтпуск
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеРаботниковОрганизаций КАК ДатыВозвращенияИзОтпуска
	|				ПО ДатыУходаВОтпуск.Сотрудник = ДатыВозвращенияИзОтпуска.Сотрудник
	|					И ДатыУходаВОтпуск.Период < ДатыВозвращенияИзОтпуска.Период
	|		ГДЕ
	|			ДатыУходаВОтпуск.Период МЕЖДУ &ДатаАктуальностиС И &ДатаАктуальностиПо
	|			И ДатыУходаВОтпуск.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|			И ДатыУходаВОтпуск.Состояние В(&СписокОтпусков)
	|			И ДатыУходаВОтпуск.Сотрудник.Физлицо = &ФизЛицо
	|			И ДатыУходаВОтпуск.Регистратор.Организация = &Организация
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ДатыУходаВОтпуск.Период,
	|			ДатыУходаВОтпуск.Состояние,
	|			ДатыУходаВОтпуск.ПериодЗавершения,
	|			ДатыУходаВОтпуск.Регистратор,
	|			ДатыУходаВОтпуск.Организация,
	|			ДатыУходаВОтпуск.Сотрудник) КАК ПериодыОтпуска
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтпускаОрганизаций.РаботникиОрганизации КАК ОтпускаОрганизацииРаботники
	|			ПО ПериодыОтпуска.Регистратор = ОтпускаОрганизацииРаботники.Ссылка
	|				И ПериодыОтпуска.Сотрудник = ОтпускаОрганизацииРаботники.Сотрудник
	|				И ПериодыОтпуска.ДатаС = ОтпускаОрганизацииРаботники.ДатаНачала) КАК ОтпускаРаботника
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|		ПО (РегламентированныйПроизводственныйКалендарь.ВидДня <> &Праздник)
	|			И (РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ ОтпускаРаботника.ДатаС И ОтпускаРаботника.ДатаПо)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтпускаРаботника.ДатаС,
	|	ОтпускаРаботника.ДатаПо,
	|	ОтпускаРаботника.РабочийГодС,
	|	ОтпускаРаботника.РабочийГодПо,
	|	ОтпускаРаботника.ВидОтпуска,
	|	ОтпускаРаботника.ДатаПриказаОтпуск,
	|	ОтпускаРаботника.НомерПриказаОтпуск,
	|	ОтпускаРаботника.ПричинаОтсутствия";
	
	ВыборкаРезультата	=	Запрос.Выполнить().Выбрать();
	
	// Добавим поля в общую таблицу для записи данных по отпуску.
	ИндексКадровыхДок   = ТаблицаКадрыОтпускаУдержания.Количество() - 1;
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("ВидОтпуска");
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("ДатаПриказаОтпуск");
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("НомерПриказаОтпуск");
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("РабочийГодС");
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("РабочийГодПо");
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("ДнейОтпуска");
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("ДнейОтпускаДоп");
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("ДатаС");
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("ДатаПо");
	Инд = 0;
	
	// Выгрузим в общую таблицу данные по отпуску.
	Пока ВыборкаРезультата.Следующий()	Цикл
		
		Если Инд <= ИндексКадровыхДок Тогда
			СтрокаДанных = ТаблицаКадрыОтпускаУдержания[Инд];
		Иначе
			СтрокаДанных = ТаблицаКадрыОтпускаУдержания.Добавить();
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтрокаДанных,ВыборкаРезультата);
		
		Инд = Инд + 1;
		
	КонецЦикла;
	
	
	// УДЕРЖАНИЯ
	
	Запрос.Текст =	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НачалаУдержаний.ПериодУдержанияС КАК ПериодУдержанияС,
	|	НачалаУдержаний.ВидРасчета.Наименование КАК ВидУдержания,
	|	НачалаУдержаний.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	НачалаУдержаний.ДокументОснование.Дата КАК ДатаДок,
	|	НачалаУдержаний.ДокументОснование.Номер КАК НомерДок,
	|	НачалаУдержаний.Размер КАК Размер,
	|	НачалаУдержаний.Валюта КАК Валюта,
	|	НачалаУдержаний.Валюта.Наименование КАК ИмяВалюты,
	|	ЕСТЬNULL(МИНИМУМ(ОкончанияУдержаний.Период), """") КАК ПериодУдержанияПо
	|ИЗ
	|	(ВЫБРАТЬ
	|		&ДатаАктуальностиС КАК ПериодУдержанияС,
	|		УдержанияРаботниковОрганизации.ВидРасчета КАК ВидРасчета,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.ПериодЗавершения <= &ДатаАктуальностиС
	|					И УдержанияРаботниковОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА УдержанияРаботниковОрганизации.ДействиеЗавершения
	|			ИНАЧЕ УдержанияРаботниковОрганизации.Действие
	|		КОНЕЦ КАК Действие,
	|		УдержанияРаботниковОрганизации.ДокументОснование КАК ДокументОснование,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.ПериодЗавершения <= &ДатаАктуальностиС
	|					И УдержанияРаботниковОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА УдержанияРаботниковОрганизации.Показатель1Завершения
	|			ИНАЧЕ УдержанияРаботниковОрганизации.Показатель1
	|		КОНЕЦ КАК Размер,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.ПериодЗавершения <= &ДатаАктуальностиС
	|					И УдержанияРаботниковОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА УдержанияРаботниковОрганизации.Валюта1Завершения
	|			ИНАЧЕ УдержанияРаботниковОрганизации.Валюта1
	|		КОНЕЦ КАК Валюта
	|	ИЗ
	|		РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(
	|				&ДатаАктуальностиС,
	|				ФизЛицо = &Физлицо
	|					И Организация = &ГоловнаяОрганизация) КАК УдержанияРаботниковОрганизации
	|	ГДЕ
	|		ВЫБОР
	|				КОГДА УдержанияРаботниковОрганизации.ПериодЗавершения <= &ДатаАктуальностиС
	|						И УдержанияРаботниковОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА УдержанияРаботниковОрганизации.ДействиеЗавершения
	|				ИНАЧЕ УдержанияРаботниковОрганизации.Действие
	|			КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		УдержанияРаботниковОрганизации.Период,
	|		УдержанияРаботниковОрганизации.ВидРасчета,
	|		УдержанияРаботниковОрганизации.Действие,
	|		УдержанияРаботниковОрганизации.ДокументОснование,
	|		УдержанияРаботниковОрганизации.Показатель1,
	|		УдержанияРаботниковОрганизации.Валюта1
	|	ИЗ
	|		РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизации
	|	ГДЕ
	|		УдержанияРаботниковОрганизации.Период > &ДатаАктуальностиС
	|		И УдержанияРаботниковОрганизации.Период <= &ДатаАктуальностиПо
	|		И УдержанияРаботниковОрганизации.Организация = &ГоловнаяОрганизация
	|		И УдержанияРаботниковОрганизации.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|		И УдержанияРаботниковОрганизации.ФизЛицо = &Физлицо
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		УдержанияРаботниковОрганизации.ПериодЗавершения,
	|		УдержанияРаботниковОрганизации.ВидРасчета,
	|		УдержанияРаботниковОрганизации.ДействиеЗавершения,
	|		УдержанияРаботниковОрганизации.ДокументОснование,
	|		УдержанияРаботниковОрганизации.Показатель1Завершения,
	|		УдержанияРаботниковОрганизации.Валюта1Завершения
	|	ИЗ
	|		РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизации
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизацииПроверка
	|			ПО (УдержанияРаботниковОрганизацииПроверка.Организация = УдержанияРаботниковОрганизации.Организация)
	|				И (УдержанияРаботниковОрганизацииПроверка.ФизЛицо = УдержанияРаботниковОрганизации.ФизЛицо)
	|				И (УдержанияРаботниковОрганизацииПроверка.ВидРасчета = УдержанияРаботниковОрганизации.ВидРасчета)
	|				И (УдержанияРаботниковОрганизацииПроверка.ДокументОснование = УдержанияРаботниковОрганизации.ДокументОснование)
	|				И (УдержанияРаботниковОрганизацииПроверка.Период > УдержанияРаботниковОрганизации.Период)
	|				И (УдержанияРаботниковОрганизацииПроверка.Период <= УдержанияРаботниковОрганизации.ПериодЗавершения)
	|	ГДЕ
	|		УдержанияРаботниковОрганизации.ПериодЗавершения > &ДатаАктуальностиС
	|		И УдержанияРаботниковОрганизации.ФизЛицо = &Физлицо
	|		И УдержанияРаботниковОрганизации.ПериодЗавершения <= &ДатаАктуальностиПо
	|		И УдержанияРаботниковОрганизации.ДействиеЗавершения <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|		И УдержанияРаботниковОрганизации.Организация = &ГоловнаяОрганизация
	|		И УдержанияРаботниковОрганизацииПроверка.ФизЛицо ЕСТЬ NULL ) КАК НачалаУдержаний
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДОБАВИТЬКДАТЕ(УдержанияРаботниковОрганизации.Период, ДЕНЬ, -1) КАК Период,
	|			УдержанияРаботниковОрганизации.ВидРасчета КАК ВидРасчета,
	|			УдержанияРаботниковОрганизации.ДокументОснование КАК ДокументОснование
	|		ИЗ
	|			РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизации
	|		ГДЕ
	|			УдержанияРаботниковОрганизации.Период > &ДатаАктуальностиС
	|			И УдержанияРаботниковОрганизации.ФизЛицо = &Физлицо
	|			И УдержанияРаботниковОрганизации.Организация = &ГоловнаяОрганизация
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ДОБАВИТЬКДАТЕ(УдержанияРаботниковОрганизации.ПериодЗавершения, ДЕНЬ, -1),
	|			УдержанияРаботниковОрганизации.ВидРасчета,
	|			УдержанияРаботниковОрганизации.ДокументОснование
	|		ИЗ
	|			РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизации
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизацииПроверка
	|				ПО (УдержанияРаботниковОрганизацииПроверка.Организация = УдержанияРаботниковОрганизации.Организация)
	|					И (УдержанияРаботниковОрганизацииПроверка.ФизЛицо = УдержанияРаботниковОрганизации.ФизЛицо)
	|					И (УдержанияРаботниковОрганизацииПроверка.ВидРасчета = УдержанияРаботниковОрганизации.ВидРасчета)
	|					И (УдержанияРаботниковОрганизацииПроверка.ДокументОснование = УдержанияРаботниковОрганизации.ДокументОснование)
	|					И (УдержанияРаботниковОрганизацииПроверка.Период > УдержанияРаботниковОрганизации.Период)
	|					И (УдержанияРаботниковОрганизацииПроверка.Период <= УдержанияРаботниковОрганизации.ПериодЗавершения)
	|		ГДЕ
	|			УдержанияРаботниковОрганизации.ПериодЗавершения > &ДатаАктуальностиС
	|			И УдержанияРаботниковОрганизации.ФизЛицо = &Физлицо
	|			И УдержанияРаботниковОрганизации.Организация = &ГоловнаяОрганизация
	|			И УдержанияРаботниковОрганизацииПроверка.ФизЛицо ЕСТЬ NULL ) КАК ОкончанияУдержаний
	|		ПО НачалаУдержаний.ВидРасчета = ОкончанияУдержаний.ВидРасчета
	|			И НачалаУдержаний.ДокументОснование = ОкончанияУдержаний.ДокументОснование
	|			И НачалаУдержаний.ПериодУдержанияС <= ОкончанияУдержаний.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	НачалаУдержаний.ПериодУдержанияС,
	|	НачалаУдержаний.ВидРасчета,
	|	НачалаУдержаний.ДокументОснование,
	|	НачалаУдержаний.Размер,
	|	НачалаУдержаний.Валюта,
	|	НачалаУдержаний.ВидРасчета.Наименование,
	|	НачалаУдержаний.ВидРасчета.СпособРасчета,
	|	НачалаУдержаний.ДокументОснование.Дата,
	|	НачалаУдержаний.ДокументОснование.Номер,
	|	НачалаУдержаний.Валюта.Наименование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ПогашениеЗаймовРаботникамиОрганизаций.НачалоПогашения < ПогашениеЗаймовРаботникамиОрганизаций.Дата
	|			ТОГДА ПогашениеЗаймовРаботникамиОрганизаций.Дата
	|		ИНАЧЕ ПогашениеЗаймовРаботникамиОрганизаций.НачалоПогашения
	|	КОНЕЦ,
	|	""Погашение займа"",
	|	""Суммой"",
	|	ПогашениеЗаймовРаботникамиОрганизаций.Дата,
	|	ПогашениеЗаймовРаботникамиОрганизаций.Номер,
	|	ПогашениеЗаймовРаботникамиОрганизаций.СуммаЗайма,
	|	ПогашениеЗаймовРаботникамиОрганизаций.ВалютаДокумента,
	|	ПогашениеЗаймовРаботникамиОрганизаций.ВалютаДокумента.Наименование,
	|	ДОБАВИТЬКДАТЕ(ПогашениеЗаймовРаботникамиОрганизаций.НачалоПогашения, МЕСЯЦ, ПогашениеЗаймовРаботникамиОрганизаций.СрокПогашения)
	|ИЗ
	|	Документ.ДоговорЗаймаСРаботником КАК ПогашениеЗаймовРаботникамиОрганизаций
	|ГДЕ
	|	ПогашениеЗаймовРаботникамиОрганизаций.ФизЛицо = &ФизЛицо
	|	И ПогашениеЗаймовРаботникамиОрганизаций.Организация = &Организация
	|	И ПогашениеЗаймовРаботникамиОрганизаций.Проведен
	|	И ПогашениеЗаймовРаботникамиОрганизаций.НачалоПогашения <= &ДатаАктуальностиПо
	|	И ДОБАВИТЬКДАТЕ(ПогашениеЗаймовРаботникамиОрганизаций.НачалоПогашения, МЕСЯЦ, ПогашениеЗаймовРаботникамиОрганизаций.СрокПогашения) >= &ДатаАктуальностиС
	|	И ПогашениеЗаймовРаботникамиОрганизаций.ОтражатьВБухгалтерскомУчете
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодУдержанияС";
		
	ВыборкаРезультата	=	Запрос.Выполнить().Выбрать();
	
	// Добавим поля в общую таблицу для  записи данных по удержаниям.
	ИндексКадровыхДок   = ТаблицаКадрыОтпускаУдержания.Количество() - 1;
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("ВидУдержания");
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("ПериодУдержанияС");
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("ПериодУдержанияПо");
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("СуммаУдержания");
	Инд = 0;
	
	Пока ВыборкаРезультата.Следующий()	Цикл
		
		Если Инд <= ИндексКадровыхДок Тогда
			СтрокаДанных = ТаблицаКадрыОтпускаУдержания[Инд];
		Иначе
			СтрокаДанных = ТаблицаКадрыОтпускаУдержания.Добавить();
		КонецЕсли;
		
		СтрокаДанных.ВидУдержания     = ВыборкаРезультата.ВидУдержания + Символы.ПС + "(" + ВыборкаРезультата.НомерДок + " от " + Формат(ВыборкаРезультата.ДатаДок,"ДФ=dd.MM.yyyy") + ")";
		СтрокаДанных.ПериодУдержанияС = ВыборкаРезультата.ПериодУдержанияС;
		СтрокаДанных.ПериодУдержанияПо = ВыборкаРезультата.ПериодУдержанияПо;
		
		Если ВыборкаРезультата.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.Процентом Тогда
			СтрокаДанных.СуммаУдержания = "" + ВыборкаРезультата.Размер + "(%)";
		Иначе
			Если ВыборкаРезультата.Валюта = РеглВалюта ИЛИ НЕ ЗначениеЗаполнено(ВыборкаРезультата.ИмяВалюты) Тогда
				СтрокаДанных.СуммаУдержания = "" + ВыборкаРезультата.Размер
			Иначе
				СтрокаДанных.СуммаУдержания = Формат(ВыборкаРезультата.Размер,"ЧЦ=15; ЧДЦ=2; ЧН=' '") + " (" + ВыборкаРезультата.ИмяВалюты + ")"
			КонецЕсли;
		КонецЕсли;
		
		Инд = Инд + 1;
		
	КонецЦикла;
	
	ОбластьШапкаОбщая = Макет.ПолучитьОбласть("ШапкаОбщая");
	ДокументРезультат.Вывести(ОбластьШапкаОбщая);
	
	ВсегоСтрокДокумента = ТаблицаКадрыОтпускаУдержания.Количество();
	НомерПП = 1;

	// Выводим строки по начислениям и отпуску в таблицу.
	Для каждого СтрокаТЗ Из ТаблицаКадрыОтпускаУдержания Цикл
	
		ОбластьСтрокаКадровая = Макет.ПолучитьОбласть("СтрокаОбщая");

		// массив - для разбиения на страницы
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьСтрокаКадровая);
		
		ОбластьСтрокаКадровая.Параметры.Заполнить(СтрокаТЗ);
			
		// Проверим, уместится ли строка на странице или надо открывать новую страницу
		ВывестиСледЛист = Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти);
		Если Не ВывестиСледЛист и НомерПП = ВсегоСтрокДокумента Тогда
			ВывестиСледЛист = Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти);
		КонецЕсли;
		Если ВывестиСледЛист Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			ДокументРезультат.Вывести(ОбластьШапкаОбщая);
		КонецЕсли;
		
		ДокументРезультат.Вывести(ОбластьСтрокаКадровая);
		НомерПП = НомерПП + 1;

	КонецЦикла; 
	
	// Вывод пустой строки 
	Если ТаблицаКадрыОтпускаУдержания.Количество()=0 Тогда
		
		Для Сч = 1 По 3 Цикл
			
			ОбластьСтрокаКадроваяПустая = Макет.ПолучитьОбласть("СтрокаОбщаяПустая");
			ДокументРезультат.Вывести(ОбластьСтрокаКадроваяПустая);
			
		КонецЦикла; 
		
	КонецЕсли; 
	
	
	// НАЧИСЛЕНИЯ И УДЕРЖАНИЯ по периодам.
	
	ОбластьШапкаПоПериодам = Макет.ПолучитьОбласть("ШапкаПоПериодам");
	ОбластьПодвал		   = Макет.ПолучитьОбласть("Подвал");
	
	ВывестиОбласть = ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ОбластьШапкаПоПериодам);
	Если НЕ ВывестиОбласть Тогда
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	ДокументРезультат.Вывести(Макет.ПолучитьОбласть("ПустойИнтервал"));
	ДокументРезультат.Вывести(ОбластьШапкаПоПериодам);
	
	СписокВРБольничныхЛистов = Новый Массив;
	СписокВРБольничныхЛистов.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуБЛ);
	СписокВРБольничныхЛистов.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоБеременностиИРодам);
	СписокВРБольничныхЛистов.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаБЛПоТравмеНаПроизводстве);
	СписокВРБольничныхЛистов.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаБЛПоТравмеВБыту);
	
	СписокПовременныхВР = Новый Массив;
	СписокПовременныхВР.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке);
	СписокПовременныхВР.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке);
	СписокПовременныхВР.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням);
	СписокПовременныхВР.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам);
	
	МассивУдержанийИЛ = Новый Массив;
	МассивУдержанийИЛ.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.ИЛПроцентом);
	МассивУдержанийИЛ.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.ИЛПроцентомБезБЛ);
	МассивУдержанийИЛ.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.ИЛПроцентомДоПредела);
	МассивУдержанийИЛ.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.ИЛПроцентомДоПределаБезБЛ);
	МассивУдержанийИЛ.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммой);
	МассивУдержанийИЛ.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммойДоПредела);
			
	Запрос.УстановитьПараметр("Приход", 	ВидДвиженияНакопления.Приход);
	Авансы = Новый Массив;
	Авансы.Добавить(Перечисления.ХарактерВыплатыЗарплаты.АвансЗаПервуюПоловинуМесяца);
	Авансы.Добавить(Перечисления.ХарактерВыплатыЗарплаты.ПлановыйАванс);
	Запрос.УстановитьПараметр("Аванс",		Авансы);
	Запрос.УстановитьПараметр("ВидСтроки",  Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Начисление);
	Запрос.УстановитьПараметр("Больничные", СписокВРБольничныхЛистов);
	Запрос.УстановитьПараметр("ИсполнительныеЛисты", МассивУдержанийИЛ);
	Запрос.УстановитьПараметр("Повременно", СписокПовременныхВР);
	Запрос.УстановитьПараметр("Сдельно",	Перечисления.СпособыРасчетаОплатыТруда.СдельныйЗаработок);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НАЧАЛОПЕРИОДА(Данные.ПериодРегистрации, МЕСЯЦ) КАК Период,
	|	Данные.ПериодДействия КАК ПериодДействия,
	|	Данные.ВидРасчета,
	|	Данные.Группа,
	|	СУММА(Данные.Результат) КАК Результат,
	|	СУММА(Данные.ОтработаноДней) КАК ОтработаноДней,
	|	СУММА(Данные.ОтработаноЧасов) КАК ОтработаноЧасов,
	|	СУММА(Данные.НормаДней) КАК НормаДней,
	|	СУММА(Данные.НормаЧасов) КАК НормаЧасов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОсновныеНачисленияРаботниковОрганизации.ПериодРегистрации КАК ПериодРегистрации,
	|		ВЫБОР
	|			КОГДА ОсновныеНачисленияРаботниковОрганизации.ВидРасчета В (&Больничные)
	|				ТОГДА ""Больничные""
	|			КОГДА ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.СпособРасчета = &Сдельно
	|				ТОГДА ""Сдельно""
	|			КОГДА ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.СпособРасчета В (&Повременно)
	|				ТОГДА ""Повременно""
	|			ИНАЧЕ ""ДругиеНачисления""
	|		КОНЕЦ КАК ВидРасчета,
	|		""Начисления"" КАК Группа,
	|		ОсновныеНачисленияРаботниковОрганизации.Результат КАК Результат,
	|		ОсновныеНачисленияРаботниковОрганизации.ОтработаноДней КАК ОтработаноДней,
	|		ОсновныеНачисленияРаботниковОрганизации.ОтработаноЧасов КАК ОтработаноЧасов,
	|		ВЫБОР
	|			КОГДА ОсновныеНачисленияРаботниковОрганизации.ВидРасчета В (&Больничные)
	|				ТОГДА ОсновныеНачисленияРаботниковОрганизации.ПериодДействия
	|			ИНАЧЕ ОсновныеНачисленияРаботниковОрганизации.ПериодРегистрации
	|		КОНЕЦ КАК ПериодДействия,
	|		ОсновныеНачисленияРаботниковОрганизации.НормаДней КАК НормаДней,
	|		ОсновныеНачисленияРаботниковОрганизации.НормаЧасов КАК НормаЧасов
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизации
	|	ГДЕ
	|		ОсновныеНачисленияРаботниковОрганизации.ПериодРегистрации МЕЖДУ &ДатаАктуальностиС И &ДатаАктуальностиПо
	|		И (НЕ(ОсновныеНачисленияРаботниковОрганизации.Результат = 0
	|					И ОсновныеНачисленияРаботниковОрганизации.ОтработаноДней = 0
	|					И ОсновныеНачисленияРаботниковОрганизации.ОтработаноЧасов = 0))
	|		И ОсновныеНачисленияРаботниковОрганизации.Организация = &ГоловнаяОрганизация
	|		И ОсновныеНачисленияРаботниковОрганизации.ФизЛицо = &ФизЛицо
	|		И (НЕ ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме)
	|		И ОсновныеНачисленияРаботниковОрганизации.ОбособленноеПодразделение = &Организация
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДополнительныеНачисленияРаботниковОрганизации.ПериодРегистрации,
	|		""ДругиеНачисления"",
	|		""Начисления"",
	|		ДополнительныеНачисленияРаботниковОрганизации.Результат,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL
	|	ИЗ
	|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисленияРаботниковОрганизации
	|	ГДЕ
	|		ДополнительныеНачисленияРаботниковОрганизации.ПериодРегистрации МЕЖДУ &ДатаАктуальностиС И &ДатаАктуальностиПо
	|		И ДополнительныеНачисленияРаботниковОрганизации.Результат <> 0
	|		И ДополнительныеНачисленияРаботниковОрганизации.Организация = &ГоловнаяОрганизация
	|		И ДополнительныеНачисленияРаботниковОрганизации.ФизЛицо = &ФизЛицо
	|		И (НЕ ДополнительныеНачисленияРаботниковОрганизации.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме)
	|		И ДополнительныеНачисленияРаботниковОрганизации.ОбособленноеПодразделение = &Организация
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		УдержанияРаботниковОрганизации.ПериодРегистрации,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета В (&ИсполнительныеЛисты)
	|				ТОГДА ""ИсполнительныеЛисты""
	|			ИНАЧЕ УдержанияРаботниковОрганизации.ВидРасчета
	|		КОНЕЦ,
	|		""Удержания"",
	|		УдержанияРаботниковОрганизации.Результат,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL
	|	ИЗ
	|		РегистрРасчета.УдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизации
	|	ГДЕ
	|		УдержанияРаботниковОрганизации.ПериодРегистрации МЕЖДУ &ДатаАктуальностиС И &ДатаАктуальностиПо
	|		И УдержанияРаботниковОрганизации.Результат <> 0
	|		И УдержанияРаботниковОрганизации.Организация = &ГоловнаяОрганизация
	|		И УдержанияРаботниковОрганизации.ОбособленноеПодразделение = &Организация
	|		И УдержанияРаботниковОрганизации.ФизЛицо = &ФизЛицо
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НДФЛРасчетыСБюджетом.Период,
	|		""НДФЛ"",
	|		""Удержания"",
	|		НДФЛРасчетыСБюджетом.Налог,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL
	|	ИЗ
	|		РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
	|	ГДЕ
	|		НДФЛРасчетыСБюджетом.Период МЕЖДУ &ДатаАктуальностиС И &ДатаАктуальностиПо
	|		И НДФЛРасчетыСБюджетом.ВидДвижения = &Приход
	|		И НДФЛРасчетыСБюджетом.ВидСтроки = &ВидСтроки
	|		И НДФЛРасчетыСБюджетом.Организация = &ГоловнаяОрганизация
	|		И НДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты
	|		И НДФЛРасчетыСБюджетом.ФизЛицо = &ФизЛицо
	|		И НДФЛРасчетыСБюджетом.ОбособленноеПодразделение = &Организация
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПогашениеЗаймовРаботникамиОрганизаций.Период,
	|		""Погашение займов"",
	|		""Удержания"",
	|		ПогашениеЗаймовРаботникамиОрганизаций.ОсновнойДолг + ПогашениеЗаймовРаботникамиОрганизаций.Проценты,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL
	|	ИЗ
	|		РегистрНакопления.ПогашениеЗаймовРаботникамиОрганизаций КАК ПогашениеЗаймовРаботникамиОрганизаций
	|	ГДЕ
	|		ПогашениеЗаймовРаботникамиОрганизаций.ВидДвижения <> &Приход
	|		И ПогашениеЗаймовРаботникамиОрганизаций.Организация = &Организация
	|		И ПогашениеЗаймовРаботникамиОрганизаций.ФизЛицо = &ФизЛицо
	|		И ПогашениеЗаймовРаботникамиОрганизаций.Период МЕЖДУ &ДатаАктуальностиС И &ДатаАктуальностиПо
	|		И ПогашениеЗаймовРаботникамиОрганизаций.УдержаноИзЗарплаты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Период, МЕСЯЦ),
	|		""Сальдо"",
	|		""Сальдо"",
	|		ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.СуммаНДФЛКЗачетуКонечныйОстаток,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL
	|	ИЗ
	|		РегистрНакопления.НДФЛКЗачету.ОстаткиИОбороты(
	|			&ДатаАктуальностиС,
	|			&ДатаАктуальностиПо,
	|			Месяц,
	|			,
	|			Организация = &Организация
	|			    И Физлицо = &ФизЛицо) КАК ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Период, МЕСЯЦ),
	|		""Сальдо"",
	|		""Сальдо"",
	|		ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.СуммаНДФЛКЗачетуКонечныйОстаток,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL
	|	ИЗ
	|		РегистрНакопления.НДФЛКЗачету.ОстаткиИОбороты(
	|			&ДатаАктуальностиС,
	|			&ДатаАктуальностиПо,
	|			Месяц,
	|			,
	|			Организация = &Организация
	|			    И Физлицо = &ФизЛицо) КАК ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Период, МЕСЯЦ),
	|		""Сальдо"",
	|		""Сальдо"",
	|		ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.СуммаВзаиморасчетовКонечныйОстаток,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL
	|	ИЗ
	|		РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций.ОстаткиИОбороты(
	|			&ДатаАктуальностиС,
	|			&ДатаАктуальностиПо,
	|			Месяц,
	|			,
	|			Организация = &Организация
	|			    И Физлицо = &ФизЛицо) КАК ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Период, МЕСЯЦ),
	|		""К выплате"",
	|		""КВыплате"",
	|		ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.СуммаВзаиморасчетовКонечныйОстаток,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL
	|	ИЗ
	|		РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций.ОстаткиИОбороты(
	|			&ДатаАктуальностиС,
	|			&ДатаАктуальностиПо,
	|			Месяц,
	|			,
	|			Организация = &Организация
	|			    И Физлицо = &ФизЛицо) КАК ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты
	|	ГДЕ
	|		ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.ПериодВзаиморасчетов = НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Период, МЕСЯЦ)
	|		ИЛИ ВЫБОР
	|					КОГДА Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяССылка)
	|						ТОГДА Организация
	|					ИНАЧЕ Организация.ГоловнаяОрганизация
	|				КОНЕЦ В
	|					(ВЫБРАТЬ
	|						УчетнаяПолитикаПоПерсоналуОрганизаций.Организация
	|					ИЗ
	|						РегистрСведений.УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций КАК УчетнаяПолитикаПоПерсоналуОрганизаций
	|					ГДЕ
	|						(НЕ УчетнаяПолитикаПоПерсоналуОрганизаций.УчетЗадолженностиПоМесяцам))	
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВзаиморасчетыСРаботникамиОрганизаций.ПериодВзаиморасчетов,
	|		""Аванс"",
	|		""Удержания"",
	|		ВзаиморасчетыСРаботникамиОрганизаций.СуммаВзаиморасчетов,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL
	|	ИЗ
	|		РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций КАК ВзаиморасчетыСРаботникамиОрганизаций
	|	ГДЕ
	|		ВзаиморасчетыСРаботникамиОрганизаций.Период МЕЖДУ &ДатаАктуальностиС И &ДатаАктуальностиПо
	|		И ВзаиморасчетыСРаботникамиОрганизаций.Организация = &Организация
	|		И ВзаиморасчетыСРаботникамиОрганизаций.Физлицо = &ФизЛицо
	|		И ВзаиморасчетыСРаботникамиОрганизаций.ХарактерВыплаты В(&Аванс)
	|		И ВзаиморасчетыСРаботникамиОрганизаций.ВидДвижения <> &Приход) КАК Данные
	|
	|СГРУППИРОВАТЬ ПО
	|	Данные.ВидРасчета,
	|	Данные.Группа,
	|	Данные.ПериодДействия,
	|	НАЧАЛОПЕРИОДА(Данные.ПериодРегистрации, МЕСЯЦ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";	
	
	РезультатЗапроса = Запрос.Выполнить();
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаПоПериодам");
	
	// массив с двумя строками - для разбиения на страницы
	ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ОбластьСтрока);
				
	Если РезультатЗапроса.Пустой() Тогда
		
		ВыводимыеОбласти.Добавить(ОбластьПодвал);
		
		// Вывод пустой строки 
		Для Сч = 1 По 12 Цикл
			
			ОбластьСтрокаУдержанияПустая = Макет.ПолучитьОбласть("СтрокаПоПериодамПустая");
			Если Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ОбластьСтрокаУдержанияПустая) Тогда
				
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				ДокументРезультат.Вывести(ОбластьШапкаПоПериодам);
			
			КонецЕсли; 
			ДокументРезультат.Вывести(ОбластьСтрокаУдержанияПустая);
			
		КонецЦикла; 
		
	Иначе
		
		ВыборкаПоПериодам = РезультатЗапроса.Выбрать();
		НомерПП = 1;
		
		Пока ВыборкаПоПериодам.СледующийПоЗначениюПоля("Период") Цикл  // по месяцам регистрации
			
			ОбластьСтрока.Параметры.ПериодРегистрации = ВыборкаПоПериодам.Период;
			
			ОбластьСтрока.Параметры.Повременно	 	= 0;
			ОбластьСтрока.Параметры.Сдельно	    	= 0;
			ОбластьСтрока.Параметры.Другое	     	= 0;
			ОбластьСтрока.Параметры.НДФЛ		   	= 0;
			ОбластьСтрока.Параметры.Займы		   	= 0;
			ОбластьСтрока.Параметры.Аванс		   	= 0;
			ОбластьСтрока.Параметры.ИЛ			   	= 0;
			ОбластьСтрока.Параметры.ВсегоНачислено	= 0;
			ОбластьСтрока.Параметры.ДругоеУдержано	= 0;
			ОбластьСтрока.Параметры.ВсегоУдержано	= 0;
			// для строк больничных
			ОбластьСтрока.Параметры.БЛ1				= 0;
			ОбластьСтрока.Параметры.БЛ2				= 0;
			ОбластьСтрока.Параметры.БЛ3				= 0;
			ОбластьСтрока.Параметры.БЛДни1			= 0;
			ОбластьСтрока.Параметры.БЛДни2			= 0;
			ОбластьСтрока.Параметры.БЛДни3			= 0;
			НомерСтрокиБольничных = 1;
			
			ОбластьСтрока.Параметры.ОтработаноДней 	= 0;
			ОбластьСтрока.Параметры.ОтработаноЧасов = 0;

			Сальдо = 0;
			КВыплате = 0;
			
	        Пока ВыборкаПоПериодам.Следующий() Цикл  // записи внутри месяца
				
				Если ВыборкаПоПериодам.Группа = "Начисления" Тогда
					
					Если ЗначениеЗаполнено(ВыборкаПоПериодам.ОтработаноДней) Тогда
						ОбластьСтрока.Параметры.ОтработаноДней = ОбластьСтрока.Параметры.ОтработаноДней + ВыборкаПоПериодам.ОтработаноДней;
					КонецЕсли;
						
					Если ЗначениеЗаполнено(ВыборкаПоПериодам.ОтработаноЧасов) Тогда
						ОбластьСтрока.Параметры.ОтработаноЧасов = ОбластьСтрока.Параметры.ОтработаноЧасов + ВыборкаПоПериодам.ОтработаноЧасов;
					КонецЕсли;
					
					Если ВыборкаПоПериодам.ВидРасчета = "Повременно" Тогда
						ОбластьСтрока.Параметры.Повременно = ОбластьСтрока.Параметры.Повременно + ВыборкаПоПериодам.Результат
					ИначеЕсли ВыборкаПоПериодам.ВидРасчета = "Сдельно" Тогда
						ОбластьСтрока.Параметры.Сдельно =  ОбластьСтрока.Параметры.Сдельно + ВыборкаПоПериодам.Результат
					ИначеЕсли ВыборкаПоПериодам.ВидРасчета = "Больничные" Тогда
						
						Если НомерСтрокиБольничных = 1 Тогда
							ОбластьСтрока.Параметры.БЛ1 =  ВыборкаПоПериодам.Результат;
							ОбластьСтрока.Параметры.БЛДни1 =  ВыборкаПоПериодам.НормаДней;
							ОбластьСтрока.Параметры.БЛМесяц1 =  Формат(ВыборкаПоПериодам.ПериодДействия, "ДФ='МММ гг'");
						ИначеЕсли НомерСтрокиБольничных = 2 Тогда
							ОбластьСтрока.Параметры.БЛ2 =  ВыборкаПоПериодам.Результат;
							ОбластьСтрока.Параметры.БЛДни2 =  ВыборкаПоПериодам.НормаДней;
							ОбластьСтрока.Параметры.БЛМесяц2 =  Формат(ВыборкаПоПериодам.ПериодДействия, "ДФ='МММ гг'");
						Иначе
							// в третью строку суммируем все остальное
							ОбластьСтрока.Параметры.БЛ3 =  ОбластьСтрока.Параметры.БЛ3 + ВыборкаПоПериодам.Результат;
							ОбластьСтрока.Параметры.БЛДни3 =  ОбластьСтрока.Параметры.БЛДни3 + ВыборкаПоПериодам.НормаДней;
							Если НомерСтрокиБольничных = 3 Тогда
								ОбластьСтрока.Параметры.БЛМесяц3 =  Формат(ВыборкаПоПериодам.ПериодДействия, "ДФ='МММ гг'");
							Иначе
								// если больничных более трех - в третьей строке месяц не пишем
								ОбластьСтрока.Параметры.БЛМесяц3 = "";
							КонецЕсли;
								
						КонецЕсли;
						НомерСтрокиБольничных = НомерСтрокиБольничных + 1;
							
					Иначе						
						ОбластьСтрока.Параметры.Другое =  ОбластьСтрока.Параметры.Другое + ВыборкаПоПериодам.Результат
					КонецЕсли; 
					
					ОбластьСтрока.Параметры.ВсегоНачислено = ОбластьСтрока.Параметры.ВсегоНачислено + ВыборкаПоПериодам.Результат;
					
				ИначеЕсли ВыборкаПоПериодам.Группа = "Удержания" Тогда
					
					Если ВыборкаПоПериодам.ВидРасчета = "НДФЛ" Тогда
						ОбластьСтрока.Параметры.НДФЛ =  ОбластьСтрока.Параметры.НДФЛ + ВыборкаПоПериодам.Результат
					ИначеЕсли ВыборкаПоПериодам.ВидРасчета = "Аванс" Тогда
						ОбластьСтрока.Параметры.Аванс =  ОбластьСтрока.Параметры.Аванс + ВыборкаПоПериодам.Результат
					ИначеЕсли ВыборкаПоПериодам.ВидРасчета = "Погашение займов" Тогда
						ОбластьСтрока.Параметры.Займы =  ОбластьСтрока.Параметры.Займы + ВыборкаПоПериодам.Результат
					ИначеЕсли ВыборкаПоПериодам.ВидРасчета = "ИсполнительныеЛисты" Тогда
						ОбластьСтрока.Параметры.ИЛ =  ОбластьСтрока.Параметры.ИЛ + ВыборкаПоПериодам.Результат;
					Иначе
						ОбластьСтрока.Параметры.ДругоеУдержано =  ОбластьСтрока.Параметры.ДругоеУдержано + ВыборкаПоПериодам.Результат;
					КонецЕсли;
					
					ОбластьСтрока.Параметры.ВсегоУдержано = ОбластьСтрока.Параметры.ВсегоУдержано + ВыборкаПоПериодам.Результат;
					
				ИначеЕсли ВыборкаПоПериодам.Группа = "Сальдо" Тогда
					Сальдо = Сальдо + ВыборкаПоПериодам.Результат
				ИначеЕсли ВыборкаПоПериодам.Группа = "КВыплате" Тогда
					КВыплате = КВыплате + ВыборкаПоПериодам.Результат
				КонецЕсли; 
				
			КонецЦикла; 
			
			Если Сальдо > 0 Тогда
				ОбластьСтрока.Параметры.ДолгЗаОрганизацией = Сальдо;
				ОбластьСтрока.Параметры.ДолгЗаРаботником = 0;
			Иначе
				ОбластьСтрока.Параметры.ДолгЗаОрганизацией = 0;
				ОбластьСтрока.Параметры.ДолгЗаРаботником = - Сальдо;
			КонецЕсли; 
			
			ОбластьСтрока.Параметры.КВыплате = КВыплате;
				
			ДокументРезультат.Вывести(ОбластьСтрока);
			
		КонецЦикла;
		
	КонецЕсли;  
	
	ДокументРезультат.Вывести(ОбластьПодвал);
	
КонецПроцедуры	

#КонецЕсли

