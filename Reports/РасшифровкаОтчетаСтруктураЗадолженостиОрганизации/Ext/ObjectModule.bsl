////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем ЭлементыНастройки    Экспорт; // Массив элементов структуры СКД         
Перем СохраненнаяНастройка Экспорт; 
Перем Расшифровки          Экспорт; 

#Если Клиент Тогда

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ 
// 

// Инициализация отчета
//
// Параметры:
//  Нет.
//
Процедура ИнициализацияОтчета() Экспорт
	
	ТиповыеОтчеты.ИнициализацияТиповогоОтчета(ЭтотОбъект);
	
КонецПроцедуры //ИнициализацияОтчета()


// Формирование отчета в табличный документ
// 
Функция СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = истина) Экспорт
	
	Если ДанныеРасшифровки = Неопределено тогда
		ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КонецЕсли;
	
	Возврат ТиповыеОтчеты.СформироватьТиповойОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета);
	
КонецФункции


// Доработка компоновщика отчета перед выводом
//
Процедура ДоработатьКомпоновщикПередВыводом() Экспорт
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ЕстьГруппировкаПоПериодуРегисрации"));
	ЗначениеПараметра.Значение = ПрисутствуетПолеПериодРегистрацииВГруппировке();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Возвращает значение истина, если в элементах структур отчета присутствует поле Период регистрации
//
Функция ПрисутствуетПолеПериодРегистрацииВГруппировке()
	
	Если КомпоновщикНастроек.Настройки.Структура.Количество() <> 0 тогда
		
		Если Тип(КомпоновщикНастроек.Настройки.Структура[0]) = Тип("ТаблицаКомпоновкиДанных") тогда
			
			Возврат НайтиПериодРегистрации(КомпоновщикНастроек.Настройки.Структура[0].Строки[0]);
			
		ИначеЕсли Тип(КомпоновщикНастроек.Настройки.Структура[0]) = Тип("ГруппировкаКомпоновкиДанных") тогда
			
			Возврат НайтиПериодРегистрации(КомпоновщикНастроек.Настройки.Структура[0]);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ложь;
	
КонецФункции //ПрисутствуетПолеПериодРегистрацииВГруппировке()

// Функция возвращает значение истина, если в группировках элементов структуры присутствует поле "Период регистрации"
//
Функция НайтиПериодРегистрации(Структура)
	
	ЕстьПоле = ложь;
	
	ПолеПериодРегистрации = Новый ПолеКомпоновкиДанных("ПериодРегистрации");
	
	Для каждого ПолеГруппировки из Структура.ПоляГруппировки.Элементы Цикл
		
		Если ПолеГруппировки.Использование И ПолеГруппировки.Поле = ПолеПериодРегистрации тогда
			
			ЕстьПоле = истина;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не ЕстьПоле И Структура.Структура.Количество() <> 0 тогда
		
		ЕстьПоле = НайтиПериодРегистрации(Структура.Структура[0]);
		
	КонецЕсли;
	
	Возврат ЕстьПоле;
	
КонецФункции //НайтиПериодРегистрации()

#КонецЕсли
