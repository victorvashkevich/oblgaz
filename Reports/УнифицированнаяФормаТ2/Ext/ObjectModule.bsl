
#Если Клиент Тогда

Перем мДлинаСуток;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом,
//	ЕстьОшибки - флаг того, что при формировании произошли ошибки
//
Процедура СформироватьОтчет(ДокументРезультат, ЕстьОшибки) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	Запрос.УстановитьПараметр("Физлицо",		  Работник.Физлицо);
	Запрос.УстановитьПараметр("Сотрудник",		  Работник);
	
		
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СотрудникиОрганизаций.Код КАК ТабельныйНомер,
	|	СотрудникиОрганизаций.Физлицо.Пол КАК Пол,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество,
	|	СотрудникиОрганизаций.Физлицо.ДатаРождения КАК ДатаРождения,
	|	СотрудникиОрганизаций.Физлицо.МестоРождения КАК МестоРождения,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ГражданствоФизЛицСрезПоследних.Страна, ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.БЕЛАРУСЬ)) = ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.БЕЛАРУСЬ)
	|			ТОГДА ""Республика Беларусь""
	|		КОГДА ГражданствоФизЛицСрезПоследних.Страна = ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.ПустаяССылка)
	|			ТОГДА ""Республика Беларусь""
	|		КОГДА ГражданствоФизЛицСрезПоследних.Страна = ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.ЛицоБезГражданства)
	|			ТОГДА ""Лицо без гражданства""
	|		ИНАЧЕ ""Иностранный гражданин""
	|	КОНЕЦ КАК Гражданство,
	|	РаботникиОрганизацииСрезПоследних1.Должность КАК Должность,
	|	РаботникиОрганизацииСрезПоследних.Организация.НаименованиеПолное КАК НазваниеОрганизации,
	|	СемейноеПоложениеФизЛицСрезПоследних.СемейноеПоложение.Наименование КАК СемейноеПоложение,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументКемВыдан КАК ДокументКемВыдан,
	|	ЕСТЬNULL(ПаспортныеДанныеФизЛицСрезПоследних.ДокументДатаВыдачи, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДокументДатаВыдачи,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ЛичныйНомер КАК ДокументЛичныйНомер,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументНомер,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументСерия,
	|	КонтактнаяИнформацияАдрес.Представление КАК Адрес,
	|	КонтактнаяИнформацияТелефон.Представление КАК Телефон,
	|	СотрудникиОрганизаций.Физлицо.СтраховойНомерПФР КАК СтраховойНомерПФР,
	|	РаботникиОрганизацииСрезПоследних.Период КАК ДатаПриема,
	|	ПОДСТРОКА(СотрудникиОрганизаций.Физлицо.Наименование, 1, 1) КАК Буква,
	|	ВоинскийУчетСрезПоследних.ГруппаВоинскогоУчета,
	|	ВоинскийУчетСрезПоследних.КатегорияЗапаса КАК КатегорияВоинскогоУчета,
	|	ВоинскийУчетСрезПоследних.Состав,
	|	ВоинскийУчетСрезПоследних.Звание,
	|	ВоинскийУчетСрезПоследних.ВУС,
	|	ВоинскийУчетСрезПоследних.Годность,
	|	ВоинскийУчетСрезПоследних.Военкомат,
	|	ВоинскийУчетСрезПоследних.СпецУчет
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(&ДатаАктуальности, ФизЛицо = &ФизЛицо) КАК ПаспортныеДанныеФизЛицСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&ДатаАктуальности, ФизЛицо = &ФизЛицо) КАК ГражданствоФизЛицСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаАктуальности, ФизЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СемейноеПоложениеФизЛиц.СрезПоследних(&ДатаАктуальности, ФизЛицо = &ФизЛицо) КАК СемейноеПоложениеФизЛицСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформацияАдрес
	|		ПО СотрудникиОрганизаций.Физлицо = КонтактнаяИнформацияАдрес.Объект
	|			И (КонтактнаяИнформацияАдрес.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|			И (КонтактнаяИнформацияАдрес.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресФизЛица))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформацияТелефон
	|		ПО СотрудникиОрганизаций.Физлицо = КонтактнаяИнформацияТелефон.Объект
	|			И (КонтактнаяИнформацияТелефон.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	|			И (КонтактнаяИнформацияТелефон.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонФизЛица))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&ДатаАктуальности,
	|				Сотрудник = &Сотрудник
	|					И ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)) КАК РаботникиОрганизацииСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&ДатаАктуальности,
	|				Сотрудник = &Сотрудник) КАК РаботникиОрганизацииСрезПоследних1
	|		ПО (ИСТИНА)

	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВоинскийУчет.СрезПоследних(&ДатаАктуальности, Физлицо = &ФизЛицо) КАК ВоинскийУчетСрезПоследних
	|		ПО (ИСТИНА)
	|ГДЕ
	|	СотрудникиОрганизаций.Ссылка = &Сотрудник";
	
	ВыборкаРезультата	=	Запрос.Выполнить().Выбрать();

	ДокументРезультат.Очистить();
 	Макет 				= 	ПолучитьМакет("ФормаТ2");
	ПерваяСтраница	= 	Макет.ПолучитьОбласть("ПерваяСтраница");
	ШапкаПеремещения  =   Макет.ПолучитьОбласть("ШапкаПеремещения");
	Перемещения  =   Макет.ПолучитьОбласть("Перемещения");
	ШапкаОтпуск   =   Макет.ПолучитьОбласть("ШапкаОтпуск");
	Отпуск   =   Макет.ПолучитьОбласть("Отпуск");
	
	
	Если ВыборкаРезультата.Следующий() тогда
		
		ПерваяСтраница.Параметры.Заполнить(ВыборкаРезультата);
		
		ПерваяСтраница.Параметры.ДокументКемВыдан = СокрЛП(ВыборкаРезультата.ДокументКемВыдан);
		
		Если ВыборкаРезультата.Фамилия = NULL тогда
			ФИО		=	ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(ВыборкаРезультата.Представление, " ");
			Если ФИО.Количество()	>	0	тогда
				Фамилия	=	ФИО[0];
			КонецЕсли;
			Если ФИО.Количество()	>	1	тогда
				Имя		=	ФИО[1];
			КонецЕсли;
			Если ФИО.Количество()	>	2	тогда
				Отчество=	ФИО[2];
			КонецЕсли;
			// ФИО
			ПерваяСтраница.Параметры.Фамилия					=	Фамилия;
			ПерваяСтраница.Параметры.Имя						=	Имя;
			ПерваяСтраница.Параметры.Отчество         		=	Отчество;
		КонецЕсли;
		
		МестоРождения = РегламентированнаяОтчетность.ПредставлениеМестаРождения(ВыборкаРезультата.МестоРождения);
		МестоРождения = СтрЗаменить(МестоРождения, "Населенный пункт: ", "");
		МестоРождения = СтрЗаменить(МестоРождения, " страна:", "");
		
		СоставСемьи = "";
		ЗапросСоставСемьи = Новый Запрос;
		ЗапросСоставСемьи.Текст =
		"ВЫБРАТЬ
		|	ФизическиеЛицаСоставСемьи.Имя,
		|	ФизическиеЛицаСоставСемьи.СтепеньРодства,
		|	ФизическиеЛицаСоставСемьи.ГодРождения
		|ИЗ
		|	Справочник.ФизическиеЛица.СоставСемьи КАК ФизическиеЛицаСоставСемьи
		|ГДЕ
		|	ФизическиеЛицаСоставСемьи.Ссылка = &Физлицо";
		
		ЗапросСоставСемьи.УстановитьПараметр("Физлицо",		  Работник.Физлицо);
		ВыборкаСоставСемьи = ЗапросСоставСемьи.Выполнить().Выбрать();
		Пока ВыборкаСоставСемьи.Следующий() цикл
			СоставСемьи = СоставСемьи + ВыборкаСоставСемьи.СтепеньРодства + " - " + ВыборкаСоставСемьи.Имя + ", " + Формат(ВыборкаСоставСемьи.ГодРождения, "ДФ=dd.MM.yyyy")+"; ";
		КонецЦикла;
		СоставСемьи = Лев(СоставСемьи, СтрДлина(СоставСемьи)-1);
		ПерваяСтраница.Параметры.СоставСемьи = СоставСемьи;
		
		ЗапросОбразование = Новый Запрос;
		ВысшееИСреднее = Новый СписокЗначений;
		ВысшееИСреднее.Добавить(Справочники.ВидыОбразованияФизЛиц.АспирантураОрдинатураАдъюнктура);
		ВысшееИСреднее.Добавить(Справочники.ВидыОбразованияФизЛиц.Докторантура);
		ВысшееИСреднее.Добавить(Справочники.ВидыОбразованияФизЛиц.ВысшееОбразование);
		ВысшееИСреднее.Добавить(Справочники.ВидыОбразованияФизЛиц.СреднееПолноеОбщееОбразование);
		
		//Проф = Новый СписокЗначений;
		//Проф.Добавить(Справочники.ВидыОбразованияФизЛиц.НачальноеПрофессиональноеОбразование);
		//Проф.Добавить(Справочники.ВидыОбразованияФизЛиц.СреднееПрофессиональноеОбразование);
		
		ЗапросОбразование.УстановитьПараметр("ВысшееИСреднее", ВысшееИСреднее);
		ЗапросОбразование.УстановитьПараметр("ФизЛицо", Работник.Физлицо);
		
		ЗапросОбразование.Текст =
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ФизическиеЛицаОбразование.ВидОбразования В (&ВысшееИСреднее)
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ КАК ВидОбразованияЧисло,
		|	ФизическиеЛицаОбразование.УчебноеЗаведение,
		|	ФизическиеЛицаОбразование.Специальность,
		|	ФизическиеЛицаОбразование.Диплом,
		|	ФизическиеЛицаОбразование.ГодОкончания КАК ГодОкончания,
		|	ФизическиеЛицаОбразование.Квалификация,
		|	ФизическиеЛицаОбразование.ВидОбразования
		|ИЗ
		|	Справочник.ФизическиеЛица.Образование КАК ФизическиеЛицаОбразование
		|ГДЕ
		|	ФизическиеЛицаОбразование.Ссылка = &ФизЛицо
		|
		|УПОРЯДОЧИТЬ ПО
		|	ГодОкончания";
		
		ВыборкаОбразование = ЗапросОбразование.Выполнить().Выбрать();
		НомерОбразованияВВУЗЕ = 0;
		НомерОбразованияПроф = 0;
		
		Пока ВыборкаОбразование.Следующий() цикл
			Если ВыборкаОбразование.ВидОбразованияЧисло = 1 тогда 
				НомерОбразованияВВУЗЕ = НомерОбразованияВВУЗЕ + 1;
				Если НомерОбразованияВВУЗЕ < 4  тогда
					ПерваяСтраница.Параметры["НазваниеВысш" + НомерОбразованияВВУЗЕ] = "" + ВыборкаОбразование.ВидОбразования + " ВУЗ: "+ ВыборкаОбразование.УчебноеЗаведение;                    
					ПерваяСтраница.Параметры["ДатаОкончанияВысш" + НомерОбразованияВВУЗЕ] = Формат(ВыборкаОбразование.ГодОкончания,"ЧГ=0") + " г. выпуска";
					ПерваяСтраница.Параметры.Специальность = ВыборкаОбразование.Специальность;
					ПерваяСтраница.Параметры.Квалификация = ВыборкаОбразование.Квалификация;
					//vvv комментируем
					//ПерваяСтраница.Параметры.ОКСО = ВыборкаОбразование.Специальность.Код;
					ПерваяСтраница.Параметры.Диплом = ВыборкаОбразование.Диплом;
				КонецЕсли;
			Иначе
				НомерОбразованияПроф = НомерОбразованияПроф +1;
				Если  НомерОбразованияПроф = 1 тогда
					ПерваяСтраница.Параметры.НазваниеУч =  "" + ВыборкаОбразование.ВидОбразования + " УЗ: "+ ВыборкаОбразование.УчебноеЗаведение;
					ПерваяСтраница.Параметры.ДатаОкончанияУч = Формат(ВыборкаОбразование.ГодОкончания,"ЧГ=0") + " г. выпуска";	
					ПерваяСтраница.Параметры.Диплом = ВыборкаОбразование.Диплом;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		ЗапросПрофессеии = Новый Запрос;
		ЗапросПрофессеии.УстановитьПараметр("Физлицо", Работник.Физлицо);
		ЗапросПрофессеии.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 2
		|	ФизическиеЛицаПрофессии.Профессия
		|ИЗ
		|	Справочник.ФизическиеЛица.Профессии КАК ФизическиеЛицаПрофессии
		|ГДЕ
		|	ФизическиеЛицаПрофессии.Ссылка = &Физлицо";
		
		ВыборкаПрофессии = ЗапросПрофессеии.Выполнить().Выбрать();
		КоличествоПрофессий = 0;
		Пока ВыборкаПрофессии.Следующий() Цикл
			КоличествоПрофессий = КоличествоПрофессий + 1;
			Если КоличествоПрофессий = 1 тогда 
				ПерваяСтраница.Параметры.ОКПД = ВыборкаПрофессии.Профессия.Код;	
			    ПерваяСтраница.Параметры.ПрофОсн = СокрЛП(ВыборкаПрофессии.Профессия);
			Иначе
				ПерваяСтраница.Параметры.ПрофВторая = СокрЛП(ВыборкаПрофессии.Профессия);
			КонецЕсли;
		КонецЦикла;
		
		ВыборкаПоСтажу = ПроведениеРасчетов.ВыбратьСтажиРаботника(Работник.Физлицо);
		Пока ВыборкаПоСтажу.Следующий()	Цикл
			
			ДатаНачалаОтсчетаСтажа = ДобавитьМесяц(ВыборкаПоСтажу.ДатаОтсчета, - ВыборкаПоСтажу.РазмерМесяцев) - ВыборкаПоСтажу.РазмерДней*86400;
			Лет		= 0;
			Месяцев	= 0;
			Дней	= 0;
			ОбщегоНазначения.РазобратьРазностьДат(ДатаАктуальности, ДатаНачалаОтсчетаСтажа, Лет, Месяцев, Дней);
			НазваниеЛет = ОбщегоНазначения.ФормаМножественногоЧисла("год", "года", "лет", Лет);
			НазваниеМесяцев = ОбщегоНазначения.ФормаМножественногоЧисла("месяц", "месяца", "месяцев", Месяцев);
			НазваниеДней =  ОбщегоНазначения.ФормаМножественногоЧисла("день", "дня", "дней", Дней);
			Если ВыборкаПоСтажу.ВидСтажа = Справочники.ВидыСтажа.ОбщийСтаж  Тогда
				
				ПерваяСтраница.Параметры.Общий	= Формат(Лет) + " " + НазваниеЛет + " " + Формат(Месяцев) + " " + НазваниеМесяцев + " " + Формат(Дней) + " " + НазваниеДней;
					
			//ИначеЕсли ВыборкаПоСтажу.ВидСтажа = Справочники.ВидыСтажа.НепрерывныйСтаж Тогда
			//	ПерваяСтраница.Параметры.Непрерывный	=	Формат(ВыборкаПоСтажу.ДатаОтсчета, "ДФ='ММММ гггг'")+" - " +Формат(ДатаАктуальности, "ДФ='ММММ гггг'") ;
            КонецЕсли;	
		КонецЦикла;
		
		
		
		ПерваяСтраница.Параметры.НаПредприятии	=	Формат(ВыборкаРезультата.ДатаПриема, "ДФ='ММММ гггг'")+" - " +Формат(ДатаАктуальности, "ДФ='ММММ гггг'") ;
      	ПерваяСтраница.Параметры.МестоРождения = МестоРождения;
		ПерваяСтраница.Параметры.ДатаЗаполнения			= Формат(ДатаАктуальности, "ДФ='дд ММММ гггг'");
		
	КонецЕсли;
	
	// Вывод страниц документа
	ДокументРезультат.Присоединить(ПерваяСтраница);
	ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();

	
	ЗапросПеремещения = Новый Запрос;
	ЗапросПеремещения.УстановитьПараметр("Сотрудник", Работник);
	ЗапросПеремещения.Текст =
	"ВЫБРАТЬ
	|	РаботникиОрганизаций.Период,
	|	РаботникиОрганизаций.Регистратор,
	|	РаботникиОрганизаций.ПодразделениеОрганизации,
	|	РаботникиОрганизаций.Должность,
	|	РаботникиОрганизаций.Категория,
	|	ТарифныеСтавкиРаботниковОрганизации.Ставка,
	|	РаботникиОрганизаций.Должность.Категория,
	|	РаботникиОрганизаций.УсловияТрудаИзмерение КАК УсловияТруда,
	|	РаботникиОрганизаций.РазрядЕТС,
	|	РаботникиОрганизаций.КоэффициентЕТС
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТарифныеСтавкиРаботниковОрганизации КАК ТарифныеСтавкиРаботниковОрганизации
	|		ПО РаботникиОрганизаций.Регистратор = ТарифныеСтавкиРаботниковОрганизации.Регистратор
	|			И РаботникиОрганизаций.Сотрудник = ТарифныеСтавкиРаботниковОрганизации.Сотрудник
	|ГДЕ
	|	РаботникиОрганизаций.Сотрудник = &Сотрудник
	|	И РаботникиОрганизаций.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)";
		
	ВыборкаПеремещения = ЗапросПеремещения.Выполнить().Выбрать();
	
	Если ВыборкаПеремещения.Количество() > 0  тогда
		ДокументРезультат.Присоединить(ШапкаПеремещения);
	КонецЕсли;
	
	Пока ВыборкаПеремещения.Следующий() цикл
		
		Перемещения.Параметры.Дата = Формат(ВыборкаПеремещения.Период, "ДФ='дд.ММ.гг'"); 
		Перемещения.Параметры.ПоразделениеОрганизации = СокрЛП(ВыборкаПеремещения.ПодразделениеОрганизации);
		Перемещения.Параметры.Категория = СокрЛП(ВыборкаПеремещения.Категория);
		Перемещения.Параметры.Должность = СокрЛП(ВыборкаПеремещения.Должность);
		Перемещения.Параметры.УсловияТруда = СокрЛП(ВыборкаПеремещения.УсловияТруда);
		СтавкаСтрока = Формат(ВыборкаПеремещения.Ставка,"ЧДЦ=0");
		Если ЗначениеЗаполнено(ВыборкаПеремещения.РазрядЕТС) тогда
			
			Перемещения.Параметры.Тариф = СтавкаСтрока  + " ("+ВыборкаПеремещения.РазрядЕТС+"/"+ВыборкаПеремещения.КоэффициентЕТС+")";
		Иначе
			Перемещения.Параметры.Тариф = СтавкаСтрока  + " (#/"+ВыборкаПеремещения.КоэффициентЕТС+")";	
		КонецЕсли;
		Если ТипЗнч(ВыборкаПеремещения.Регистратор) = Тип("ДокументСсылка.ПриемНаРаботуВОрганизацию") тогда
			Перемещения.Параметры.НаименованиеДокумента = "Прием на работу";
		ИначеЕсли ТипЗнч(ВыборкаПеремещения.Регистратор) = Тип("ДокументСсылка.КадровоеПеремещениеОрганизаций") тогда
            Перемещения.Параметры.НаименованиеДокумента = "Кадровое перемещение";
		Иначе
			Перемещения.Параметры.НаименованиеДокумента = "Увольнение";
		КонецЕсли;
		Перемещения.Параметры.ДатаДокумента = Формат(ВыборкаПеремещения.Регистратор.Дата, "ДФ='дд.ММ.гг'");
		Перемещения.Параметры.НомерДокумента = ВыборкаПеремещения.Регистратор.Номер;
		Перемещения.Параметры.РасшифровкаПеремещения =  ВыборкаПеремещения.Регистратор;
		
		ДокументРезультат.Присоединить(Перемещения);	
			
	КонецЦикла;
	
	
	ЗапросОтпуск = Новый Запрос;
	ЗапросОтпуск.УстановитьПараметр("Сотрудник", Работник);
	
	// ОТПУСКА
	СписокОтпусков = Новый Массив;
	СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускЕжегодный);
	СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускБезСохраненияЗарплаты);
	СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускУчебный);
	СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускУчебныйНеоплачиваемый);
	СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком);
	ЗапросОтпуск.УстановитьПараметр("СписокОтпусков",	СписокОтпусков);
    ЗапросОтпуск.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	
	ЗапросОтпуск.Текст = 
	"ВЫБРАТЬ
	|	ОтпускаРаботника.ДатаС,
	|	ОтпускаРаботника.ДатаПо,
	|	ОтпускаРаботника.ДополнительныйОтпуск,
	|	ОтпускаРаботника.ДатаНачалаДоп,
	|	ОтпускаРаботника.ДатаОкончанияДоп,
	|	ОтпускаРаботника.Регистратор,
	|	ОтпускаРаботника.ДатаПриказа,
	|	ОтпускаРаботника.НомерПриказа,
	|	ОтпускаРаботника.Продолжительность,
	|	ОтпускаРаботника.ПродолжительностьДоп,
	|	ОтпускаРаботника.ПричинаОтсутствия,
	|	ОтпускаОрганизацийРаботникиОрганизации.РабочийГодС КАК РабочийГодС,
	|	ОтпускаОрганизацийРаботникиОрганизации.РабочийГодПо КАК РабочийГодПо,
	|	ОтпускаОрганизацийРаботникиОрганизации.Основание КАК Основание
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОтпускаРаботника.ДатаС КАК ДатаС,
	|		ОтпускаРаботника.ДатаПо КАК ДатаПо,
	|		ОтпускаРаботника.ПричинаОтсутствия КАК ПричинаОтсутствия,
	|		ОтпускаРаботника.ДополнительныйОтпуск КАК ДополнительныйОтпуск,
	|		ЕСТЬNULL(ОтпускаРаботника.ДатаНачалаДоп, 0) КАК ДатаНачалаДоп,
	|		ЕСТЬNULL(ОтпускаРаботника.ДатаОкончанияДоп, 0) КАК ДатаОкончанияДоп,
	|		ОтпускаРаботника.Регистратор КАК Регистратор,
	|		ОтпускаРаботника.ДатаПриказа КАК ДатаПриказа,
	|		ОтпускаРаботника.НомерСтроки КАК НомерСтроки,
	|		ОтпускаРаботника.НомерПриказа КАК НомерПриказа,
	|		ВЫБОР
	|			КОГДА ОтпускаРаботника.Сторно
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ * ЕСТЬNULL(РАЗНОСТЬДАТ(ОтпускаРаботника.ДатаС, ОтпускаРаботника.ДатаПо, ДЕНЬ), 0) + 1 КАК Продолжительность,
	|		ВЫБОР
	|			КОГДА ОтпускаРаботника.Сторно
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ * ЕСТЬNULL(РАЗНОСТЬДАТ(ОтпускаРаботника.ДатаНачалаДоп, ОтпускаРаботника.ДатаОкончанияДоп, ДЕНЬ), 0) КАК ПродолжительностьДоп,
	|		ОтпускаРаботника.Сторно КАК Сторно
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ПериодыОтпуска.ДатаС КАК ДатаС,
	|			ВЫБОР
	|				КОГДА ПериодыОтпуска.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускЕжегодный)
	|					ТОГДА ВЫБОР
	|							КОГДА ОтпускаОрганизацииРаботники.ДатаНачалаДоп = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|								ТОГДА ПериодыОтпуска.ДатаПо
	|							ИНАЧЕ ВЫБОР
	|									КОГДА ПериодыОтпуска.ДатаПо < ОтпускаОрганизацииРаботники.ДатаНачалаДоп
	|										ТОГДА ПериодыОтпуска.ДатаПо
	|									ИНАЧЕ ДОБАВИТЬКДАТЕ(ОтпускаОрганизацииРаботники.ДатаНачалаДоп, ДЕНЬ, -1)
	|								КОНЕЦ
	|						КОНЕЦ
	|				ИНАЧЕ ПериодыОтпуска.ДатаПо
	|			КОНЕЦ КАК ДатаПо,
	|			ПериодыОтпуска.Состояние КАК ПричинаОтсутствия,
	|			ОтпускаОрганизацииРаботники.ВидДополнительногоОтпуска.Наименование КАК ДополнительныйОтпуск,
	|			ОтпускаОрганизацииРаботники.ДатаНачалаДоп КАК ДатаНачалаДоп,
	|			ВЫБОР
	|				КОГДА ОтпускаОрганизацииРаботники.ДатаНачалаДоп = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ИНАЧЕ ПериодыОтпуска.ДатаПо
	|			КОНЕЦ КАК ДатаОкончанияДоп,
	|			ОтпускаОрганизацииРаботники.НомерСтроки КАК НомерСтроки,
	|			ПериодыОтпуска.Регистратор КАК Регистратор,
	|			ПериодыОтпуска.Регистратор.Дата КАК ДатаПриказа,
	|			ПериодыОтпуска.Регистратор.Номер КАК НомерПриказа,
	|			ОтпускаОрганизацииРаботники.Сторно КАК Сторно
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ДатыУходаВОтпуск.Период КАК ДатаС,
	|				ДОБАВИТЬКДАТЕ(ВЫБОР
	|						КОГДА ДатыУходаВОтпуск.ПериодЗавершения >= МИНИМУМ(ДатыВозвращенияИзОтпуска.Период)
	|								ИЛИ ДатыУходаВОтпуск.ПериодЗавершения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|							ТОГДА МИНИМУМ(ДатыВозвращенияИзОтпуска.Период)
	|						ИНАЧЕ ДатыУходаВОтпуск.ПериодЗавершения
	|					КОНЕЦ, ДЕНЬ, -1) КАК ДатаПо,
	|				ДатыУходаВОтпуск.Регистратор КАК Регистратор,
	|				ДатыУходаВОтпуск.Сотрудник КАК Сотрудник,
	|				ДатыУходаВОтпуск.Состояние КАК Состояние
	|			ИЗ
	|				РегистрСведений.СостояниеРаботниковОрганизаций КАК ДатыУходаВОтпуск
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеРаботниковОрганизаций КАК ДатыВозвращенияИзОтпуска
	|					ПО ДатыУходаВОтпуск.Период < ДатыВозвращенияИзОтпуска.Период
	|						И ДатыУходаВОтпуск.Сотрудник = ДатыВозвращенияИзОтпуска.Сотрудник
	|			ГДЕ
	|				ДатыУходаВОтпуск.Период <= &ДатаАктуальности
	|				И ДатыУходаВОтпуск.Состояние В(&СписокОтпусков)
	|				И ДатыУходаВОтпуск.Сотрудник = &Сотрудник
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ДатыУходаВОтпуск.Период,
	|				ДатыУходаВОтпуск.ПериодЗавершения,
	|				ДатыУходаВОтпуск.Регистратор,
	|				ДатыУходаВОтпуск.Сотрудник,
	|				ДатыУходаВОтпуск.Состояние) КАК ПериодыОтпуска
	|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтпускаОрганизаций.РаботникиОрганизации КАК ОтпускаОрганизацииРаботники
	|				ПО ПериодыОтпуска.ДатаС = ОтпускаОрганизацииРаботники.ДатаНачала
	|					И ПериодыОтпуска.Регистратор = ОтпускаОрганизацииРаботники.Ссылка
	|					И ПериодыОтпуска.Сотрудник = ОтпускаОрганизацииРаботники.Сотрудник
	|					И (НЕ ОтпускаОрганизацииРаботники.Сторно)) КАК ОтпускаРаботника
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|			ПО (РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ ОтпускаРаботника.ДатаС И ОтпускаРаботника.ДатаПо
	|					ИЛИ РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ ОтпускаРаботника.ДатаНачалаДоп И ОтпускаРаботника.ДатаОкончанияДоп)
	|				И (РегламентированныйПроизводственныйКалендарь.ВидДня <> ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Праздник))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ОтпускаРаботника.ДатаС,
	|		ОтпускаРаботника.ДатаПо,
	|		ОтпускаРаботника.ПричинаОтсутствия,
	|		ОтпускаРаботника.ДополнительныйОтпуск,
	|		ОтпускаРаботника.ДатаНачалаДоп,
	|		ОтпускаРаботника.ДатаОкончанияДоп,
	|		ОтпускаРаботника.Регистратор,
	|		ОтпускаРаботника.ДатаПриказа,
	|		ОтпускаРаботника.НомерСтроки,
	|		ОтпускаРаботника.НомерПриказа,
	|		ОтпускаРаботника.Сторно) КАК ОтпускаРаботника
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтпускаОрганизаций.РаботникиОрганизации КАК ОтпускаОрганизацийРаботникиОрганизации
	|		ПО ОтпускаРаботника.Регистратор = ОтпускаОрганизацийРаботникиОрганизации.Ссылка
	|			И ОтпускаРаботника.НомерСтроки = ОтпускаОрганизацийРаботникиОрганизации.НомерСтроки
	|			И ((НЕ ОтпускаОрганизацийРаботникиОрганизации.Сторно))";
						

	ВыборкаОтпуска = ЗапросОтпуск.Выполнить().Выбрать();
	
	Если ВыборкаОтпуска.Количество() > 0  тогда
		ДокументРезультат.Присоединить(ШапкаОтпуск);
	КонецЕсли;

	
	Пока ВыборкаОтпуска.Следующий() цикл
		Отпуск.Параметры.Период = Формат(ВыборкаОтпуска.РабочийГодС, "ДФ='ММММ гггг'")+" - " +Формат(ВыборкаОтпуска.РабочийГодПо, "ДФ='ММММ гггг'") ;
	    Отпуск.Параметры.ВидОтпуска = ВыборкаОтпуска.ПричинаОтсутствия;
		Отпуск.Параметры.ДниОсновоной  = ВыборкаОтпуска.Продолжительность;
		Отпуск.Параметры.ДниДоп1   =  ?(ВыборкаОтпуска.ПродолжительностьДоп = 0,0,ВыборкаОтпуска.ПродолжительностьДоп +1);
		Отпуск.Параметры.ДниДопИтого = Отпуск.Параметры.ДниДоп1;
		Отпуск.Параметры.ДниИтого  =  ВыборкаОтпуска.Продолжительность + Отпуск.Параметры.ДниДоп1;
		Отпуск.Параметры.ДатаНачала = Формат(ВыборкаОтпуска.ДатаС,"ДФ='дд.ММ.гггг'");
		Отпуск.Параметры.ДатаОкончания = Формат(?(ВыборкаОтпуска.ДатаОкончанияДоп = Дата(1,1,1),ВыборкаОтпуска.ДатаПо,ВыборкаОтпуска.ДатаОкончанияДоп),"ДФ='дд.ММ.гггг'") ;
		Отпуск.Параметры.РасшифровкаОтпуска = ВыборкаОтпуска.Регистратор;
		
		ДокументРезультат.Присоединить(Отпуск);
	КонецЦикла;
	//ДокументРезультат.Присоединить(ВтораяСтраница);
	//ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	//ДокументРезультат.Присоединить(ТретьяСтраницаТ2);
	//ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	//ДокументРезультат.Присоединить(ЧетвертаяСтраницаТ2);
	
	//Параметры документа
	ДокументРезультат.ПолеСлева				= 0;
	ДокументРезультат.ПолеСправа			= 0;
	ДокументРезультат.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_Форма_Т2";
	ДокументРезультат.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	
КонецПроцедуры

мДлинаСуток = 86400;

#КонецЕсли

