
#Если Клиент Тогда

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом,
//	ЕстьОшибки - флаг того, что при формировании произошли ошибки
//
Процедура СформироватьОтчет(ДокументРезультат, ЕстьОшибки) Экспорт

    Если ТипЗнч(ПараметрОтбора) = Тип("СправочникСсылка.Организации") Тогда 
		Организация = ПараметрОтбора;
	Иначе
		ЕстьОшибки = Истина;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	  
    СписокОфицерскихЗваний	=	Новый СписокЗначений;
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.МладшийЛейтенант);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.Лейтенант);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.СтаршийЛейтенант);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.Капитан);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.Майор);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.Подполковник);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.Полковник);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.ГенералМайор);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.ГенералЛейтенант);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.ГенералПолковник);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.ГенералАрмии);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.МаршалРоссийскойФедерации);
	
	СписокЗванийПрапорщиков	=	Новый СписокЗначений;
	СписокЗванийПрапорщиков.Добавить(Справочники.ВоинскиеЗвания.Прапорщик);
	СписокЗванийПрапорщиков.Добавить(Справочники.ВоинскиеЗвания.СтаршийПрапорщик);
	СписокЗванийПрапорщиков.Добавить(Справочники.ВоинскиеЗвания.МладшийСержант);
	СписокЗванийПрапорщиков.Добавить(Справочники.ВоинскиеЗвания.Сержант);
	СписокЗванийПрапорщиков.Добавить(Справочники.ВоинскиеЗвания.СтаршийСержант);
	СписокЗванийПрапорщиков.Добавить(Справочники.ВоинскиеЗвания.Старшина);
	
	СписокСолдатскихЗваний	=	Новый СписокЗначений;
	СписокСолдатскихЗваний.Добавить(Справочники.ВоинскиеЗвания.Рядовой);
	СписокСолдатскихЗваний.Добавить(Справочники.ВоинскиеЗвания.Ефрейтор);
	
	СписокГодныеКСлужбе = Новый СписокЗначений;
	СписокГодныеКСлужбе.Добавить(Перечисления.ГодностьКВоеннойСлужбе.Годен);
	СписокГодныеКСлужбе.Добавить(Перечисления.ГодностьКВоеннойСлужбе.ГоденСОграничениями);
	СписокГодныеКСлужбе.Добавить(Перечисления.ГодностьКВоеннойСлужбе.ОграниченноГоден);
	
	Запрос.УстановитьПараметр("ДатаАктуальности",	ДатаАктуальности);
	Запрос.УстановитьПараметр("Организация",		Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Офицеры",			СписокОфицерскихЗваний);
	Запрос.УстановитьПараметр("Прапорщики",			СписокЗванийПрапорщиков);
	Запрос.УстановитьПараметр("Солдаты",			СписокСолдатскихЗваний);
	Запрос.УстановитьПараметр("Военнообязанный",	Перечисления.ОтношениеКВоинскойОбязанности.Военнообязанный);
	Запрос.УстановитьПараметр("СписокГодныеКСлужбе",СписокГодныеКСлужбе);
	
	Запрос.УстановитьПараметр("ОграниченноГоден",	Перечисления.ГодностьКВоеннойСлужбе.ГоденСОграничениями);
	Запрос.УстановитьПараметр("Призывник",			Перечисления.ОтношениеКВоинскойОбязанности.Призывник);

	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(1) КАК ВсегоРаботающих,
	|	СУММА(ВЫБОР
	|			КОГДА ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВсегоВЗапасе,
	|	СУММА(ВЫБОР
	|			КОГДА ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный
	|					И ВУ.Годность В (&СписокГодныеКСлужбе)
	|					И ВУ.Звание.ОбщевойсковоеЗвание В (&Офицеры)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОфицеровВЗапасе,
	|	СУММА(ВЫБОР
	|			КОГДА ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный
	|					И ВУ.Годность В (&СписокГодныеКСлужбе)
	|					И ВУ.Звание.ОбщевойсковоеЗвание В (&Прапорщики)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПрапорщиковВЗапасе,
	|	СУММА(ВЫБОР
	|			КОГДА ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный
	|					И ВУ.Годность В (&СписокГодныеКСлужбе)
	|					И ВУ.Звание.ОбщевойсковоеЗвание В (&Солдаты)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СолдатВЗапасе,
	|	СУММА(ВЫБОР
	|			КОГДА ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный
	|					И (НЕ ВУ.Годность В (&СписокГодныеКСлужбе))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НегодныхВМирноеВремя,
	|	СУММА(ВЫБОР
	|			КОГДА ВУ.ЗабронированОрганизацией = &Организация
	|					И ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВсегоВЗапасеЗабронировано,
	|	СУММА(ВЫБОР
	|			КОГДА ВУ.ЗабронированОрганизацией = &Организация
	|					И ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный
	|					И ВУ.Звание.ОбщевойсковоеЗвание В (&Офицеры)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОфицеровЗабронировано,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ВУ.ЗабронированОрганизацией = &Организация)
	|					И ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный
	|					И (НЕ ВУ.НаличиеМобпредписания)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НезабронированноБезМобпредписаний,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ВУ.ЗабронированОрганизацией = &Организация)
	|					И ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный
	|					И ВУ.НаличиеМобпредписания
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НезабронированноСМобпредписанием,
	|	СУММА(ВЫБОР
	|			КОГДА ВУ.ОтношениеКВоинскойОбязанности = &Призывник
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Призывников
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		РаботникиОрганизацииСрезПоследних.Сотрудник.Физлицо КАК ФизЛицо
	|	ИЗ
	|		РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&ДатаАктуальности,
	|				Организация = &ГоловнаяОрганизация
	|					И Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК РаботникиОрганизацииСрезПоследних
	|	ГДЕ
	|		ВЫБОР
	|				КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаАктуальности
	|						И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделениеЗавершения
	|				ИНАЧЕ РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделение
	|			КОНЕЦ = &Организация
	|		И ВЫБОР
	|				КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаАктуальности
	|						И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА РаботникиОрганизацииСрезПоследних.ПричинаИзмененияСостоянияЗавершения
	|				ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПричинаИзмененияСостояния
	|			КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)) КАК РаботникиОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВоинскийУчет.СрезПоследних(&ДатаАктуальности, ) КАК ВУ
	|		ПО РаботникиОрганизации.ФизЛицо = ВУ.Физлицо";

	РезультатЗапроса = Запрос.Выполнить();

	ДокументРезультат.Очистить();
	
	Макет = ПолучитьМакет("КарточкаУчета");
	// Формирование листов карточки
	ВыборкаПоКатегориям	=	РезультатЗапроса.Выбрать();
	Если ВыборкаПоКатегориям.Следующий() тогда
		ОбластьКарточка1 	= Макет.ПолучитьОбласть("Лист1Карточки");
		ОбластьКарточка1.Параметры.ДатаОтчета 			= Формат(ДатаАктуальности, "ДФ='дд ММММ гггг'");
		ОбластьКарточка1.Параметры.НазваниеОрганизации	= Организация.НаименованиеПолное;
		СтруктураОтветственныхЛиц = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация,ДатаАктуальности,"");
		//ОбластьКарточка1.Параметры.ДолжностьРуководителя	= СтруктураОтветственныхЛиц.РуководительДолжность;
		ОбластьКарточка1.Параметры.ФИОРуководителя		= СтруктураОтветственныхЛиц.Руководитель;
		ОбластьКарточка1.Параметры.ЮридическийАдрес		= УправлениеКонтактнойИнформацией.ПолучитьАдресИзКонтактнойИнформации(Организация,"Юридический");
		ОбластьКарточка1.Параметры.ФактическийАдрес		= УправлениеКонтактнойИнформацией.ПолучитьАдресИзКонтактнойИнформации(Организация,"Фактический");
		ОбластьКарточка1.Параметры.КодПоОКАТО			= Организация.КодПоОКАТО;
		ОбластьКарточка1.Параметры.КодПоОКПО			= Организация.КодПоОКПО;
		ОбластьКарточка1.Параметры.НаименованиеОКОПФ	= Организация.НаименованиеОКОПФ;
		ОбластьКарточка1.Параметры.КодОКОПФ				= Организация.КодОКОПФ;
		ОбластьКарточка1.Параметры.НаименованиеОКФС		= Организация.НаименованиеОКФС;
		ОбластьКарточка1.Параметры.КодОКФС				= Организация.КодОКФС;
		ОбластьКарточка1.Параметры.КодОКВЭД				= ""+ Организация.НаименованиеОКВЭД + " (" +Организация.КодОКВЭД + ") ";
		ОбластьКарточка1.Параметры.ИНН					= Организация.ИНН;
		Если ТипЗнч(ОбластьКарточка1)	=	Тип("ТабличныйДокумент")	тогда
			ДокументРезультат.Присоединить(ОбластьКарточка1);
		КонецЕсли;
		ОбластьКарточка2 	= Макет.ПолучитьОбласть("Лист2Карточки");
		ОбластьКарточка2.Параметры.ВсегоРаботающих						= ВыборкаПоКатегориям.ВсегоРаботающих;
		ОбластьКарточка2.Параметры.ВсегоВЗапасе 						= ВыборкаПоКатегориям.ВсегоВЗапасе;
		ОбластьКарточка2.Параметры.ОфицеровВЗапасе 						= ВыборкаПоКатегориям.ОфицеровВЗапасе;
		ОбластьКарточка2.Параметры.ПрапорщиковВЗапасе 					= ВыборкаПоКатегориям.ПрапорщиковВЗапасе;
		ОбластьКарточка2.Параметры.СолдатВЗапасе 						= ВыборкаПоКатегориям.СолдатВЗапасе;
		ОбластьКарточка2.Параметры.НегодныхВМирноеВремя 				= ВыборкаПоКатегориям.НегодныхВМирноеВремя;
		//ОбластьКарточка2.Параметры.ВсегоВЗапасеЗабронировано 			= "12.2. Забронировано всего:  " + ВыборкаПоКатегориям.ВсегоВЗапасеЗабронировано	+	", в том числе офицеров и генералов  " + ВыборкаПоКатегориям.ОфицеровЗабронировано;
		ОбластьКарточка2.Параметры.НезабронированноБезМобпредписаний 	= ВыборкаПоКатегориям.НезабронированноБезМобпредписаний;
		//ОбластьКарточка2.Параметры.НезабронированноСМобпредписанием	= ВыборкаПоКатегориям.НезабронированноСМобпредписанием;
		ОбластьКарточка2.Параметры.Призывников							= ВыборкаПоКатегориям.Призывников;
		Если ТипЗнч(ОбластьКарточка2)	=	Тип("ТабличныйДокумент")	тогда
			ДокументРезультат.Присоединить(ОбластьКарточка2);
		КонецЕсли;
	КонецЕсли;
	
	//Параметры документа
	ДокументРезультат.Автомасштаб		 = Истина;
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ДокументРезультат.Защита             = Ложь;
	ДокументРезультат.ТолькоПросмотр     = Ложь;
	
КонецПроцедуры

#КонецЕсли

