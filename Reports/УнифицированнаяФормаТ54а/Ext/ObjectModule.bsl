
#Если Клиент Тогда

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом,
//	ЕстьОшибки - флаг того, что при формировании произошли ошибки
//
Процедура СформироватьОтчет(ДокументРезультат, ЕстьОшибки = Ложь) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Дата актуальности установим на последний день года. 
	Запрос.УстановитьПараметр("ДатаАктуальности",	Дата(Год, 12, 31, 23, 59, 59));
	Запрос.УстановитьПараметр("Физлицо",			Физлицо);
	Запрос.УстановитьПараметр("Организация",		Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",ОбщегоНазначения.ГоловнаяОрганизация(Организация));

	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество, ФизическиеЛица.Наименование) КАК ФамилияИмяОтчество,
	|	ФизическиеЛица.ДатаРождения,
	|	ФизическиеЛица.МестоРождения,
	|	ФизическиеЛица.Пол,
	|	ФизическиеЛица.ИНН,
	|	ФизическиеЛица.СтраховойНомерПФР,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
	|			ТОГДА ""Основная""
	|		ИНАЧЕ ""По совместительству""
	|	КОНЕЦ КАК ВидРаботы,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаАктуальности
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации
	|	КОНЕЦ КАК ПодразделениеОрганизации,
	|	РаботникиОрганизацииСрезПоследних.Сотрудник,
	|	РаботникиОрганизацииСрезПоследних.Сотрудник.Код КАК ТабельныйНомер,
	|	СемейноеПоложениеФизЛицСрезПоследних.СемейноеПоложение,
	|	НДФЛСтандартныеВычетыФизлицСрезПоследних.КодВычетаЛичный.Код КАК КодВычетаЛичный,
	|	НДФЛСтандартныеВычетыФизлицСрезПоследних.КодВычетаНаДетей.Код КАК КодВычетаНаДетей,
	|	НДФЛСтандартныеВычетыФизлицСрезПоследних.КоличествоДетей,
	|	ПриемНаРаботу.Период КАК ДатаПриема,
	|	ВЫБОР
	|		КОГДА Увольнение.ПериодЗавершения <= &ДатаАктуальности
	|				И Увольнение.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА Увольнение.ПериодЗавершения
	|		ИНАЧЕ Увольнение.Период
	|	КОНЕЦ КАК ДатаУвольнения
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаАктуальности, ФизЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СемейноеПоложениеФизЛиц.СрезПоследних(&ДатаАктуальности, ФизЛицо = &ФизЛицо) КАК СемейноеПоложениеФизЛицСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛСтандартныеВычетыФизлиц.СрезПоследних(&ДатаАктуальности, Физлицо = &Физлицо) КАК НДФЛСтандартныеВычетыФизлицСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&ДатаАктуальности,
	|				Сотрудник.ФизЛицо = &ФизЛицо
	|					И Организация = &ГоловнаяОрганизация
	|					И Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК РаботникиОрганизацииСрезПоследних
	|		ПО (ВЫБОР
	|				КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаАктуальности
	|						И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделениеЗавершения
	|				ИНАЧЕ РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделение
	|			КОНЕЦ = &Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ПриемНаРаботу
	|		ПО (ПриемНаРаботу.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу))
	|			И (ПриемНаРаботу.Сотрудник.Физлицо = &ФизЛицо)
	|			И (ПриемНаРаботу.Организация = &ГоловнаяОрганизация)
	|			И (ПриемНаРаботу.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&ДатаАктуальности,
	|				ВЫБОР
	|						КОГДА ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|								И ПериодЗавершения <= &ДатаАктуальности
	|							ТОГДА ПричинаИзмененияСостоянияЗавершения
	|						ИНАЧЕ ПричинаИзмененияСостояния
	|					КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|					И Сотрудник.ФизЛицо = &ФизЛицо
	|					И Организация = &ГоловнаяОрганизация
	|					И Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК Увольнение
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ФизическиеЛица.Ссылка = &Физлицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	РаботникиОрганизацииСрезПоследних.Период УБЫВ";
	
	РезультатЗапроса 	= 	Запрос.Выполнить();
	ВыборкаРезультата	=	РезультатЗапроса.Выбрать();

	ДокументРезультат.Очистить();
	Макет 		 = ПолучитьМакет("Т54а");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	
	Если ВыборкаРезультата.Следующий() Тогда
		
		ОбластьШапка.Параметры.Заполнить(ВыборкаРезультата);
		
		// Организация
		ОбластьШапка.Параметры.НаименованиеОрганизации	= Организация.НаименованиеПолное;
		ОбластьШапка.Параметры.КодПоОКПО				= Организация.КодПоОКПО;
		
		ОбластьШапка.Параметры.РасчетныйПериодС	 = Дата(Год, 01, 01);
		ОбластьШапка.Параметры.РасчетныйПериодПо = Дата(Год, 12, 31);
		ОбластьШапка.Параметры.КоличествоДетей   = ВыборкаРезультата.КоличествоДетей;
		
	КонецЕсли;	

	ДокументРезультат.Вывести(ОбластьШапка);
	// Таблица кадровая и отпуска.
	РеглВалюта = Константы.ВалютаРегламентированногоУчета.Получить();
	ТаблицаКадрыИОтпуска = Новый ТаблицаЗначений;
	
	// ПРИЕМ И ПЕРЕВОДЫ НА ДРУГУЮ РАБОТУ
	Запрос.УстановитьПараметр("ДатаАктуальностиС",	Дата(Год, 01, 01));
	Запрос.УстановитьПараметр("ДатаАктуальностиПо",	Дата(Год, 12, 31, 23, 59, 59));
	Запрос.УстановитьПараметр("ДатаКонУвольнений", Дата(Год+1, 01, 01));
	Запрос.УстановитьПараметр("ДатаНачУвольнений", Дата(Год, 01, 02));
	Запрос.УстановитьПараметр("РеглВалюта",РеглВалюта);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	&ДатаАктуальностиС КАК Период,
	|	РаботникиОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
	|	РаботникиОрганизацийСрезПоследних.Регистратор КАК Регистратор,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаАктуальностиС
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизацииЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
	|	КОНЕЦ КАК ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаАктуальностиС
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ДолжностьЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.Должность
	|	КОНЕЦ КАК Должность,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаАктуальностиС
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостоянияЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния
	|	КОНЕЦ КАК ПричинаИзмененияСостояния
	|ПОМЕСТИТЬ ВТДвиженияРаботника
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|		&ДатаАктуальностиС,
	|		Сотрудник.Физлицо = &Физлицо
	|			И Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|			И Организация = &ГоловнаяОрганизация) КАК РаботникиОрганизацийСрезПоследних
	|ГДЕ
	|	ВЫБОР
	|			КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаАктуальностиС
	|					И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостоянияЗавершения
	|			ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния
	|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|	И ВЫБОР
	|			КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаАктуальностиС
	|					И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделениеЗавершения
	|			ИНАЧЕ РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделение
	|		КОНЕЦ = &Организация
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Работники.Период,
	|	Работники.Сотрудник,
	|	Работники.Регистратор,
	|	Работники.ПодразделениеОрганизации,
	|	Работники.Должность,
	|	Работники.ПричинаИзмененияСостояния
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК Работники
	|ГДЕ
	|	(Работники.Период МЕЖДУ &ДатаАктуальностиС И &ДатаАктуальностиПо
	|				И Работники.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|			ИЛИ Работники.Период МЕЖДУ &ДатаНачУвольнений И &ДатаКонУвольнений
	|				И Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение))
	|	И Работники.Сотрудник.Физлицо = &Физлицо
	|	И Работники.Организация = &ГоловнаяОрганизация
	|	И Работники.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|	И Работники.ОбособленноеПодразделение = &Организация
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Работники.ПериодЗавершения,
	|	Работники.Сотрудник,
	|	Работники.Регистратор,
	|	Работники.ПодразделениеОрганизацииЗавершения,
	|	Работники.ДолжностьЗавершения,
	|	Работники.ПричинаИзмененияСостоянияЗавершения
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК Работники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ПериодыПерекрытия
	|		ПО ПериодыПерекрытия.Период <= Работники.ПериодЗавершения
	|			И ПериодыПерекрытия.Период > Работники.Период
	|			И ПериодыПерекрытия.Сотрудник.Физлицо = Работники.Сотрудник.Физлицо
	|			И (ПериодыПерекрытия.Организация = &ГоловнаяОрганизация)
	|			И (ПериодыПерекрытия.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
	|			И (ПериодыПерекрытия.ОбособленноеПодразделение = &Организация)
	|ГДЕ
	|	Работники.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И (Работники.ПериодЗавершения МЕЖДУ &ДатаАктуальностиС И &ДатаАктуальностиПо
	|				И Работники.ПричинаИзмененияСостоянияЗавершения <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|			ИЛИ Работники.ПериодЗавершения МЕЖДУ &ДатаНачУвольнений И &ДатаКонУвольнений
	|				И Работники.ПричинаИзмененияСостоянияЗавершения = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение))
	|	И Работники.Сотрудник.Физлицо = &Физлицо
	|	И Работники.Организация = &ГоловнаяОрганизация
	|	И Работники.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|	И Работники.ОбособленноеПодразделениеЗавершения = &Организация
	|	И ПериодыПерекрытия.Период ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	Период";
	
	Запрос.Выполнить();
	ДвиженияРаботникаТекст = "ВТДвиженияРаботника";
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Работники.Должность.Наименование КАК Должность,
	|	Работники.ПодразделениеОрганизации.Наименование КАК ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|			ТОГДА ДОБАВИТЬКДАТЕ(Работники.Период, ДЕНЬ, -1)
	|		ИНАЧЕ Работники.Период
	|	КОНЕЦ КАК ДатаСобытия,
	|	Работники.ПричинаИзмененияСостояния,
	|	Работники.Регистратор.Дата КАК ДатаПриказа,
	|	Работники.Регистратор.Номер КАК НомерПриказа,
	|	ЕСТЬNULL(ПлановыеНачисленияРаботниковОрганизаций.ТребуетВводаТарифногоРазряда, ЛОЖЬ) КАК ТребуетВводаТарифногоРазряда,
	|	ЕСТЬNULL(ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд.Наименование, """") КАК ТарифныйРазряд,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизаций.ТребуетВводаТарифногоРазряда
	|				ТОГДА РазмерыТарифныхРазрядов.Размер
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Размер
	|		КОНЕЦ, 0) КАК Ставка,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизаций.ТребуетВводаТарифногоРазряда
	|				ТОГДА РазмерыТарифныхРазрядов.Валюта.Наименование
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Валюта.Наименование
	|		КОНЕЦ, """") КАК ИмяВалюты,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизаций.ТребуетВводаТарифногоРазряда
	|				ТОГДА РазмерыТарифныхРазрядов.Валюта
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Валюта
	|		КОНЕЦ, &РеглВалюта) КАК Валюта
	|ИЗ
	|	" + ДвиженияРаботникаТекст + " КАК Работники
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВложенныйЗапрос.ДатаПеревода КАК ДатаПеревода,
	|			ВложенныйЗапрос.Сотрудник КАК Сотрудник,
	|			ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета.ТребуетВводаТарифногоРазряда КАК ТребуетВводаТарифногоРазряда,
	|			ПлановыеНачисленияРаботниковОрганизаций.Валюта1 КАК Валюта,
	|			ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд1 КАК ТарифныйРазряд,
	|			ПлановыеНачисленияРаботниковОрганизаций.Показатель1 КАК Размер
	|		ИЗ
	|			(ВЫБРАТЬ
	|				РаботникиОрганизаций.Период КАК ДатаПеревода,
	|				РаботникиОрганизаций.Сотрудник КАК Сотрудник,
	|				МАКСИМУМ(ПлановыеНачисленияРаботниковОрганизаций.Период) КАК Период
	|			ИЗ
	|				" + ДвиженияРаботникаТекст + " КАК РаботникиОрганизаций
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
	|					ПО РаботникиОрганизаций.Сотрудник = ПлановыеНачисленияРаботниковОрганизаций.Сотрудник
	|						И РаботникиОрганизаций.Период >= ПлановыеНачисленияРаботниковОрганизаций.Период
	|			ГДЕ
	|				ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО
	|			
	|			СГРУППИРОВАТЬ ПО
	|				РаботникиОрганизаций.Период,
	|				РаботникиОрганизаций.Сотрудник) КАК ВложенныйЗапрос
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
	|				ПО ВложенныйЗапрос.Сотрудник = ПлановыеНачисленияРаботниковОрганизаций.Сотрудник
	|					И ВложенныйЗапрос.Период = ПлановыеНачисленияРаботниковОрганизаций.Период
	|					И (ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО)) КАК ПлановыеНачисленияРаботниковОрганизаций
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ВложенныйЗапрос.ДатаПеревода КАК ДатаПеревода,
	|				РазмерТарифныхСтавок.Валюта КАК Валюта,
	|				РазмерТарифныхСтавок.ТарифныйРазряд КАК ТарифныйРазряд,
	|				РазмерТарифныхСтавок.Размер КАК Размер
	|			ИЗ
	|				(ВЫБРАТЬ
	|					РаботникиОрганизаций.Период КАК ДатаПеревода,
	|					РазмерТарифныхСтавок.ТарифныйРазряд КАК ТарифныйРазряд,
	|					МАКСИМУМ(РазмерТарифныхСтавок.Период) КАК Период
	|				ИЗ
	|					" + ДвиженияРаботникаТекст + " КАК РаботникиОрганизаций
	|						ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
	|						ПО РаботникиОрганизаций.Период >= РазмерТарифныхСтавок.Период
	|				
	|				СГРУППИРОВАТЬ ПО
	|					РаботникиОрганизаций.Период,
	|					РазмерТарифныхСтавок.ТарифныйРазряд) КАК ВложенныйЗапрос
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
	|					ПО ВложенныйЗапрос.ТарифныйРазряд = РазмерТарифныхСтавок.ТарифныйРазряд
	|						И ВложенныйЗапрос.Период = РазмерТарифныхСтавок.Период) КАК РазмерыТарифныхРазрядов
	|			ПО ПлановыеНачисленияРаботниковОрганизаций.ДатаПеревода = РазмерыТарифныхРазрядов.ДатаПеревода
	|				И ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд = РазмерыТарифныхРазрядов.ТарифныйРазряд
	|		ПО Работники.Период = ПлановыеНачисленияРаботниковОрганизаций.ДатаПеревода
	|			И Работники.Сотрудник = ПлановыеНачисленияРаботниковОрганизаций.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаСобытия";
		
	// Выгрузили в общую таблицу данные по кадровым документам.
	ТаблицаКадрыИОтпуска = Запрос.Выполнить().Выгрузить();
	ТаблицаКадрыИОтпуска.Колонки.Добавить("ТарифнаяСтавка"); 
	Для каждого СтрокаТЗ Из ТаблицаКадрыИОтпуска Цикл
		
		ОписаниеТарифнаяСтавка = Формат(СтрокаТЗ.Ставка,"ЧЦ=15; ЧДЦ=2; ЧН=' '");
		Если СтрокаТЗ.Валюта = РеглВалюта Тогда
			Если СтрокаТЗ.ТребуетВводаТарифногоРазряда Тогда
				ОписаниеТарифнаяСтавка = ОписаниеТарифнаяСтавка	+ " (" + СтрокаТЗ.ТарифныйРазряд + ")"
			КонецЕсли;
		Иначе
			ОписаниеТарифнаяСтавка = ОписаниеТарифнаяСтавка + " (" + СтрокаТЗ.ИмяВалюты + 
					?(СтрокаТЗ.ТребуетВводаТарифногоРазряда,", " + СтрокаТЗ.ТарифныйРазряд,"") + ")"
		КонецЕсли;
		СтрокаТЗ.ТарифнаяСтавка = ОписаниеТарифнаяСтавка
	КонецЦикла; 
	
	// ОТПУСКА
	СписокОтпусков	=	Новый СписокЗначений;
	СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускЕжегодный);
	СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускБезСохраненияЗарплаты);
	СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускУчебный);
	СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускУчебныйНеоплачиваемый);
	СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком);
	Запрос.УстановитьПараметр("СписокОтпусков",	СписокОтпусков);
	Запрос.УстановитьПараметр("ЕжегодныйОтпуск",Перечисления.СостоянияРаботникаОрганизации.ОтпускЕжегодный);
	Запрос.УстановитьПараметр("Праздник",	Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОтпускаРаботника.ДатаС,
	|	ОтпускаРаботника.ДатаПо,
	|	ОтпускаРаботника.РабочийГодС,
	|	ОтпускаРаботника.РабочийГодПо,
	|	ОтпускаРаботника.ВидОтпуска,
	|	ОтпускаРаботника.ДатаПриказаОтпуск,
	|	ОтпускаРаботника.НомерПриказаОтпуск,
	|	ВЫБОР
	|		КОГДА ОтпускаРаботника.ПричинаОтсутствия <> &ЕжегодныйОтпуск
	|			ТОГДА РАЗНОСТЬДАТ(ОтпускаРаботника.ДатаС, ОтпускаРаботника.ДатаПо, ДЕНЬ) + 1
	|		ИНАЧЕ ЕСТЬNULL(СУММА(ВЫБОР
	|						КОГДА РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ ОтпускаРаботника.ДатаС И ОтпускаРаботника.ДатаПоОсн
	|							ТОГДА РегламентированныйПроизводственныйКалендарь.КалендарныеДни
	|						ИНАЧЕ 0
	|					КОНЕЦ), 0)
	|	КОНЕЦ КАК ДнейОтпуска,
	|	ВЫБОР
	|		КОГДА ОтпускаРаботника.ПричинаОтсутствия <> &ЕжегодныйОтпуск
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СУММА(ВЫБОР
	|						КОГДА РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ ОтпускаРаботника.ДатаНачалаДоп И ОтпускаРаботника.ДатаОкончанияДоп
	|							ТОГДА РегламентированныйПроизводственныйКалендарь.КалендарныеДни
	|						ИНАЧЕ 0
	|					КОНЕЦ), 0)
	|	КОНЕЦ КАК ДнейОтпускаДоп
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ПериодыОтпуска.Состояние = &ЕжегодныйОтпуск
	|					И ПериодыОтпуска.ДатаС = ОтпускаОрганизацииРаботники.ДатаНачалаДоп
	|				ТОГДА ОтпускаОрганизацииРаботники.ВидДополнительногоОтпуска.Наименование
	|			ИНАЧЕ ПериодыОтпуска.Состояние
	|		КОНЕЦ КАК ВидОтпуска,
	|		ПериодыОтпуска.ДатаС КАК ДатаС,
	|		ПериодыОтпуска.ДатаПо КАК ДатаПо,
	|		ПериодыОтпуска.Состояние КАК ПричинаОтсутствия,
	|		ПериодыОтпуска.Регистратор.Дата КАК ДатаПриказаОтпуск,
	|		ПериодыОтпуска.Регистратор.Номер КАК НомерПриказаОтпуск,
	|		ОтпускаОрганизацииРаботники.РабочийГодС КАК РабочийГодС,
	|		ОтпускаОрганизацииРаботники.РабочийГодПо КАК РабочийГодПо,
	|		ВЫБОР
	|			КОГДА ПериодыОтпуска.Состояние = &ЕжегодныйОтпуск
	|				ТОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(ОтпускаОрганизацииРаботники.ДатаНачалаДоп, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|							ТОГДА ПериодыОтпуска.ДатаПо
	|						ИНАЧЕ ВЫБОР
	|								КОГДА ПериодыОтпуска.ДатаПо < ОтпускаОрганизацииРаботники.ДатаНачалаДоп
	|									ТОГДА ПериодыОтпуска.ДатаПо
	|								ИНАЧЕ ДОБАВИТЬКДАТЕ(ОтпускаОрганизацииРаботники.ДатаНачалаДоп, ДЕНЬ, -1)
	|							КОНЕЦ
	|					КОНЕЦ
	|			ИНАЧЕ ПериодыОтпуска.ДатаПо
	|		КОНЕЦ КАК ДатаПоОсн,
	|		ЕСТЬNULL(ОтпускаОрганизацииРаботники.ДатаНачалаДоп, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаНачалаДоп,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ОтпускаОрганизацииРаботники.ДатаНачалаДоп, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ИНАЧЕ ПериодыОтпуска.ДатаПо
	|		КОНЕЦ КАК ДатаОкончанияДоп
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ДатыУходаВОтпуск.Период КАК ДатаС,
	|			ДОБАВИТЬКДАТЕ(ВЫБОР
	|				КОГДА ДатыУходаВОтпуск.ПериодЗавершения >= МИНИМУМ(ДатыВозвращенияИзОтпуска.Период)
	|						ИЛИ ДатыУходаВОтпуск.ПериодЗавершения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА МИНИМУМ(ДатыВозвращенияИзОтпуска.Период)
	|				ИНАЧЕ ДатыУходаВОтпуск.ПериодЗавершения
	|			КОНЕЦ, ДЕНЬ, -1) КАК ДатаПо,
	|			ДатыУходаВОтпуск.Состояние КАК Состояние,
	|			ДатыУходаВОтпуск.Регистратор КАК Регистратор,
	|			ДатыУходаВОтпуск.Организация КАК Организация,
	|			ДатыУходаВОтпуск.Сотрудник КАК Сотрудник
	|		ИЗ
	|			РегистрСведений.СостояниеРаботниковОрганизаций КАК ДатыУходаВОтпуск
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеРаботниковОрганизаций КАК ДатыВозвращенияИзОтпуска
	|				ПО ДатыУходаВОтпуск.Сотрудник = ДатыВозвращенияИзОтпуска.Сотрудник
	|					И ДатыУходаВОтпуск.Период < ДатыВозвращенияИзОтпуска.Период
	|		ГДЕ
	|			ДатыУходаВОтпуск.Период МЕЖДУ &ДатаАктуальностиС И &ДатаАктуальностиПо
	|			И ДатыУходаВОтпуск.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|			И ДатыУходаВОтпуск.Состояние В(&СписокОтпусков)
	|			И ДатыУходаВОтпуск.Сотрудник.Физлицо = &ФизЛицо
	|			И ДатыУходаВОтпуск.Регистратор.Организация = &Организация
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ДатыУходаВОтпуск.Период,
	|			ДатыУходаВОтпуск.Состояние,
	|			ДатыУходаВОтпуск.ПериодЗавершения,
	|			ДатыУходаВОтпуск.Регистратор,
	|			ДатыУходаВОтпуск.Организация,
	|			ДатыУходаВОтпуск.Сотрудник) КАК ПериодыОтпуска
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтпускаОрганизаций.РаботникиОрганизации КАК ОтпускаОрганизацииРаботники
	|			ПО ПериодыОтпуска.Регистратор = ОтпускаОрганизацииРаботники.Ссылка
	|				И ПериодыОтпуска.Сотрудник = ОтпускаОрганизацииРаботники.Сотрудник
	|				И ПериодыОтпуска.ДатаС = ОтпускаОрганизацииРаботники.ДатаНачала) КАК ОтпускаРаботника
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|		ПО (РегламентированныйПроизводственныйКалендарь.ВидДня <> &Праздник)
	|			И (РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ ОтпускаРаботника.ДатаС И ОтпускаРаботника.ДатаПо)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтпускаРаботника.ДатаС,
	|	ОтпускаРаботника.ДатаПо,
	|	ОтпускаРаботника.РабочийГодС,
	|	ОтпускаРаботника.РабочийГодПо,
	|	ОтпускаРаботника.ВидОтпуска,
	|	ОтпускаРаботника.ДатаПриказаОтпуск,
	|	ОтпускаРаботника.НомерПриказаОтпуск,
	|	ОтпускаРаботника.ПричинаОтсутствия";
	
	ВыборкаРезультата	=	Запрос.Выполнить().Выбрать();
	
	// Добавим поля в таблицу кадровых документов и отпусков.
	ИндексКадровыхДок   = ТаблицаКадрыИОтпуска.Количество() - 1;
	ТаблицаКадрыИОтпуска.Колонки.Добавить("ВидОтпуска");
	ТаблицаКадрыИОтпуска.Колонки.Добавить("ДатаПриказаОтпуск");
	ТаблицаКадрыИОтпуска.Колонки.Добавить("НомерПриказаОтпуск");
	ТаблицаКадрыИОтпуска.Колонки.Добавить("РабочийГодС");
	ТаблицаКадрыИОтпуска.Колонки.Добавить("РабочийГодПо");
	ТаблицаКадрыИОтпуска.Колонки.Добавить("ДнейОтпуска");
	ТаблицаКадрыИОтпуска.Колонки.Добавить("ДатаС");
	ТаблицаКадрыИОтпуска.Колонки.Добавить("ДатаПо");
	Инд = 0;
	
	Пока ВыборкаРезультата.Следующий()	Цикл
		
		Если Инд <= ИндексКадровыхДок Тогда
			СтрокаДанных = ТаблицаКадрыИОтпуска[Инд];
		Иначе
			СтрокаДанных = ТаблицаКадрыИОтпуска.Добавить();
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтрокаДанных,ВыборкаРезультата);
		Если Не ЗначениеЗаполнено(ВыборкаРезультата.ДнейОтпуска) Тогда
			СтрокаДанных.ДнейОтпуска = Формат(ВыборкаРезультата.ДнейОтпускаДоп,"ЧЦ=3; ЧГ=0")
		Иначе
			СтрокаДанных.ДнейОтпуска = Формат(ВыборкаРезультата.ДнейОтпуска,"ЧЦ=3; ЧГ=0"); 
			Если ЗначениеЗаполнено(ВыборкаРезультата.ДнейОтпускаДоп) Тогда
				СтрокаДанных.ДнейОтпуска = СтрокаДанных.ДнейОтпуска	+ "(осн) + " + Формат(ВыборкаРезультата.ДнейОтпускаДоп,"ЧЦ=3; ЧГ=0") + "(доп)";
			КонецЕсли;
		КонецЕсли;
		
		Инд = Инд + 1;
		
	КонецЦикла;
	
	// Выводим строки по начислениям и отпуску в таблицу.
	Для каждого СтрокаТЗ Из ТаблицаКадрыИОтпуска Цикл
	
		ОбластьСтрокаКадровая = Макет.ПолучитьОбласть("СтрокаКадровая");
		ОбластьСтрокаКадровая.Параметры.Заполнить(СтрокаТЗ);
	    ДокументРезультат.Вывести(ОбластьСтрокаКадровая);
		
	КонецЦикла; 
	
	// Вывод пустой строки 
	Если ТаблицаКадрыИОтпуска.Количество()=0 Тогда
	
		ОбластьСтрокаКадроваяПустая = Макет.ПолучитьОбласть("СтрокаКадроваяПустая");
	    ДокументРезультат.Вывести(ОбластьСтрокаКадроваяПустая);
		
	КонецЕсли; 
	
	// УДЕРЖАНИЯ
	Запрос.УстановитьПараметр("Прекратить",	Перечисления.ВидыДействияСНачислением.Прекратить);
	Запрос.УстановитьПараметр("СпособРасчетаСуммой", Перечисления.СпособыРасчетаОплатыТруда.ФиксированнойСуммой);
	
	Запрос.Текст =	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НачалаУдержаний.ПериодУдержанияС КАК ПериодУдержанияС,
	|	НачалаУдержаний.ВидРасчета.Наименование КАК ВидУдержания,
	|	НачалаУдержаний.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	НачалаУдержаний.ДокументОснование.Дата КАК ДатаДок,
	|	НачалаУдержаний.ДокументОснование.Номер КАК НомерДок,
	|	НачалаУдержаний.Размер,
	|	НачалаУдержаний.Валюта,
	|	НачалаУдержаний.Валюта.Наименование КАК ИмяВалюты,
	|	ЕСТЬNULL(МИНИМУМ(ОкончанияУдержаний.Период), """") КАК ПериодУдержанияПо
	|ИЗ
	|	(ВЫБРАТЬ
	|		&ДатаАктуальностиС КАК ПериодУдержанияС,
	|		УдержанияРаботниковОрганизации.ВидРасчета КАК ВидРасчета,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.ПериодЗавершения <= &ДатаАктуальностиС
	|					И УдержанияРаботниковОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА УдержанияРаботниковОрганизации.ДействиеЗавершения
	|			ИНАЧЕ УдержанияРаботниковОрганизации.Действие
	|		КОНЕЦ КАК Действие,
	|		УдержанияРаботниковОрганизации.ДокументОснование КАК ДокументОснование,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.ПериодЗавершения <= &ДатаАктуальностиС
	|					И УдержанияРаботниковОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА УдержанияРаботниковОрганизации.Показатель1Завершения
	|			ИНАЧЕ УдержанияРаботниковОрганизации.Показатель1
	|		КОНЕЦ КАК Размер,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.ПериодЗавершения <= &ДатаАктуальностиС
	|					И УдержанияРаботниковОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА УдержанияРаботниковОрганизации.Валюта1Завершения
	|			ИНАЧЕ УдержанияРаботниковОрганизации.Валюта1
	|		КОНЕЦ КАК Валюта
	|	ИЗ
	|		РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(
	|			&ДатаАктуальностиС,
	|			ФизЛицо = &Физлицо
	|			    И Организация = &ГоловнаяОрганизация) КАК УдержанияРаботниковОрганизации
	|	ГДЕ
	|		ВЫБОР
	|				КОГДА УдержанияРаботниковОрганизации.ПериодЗавершения <= &ДатаАктуальностиС
	|						И УдержанияРаботниковОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА УдержанияРаботниковОрганизации.ДействиеЗавершения
	|				ИНАЧЕ УдержанияРаботниковОрганизации.Действие
	|			КОНЕЦ <> &Прекратить
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		УдержанияРаботниковОрганизации.Период,
	|		УдержанияРаботниковОрганизации.ВидРасчета,
	|		УдержанияРаботниковОрганизации.Действие,
	|		УдержанияРаботниковОрганизации.ДокументОснование,
	|		УдержанияРаботниковОрганизации.Показатель1,
	|		УдержанияРаботниковОрганизации.Валюта1
	|	ИЗ
	|		РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизации
	|	ГДЕ
	|		УдержанияРаботниковОрганизации.Период > &ДатаАктуальностиС
	|		И УдержанияРаботниковОрганизации.Период <= &ДатаАктуальностиПо
	|		И УдержанияРаботниковОрганизации.Организация = &ГоловнаяОрганизация
	|		И УдержанияРаботниковОрганизации.Действие <> &Прекратить
	|		И УдержанияРаботниковОрганизации.ФизЛицо = &Физлицо
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		УдержанияРаботниковОрганизации.ПериодЗавершения,
	|		УдержанияРаботниковОрганизации.ВидРасчета,
	|		УдержанияРаботниковОрганизации.ДействиеЗавершения,
	|		УдержанияРаботниковОрганизации.ДокументОснование,
	|		УдержанияРаботниковОрганизации.Показатель1Завершения,
	|		УдержанияРаботниковОрганизации.Валюта1Завершения
	|	ИЗ
	|		РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизации
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизацииПроверка
	|			ПО УдержанияРаботниковОрганизацииПроверка.Организация = УдержанияРаботниковОрганизации.Организация
	|				И УдержанияРаботниковОрганизацииПроверка.ФизЛицо = УдержанияРаботниковОрганизации.ФизЛицо
	|				И УдержанияРаботниковОрганизацииПроверка.ВидРасчета = УдержанияРаботниковОрганизации.ВидРасчета
	|				И УдержанияРаботниковОрганизацииПроверка.ДокументОснование = УдержанияРаботниковОрганизации.ДокументОснование
	|				И УдержанияРаботниковОрганизацииПроверка.Период > УдержанияРаботниковОрганизации.Период
	|				И УдержанияРаботниковОрганизацииПроверка.Период <= УдержанияРаботниковОрганизации.ПериодЗавершения
	|	ГДЕ
	|		УдержанияРаботниковОрганизации.ПериодЗавершения > &ДатаАктуальностиС
	|		И УдержанияРаботниковОрганизации.ФизЛицо = &Физлицо
	|		И УдержанияРаботниковОрганизации.ПериодЗавершения <= &ДатаАктуальностиПо
	|		И УдержанияРаботниковОрганизации.ДействиеЗавершения <> &Прекратить
	|		И УдержанияРаботниковОрганизации.Организация = &ГоловнаяОрганизация
	|		И УдержанияРаботниковОрганизацииПроверка.ФизЛицо ЕСТЬ NULL ) КАК НачалаУдержаний
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДОБАВИТЬКДАТЕ(УдержанияРаботниковОрганизации.Период, ДЕНЬ, -1) КАК Период,
	|			УдержанияРаботниковОрганизации.ВидРасчета КАК ВидРасчета,
	|			УдержанияРаботниковОрганизации.ДокументОснование КАК ДокументОснование
	|		ИЗ
	|			РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизации
	|		ГДЕ
	|			УдержанияРаботниковОрганизации.Период > &ДатаАктуальностиС
	|		И УдержанияРаботниковОрганизации.ФизЛицо = &Физлицо
	|			И УдержанияРаботниковОрганизации.Организация = &ГоловнаяОрганизация
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ДОБАВИТЬКДАТЕ(УдержанияРаботниковОрганизации.ПериодЗавершения, ДЕНЬ, -1),
	|			УдержанияРаботниковОрганизации.ВидРасчета,
	|			УдержанияРаботниковОрганизации.ДокументОснование
	|		ИЗ
	|			РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизации
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизацииПроверка
	|				ПО УдержанияРаботниковОрганизацииПроверка.Организация = УдержанияРаботниковОрганизации.Организация
	|					И УдержанияРаботниковОрганизацииПроверка.ФизЛицо = УдержанияРаботниковОрганизации.ФизЛицо
	|					И УдержанияРаботниковОрганизацииПроверка.ВидРасчета = УдержанияРаботниковОрганизации.ВидРасчета
	|					И УдержанияРаботниковОрганизацииПроверка.ДокументОснование = УдержанияРаботниковОрганизации.ДокументОснование
	|					И УдержанияРаботниковОрганизацииПроверка.Период > УдержанияРаботниковОрганизации.Период
	|					И УдержанияРаботниковОрганизацииПроверка.Период <= УдержанияРаботниковОрганизации.ПериодЗавершения
	|		ГДЕ
	|			УдержанияРаботниковОрганизации.ПериодЗавершения > &ДатаАктуальностиС
	|		И УдержанияРаботниковОрганизации.ФизЛицо = &Физлицо
	|			И УдержанияРаботниковОрганизации.Организация = &ГоловнаяОрганизация
	|			И УдержанияРаботниковОрганизацииПроверка.ФизЛицо ЕСТЬ NULL ) КАК ОкончанияУдержаний
	|		ПО НачалаУдержаний.ВидРасчета = ОкончанияУдержаний.ВидРасчета
	|			И НачалаУдержаний.ДокументОснование = ОкончанияУдержаний.ДокументОснование
	|			И НачалаУдержаний.ПериодУдержанияС <= ОкончанияУдержаний.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	НачалаУдержаний.ПериодУдержанияС,
	|	НачалаУдержаний.ВидРасчета,
	|	НачалаУдержаний.ДокументОснование,
	|	НачалаУдержаний.Размер,
	|	НачалаУдержаний.Валюта,
	|	НачалаУдержаний.ВидРасчета.Наименование,
	|	НачалаУдержаний.ВидРасчета.СпособРасчета,
	|	НачалаУдержаний.ДокументОснование.Дата,
	|	НачалаУдержаний.ДокументОснование.Номер,
	|	НачалаУдержаний.Валюта.Наименование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ПогашениеЗаймовРаботникамиОрганизаций.НачалоПогашения < ПогашениеЗаймовРаботникамиОрганизаций.Дата
	|			ТОГДА ПогашениеЗаймовРаботникамиОрганизаций.Дата
	|		ИНАЧЕ ПогашениеЗаймовРаботникамиОрганизаций.НачалоПогашения
	|	КОНЕЦ,
	|	""Погашение займа"",
	|	&СпособРасчетаСуммой,
	|	ПогашениеЗаймовРаботникамиОрганизаций.Дата,
	|	ПогашениеЗаймовРаботникамиОрганизаций.Номер,
	|	ПогашениеЗаймовРаботникамиОрганизаций.СуммаЗайма,
	|	ПогашениеЗаймовРаботникамиОрганизаций.ВалютаДокумента,
	|	ПогашениеЗаймовРаботникамиОрганизаций.ВалютаДокумента.Наименование,
	|	ДОБАВИТЬКДАТЕ(ПогашениеЗаймовРаботникамиОрганизаций.НачалоПогашения, МЕСЯЦ, ПогашениеЗаймовРаботникамиОрганизаций.СрокПогашения)
	|ИЗ
	|	Документ.ДоговорЗаймаСРаботником КАК ПогашениеЗаймовРаботникамиОрганизаций
	|ГДЕ
	|	ПогашениеЗаймовРаботникамиОрганизаций.ФизЛицо = &ФизЛицо
	|	И ПогашениеЗаймовРаботникамиОрганизаций.Организация = &Организация
	|	И ПогашениеЗаймовРаботникамиОрганизаций.Проведен
	|	И ПогашениеЗаймовРаботникамиОрганизаций.НачалоПогашения <= &ДатаАктуальностиПо
	|	И ДОБАВИТЬКДАТЕ(ПогашениеЗаймовРаботникамиОрганизаций.НачалоПогашения, МЕСЯЦ, ПогашениеЗаймовРаботникамиОрганизаций.СрокПогашения) >= &ДатаАктуальностиС
	|	И ПогашениеЗаймовРаботникамиОрганизаций.ОтражатьВБухгалтерскомУчете
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодУдержанияС";
	
	РезультатЗапроса 	= 	Запрос.Выполнить();
	ВыборкаРезультата	=	РезультатЗапроса.Выбрать();
	
	ОбластьШапкаУдержания = Макет.ПолучитьОбласть("ШапкаУдержания");
	ДокументРезультат.Вывести(ОбластьШапкаУдержания);
	
	Сч = 1;
	Пока ВыборкаРезультата.Следующий()	Цикл
		
		ВидУдержания = ВыборкаРезультата.ВидУдержания + Символы.ПС + "(" + ВыборкаРезультата.НомерДок + " от " + Формат(ВыборкаРезультата.ДатаДок,"ДФ=dd.MM.yyyy") + ")";
		
		Если Сч = 1 Тогда
			
			ОбластьСтрокаУдержания   = Макет.ПолучитьОбласть("СтрокаУдержания");
			ОбластьСтрокаУдержания.Параметры.СуммаУдержания1 = 0;
			ОбластьСтрокаУдержания.Параметры.СуммаУдержания2 = 0;
			
		КонецЕсли; 
		
		ОбластьСтрокаУдержания.Параметры["ВидУдержания"+Сч]	 = ВидУдержания;
		ОбластьСтрокаУдержания.Параметры["ПериодУдержанияС"+Сч] = ВыборкаРезультата.ПериодУдержанияС;
		ОбластьСтрокаУдержания.Параметры["ПериодУдержанияПо"+Сч] = ВыборкаРезультата.ПериодУдержанияПо;
		Если ВыборкаРезультата.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.Процентом Тогда
			ОбластьСтрокаУдержания.Параметры["СуммаУдержания"+Сч] = "" + ВыборкаРезультата.Размер + "(%)";
		Иначе
			
			Если ВыборкаРезультата.Валюта = РеглВалюта ИЛИ НЕ ЗначениеЗаполнено(ВыборкаРезультата.ИмяВалюты) Тогда
				ОбластьСтрокаУдержания.Параметры["СуммаУдержания"+Сч] = ВыборкаРезультата.Размер;
			Иначе
				ОбластьСтрокаУдержания.Параметры["СуммаУдержания"+Сч] = Формат(ВыборкаРезультата.Размер,"ЧЦ=15; ЧДЦ=2; ЧН=' '") + " (" + ВыборкаРезультата.ИмяВалюты + ")"
			КонецЕсли;
			
		КонецЕсли; 
		
		// для четных удержаний выводим строку
		Если Сч = 2 Тогда
			ДокументРезультат.Вывести(ОбластьСтрокаУдержания)
		КонецЕсли; 
		
		Сч = ?(Сч = 1, 2, 1);
		
	КонецЦикла;
	
	// если удержаний не четное количество, то тогда выведем последнюю строку (в цикле не успели)
	Если Сч = 2 Тогда
		ДокументРезультат.Вывести(ОбластьСтрокаУдержания)
	КонецЕсли; 
	
	// Вывод пустой строки с удержаниями
	Если РезультатЗапроса.Пустой() Тогда
		
		ОбластьСтрокаУдержанияПустая = Макет.ПолучитьОбласть("СтрокаУдержанияПустая");
		ДокументРезультат.Вывести(ОбластьСтрокаУдержанияПустая);
		
	КонецЕсли;  
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ДокументРезультат.Вывести(ОбластьПодвал);
    
	
	// РАСЧЕТНЫЕ ЛИСТКИ
	ОтчетРасчетныеЛистки = Отчеты.РасчетныеЛисткиОрганизаций.Создать();

	ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасчетныеЛистки.КомпоновщикНастроек, "Организация", Организация);
	ТиповыеОтчеты.ДобавитьОтбор(ОтчетРасчетныеЛистки.КомпоновщикНастроек, "ФизЛицо",     Физлицо);
	
	ТиповыеОтчеты.УстановитьПараметр(ОтчетРасчетныеЛистки.КомпоновщикНастроек, "НачалоПериода", Дата(Год, 01, 01));
	ТиповыеОтчеты.УстановитьПараметр(ОтчетРасчетныеЛистки.КомпоновщикНастроек, "КонецПериода",  Дата(Год, 12, 31, 23, 59, 59));
	ТиповыеОтчеты.УстановитьПараметр(ОтчетРасчетныеЛистки.КомпоновщикНастроек, "Группировать",  ложь);
	ТиповыеОтчеты.УстановитьПараметр(ОтчетРасчетныеЛистки.КомпоновщикНастроек, "ВидРасчетногоЛистка",  "Подробно");

    РасчетныеЛисткиОрганизацийОтчет = Новый ТабличныйДокумент;
	ОтчетРасчетныеЛистки.СформироватьОтчет(РасчетныеЛисткиОрганизацийОтчет);
    
    // таким способом размещаются отчеты без форматов строк
    ОбластьПрямоугольная = РасчетныеЛисткиОрганизацийОтчет.Область(1, 1, РасчетныеЛисткиОрганизацийОтчет.ВысотаТаблицы, РасчетныеЛисткиОрганизацийОтчет.ШиринаТаблицы);
    НачалоНовогоФорматаСтрок = ДокументРезультат.ВысотаТаблицы + 1;
    ДокументРезультат.Область(НачалоНовогоФорматаСтрок, , НачалоНовогоФорматаСтрок + РасчетныеЛисткиОрганизацийОтчет.ВысотаТаблицы - 1, ).СоздатьФорматСтрок();
    // назначим ширину колонок у новой области формата строк
    Для Счетчик = 1 По РасчетныеЛисткиОрганизацийОтчет.ШиринаТаблицы Цикл
        ДокументРезультат.Область(НачалоНовогоФорматаСтрок, Счетчик).ШиринаКолонки = РасчетныеЛисткиОрганизацийОтчет.Область(1, Счетчик).ШиринаКолонки;
    КонецЦикла;
    ДокументРезультат.ВставитьОбласть(ОбластьПрямоугольная, ДокументРезультат.Область(НачалоНовогоФорматаСтрок, 1));
	
КонецПроцедуры	

#КонецЕсли

