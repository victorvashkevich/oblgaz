
#Если Клиент Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Добавляет строку в таблицу ТДанных
Процедура ОписаниеСтрокиДанных(ТДанных, НомерСтрокиОтчета, ИмяСтрокиОтчета, Категории)
	
	Строка = ТДанных.Добавить();
	Строка.НомерСтрокиОтчета = НомерСтрокиОтчета;
	Строка.ИмяСтрокиОтчета = ИмяСтрокиОтчета;
	Строка.Категории = Категории;

КонецПроцедуры
 

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом,
//	ЕстьОшибки - флаг того, что при формировании произошли ошибки
//
Процедура СформироватьОтчет(ДокументРезультат, ЕстьОшибки) Экспорт
	
	ОтборВоенкомат = ТипЗнч(ПараметрОтбора) = Тип("Структура");
	Если ОтборВоенкомат Тогда
		ОтборВоенкомат			= ПараметрОтбора.ФлажокНастройкиВоенкомат;
		ВидСравненияВоенкомат	= ПараметрОтбора.ПолеВидаСравненияВоенкомат;
		Военкомат				= ПараметрОтбора.ПолеНастройкиВоенкомат;
		Организация				= ПараметрОтбора.Организация;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	УсловиеПоРегиструВоинскогоУчета = "&ДатаАктуальности,";
	
	Если ОтборВоенкомат Тогда
		
		Запрос.УстановитьПараметр("Военкомат", Военкомат);
	
		Если ВидСравненияВоенкомат = ВидСравнения.Равно Тогда
			ВидСравненияСтрокой = "=" 
		ИначеЕсли ВидСравненияВоенкомат = ВидСравнения.НеРавно Тогда
			ВидСравненияСтрокой = "<>"
		ИначеЕсли ВидСравненияВоенкомат = ВидСравнения.ВСписке Тогда
			ВидСравненияСтрокой = "В"
		ИначеЕсли ВидСравненияВоенкомат = ВидСравнения.НеВСписке Тогда
			ВидСравненияСтрокой = "НЕ В"
		КонецЕсли;
		
		УсловиеПоРегиструВоинскогоУчета =  УсловиеПоРегиструВоинскогоУчета + "Военкомат " + ВидСравненияСтрокой + " (&Военкомат)"
		
	КонецЕсли;
	
	СписокОфицерскихЗваний	=	Новый СписокЗначений;
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.МладшийЛейтенант);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.Лейтенант);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.СтаршийЛейтенант);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.Капитан);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.Майор);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.Подполковник);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.Полковник);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.ГенералМайор);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.ГенералЛейтенант);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.ГенералПолковник);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.ГенералАрмии);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.МаршалРоссийскойФедерации);
	
	СписокЗванийПрапорщиков	=	Новый СписокЗначений;
	СписокЗванийПрапорщиков.Добавить(Справочники.ВоинскиеЗвания.Прапорщик);
	СписокЗванийПрапорщиков.Добавить(Справочники.ВоинскиеЗвания.СтаршийПрапорщик);
	СписокЗванийПрапорщиков.Добавить(Справочники.ВоинскиеЗвания.МладшийСержант);
	СписокЗванийПрапорщиков.Добавить(Справочники.ВоинскиеЗвания.Сержант);
	СписокЗванийПрапорщиков.Добавить(Справочники.ВоинскиеЗвания.СтаршийСержант);
	СписокЗванийПрапорщиков.Добавить(Справочники.ВоинскиеЗвания.Старшина);
	
	СписокСолдатскихЗваний	=	Новый СписокЗначений;
	СписокСолдатскихЗваний.Добавить(Справочники.ВоинскиеЗвания.Рядовой);
	СписокСолдатскихЗваний.Добавить(Справочники.ВоинскиеЗвания.Ефрейтор);
	
	СписокГодныеКСлужбе = Новый СписокЗначений;
	СписокГодныеКСлужбе.Добавить(Перечисления.ГодностьКВоеннойСлужбе.Годен);
	СписокГодныеКСлужбе.Добавить(Перечисления.ГодностьКВоеннойСлужбе.ГоденСОграничениями);
	СписокГодныеКСлужбе.Добавить(Перечисления.ГодностьКВоеннойСлужбе.ВременноНеГоден);	
	
	Запрос.УстановитьПараметр("ДатаАктуальности",	ДатаАктуальности);
	Запрос.УстановитьПараметр("Организация",		Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Офицеры",			СписокОфицерскихЗваний);
	Запрос.УстановитьПараметр("Прапорщики",			СписокЗванийПрапорщиков);
	Запрос.УстановитьПараметр("Солдаты",			СписокСолдатскихЗваний);
	Запрос.УстановитьПараметр("Военнообязанный",	Перечисления.ОтношениеКВоинскойОбязанности.Военнообязанный);
	Запрос.УстановитьПараметр("СписокГодныеКСлужбе",СписокГодныеКСлужбе);
	Запрос.УстановитьПараметр("До30лет",			ДобавитьМесяц(ДатаАктуальности, -12*30));
	Запрос.УстановитьПараметр("До35лет",			ДобавитьМесяц(ДатаАктуальности, -12*35));
	Запрос.УстановитьПараметр("До40лет",			ДобавитьМесяц(ДатаАктуальности, -12*40));
	Запрос.УстановитьПараметр("До45лет",			ДобавитьМесяц(ДатаАктуальности, -12*45));
	Запрос.УстановитьПараметр("До50лет",			ДобавитьМесяц(ДатаАктуальности, -12*50));
	Запрос.УстановитьПараметр("Призывник",			Перечисления.ОтношениеКВоинскойОбязанности.Призывник);
	Запрос.УстановитьПараметр("Руководители",		Перечисления.КатегорииДолжностейДляВоинскогоУчета.Руководители);
	Запрос.УстановитьПараметр("Специалисты",		Перечисления.КатегорииДолжностейДляВоинскогоУчета.СпециалистыСХ);
	Запрос.УстановитьПараметр("ДругиеСлужащие",		Перечисления.КатегорииДолжностейДляВоинскогоУчета.ДругиеСлужащие);
	Запрос.УстановитьПараметр("Рабочие",			Перечисления.КатегорииДолжностейДляВоинскогоУчета.РабочиеСХ);
	Запрос.УстановитьПараметр("ПустаяКатегорияВоинскогоУчета", Перечисления.КатегорииДолжностейДляВоинскогоУчета.ПустаяСсылка());
	Запрос.УстановитьПараметр("ВнутреннееСовместительство", Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
	
	ТекстОсновногоЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	РаботникиОрганизации.Должность.КатегорияВоинскогоУчета КАК ДолжностьКатегория,
	//vvv комментируем, исправляем, в отчет должны попасть все люди, а не только те, кто стоит на учете
	//|	ВУ.КатегорияДолжностиДляВоинскогоУчета КАК ДолжностьКатегория,
	|	ВЫБОР
	|		КОГДА (РаботникиОрганизации.Должность.КатегорияВоинскогоУчета=ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.Водители))
	|			ТОГДА РаботникиОрганизации.Должность.КатегорияВоинскогоУчета 
	|		КОГДА (РаботникиОрганизации.Должность.КатегорияСтатистическогоУчета=ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляСтатистическогоУчета.Рабочие)) 
	|			И (РаботникиОрганизации.Разряд="""")
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.РабочиеНеИмеющиеТарифныхСтавок)
	|		КОГДА (РаботникиОрганизации.Должность.КатегорияСтатистическогоУчета=ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляСтатистическогоУчета.Рабочие)) 
	|			И (РаботникиОрганизации.Разряд=""1"" ИЛИ РаботникиОрганизации.Разряд=""2"")
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.Рабочие1_2Разрядов)
	|		КОГДА (РаботникиОрганизации.Должность.КатегорияСтатистическогоУчета=ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляСтатистическогоУчета.Рабочие)) 
	|			И (РаботникиОрганизации.Разряд=""3"" ИЛИ РаботникиОрганизации.Разряд=""4"")
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.Рабочие3_4Разрядов)
	|		КОГДА (РаботникиОрганизации.Должность.КатегорияСтатистическогоУчета=ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляСтатистическогоУчета.Рабочие)) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.Рабочие5РазрядаИВыше)
	|		ИНАЧЕ РаботникиОрганизации.Должность.КатегорияВоинскогоУчета
	|	КОНЕЦ КАК ДолжностьКатегория,
	//
	|	СУММА(1) КАК ВсегоРаботающих,
	|	СУММА(ВЫБОР КОГДА ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК ВсегоВЗапасе,
	|	СУММА(ВЫБОР КОГДА ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный И ВУ.Звание.ОбщевойсковоеЗвание В (&Офицеры) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК ОфицеровВЗапасе,
	|	СУММА(ВЫБОР КОГДА ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный И ВУ.Звание.ОбщевойсковоеЗвание В (&Прапорщики) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК ПрапорщиковВЗапасе,
	|	СУММА(ВЫБОР КОГДА ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный И ВУ.Звание.ОбщевойсковоеЗвание В (&Солдаты) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК СолдатВЗапасе,
	|	СУММА(ВЫБОР КОГДА ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный И НЕ(ВУ.Годность В (&СписокГодныеКСлужбе)) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК ПрапорщиковСолдатОграниченноГодныхВЗапасе,
	|	СУММА(ВЫБОР КОГДА ВУ.ЗабронированОрганизацией = &Организация И ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК ВсегоВЗапасеЗабронировано,
	|	СУММА(ВЫБОР КОГДА ВУ.ЗабронированОрганизацией = &Организация И ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный И ВУ.Звание.ОбщевойсковоеЗвание В (&Офицеры) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК ОфицеровЗабронировано,
	|	СУММА(ВЫБОР КОГДА ВУ.ЗабронированОрганизацией = &Организация И ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный И НЕ(ВУ.Звание.ОбщевойсковоеЗвание В (&Офицеры)) И РаботникиОрганизации.ФизЛицо.ДатаРождения > &До30лет ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК ПрапорщиковСолдатДо30Забронировано,
	|	СУММА(ВЫБОР КОГДА ВУ.ЗабронированОрганизацией = &Организация И ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный И НЕ(ВУ.Звание.ОбщевойсковоеЗвание В (&Офицеры)) И РаботникиОрганизации.ФизЛицо.ДатаРождения > &До35лет И РаботникиОрганизации.ФизЛицо.ДатаРождения <= &До30лет ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК ПрапорщиковСолдатОт31До35Забронировано,
	|	СУММА(ВЫБОР КОГДА ВУ.ЗабронированОрганизацией = &Организация И ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный И НЕ(ВУ.Звание.ОбщевойсковоеЗвание В (&Офицеры)) И РаботникиОрганизации.ФизЛицо.ДатаРождения > &До40лет И РаботникиОрганизации.ФизЛицо.ДатаРождения <= &До35лет ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК ПрапорщиковСолдатОт36До40Забронировано,
	|	СУММА(ВЫБОР КОГДА ВУ.ЗабронированОрганизацией = &Организация И ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный И НЕ(ВУ.Звание.ОбщевойсковоеЗвание В (&Офицеры)) И РаботникиОрганизации.ФизЛицо.ДатаРождения > &До45лет И РаботникиОрганизации.ФизЛицо.ДатаРождения <= &До40лет ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК ПрапорщиковСолдатОт41До45Забронировано,
	|	СУММА(ВЫБОР КОГДА ВУ.ЗабронированОрганизацией = &Организация И ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный И НЕ(ВУ.Звание.ОбщевойсковоеЗвание В (&Офицеры)) И РаботникиОрганизации.ФизЛицо.ДатаРождения > &До50лет И РаботникиОрганизации.ФизЛицо.ДатаРождения <= &До45лет ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК ПрапорщиковСолдатОт46До50Забронировано,
	|	СУММА(ВЫБОР КОГДА НЕ(ВУ.ЗабронированОрганизацией = &Организация) И ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный И НЕ(ВУ.НаличиеМобпредписания) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК НезабронированноБезМобпредписаний,
	|	СУММА(ВЫБОР КОГДА НЕ(ВУ.ЗабронированОрганизацией = &Организация) И ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный И ВУ.НаличиеМобпредписания ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК НезабронированноСМобпредписанием,
	|	СУММА(ВЫБОР КОГДА НЕ(ВУ.ЗабронированОрганизацией = &Организация) И ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный И ВУ.НаличиеМобпредписания И ВУ.Звание.ОбщевойсковоеЗвание В (&Офицеры) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК НезабронированноОфицеровСМобпредписанием,
	|	СУММА(ВЫБОР КОГДА ВУ.ОтношениеКВоинскойОбязанности = &Призывник ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК Призывников,
	|	СУММА(ВЫБОР КОГДА ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный И ВУ.НаличиеМобпредписания ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК ВЗапасеСМобпредписанием,
	|	СУММА(ВЫБОР КОГДА ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный И ВУ.НаличиеМобпредписания И ВУ.Звание.ОбщевойсковоеЗвание В (&Офицеры) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК ВЗапасеСМобпредписаниемОфицеров
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаАктуальности
	|					И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ДолжностьЗавершения
	|			ИНАЧЕ РаботникиОрганизацииСрезПоследних.Должность 
	|		КОНЕЦ КАК Должность,
	//vvv
	|		РаботникиОрганизацииСрезПоследних.РазрядЕТС КАК Разряд,
	//
	|		РаботникиОрганизацииСрезПоследних.Сотрудник.Физлицо КАК ФизЛицо
	|	ИЗ
	|		РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаАктуальности, Организация = &ГоловнаяОрганизация И Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК РаботникиОрганизацииСрезПоследних
	|	
	|	ГДЕ
	|		ВЫБОР
	|			КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаАктуальности
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделениеЗавершения
	|			ИНАЧЕ РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделение 
	|		КОНЕЦ = &Организация 
	|		И
	|		ВЫБОР
	|			КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаАктуальности
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ПричинаИзмененияСостоянияЗавершения
	|			ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПричинаИзмененияСостояния 
	|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)) КАК РаботникиОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВоинскийУчет.СрезПоследних(" + УсловиеПоРегиструВоинскогоУчета + ") КАК ВУ
	|		ПО РаботникиОрганизации.ФизЛицо = ВУ.Физлицо
	|
	//vvv комментируем
	//|ГДЕ
	//|	ВУ.КатегорияДолжностиДляВоинскогоУчета <> &ПустаяКатегорияВоинскогоУчета
	//
	|
	|СГРУППИРОВАТЬ ПО
	//|	РаботникиОрганизации.Должность.КатегорияВоинскогоУчета";
	//|	ВУ.КатегорияДолжностиДляВоинскогоУчета";
	//vvv
	|	ВЫБОР
	|		КОГДА (РаботникиОрганизации.Должность.КатегорияВоинскогоУчета=ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.Водители))
	|			ТОГДА РаботникиОрганизации.Должность.КатегорияВоинскогоУчета
	|		КОГДА (РаботникиОрганизации.Должность.КатегорияСтатистическогоУчета=ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляСтатистическогоУчета.Рабочие)) 
	|			И (РаботникиОрганизации.Разряд="""")
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.РабочиеНеИмеющиеТарифныхСтавок)
	|		КОГДА (РаботникиОрганизации.Должность.КатегорияСтатистическогоУчета=ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляСтатистическогоУчета.Рабочие)) 
	|			И (РаботникиОрганизации.Разряд=""1"" ИЛИ РаботникиОрганизации.Разряд=""2"")
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.Рабочие1_2Разрядов)
	|		КОГДА (РаботникиОрганизации.Должность.КатегорияСтатистическогоУчета=ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляСтатистическогоУчета.Рабочие)) 
	|			И (РаботникиОрганизации.Разряд=""3"" ИЛИ РаботникиОрганизации.Разряд=""4"")
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.Рабочие3_4Разрядов)
	|		КОГДА (РаботникиОрганизации.Должность.КатегорияСтатистическогоУчета=ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляСтатистическогоУчета.Рабочие)) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.Рабочие5РазрядаИВыше)
	|		ИНАЧЕ РаботникиОрганизации.Должность.КатегорияВоинскогоУчета
	|	КОНЕЦ";
	//
	
	ДокументРезультат.Очистить();
	Макет 			= ПолучитьМакет("Форма6");
	ОбластьШапка 	= Макет.ПолучитьОбласть("ШапкаФормы6");
	ОбластьШапка.Параметры.ГодОтчета			= "за " +Формат(ДатаАктуальности, "ДФ=гггг") + " год";
	ОбластьШапка.Параметры.НазваниеОрганизации 	= Организация.Наименование;
	ДокументРезультат.Присоединить(ОбластьШапка);
	
	ТДанных = Новый ТаблицаЗначений;
	ТДанных.Колонки.Добавить("НомерСтрокиОтчета", ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(10));
	ТДанных.Колонки.Добавить("ИмяСтрокиОтчета", ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(100));
	ТДанных.Колонки.Добавить("Категории");
	ОписаниеТипаЧисла = ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(10,0);
	ТДанных.Колонки.Добавить("ВсегоРаботающих", ОписаниеТипаЧисла);
	ТДанных.Колонки.Добавить("ВсегоВЗапасе", ОписаниеТипаЧисла);
	ТДанных.Колонки.Добавить("ОфицеровВЗапасе", ОписаниеТипаЧисла);
	ТДанных.Колонки.Добавить("ПрапорщиковВЗапасе", ОписаниеТипаЧисла);
	ТДанных.Колонки.Добавить("СолдатВЗапасе", ОписаниеТипаЧисла);
	ТДанных.Колонки.Добавить("ПрапорщиковСолдатОграниченноГодныхВЗапасе", ОписаниеТипаЧисла);
	ТДанных.Колонки.Добавить("ВсегоВЗапасеЗабронировано", ОписаниеТипаЧисла);
	ТДанных.Колонки.Добавить("ОфицеровЗабронировано", ОписаниеТипаЧисла);
	ТДанных.Колонки.Добавить("ПрапорщиковСолдатДо30Забронировано", ОписаниеТипаЧисла);
	ТДанных.Колонки.Добавить("ПрапорщиковСолдатОт31До35Забронировано", ОписаниеТипаЧисла);
	ТДанных.Колонки.Добавить("ПрапорщиковСолдатОт36До40Забронировано", ОписаниеТипаЧисла);
	ТДанных.Колонки.Добавить("ПрапорщиковСолдатОт41До45Забронировано", ОписаниеТипаЧисла);
	ТДанных.Колонки.Добавить("ПрапорщиковСолдатОт46До50Забронировано", ОписаниеТипаЧисла);
	ТДанных.Колонки.Добавить("НезабронированноБезМобпредписаний", ОписаниеТипаЧисла);
	ТДанных.Колонки.Добавить("Призывников", ОписаниеТипаЧисла);
	ТДанных.Колонки.Добавить("ВЗапасеСМобпредписанием", ОписаниеТипаЧисла);
	ТДанных.Колонки.Добавить("ВЗапасеСМобпредписаниемОфицеров", ОписаниеТипаЧисла);
	
	Категории = Перечисления.КатегорииДолжностейДляВоинскогоУчета;
	// список всех категорий срециалистов
	СпВсеСпециалисты = Новый СписокЗначений;
	СпВсеСпециалисты.Добавить(Категории.ПрочиеСпециалисты);
	СпВсеСпециалисты.Добавить(Категории.СпециалистыСХ);
	СпВсеСпециалисты.Добавить(Категории.СпециалистыТорговлиИОбщепита);
	СпВсеСпециалисты.Добавить(Категории.СпециалистыНауки);
	СпВсеСпециалисты.Добавить(Категории.СпециалистыКультуры);
	СпВсеСпециалисты.Добавить(Категории.СпециалистыОбразования);
	СпВсеСпециалисты.Добавить(Категории.Врачи);
	СпВсеСпециалисты.Добавить(Категории.СреднийМедицинскийПерсонал);
	// Список специалистов здравохранения
	СпСпециалистыЗдравохранения = Новый СписокЗначений;
	СпСпециалистыЗдравохранения.Добавить(Категории.Врачи);
	СпСпециалистыЗдравохранения.Добавить(Категории.СреднийМедицинскийПерсонал);
	// Список всех категорий рабочих
	СпВсеРабочие = Новый СписокЗначений;
	СпВсеРабочие.Добавить(Категории.ПрочиеРабочие);
	СпВсеРабочие.Добавить(Категории.Рабочие1_2Разрядов);
	СпВсеРабочие.Добавить(Категории.Рабочие3_4Разрядов);
	СпВсеРабочие.Добавить(Категории.Рабочие5РазрядаИВыше);
	СпВсеРабочие.Добавить(Категории.РабочиеНеИмеющиеТарифныхСтавок);
	СпВсеРабочие.Добавить(Категории.РабочиеСХ);
	СпВсеРабочие.Добавить(Категории.РабочиеЛокомотивныхБригад);
	СпВсеРабочие.Добавить(Категории.Водители);
	СпВсеРабочие.Добавить(Категории.Трактористы);
	
	ОписаниеСтрокиДанных(ТДанных, "1", 	"Руководители", 						Категории.Руководители);
	ОписаниеСтрокиДанных(ТДанных, "2", 	"Специалисты - всего", 					СпВсеСпециалисты);
	ОписаниеСтрокиДанных(ТДанных, "", 	"из них:", 								Неопределено);
	ОписаниеСтрокиДанных(ТДанных, "3", 	" - сельского хозяйства",				Категории.СпециалистыСХ);
	ОписаниеСтрокиДанных(ТДанных, "4", 	" - торговли и общественного питания", 	Категории.СпециалистыТорговлиИОбщепита);
	ОписаниеСтрокиДанных(ТДанных, "5", 	" - науки", 							Категории.СпециалистыНауки);
	ОписаниеСтрокиДанных(ТДанных, "6", 	" - культуры и искусства", 				Категории.СпециалистыКультуры);
	ОписаниеСтрокиДанных(ТДанных, "7", 	" - образования", 						Категории.СпециалистыОбразования);
	ОписаниеСтрокиДанных(ТДанных, "8", 	" - здравохранения - всего", 			СпСпециалистыЗдравохранения);
	ОписаниеСтрокиДанных(ТДанных, "", 	"в том числе:", 						Неопределено);
	ОписаниеСтрокиДанных(ТДанных, "9", 	" - врачи", 							Категории.Врачи);
	ОписаниеСтрокиДанных(ТДанных, "10",	" - средний медицинский персонал", 		Категории.СреднийМедицинскийПерсонал);
	ОписаниеСтрокиДанных(ТДанных, "11",	"Другие служащие", 						Категории.ДругиеСлужащие);
	ОписаниеСтрокиДанных(ТДанных, "12",	"Рабочие всего", 						СпВсеРабочие);
	ОписаниеСтрокиДанных(ТДанных, "  ",	"в том числе:", 						Неопределено);
	ОписаниеСтрокиДанных(ТДанных, "13",	" - 1-2 разрядов", 						Категории.Рабочие1_2Разрядов);
	ОписаниеСтрокиДанных(ТДанных, "14",	" - 3-4 разрядов", 						Категории.Рабочие3_4Разрядов);
	ОписаниеСтрокиДанных(ТДанных, "15",	" - 5-го разряда и выше", 				Категории.Рабочие5РазрядаИВыше);
	ОписаниеСтрокиДанных(ТДанных, "16",	" - не имеющие тарифных ставок",		Категории.РабочиеНеИмеющиеТарифныхСтавок);
	ОписаниеСтрокиДанных(ТДанных, "17",	" - сельскохозяйственного производства",Категории.РабочиеСХ);
	ОписаниеСтрокиДанных(ТДанных, "18",	" - локомотивных бригад", 				Категории.РабочиеЛокомотивныхБригад);
	ОписаниеСтрокиДанных(ТДанных, "19",	" - водители", 							Категории.Водители);
	ОписаниеСтрокиДанных(ТДанных, "20",	" - трактористы",						Категории.Трактористы);
	ОписаниеСтрокиДанных(ТДанных, "  ",	"Из численности руководителей,",		Неопределено);
	ОписаниеСтрокиДанных(ТДанных, "  ",	"специалистов и рабочих:",				Неопределено);
	ОписаниеСтрокиДанных(ТДанных, "21",	" - летно-подъемный состав",			Неопределено);
	ОписаниеСтрокиДанных(ТДанных, "22",	" - плавающий состав",					Неопределено);
	ОписаниеСтрокиДанных(ТДанных, "23",	"Учащиеся",								Категории.Учащиеся);
	ОписаниеСтрокиДанных(ТДанных, "24",	"ИТОГО (сумма строк 1+2+11+12+23)", 	"ИТОГО");
	ОписаниеСтрокиДанных(ТДанных, "25",	"По небронируемым организациям",		Неопределено);
	ОписаниеСтрокиДанных(ТДанных, "26",	"ВСЕГО (сумма строк 24+25)", 			"ИТОГО");
	
	// Выполним запрос
	
	Запрос.Текст = ТекстОсновногоЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	// подсчитаем значения показателей для каждой строки отчета
	Пока Выборка.Следующий() Цикл
		
		Для каждого Строка Из ТДанных Цикл
			//фильтр на принадлежность категории строке 
			Если Строка.Категории = "ИТОГО" Тогда
				//в итоговую строку должны войти все категории 
			ИначеЕсли Строка.Категории = Неопределено Тогда
				Продолжить;
			ИначеЕсли ТипЗнч(Строка.Категории) = Тип("СписокЗначений") Тогда
				Если Строка.Категории.НайтиПоЗначению(Выборка.ДолжностьКатегория) = Неопределено Тогда
					Продолжить;
				КонецЕсли;	
			ИначеЕсли  Выборка.ДолжностьКатегория <> Строка.Категории Тогда
				Продолжить;
			КонецЕсли; 		
			
			// подсчет показателей строки
			Для К =3 По ТДанных.Колонки.Количество()-1 Цикл // начинаем с колонки "ВсегоРаботающих"
				ИмяКолонки = ТДанных.Колонки[К].Имя;
				Строка[ИмяКолонки] = Строка[ИмяКолонки] + Выборка[ИмяКолонки];
			КонецЦикла; 
		КонецЦикла; 
		
	КонецЦикла; 
	
	// Вывод данных
	ОбластьСтрока 	= Макет.ПолучитьОбласть("СтрокаФормы6");
	Для каждого Строка Из ТДанных Цикл
		ОбластьСтрока.Параметры.Заполнить(Строка);
		ДокументРезультат.Присоединить(ОбластьСтрока);
	КонецЦикла; 
	
	ЖирныйШрифт = Новый Шрифт(Макет.Область(1,1).Шрифт,,,Истина);
	ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы-2, 2, ДокументРезультат.ВысотаТаблицы-2, ДокументРезультат.ШиринаТаблицы).Шрифт = ЖирныйШрифт;
	ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы-2, 2, ДокументРезультат.ВысотаТаблицы-2, ДокументРезультат.ШиринаТаблицы).Шрифт = ЖирныйШрифт;
	ОбластьПодвал = Макет.ПолучитьОбласть("ПодвалФормы6");
	Исполнитель	= "";
	СтруктураОтветственныхЛиц = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация,ДатаАктуальности,Исполнитель);
	ОбластьПодвал.Параметры.ДолжностьРуководителя = СтруктураОтветственныхЛиц.РуководительДолжность;
	ОбластьПодвал.Параметры.ФИОРуководителя		  = СтруктураОтветственныхЛиц.Руководитель;
	
	Если ТипЗнч(ОбластьПодвал)	=	Тип("ТабличныйДокумент")	тогда
		ДокументРезультат.Присоединить(ОбластьПодвал);
	КонецЕсли;
	
	//Параметры документа
	ДокументРезультат.Автомасштаб 			= Истина;
	ДокументРезультат.ОриентацияСтраницы 	= ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.Защита              	= Ложь;
	
КонецПроцедуры

#КонецЕсли

