
#Если Клиент Тогда

// Преобразует значение в число
Функция ПараметрВЧисло(Параметр)
	Если Параметр = Неопределено Или Параметр = NULL Тогда
		Возврат 0;
	Иначе	
		Возврат Параметр;
	КонецЕсли; 
КонецФункции
 
////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Заполняет табличный документ
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом,
//
Процедура СформироватьОтчет(ДокументРезультат) Экспорт

	Отказ = Ложь;
	
	// Проверка параметров
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана организация!", Отказ);
	КонецЕсли; 
	Если НЕ ЗначениеЗаполнено(НалоговыйПериод) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указан налоговый период!", Отказ);
	КонецЕсли; 
	Если НЕ ЗначениеЗаполнено(Физлицо) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указан работник организации!", Отказ);
	КонецЕсли; 
	Если Отказ Тогда
		Возврат ;
	КонецЕсли; 	
	
	ДокументРезультат.Очистить();
	Макет =	ПолучитьМакет("ИндивидуальнаяКарточкаОПС");

	// Расчет вычисляемых параметров
	ГодНП = Формат(НалоговыйПериод, "ЧГ=0");
	ДатаНачалаНП = НачалоГода(Дата(ГодНП,1,1));
	ДатаКонцаНП = КонецГода(Дата(ГодНП,1,1));
	ГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
	
	// Создание запроса и установка всех необходимых параметров
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
	Запрос.УстановитьПараметр("НачалоНП", ДатаНачалаНП);
	Запрос.УстановитьПараметр("ГодНП", Год(ДатаНачалаНП));
	Запрос.УстановитьПараметр("КонецНП", ДатаКонцаНП);
	Запрос.УстановитьПараметр("ВидАдресаРегистрации" , Справочники.ВидыКонтактнойИнформации.ЮрАдресФизЛица);
	Запрос.УстановитьПараметр("ВидАдресаФактический" , Справочники.ВидыКонтактнойИнформации.ФактАдресФизЛица);
    Запрос.УстановитьПараметр("КодДоходаНеОбъект", Справочники.ДоходыЕСН.НеЯвляетсяОбъектом);
    Запрос.УстановитьПараметр("КодДоходаПособияЗаСчетФСС", Справочники.ДоходыЕСН.ПособияЗаСчетФСС);
    Запрос.УстановитьПараметр("КодДоходаВыплатыЗаСчетПрибыли", Справочники.ДоходыЕСН.ВыплатыЗаСчетПрибыли);
    Запрос.УстановитьПараметр("КодДоходаНеОблагаетсяЦеликом", Справочники.ДоходыЕСН.НеОблагаетсяЦеликом);
	Запрос.УстановитьПараметр("ВнутреннееСовместительство", Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
    СписокСтруктурныхПодразделений = ПроцедурыУправленияПерсоналом.ПолучитьСписокОбособленныхПодразделенийОрганизации(ГоловнаяОрганизация);
	СписокСтруктурныхПодразделений.Добавить(ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("СписокСтруктурныхПодразделений", СписокСтруктурныхПодразделений);
		
	// ---------------------------------------------------------------------------
	// Тексты запросов
	//

	// Сформируем текст запроса выборки месяцев налогового периода
	МесяцыНПТекст = "ВЫБРАТЬ 1 КАК МЕСЯЦ";
	Для Сч = 2 По 12 Цикл
    	МесяцыНПТекст = МесяцыНПТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ " + Сч;
	КонецЦикла;
	
	//-----------------------------------------------------------------------------
	// ВЫБОРКА СВЕДЕНИЙ О ФИЗЛИЦЕ 
	// 	
	
	ДанныеОФизлицеТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ФИОФизЛица.Фамилия + "" "" + ФИОФизЛица.Имя + "" "" + ФИОФизЛица.Отчество, ДанныеОФизЛице.Наименование) КАК ФИО,
	|	ДанныеОФизЛице.ИНН КАК ИНН,
	|	ДанныеОФизЛице.СтраховойНомерПФР КАК СтраховойНомерПФР,
	|	ВЫБОР
	|		КОГДА ДанныеОФизЛице.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.Мужской)
	|			ТОГДА ""М""
	|		ИНАЧЕ ""Ж""
	|	КОНЕЦ КАК Пол,
	|	ДанныеОФизЛице.ДатаРождения КАК ДатаРождения,
	|	ЕСТЬNULL(ГражданствоФизЛица.Страна.Наименование, ""Россия"") КАК Гражданство,
	|	ПаспортныеДанныеФизЛица.ДокументСерия КАК ДокументСерия,
	|	ПаспортныеДанныеФизЛица.ДокументНомер КАК ДокументНомер,
	|	ПаспортныеДанныеФизЛица.ДокументДатаВыдачи,
	|	ВЫРАЗИТЬ(ПаспортныеДанныеФизЛица.ДокументКемВыдан КАК СТРОКА(300)) КАК ДокументКемКогдаВыдан,
	|	"","" + АдресаРегистрации.Поле1 + "","" + АдресаРегистрации.Поле2 + "","" + АдресаРегистрации.Поле3 + "","" + АдресаРегистрации.Поле4 + "","" + АдресаРегистрации.Поле5 + "","" + АдресаРегистрации.Поле6 + "","" + АдресаРегистрации.Поле7 + "","" + АдресаРегистрации.Поле8 + "","" + АдресаРегистрации.Поле9 КАК АдресРегистрации,
	|	"","" + АдресаФактические.Поле1 + "","" + АдресаФактические.Поле2 + "","" + АдресаФактические.Поле3 + "","" + АдресаФактические.Поле4 + "","" + АдресаФактические.Поле5 + "","" + АдресаФактические.Поле6 + "","" + АдресаФактические.Поле7 + "","" + АдресаФактические.Поле8 + "","" + АдресаФактические.Поле9 КАК АдресФактический,
	|	ВЫБОР
	|		КОГДА ДолжностиРаботниковОрганизации.ПериодЗавершения <= &КонецНП
	|				И ДолжностиРаботниковОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ДолжностиРаботниковОрганизации.ДолжностьЗавершения.Наименование
	|		ИНАЧЕ ДолжностиРаботниковОрганизации.Должность.Наименование
	|	КОНЕЦ КАК Должность,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизации.Сотрудник ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ТрудовойДоговор,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизации.Сотрудник ЕСТЬ NULL 
	|				И ДоговорНаВыполнениеРаботСФизЛицом.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.Подряда)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДоговорПодряда,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизации.Сотрудник ЕСТЬ NULL 
	|				И ДоговорНаВыполнениеРаботСФизЛицом.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.Авторский)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК АвторскийДоговор,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизации.Сотрудник ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА РаботникиОрганизации.Сотрудник.НомерДоговора = """"
	|						ТОГДА ПриемНаРаботуВОрганизациюРаботникиОрганизации.Ссылка.Номер
	|					ИНАЧЕ РаботникиОрганизации.Сотрудник.НомерДоговора
	|				КОНЕЦ
	|		КОГДА ДоговорНаВыполнениеРаботСФизЛицом.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.Подряда)
	|			ТОГДА ДоговорНаВыполнениеРаботСФизЛицом.Номер
	|		КОГДА ДоговорНаВыполнениеРаботСФизЛицом.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.Авторский)
	|			ТОГДА ДоговорНаВыполнениеРаботСФизЛицом.Номер
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК НомерДоговора,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизации.Сотрудник ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ДолжностиРаботниковОрганизации.ПериодЗавершения <= &КонецНП
	|							И ДолжностиРаботниковОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|							И ДолжностиРаботниковОрганизации.ПричинаИзмененияСостоянияЗавершения <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|						ТОГДА ДолжностиРаботниковОрганизации.ПериодЗавершения
	|					ИНАЧЕ ДолжностиРаботниковОрганизации.Период
	|				КОНЕЦ
	|		КОГДА ДоговорНаВыполнениеРаботСФизЛицом.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.Подряда)
	|			ТОГДА ДоговорНаВыполнениеРаботСФизЛицом.Дата
	|		КОГДА ДоговорНаВыполнениеРаботСФизЛицом.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.Авторский)
	|			ТОГДА ДоговорНаВыполнениеРаботСФизЛицом.Дата
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ДатаНазначенияНаДолжность
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ДанныеОФизЛице
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&КонецНП, ФизЛицо = &ФизЛицо) КАК ФИОФизЛица
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&КонецНП,
	|				Сотрудник.ФизЛицо = &ФизЛицо
	|					И Организация = &ГоловнаяОрганизация
	|					И Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|					И ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)) КАК РаботникиОрганизации
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриемНаРаботуВОрганизацию.РаботникиОрганизации КАК ПриемНаРаботуВОрганизациюРаботникиОрганизации
	|			ПО ПриемНаРаботуВОрганизациюРаботникиОрганизации.Ссылка = РаботникиОрганизации.Регистратор
	|				И ПриемНаРаботуВОрганизациюРаботникиОрганизации.Сотрудник = РаботникиОрганизации.Сотрудник
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|					&КонецНП,
	|					Сотрудник.ФизЛицо = &ФизЛицо
	|						И Организация = &ГоловнаяОрганизация
	|						И Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|						И ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)) КАК ДолжностиРаботниковОрганизации
	|			ПО РаботникиОрганизации.Сотрудник = ДолжностиРаботниковОрганизации.Сотрудник
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(&КонецНП, ФизЛицо = &ФизЛицо) КАК ПаспортныеДанныеФизЛица
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&КонецНП, ФизЛицо = &ФизЛицо) КАК ГражданствоФизЛица
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресаРегистрации
	|		ПО (АдресаРегистрации.Объект = &ФизЛицо)
	|			И (АдресаРегистрации.Вид = &ВидАдресаРегистрации)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресаФактические
	|		ПО (АдресаФактические.Объект = &ФизЛицо)
	|			И (АдресаФактические.Вид = &ВидАдресаФактический)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
	|		ПО (ДоговорНаВыполнениеРаботСФизЛицом.Организация В (&СписокСтруктурныхПодразделений))
	|			И (ДоговорНаВыполнениеРаботСФизЛицом.ДатаОкончания <= &КонецНП
	|				ИЛИ ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала >= &КонецНП)
	|			И ДанныеОФизЛице.Ссылка = ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Физлицо
	|			И (ДоговорНаВыполнениеРаботСФизЛицом.Проведен)
	|ГДЕ
	|	ДанныеОФизЛице.Ссылка = &ФизЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	РаботникиОрганизации.Период УБЫВ,
	|	ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала УБЫВ";
	
	// ДоходыПоМесяцамКодамТекст
	// Таблица доходов ЕСН по Месяцам налогового периода и кодам дохода
	// Поля:
	//		Месяц
	//		КодДоходаЕСН
	//		Результат
	//		Скидка
	// Описание:
	// 	Выбираем зарегистрированные доходы из ЕСНСведенияОДоходах 	
	//  Запрос выполняется для списка обособленных подразделений.
	
	ДоходыПоМесяцамКодамТекст = 
	"ВЫБРАТЬ
	|	МЕСЯЦ(ЕСНСведенияОДоходах.Период) КАК Месяц,
	|	ЕСНСведенияОДоходах.КодДоходаЕСН,
	|	СУММА(ЕСНСведенияОДоходах.Результат) КАК Результат,
	|	СУММА(ЕСНСведенияОДоходах.Скидка) КАК Скидка,
	|	ЕСНСведенияОДоходах.ОблагаетсяЕНВД
	|ИЗ
	|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	|ГДЕ
	|	ЕСНСведенияОДоходах.ФизЛицо = &ФизЛицо
	|	И ЕСНСведенияОДоходах.Организация = &ГоловнаяОрганизация
	|	И ЕСНСведенияОДоходах.Период МЕЖДУ &НачалоНП И &КонецНП
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНСведенияОДоходах.КодДоходаЕСН,
	|	МЕСЯЦ(ЕСНСведенияОДоходах.Период),
	|	ЕСНСведенияОДоходах.ОблагаетсяЕНВД";
	
	// первый месяц
	КонецМесяца = КонецМесяца(ДатаНачалаНП);
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период";
	// прибавим остальные месяцы
	Для Сч = 2 По 12 Цикл
		КонецМесяца = КонецМесяца(КонецМесяца+1);
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	
	// ДанныеОПравеНаПенсию
	// Таблица Таблица Данные о праве на пенсию: - таблица это список иностранцев и периодов
	// Поля:
	//		Физлицо, 
	//		Месяц - месяц налогового периода
	// 
	// Описание:
	//	Выбираем Из Списка периодов
	//	Внутреннее соединение с ГражданствоФизЛиц.СрезПоследних
	//  по равенству периодов
	//  условие: что физлицо - не имеет права на пенсию
	//
	ДанныеОПравеНаПенсиюТекст = "
	|ВЫБРАТЬ
	|	Месяц(Периоды.Период) КАК Месяц,
	|	ГражданствоФизЛиц.ФизЛицо КАК Физлицо
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		ГражданствоФизЛиц.ФизЛицо КАК Физлицо,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК ПериодРегистра
	|	ИЗ
	|		("+ПериодыТекст+") КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО Периоды.Период >= ГражданствоФизЛиц.Период и ГражданствоФизЛиц.ФизЛицо = &ФизЛицо
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ГражданствоФизЛиц.ФизЛицо,
	|		Периоды.Период) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО ГражданствоФизЛиц.Период = Периоды.ПериодРегистра И ГражданствоФизЛиц.ФизЛицо = Периоды.Физлицо И ГражданствоФизЛиц.НеИмеетПравоНаПенсию
	|";
	
    // УчетнаяПолитикаНалоговыйУчет
	// Таблица УчетнаяПолитикаНалоговыйУчетУСН - это список периодов, когда организация переходила на УСН
	// поля:
	//		УСН, 
	//		Месяц - месяц налогового периода
	// Описание:	
	//	Выбираем Из Периоды (таблица - список периодов с начала года по текущий период)
	//	Внутреннее соединение с "псевдосрезом" последних регистра УчетнаяПолитикаНалоговыйУчет
	//	по равенству периодов
	//  условие: что организация использует УСН
	
 	УчетнаяПолитикаНалоговыйУчет = 
	"ВЫБРАТЬ
	|	МЕСЯЦ(Периоды.Период) КАК Месяц,
	|	УчетнаяПолитикаНалоговыйУчет.УСН КАК УСН
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		МАКСИМУМ(УчетнаяПолитикаНалоговыйУчет.Период) КАК ПериодРегистра
	|	ИЗ
	|		("+ ПериодыТекст +") КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО Периоды.Период >= УчетнаяПолитикаНалоговыйУчет.Период И УчетнаяПолитикаНалоговыйУчет.Организация = &ГоловнаяОрганизация
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО Периоды.ПериодРегистра = УчетнаяПолитикаНалоговыйУчет.Период И УчетнаяПолитикаНалоговыйУчет.Организация = &ГоловнаяОрганизация И (УчетнаяПолитикаНалоговыйУчет.УСН)";	

	// ПоказателиДоходовПоМесяцамТекст
	// Описание:
	//  Вычисляет показатели отчета, основанные на сведениях о доходах
					 
	ПоказателиДоходовПоМесяцамТекст ="
	|ВЫБРАТЬ 
	|	Доходы.Месяц,
	|	СУММА(ВЫБОР КОГДА Иностр.Физлицо ЕСТЬ NULL И УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL И НЕ Доходы.ОблагаетсяЕНВД И Доходы.КодДоходаЕСН.ВходитВБазуЕдиныйПлатеж ТОГДА Доходы.Результат - Доходы.Скидка ИНАЧЕ 0 КОНЕЦ) КАК БазаПФРОбщ,
	|	СУММА(ВЫБОР КОГДА Иностр.Физлицо ЕСТЬ NULL И УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL И НЕ Доходы.ОблагаетсяЕНВД И Доходы.КодДоходаЕСН <> &КодДоходаНеОбъект ТОГДА Доходы.Результат ИНАЧЕ 0 КОНЕЦ) КАК НачисленоВсегоОбщ,
	|	СУММА(ВЫБОР КОГДА Иностр.Физлицо ЕСТЬ NULL И УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL И НЕ Доходы.ОблагаетсяЕНВД И Доходы.КодДоходаЕСН = &КодДоходаВыплатыЗаСчетПрибыли ТОГДА Доходы.Результат ИНАЧЕ 0 КОНЕЦ) КАК ВыплатыЗаСчетПрибылиОбщ,
	|	СУММА(ВЫБОР КОГДА Иностр.Физлицо ЕСТЬ NULL И УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL И НЕ Доходы.ОблагаетсяЕНВД И (Доходы.КодДоходаЕСН = &КодДоходаПособияЗаСчетФСС ИЛИ Доходы.КодДоходаЕСН = &КодДоходаНеОблагаетсяЦеликом) ТОГДА Доходы.Результат ИНАЧЕ Доходы.Скидка КОНЕЦ) КАК НеОблагаетсяПоСт238Общ,
	|	СУММА(ВЫБОР КОГДА Иностр.Физлицо ЕСТЬ NULL И (УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ НЕ NULL ИЛИ Доходы.ОблагаетсяЕНВД) И Доходы.КодДоходаЕСН.ВходитВБазуЕдиныйПлатеж ТОГДА Доходы.Результат - Доходы.Скидка ИНАЧЕ 0 КОНЕЦ) КАК БазаПФРСР,
	|	СУММА(ВЫБОР КОГДА Иностр.Физлицо ЕСТЬ NULL И (УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ НЕ NULL ИЛИ Доходы.ОблагаетсяЕНВД) И Доходы.КодДоходаЕСН <> &КодДоходаНеОбъект ТОГДА Доходы.Результат ИНАЧЕ 0 КОНЕЦ) КАК НачисленоВсегоСР,
	|	СУММА(ВЫБОР КОГДА Иностр.Физлицо ЕСТЬ NULL И (УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ НЕ NULL ИЛИ Доходы.ОблагаетсяЕНВД) И Доходы.КодДоходаЕСН = &КодДоходаВыплатыЗаСчетПрибыли ТОГДА Доходы.Результат ИНАЧЕ 0 КОНЕЦ) КАК ВыплатыЗаСчетПрибылиСР,
	|	СУММА(ВЫБОР КОГДА Иностр.Физлицо ЕСТЬ NULL И (УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ НЕ NULL ИЛИ Доходы.ОблагаетсяЕНВД) ТОГДА ВЫБОР КОГДА Доходы.КодДоходаЕСН = &КодДоходаПособияЗаСчетФСС ИЛИ Доходы.КодДоходаЕСН = &КодДоходаНеОблагаетсяЦеликом ТОГДА Доходы.Результат ИНАЧЕ Доходы.Скидка КОНЕЦ ИНАЧЕ 0 КОНЕЦ) КАК НеОблагаетсяПоСт238СР,
	|	СУММА(ВЫБОР КОГДА Иностр.Физлицо ЕСТЬ NULL И Доходы.КодДоходаЕСН.ВходитВБазуЕдиныйПлатеж ТОГДА Доходы.Результат - Доходы.Скидка ИНАЧЕ 0 КОНЕЦ) КАК БазаПФРПоВсем,
	|	СУММА(ВЫБОР КОГДА Иностр.Физлицо ЕСТЬ NULL И Доходы.КодДоходаЕСН <> &КодДоходаНеОбъект ТОГДА Доходы.Результат ИНАЧЕ 0 КОНЕЦ) КАК НачисленоВсегоПоВсем,
	|	СУММА(ВЫБОР КОГДА Иностр.Физлицо ЕСТЬ NULL И Доходы.КодДоходаЕСН = &КодДоходаВыплатыЗаСчетПрибыли ТОГДА Доходы.Результат ИНАЧЕ 0 КОНЕЦ) КАК ВыплатыЗаСчетПрибылиПоВсем,
	|	СУММА(ВЫБОР КОГДА Иностр.Физлицо ЕСТЬ NULL И (Доходы.КодДоходаЕСН = &КодДоходаПособияЗаСчетФСС ИЛИ Доходы.КодДоходаЕСН = &КодДоходаНеОблагаетсяЦеликом) ТОГДА Доходы.Результат ИНАЧЕ Доходы.Скидка КОНЕЦ) КАК НеОблагаетсяПоСт238ПоВсем
	|	ИЗ 
	|		( " + ДоходыПоМесяцамКодамТекст + " ) КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ("+ДанныеОПравеНаПенсиюТекст+") КАК Иностр
	|		ПО Иностр.Месяц = Доходы.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ("+УчетнаяПолитикаНалоговыйУчет+") КАК УчетнаяПолитикаНалоговыйУчетУСН
	|		ПО УчетнаяПолитикаНалоговыйУчетУСН.Месяц = Доходы.Месяц
	|
	|СГРУППИРОВАТЬ ПО Доходы.Месяц
	|";				
	
	// ПоказателиНалогПоМесяцамТекст
	// Описание:
	//	Вычисляет показатели отчета, основанные на сведениях о налогах.
	//  Из по ЕСН автоматически отнимается налог, приходящийся  на налоговую льготу инвалидов.
	
	ПоказателиНалоговПоМесяцамТекст = 
	"ВЫБРАТЬ
	|	МЕСЯЦ(ЕСНИсчисленный.Период) КАК Месяц,
	|	СУММА(ВЫБОР КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ НЕ NULL ТОГДА ЕСНИсчисленный.ПФРНакопительная ИНАЧЕ ЕСНИсчисленный.ПФРНакопительнаяЕНВД КОНЕЦ) КАК НачисленоПФРНакопительнаяСР,
	|	СУММА(ВЫБОР КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ НЕ NULL ТОГДА ЕСНИсчисленный.ПФРСтраховая ИНАЧЕ ЕСНИсчисленный.ПФРСтраховаяЕНВД КОНЕЦ) КАК НачисленоПФРСтраховаяСР,
	|	СУММА(ВЫБОР КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ НЕ NULL ТОГДА ЕСНИсчисленный.ПФРСтраховая + ЕСНИсчисленный.ПФРНакопительная ИНАЧЕ ЕСНИсчисленный.ПФРСтраховаяЕНВД + ЕСНИсчисленный.ПФРНакопительнаяЕНВД КОНЕЦ) КАК НачисленоПФРСР,
	|	СУММА(ВЫБОР КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL ТОГДА ЕСНИсчисленный.ПФРНакопительная - ЕСНИсчисленный.ПФРНакопительнаяЕНВД ИНАЧЕ 0 КОНЕЦ) КАК НачисленоПФРНакопительнаяОбщ,
	|	СУММА(ВЫБОР КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL ТОГДА ЕСНИсчисленный.ПФРСтраховая - ЕСНИсчисленный.ПФРСтраховаяЕНВД ИНАЧЕ 0 КОНЕЦ) КАК НачисленоПФРСтраховаяОбщ,
	|	СУММА(ВЫБОР КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL ТОГДА ЕСНИсчисленный.ПФРСтраховая - ЕСНИсчисленный.ПФРСтраховаяЕНВД + ЕСНИсчисленный.ПФРНакопительная - ЕСНИсчисленный.ПФРНакопительнаяЕНВД ИНАЧЕ 0 КОНЕЦ) КАК НачисленоПФРОбщ,
	|	СУММА(ЕСНИсчисленный.ПФРНакопительная) КАК НачисленоПФРНакопительнаяПоВсем,
	|	СУММА(ЕСНИсчисленный.ПФРСтраховая) КАК НачисленоПФРСтраховаяПоВсем,
	|	СУММА(ЕСНИсчисленный.ПФРСтраховая + ЕСНИсчисленный.ПФРНакопительная) КАК НачисленоПФРПоВсем
	|ИЗ
	|	РегистрНакопления.ЕСНИсчисленный КАК ЕСНИсчисленный
	|		ЛЕВОЕ СОЕДИНЕНИЕ ("+УчетнаяПолитикаНалоговыйУчет+") КАК УчетнаяПолитикаНалоговыйУчетУСН
	|		ПО УчетнаяПолитикаНалоговыйУчетУСН.Месяц = МЕСЯЦ(ЕСНИсчисленный.Период)
	|
	|ГДЕ
	|	ЕСНИсчисленный.ФизЛицо = &ФизЛицо И
	|	ЕСНИсчисленный.Организация = &ГоловнаяОрганизация И
	|	ЕСНИсчисленный.Период МЕЖДУ &НачалоНП И &КонецНП
	|
	|СГРУППИРОВАТЬ ПО
	|	МЕСЯЦ(ЕСНИсчисленный.Период)";
	
	
	//ДанныеРасчетаТекст
	// Описание: объединяет показатели доходов и налогов
	
	ДанныеРасчетаТекст =
	"ВЫБРАТЬ 
	|	МесяцыНП.МЕСЯЦ КАК МЕСЯЦ,
	|	ВЫБОР
	|		КОГДА ПоказателиДоходов.Месяц ЕСТЬ NULL 
	|				И ПоказателиНалогов.Месяц ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьСведения,
	|	ЕСТЬNULL(ПоказателиДоходов.БазаПФРОбщ, 0) КАК БазаПФРОбщ,
	|	ЕСТЬNULL(ПоказателиДоходов.НачисленоВсегоОбщ, 0) КАК НачисленоВсегоОбщ,
	|	ЕСТЬNULL(ПоказателиДоходов.ВыплатыЗаСчетПрибылиОбщ, 0) КАК ВыплатыЗаСчетПрибылиОбщ,
	|	ЕСТЬNULL(ПоказателиДоходов.НеОблагаетсяПоСт238Общ, 0) КАК НеОблагаетсяПоСт238Общ,
	|	ЕСТЬNULL(ПоказателиДоходов.БазаПФРСР, 0) КАК БазаПФРСР,
	|	ЕСТЬNULL(ПоказателиДоходов.НачисленоВсегоСР, 0) КАК НачисленоВсегоСР,
	|	ЕСТЬNULL(ПоказателиДоходов.ВыплатыЗаСчетПрибылиСР, 0) КАК ВыплатыЗаСчетПрибылиСР,
	|	ЕСТЬNULL(ПоказателиДоходов.НеОблагаетсяПоСт238СР, 0) КАК НеОблагаетсяПоСт238СР ,
	|	ЕСТЬNULL(ПоказателиДоходов.БазаПФРПоВсем, 0) КАК БазаПФРПоВсем,
	|	ЕСТЬNULL(ПоказателиДоходов.НачисленоВсегоПоВсем, 0) КАК НачисленоВсегоПоВсем,
	|	ЕСТЬNULL(ПоказателиДоходов.ВыплатыЗаСчетПрибылиПоВсем, 0) КАК ВыплатыЗаСчетПрибылиПоВсем,
	|	ЕСТЬNULL(ПоказателиДоходов.НеОблагаетсяПоСт238ПоВсем, 0) КАК НеОблагаетсяПоСт238ПоВсем,
	|	ЕСТЬNULL(ПоказателиНалогов.НачисленоПФРНакопительнаяСР, 0) КАК НачисленоПФРНакопительнаяСР,
	|	ЕСТЬNULL(ПоказателиНалогов.НачисленоПФРСтраховаяСР, 0) КАК НачисленоПФРСтраховаяСР,
	|	ЕСТЬNULL(ПоказателиНалогов.НачисленоПФРСР, 0) КАК НачисленоПФРСР,
	|	ЕСТЬNULL(ПоказателиНалогов.НачисленоПФРНакопительнаяОбщ, 0) КАК НачисленоПФРНакопительнаяОбщ,
	|	ЕСТЬNULL(ПоказателиНалогов.НачисленоПФРСтраховаяОбщ, 0) КАК НачисленоПФРСтраховаяОбщ,
	|	ЕСТЬNULL(ПоказателиНалогов.НачисленоПФРОбщ, 0) КАК НачисленоПФРОбщ,
	|	ЕСТЬNULL(ПоказателиНалогов.НачисленоПФРНакопительнаяПоВсем, 0) КАК НачисленоПФРНакопительнаяПоВсем,
	|	ЕСТЬNULL(ПоказателиНалогов.НачисленоПФРСтраховаяПоВсем, 0) КАК НачисленоПФРСтраховаяПоВсем,
	|	ЕСТЬNULL(ПоказателиНалогов.НачисленоПФРПоВсем, 0) КАК НачисленоПФРПоВсем
	|
	|	ИЗ 
	|		(" + МесяцыНПТекст + ") КАК МесяцыНП
	|		ЛЕВОЕ СОЕДИНЕНИЕ  ( " + ПоказателиДоходовПоМесяцамТекст + " ) КАК ПоказателиДоходов
	|		ПО ПоказателиДоходов.Месяц = МесяцыНП.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ( " + ПоказателиНалоговПоМесяцамТекст + " ) КАК ПоказателиНалогов
	|		ПО ПоказателиНалогов.Месяц = МесяцыНП.Месяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	МесяцыНП.Месяц
	|";
	
	
	//-----------------------------------------------------------------------------
	// ВЫПОЛНЕНИЕ ЗАПРОСОВ
	
	// Сведения о физлице
	Запрос.Текст = ДанныеОФизлицеТекст;
	ДанныеОФизЛице  = Запрос.Выполнить().Выбрать();
	ДанныеОФизЛице.Следующий();
	
	// Данные расчета
	Запрос.Текст = ДанныеРасчетаТекст;
	ДанныеРасчета  = Запрос.Выполнить().Выбрать();
	
	
	//-----------------------------------------------------------------------------
	// ЗАПОЛНЕНИЕ ФОРМЫ
	
	// Области макета
    ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьПустойМесяц = Макет.ПолучитьОбласть("ПустойМесяц");
	
	// Вывод шапки отчета
	ОбластьШапка.Параметры.Заполнить(ДанныеОФизЛице);
	ОбластьШапка.Параметры.ДокументКемКогдаВыдан = СОКРЛП(ДанныеОФизЛице.ДокументКемКогдаВыдан);	
	ОбластьШапка.Параметры.НалоговыйПериод = Формат(НалоговыйПериод,"ЧГ=");
	ОбластьШапка.Параметры.ДатаРождения = Формат(ДанныеОФизЛице.ДатаРождения,"ЧГ=; ДФ=dd.MM.yyyy");
	ОбластьШапка.Параметры.ДокументДатаВыдачи = Формат(ДанныеОФизЛице.ДокументДатаВыдачи,"ДФ=dd.MM.yyyy");
	Если СтрЗаменить(ДанныеОФизЛице.АдресФактический, ",","") = "" Тогда
		ОбластьШапка.Параметры.Адрес = РегламентированнаяОтчетность.ПредставлениеАдреса(ДанныеОФизЛице.АдресРегистрации);
	Иначе	
		ОбластьШапка.Параметры.Адрес = РегламентированнаяОтчетность.ПредставлениеАдреса(ДанныеОФизЛице.АдресФактический);	
	КонецЕсли; 
	Если ДанныеОФизЛице.ТрудовойДоговор Тогда
		ОбластьТекст = ОбластьШапка.Область("R8C6");
		ОбластьТекст.Шрифт = Новый Шрифт(ОбластьТекст.Шрифт,,,,,Истина);
	КонецЕсли;
	Если ДанныеОФизЛице.ДоговорПодряда Тогда
		ОбластьТекст = ОбластьШапка.Область("R8C7");
		ОбластьТекст.Шрифт = Новый Шрифт(ОбластьТекст.Шрифт,,,,,Истина);
	КонецЕсли;
	Если ДанныеОФизЛице.АвторскийДоговор Тогда
		ОбластьТекст = ОбластьШапка.Область("R8C9");
		ОбластьТекст.Шрифт = Новый Шрифт(ОбластьТекст.Шрифт,,,,,Истина);
	КонецЕсли;
	ДокументРезультат.Вывести(ОбластьШапка);
	
	// Вывод сведений о доходах и налогах по месяцам налогового периода
	
	// вычислим последний месяц, за который есть сведения
	ПоследнийМесяцРасчета = 0;
	ДанныеРасчета.Сбросить();
	Пока ДанныеРасчета.Следующий() Цикл
		Если ДанныеРасчета.ЕстьСведения Тогда
			ПоследнийМесяцРасчета = ДанныеРасчета.Месяц;
		КонецЕсли; 
	КонецЦикла;	
	
	// создадим структуру для хранения нарастающих данных
	МесячныеПоказатели = Новый Структура("НачисленоВсегоОбщ, ВыплатыЗаСчетПрибылиОбщ, НеОблагаетсяПоСт238Общ, БазаПФРОбщ, НачисленоПФРНакопительнаяОбщ, НачисленоПФРСтраховаяОбщ, НачисленоПФРОбщ");
	НарастающиеИтоги = Новый Структура;
	Для Каждого Поле из МесячныеПоказатели  Цикл
		НарастающиеИтоги.Вставить("Нараст" + Поле.Ключ, 0);
	КонецЦикла;	
	
	НачисленоВсегоОбщ = 0;
	ДанныеРасчета.Сбросить();
	ДокументРезультат.Вывести(Макет.ПолучитьОбласть("Заголовок1"));
	ОбластьМесяц = Макет.ПолучитьОбласть("МесяцОбщ");
	Пока ДанныеРасчета.Следующий() Цикл
		Месяц = ДанныеРасчета.Месяц;
		
		Если Месяц <= ПоследнийМесяцРасчета Тогда
			
			ОбластьМесяц.Параметры.Заполнить(ДанныеРасчета);
			ОбластьМесяц.Параметры.Месяц = Формат(Дата(НалоговыйПериод,Месяц,1),"ДФ=ММММ");
			
			НачисленоВсегоОбщ = НачисленоВсегоОбщ + ДанныеРасчета.НачисленоВсегоОбщ;
			
			// Расчет нарастающих сумм с начала года
			Для Каждого Поле из МесячныеПоказатели  Цикл
				НарастающиеИтоги["Нараст"+Поле.Ключ] = НарастающиеИтоги["Нараст"+Поле.Ключ] + ПараметрВЧисло(ОбластьМесяц.Параметры[Поле.Ключ]);
			КонецЦикла; 
			
			ОбластьМесяц.Параметры.Заполнить(НарастающиеИтоги);
			
			// Выведем месяц
			ДокументРезультат.Вывести(ОбластьМесяц);
			
		Иначе	
			// Выведем пустой месяц
			ОбластьПустойМесяц.Параметры.Месяц = Формат(Дата(НалоговыйПериод,Месяц,1),"ДФ=ММММ");
			ДокументРезультат.Вывести(ОбластьПустойМесяц);
		КонецЕсли; 
	КонецЦикла; 
	
	// создадим структуру для хранения нарастающих данных
	МесячныеПоказатели = Новый Структура("НачисленоВсегоСР, ВыплатыЗаСчетПрибылиСР, НеОблагаетсяПоСт238СР, БазаПФРСР, НачисленоПФРНакопительнаяСР, НачисленоПФРСтраховаяСР,НачисленоПФРСР");
	НарастающиеИтоги = Новый Структура;
	Для Каждого Поле из МесячныеПоказатели  Цикл
		НарастающиеИтоги.Вставить("Нараст" + Поле.Ключ, 0);
	КонецЦикла;	
	
	НачисленоВсегоСР = 0;
	ДанныеРасчета.Сбросить();
	ДокументРезультат.Вывести(Макет.ПолучитьОбласть("Заголовок2"));
	ОбластьМесяц = Макет.ПолучитьОбласть("МесяцСР");
	Пока ДанныеРасчета.Следующий() Цикл
		Месяц = ДанныеРасчета.Месяц;
		
		Если Месяц <= ПоследнийМесяцРасчета Тогда
			
			ОбластьМесяц.Параметры.Заполнить(ДанныеРасчета);
			ОбластьМесяц.Параметры.Месяц = Формат(Дата(НалоговыйПериод,Месяц,1),"ДФ=ММММ");
			
			НачисленоВсегоСР = НачисленоВсегоСР + ДанныеРасчета.НачисленоВсегоСР;
			
			// Расчет нарастающих сумм с начала года
			Для Каждого Поле из МесячныеПоказатели  Цикл
				НарастающиеИтоги["Нараст"+Поле.Ключ] = НарастающиеИтоги["Нараст"+Поле.Ключ] + ПараметрВЧисло(ОбластьМесяц.Параметры[Поле.Ключ]);
			КонецЦикла; 
			
			ОбластьМесяц.Параметры.Заполнить(НарастающиеИтоги);
			
			// Выведем месяц
			ДокументРезультат.Вывести(ОбластьМесяц);
			
		Иначе	
			// Выведем пустой месяц
			ОбластьПустойМесяц.Параметры.Месяц = Формат(Дата(НалоговыйПериод,Месяц,1),"ДФ=ММММ");
			ДокументРезультат.Вывести(ОбластьПустойМесяц);
		КонецЕсли; 
	КонецЦикла; 
	
	ДокументРезультат.Вывести(Макет.ПолучитьОбласть("Заголовок3"));
	Если НачисленоВсегоОбщ <> 0 И НачисленоВсегоСР <> 0 Тогда
		
		// создадим структуру для хранения нарастающих данных
		МесячныеПоказатели = Новый Структура("НачисленоВсегоПоВсем, ВыплатыЗаСчетПрибылиПоВсем, НеОблагаетсяПоСт238ПоВсем, БазаПФРПоВсем, НачисленоПФРНакопительнаяПоВсем, НачисленоПФРСтраховаяПоВсем,НачисленоПФРПоВсем");
		НарастающиеИтоги = Новый Структура;
		Для Каждого Поле из МесячныеПоказатели  Цикл
			НарастающиеИтоги.Вставить("Нараст" + Поле.Ключ, 0);
		КонецЦикла;	
		
		ДанныеРасчета.Сбросить();
		ОбластьМесяц = Макет.ПолучитьОбласть("МесяцПоВсем");
		Пока ДанныеРасчета.Следующий() Цикл
			Месяц = ДанныеРасчета.Месяц;
			
			Если Месяц <= ПоследнийМесяцРасчета Тогда
				
				ОбластьМесяц.Параметры.Заполнить(ДанныеРасчета);
				ОбластьМесяц.Параметры.Месяц = Формат(Дата(НалоговыйПериод,Месяц,1),"ДФ=ММММ");
				
				// Расчет нарастающих сумм с начала года
				Для Каждого Поле из МесячныеПоказатели  Цикл
					НарастающиеИтоги["Нараст"+Поле.Ключ] = НарастающиеИтоги["Нараст"+Поле.Ключ] + ПараметрВЧисло(ОбластьМесяц.Параметры[Поле.Ключ]);
				КонецЦикла; 
				
				ОбластьМесяц.Параметры.Заполнить(НарастающиеИтоги);
				
				// Выведем месяц
				ДокументРезультат.Вывести(ОбластьМесяц);
				
			Иначе	
				// Выведем пустой месяц
				ОбластьПустойМесяц.Параметры.Месяц = Формат(Дата(НалоговыйПериод,Месяц,1),"ДФ=ММММ");
				ДокументРезультат.Вывести(ОбластьПустойМесяц);
			КонецЕсли; 
		КонецЦикла; 
		
	Иначе 
		
		Для Сч = 1 По 12 Цикл
			// Выведем пустой месяц
			ОбластьПустойМесяц.Параметры.Месяц = Формат(Дата(НалоговыйПериод,Сч,1),"ДФ=ММММ");
			ДокументРезультат.Вывести(ОбластьПустойМесяц);
		КонецЦикла; 
			
	КонецЕсли;
	
	//-----------------------------------------------------------------------------

	//Параметры документа
	ДокументРезультат.Автомасштаб 			= 	Истина;
	ДокументРезультат.ОриентацияСтраницы 	= 	ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.ТолькоПросмотр		= 	Истина;
	
КонецПроцедуры


#КонецЕсли

