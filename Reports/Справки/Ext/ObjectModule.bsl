
#Если Клиент Тогда

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура СформироватьОтчет(ДокументРезультат, ЕстьОшибки = Ложь) Экспорт
	ДокументРезультат.Очистить();
	
	//Параметры документа
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.ПолеСлева			 = 0;
	ДокументРезультат.ПолеСправа		 = 0;
	ДокументРезультат.Защита             = Ложь;
	ДокументРезультат.ТолькоПросмотр     = Истина;
    ДокументРезультат.АвтоМасштаб		 = Истина;
	
	Если  ФормаСправки = Перечисления.ФормыТиповыхСправок.СправкаОПериодеРаботы Тогда
		СформироватьСправкаОПериодеРаботы(ДокументРезультат);
	ИначеЕсли ФормаСправки = Перечисления.ФормыТиповыхСправок.СправкаОМестеРаботы Тогда
		СформироватьСправкаОМестеРаботы(ДокументРезультат);	
	ИначеЕсли ФормаСправки = Перечисления.ФормыТиповыхСправок.СправкаОНахожденииВОтпускеПоУходу Тогда
		СформироватьСправкаОНахожденииВОтпускеПоУходу(ДокументРезультат);	
	ИначеЕсли ФормаСправки = Перечисления.ФормыТиповыхСправок.СправкаОРазмереЗаработнойПлаты Тогда
		СформироватьСправкаОРазмереЗаработнойПлаты(ДокументРезультат);
	ИначеЕсли ФормаСправки = Перечисления.ФормыТиповыхСправок.СправкаОРазмереПособияИПериодеВыплаты Тогда
		//vvv
		ДокументРезультат.ПолеСверху=5;
		ДокументРезультат.ПолеСнизу=5;
		ДокументРезультат.ОриентацияСтраницы=ОриентацияСтраницы.Портрет;
		//
		СформироватьСправкаОРазмереПособияИПериодеВыплаты(ДокументРезультат);
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьСправкаОРазмереПособияИПериодеВыплаты(ДокументРезультат)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник.Физлицо);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(АдресПроживания.Представление, АдресПрописки.Представление) КАК Адрес,
	|	ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество КАК ФИО
	|ИЗ
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&Период, ФизЛицо = &Сотрудник) КАК ФИОФизЛицСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресПрописки
	|		ПО ФИОФизЛицСрезПоследних.ФизЛицо = АдресПрописки.Объект
	|			И (АдресПрописки.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресФизЛица))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресПроживания
	|		ПО ФИОФизЛицСрезПоследних.ФизЛицо = АдресПроживания.Объект
	|			И (АдресПроживания.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресФизЛица))";
	
	
	ВыборкаАдрес = Запрос.Выполнить().Выбрать();	
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник.Физлицо);
	Запрос.УстановитьПараметр("ПериодНачало", ПериодНачало);
	Запрос.УстановитьПараметр("ПериодКонец", ПериодКонец);
	
	
	СписокПособий = Новый Массив();
	
	СписокПособий.Добавить(ПланыВидовРасчета.ДополнительныеНачисленияОрганизаций.ПриРожденииРебенка);
	СписокПособий.Добавить(ПланыВидовРасчета.ДополнительныеНачисленияОрганизаций.ПриРожденииВторогоИПоследующихДетей);
	СписокПособий.Добавить(ПланыВидовРасчета.ДополнительныеНачисленияОрганизаций.ПриПостановкеНаУчетВРанниеСрокиБеременности);
	
	Запрос.УстановитьПараметр("СписокПособий",СписокПособий);
	//vvv
	Запрос.УстановитьПараметр("ВидПособия",ВидПособия);
	Запрос.УстановитьПараметр("ПоВсемПособиям",Не ЗначениеЗаполнено(ВидПособия));
	//
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПособияИзФСЗН.ВидПособия КАК ВидПособия,
	|	ПособияИзФСЗН.ДатаНачалаСобытия,
	|	ПособияИзФСЗН.ФизЛицо,
	|	ПособияИзФСЗН.Регистратор.Номер,
	|	ПособияИзФСЗН.Сумма КАК Сумма,
	|	ПособияИзФСЗН.ПериодДействияНачало,
	|	ПособияИзФСЗН.ПериодДействияКонец,
	|	ВЫБОР
	|		КОГДА ПособияИзФСЗН.ПериодДействияКонец < НАЧАЛОПЕРИОДА(ПособияИзФСЗН.Период, МЕСЯЦ)
	|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ПособияИзФСЗН.Период, МЕСЯЦ, -1), МЕСЯЦ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ПособияИзФСЗН.Период, МЕСЯЦ)
	|	КОНЕЦ КАК Месяц,
	|	ЕСТЬNULL(АдресПроживания.Представление, АдресПрописки.Представление) КАК Адрес
	|ИЗ
	|	РегистрНакопления.ПособияИзФСЗН КАК ПособияИзФСЗН
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресПрописки
	|		ПО ПособияИзФСЗН.ФизЛицо = АдресПрописки.Объект
	|			И (АдресПрописки.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресФизЛица))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресПроживания
	|		ПО ПособияИзФСЗН.ФизЛицо = АдресПроживания.Объект
	|			И (АдресПроживания.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресФизЛица))
	|ГДЕ
	|	ПособияИзФСЗН.ФизЛицо = &Сотрудник
	|	И ПособияИзФСЗН.Период МЕЖДУ &ПериодНачало И &ПериодКонец
	|	И ПособияИзФСЗН.Сумма <> 0
	//vvv
	|	И (&ПоВсемПособиям ИЛИ ПособияИзФСЗН.ВидПособия=&ВидПособия)
	//
	|	И ПособияИзФСЗН.ВидПособия <> ЗНАЧЕНИЕ(перечисление.видыпособий.ПособиеПоВременнойНетрудоспособности)
	|	И ПособияИзФСЗН.ВидПособия <> ЗНАЧЕНИЕ(перечисление.видыпособий.ПособиеПоУходуЗаБольнымЧленомСемьи)
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	Месяц";
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	
	Макет = ПолучитьМакет("СправкаОРазмереПособияИПериодеВыплаты");
	//vvv
	Макет = ПолучитьМакет("СправкаОРазмереПособияИПериодеВыплаты1");
	//
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьАдресат = Макет.ПолучитьОбласть("Адресат");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	
	ОбластьАдресат.Параметры.МестоВыдачи = МестоВыдачи;
	ОбластьАдресат.Параметры.Дата = Формат(Период,"ДФ=dd.MM.yyyy");
	ОбластьАдресат.Параметры.Номер = Номер;
	ОбластьАдресат.Параметры.ПериодНачало = Формат(ПериодНачало,"ДФ='dd ММММ yyyy'") +" г.";
	ОбластьАдресат.Параметры.ПериодКонец = Формат(ПериодКонец,"ДФ='dd ММММ yyyy'") +" г.";
	
	Если ВыборкаАдрес.Следующий() Тогда
		ОбластьАдресат.Параметры.Адресат = ВыборкаАдрес.ФИО;
		ОбластьАдресат.Параметры.Адрес = ВыборкаАдрес.Адрес; 	
	КонецЕсли;
	
	ОбластьПодвал.Параметры.ДатаВыдачи = Формат(Период,"ДФ='dd ММММ yyyy'") +" г.";
	ИтогоГод1 =0;
	ИтогоГод2 =0;	
	ИтогоСуммаГод = 0;
	Год1 = Год(ПериодНачало);
	Год2 = Год(ПериодКонец);
	Пока Выборка.Следующий() Цикл 
		ИтогоМесяц1 =0;
		ИтогоМесяц2 =0;
		ИтогоСуммаМесяц = 0;
		
		ДетальнаяВыборка = Выборка.Выбрать();
		Пока ДетальнаяВыборка.Следующий() Цикл 
			
			Если ДетальнаяВыборка.ВидПособия = Перечисления.ВидыПособий.ПособиеДо12НедельногоСтрока Тогда
				ОбластьАдресат.Параметры.ПособиеДо12Недель = ДетальнаяВыборка.Сумма;	
				Продолжить;
			ИначеЕсли ДетальнаяВыборка.ВидПособия = Перечисления.ВидыПособий.ПособиеВСвязиСРождениемПервогоРебенка ИЛИ ДетальнаяВыборка.ВидПособия = Перечисления.ВидыПособий.ПособиеВСвязиСРождениемРебенка Тогда
				ОбластьАдресат.Параметры.ПособиеПриРождении = ДетальнаяВыборка.Сумма;
				Продолжить;
			КонецЕсли;
			
			Если ДетальнаяВыборка.ВидПособия = Перечисления.ВидыПособий.ПособиеПоУходуЗаРебенкомДо3Лет Тогда
				ИтогоСуммаМесяц = ИтогоСуммаМесяц + ДетальнаяВыборка.Сумма;
			иначеЕсли ДетальнаяВыборка.ВидПособия = Перечисления.ВидыПособий.ПособиеНаРебенкаВИЧ Тогда
				ИтогоСуммаМесяц = ИтогоСуммаМесяц + ДетальнаяВыборка.Сумма;
			иначеЕсли ДетальнаяВыборка.ВидПособия = Перечисления.ВидыПособий.ПособиеПоУходуЗаРебенкомИнвалидомДо18Лет Тогда
				ИтогоСуммаМесяц = ИтогоСуммаМесяц + ДетальнаяВыборка.Сумма;
			//vvv	
			иначеЕсли ДетальнаяВыборка.ВидПособия = Перечисления.ВидыПособий.ПособиеНаДетейСтарше3летНаРебенкаИнвалида Тогда
				ИтогоСуммаМесяц = ИтогоСуммаМесяц + ДетальнаяВыборка.Сумма;	
			иначеЕсли ДетальнаяВыборка.ВидПособия = Перечисления.ВидыПособий.ПособиеНаДетейСтарше3лет Тогда
				ИтогоСуммаМесяц = ИтогоСуммаМесяц + ДетальнаяВыборка.Сумма;		
			иначеЕсли ДетальнаяВыборка.ВидПособия = Перечисления.ВидыПособий.ПособиеНаДетейСтарше3летСНадбавкой40 Тогда
				ИтогоСуммаМесяц = ИтогоСуммаМесяц + ДетальнаяВыборка.Сумма;			
			иначеЕсли ДетальнаяВыборка.ВидПособия = Перечисления.ВидыПособий.ПособиеПоУходуЗаРебенкомДо3ЛетНаВтрогоРебенка Тогда
				ИтогоСуммаМесяц = ИтогоСуммаМесяц + ДетальнаяВыборка.Сумма;				
			иначеЕсли ДетальнаяВыборка.ВидПособия = Перечисления.ВидыПособий.ПособиеПоУходуЗаРебенкомДо3ЛетНаРебенкаИнвалида Тогда
				ИтогоСуммаМесяц = ИтогоСуммаМесяц + ДетальнаяВыборка.Сумма;									
			//	
			//иначеЕсли ДетальнаяВыборка.ВидПособия = Перечисления.ВидыПособий.ПособиеНаВичИнфицРебенка Тогда
			//	ИтогоСуммаМесяц = ИтогоСуммаМесяц + ДетальнаяВыборка.Сумма;
			//иначеЕсли ДетальнаяВыборка.ВидПособия = Перечисления.ВидыПособий.ПособиеНаРебенкаДо3Лет Тогда
			//	ИтогоСуммаМесяц = ИтогоСуммаМесяц + ДетальнаяВыборка.Сумма;
			КонецЕсли;
			
			
			
			Если Год1 = Год(Выборка.Месяц) Тогда
				ИтогоМесяц1 = ИтогоМесяц1 +  ДетальнаяВыборка.Сумма;
			Иначе
				ИтогоМесяц2 = ИтогоМесяц2 +  ДетальнаяВыборка.Сумма;
			КонецЕсли;
			
			
		КонецЦикла;
		Если Год1 = Год(Выборка.Месяц) Тогда
			ОбластьАдресат.Параметры["Доход"+Месяц(Выборка.Месяц)] = ИтогоМесяц1;
		Иначе
			ОбластьАдресат.Параметры["Доход"+(Месяц(Выборка.Месяц)+12)] = ИтогоМесяц2;
		КонецЕсли;
		
		ИтогоГод1 = ИтогоГод1 + ИтогоМесяц1;
		ИтогоГод2 = ИтогоГод2 + ИтогоМесяц2;
		ИтогоСуммаГод = ИтогоСуммаГод + ИтогоСуммаМесяц;
		
	КонецЦикла;
	
	ОбластьАдресат.Параметры.итог1 = ИтогоГод1;
	ОбластьАдресат.Параметры.итог2 = ИтогоГод2;
	ОбластьАдресат.Параметры.Год1 = Формат(ПериодНачало,"ДФ=гггг");
	ОбластьАдресат.Параметры.Год2 = Формат(ПериодКонец,"ДФ=гггг");
	ОбластьАдресат.Параметры.ОбщаяСуммаПособий = ИтогоСуммаГод;
	
	Если ОбластьАдресат.Параметры.Год1 = ОбластьАдресат.Параметры.Год2 Тогда
		
		ОбластьАдресат.Параметры.Год2 ="";	
		
	КонецЕсли;
	
	ДокументРезультат.Вывести(ОбластьШапка);
	ДокументРезультат.Вывести(ОбластьАдресат);
	ДокументРезультат.Вывести(ОбластьПодвал);

КонецПроцедуры
 
Процедура СформироватьСправкаОПериодеРаботы(ДокументРезультат) 
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Дата актуальности установим на последний день года. 
	Запрос.УстановитьПараметр("ДатаАктуальности",	КонецДня(Период));
	Запрос.УстановитьПараметр("Сотрудник",		Сотрудник);
	Запрос.УстановитьПараметр("Организация",		Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",ОбщегоНазначения.ГоловнаяОрганизация(Организация));

	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаботникиОрганизацийПрием.Период КАК ДатаПриема,
	|	РаботникиОрганизацийПрием.Должность,
	|	ДОБАВИТЬКДАТЕ(РаботникиОрганизацийУвольнение.Период, ДЕНЬ, -1) КАК ДатаУвольнения,
	|	ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество КАК ФИО,
	|	ПОДСТРОКА(ФИОРуководителя.Имя, 1, 1) + ""."" + ПОДСТРОКА(ФИОРуководителя.Отчество, 1, 1) + ФИОРуководителя.Фамилия КАК ФИОРуковолителя,
	|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность КАК ДолжностьРуководителя,
	|	РаботникиОрганизацийПрием.Регистратор.Дата КАК ДатаПриемаДокумента,
	|	РаботникиОрганизацийПрием.Регистратор.Номер КАК НомерПриказаПриема,
	|	РаботникиОрганизацийУвольнение.Регистратор.Дата КАК ДатаУвольненияДокумента,
	|	РаботникиОрганизацийУвольнение.Регистратор.Номер КАК НомерПриказаУвольнения,
	|	РаботникиОрганизацийПрием.Организация.НаименованиеПолное КАК Организация,
	|	РаботникиОрганизацийПрием.ПодразделениеОрганизации.Наименование КАК Подразделение
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|			&ДатаАктуальности,
	|			Сотрудник = &Сотрудник
	|				И ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)) КАК РаботникиОрганизацийПрием
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаАктуальности, ) КАК ФИОФизЛицСрезПоследних
	|		ПО РаботникиОрганизацийПрием.Сотрудник.Физлицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&ДатаАктуальности,
	|				Сотрудник = &Сотрудник
	|					И ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)) КАК РаботникиОрганизацийУвольнение
	|		ПО РаботникиОрганизацийПрием.Сотрудник = РаботникиОрганизацийУвольнение.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
	|				&ДатаАктуальности,
	|				СтруктурнаяЕдиница = &Организация
	|					И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)) КАК ОтветственныеЛицаОрганизацийСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаАктуальности, ) КАК ФИОРуководителя
	|			ПО ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо = ФИОРуководителя.ФизЛицо
	|		ПО (ИСТИНА)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Макет = ПолучитьМакет("СправкаОПериодеРаботы");
	
	Область = Макет.ПолучитьОбласть("Справка");
	
	Если Выборка.Следующий() Тогда
		Область.Параметры.Заполнить(Выборка);
		//Должнность = Выборка.Должность;
		//УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), Должнность, 2,Перечисления.ПолФизическихЛиц.Мужской , Должнность);
		//Область.Параметры.Должность = Должнность;
		Область.Параметры.Период = Период;
		Область.Параметры.Номер = Номер;
		Область.Параметры.МестоВыдачи = МестоВыдачи;
		Область.Параметры.Адресат = Адресат.НаименованиеПолное;
		Область.Параметры.ДеньПриема = День(Выборка.ДатаПриемаДокумента);
		МесяцПриема = Формат(Выборка.ДатаПриемаДокумента,"ДФ=MMММ");
		УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), МесяцПриема, 4, , МесяцПриема);
      	Область.Параметры.МесяцПриема = МесяцПриема;
		Область.Параметры.ГодПриема =  Формат(Выборка.ДатаПриемаДокумента,"ДФ=гггг");
		Если ЗначениеЗаполнено(Выборка.ДатаУвольненияДокумента) тогда
			Область.Параметры.ДеньУвольнения = День(Выборка.ДатаУвольненияДокумента);
			МесяцУвольнения  = Формат(Выборка.ДатаУвольненияДокумента,"ДФ=MMММ");
			УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), МесяцУвольнения, 4, , МесяцУвольнения);
			Область.Параметры.МесяцУвольнения = МесяцУвольнения;
         	Область.Параметры.ГодУвольнения =  Формат(Выборка.ДатаУвольненияДокумента,"ДФ=гггг");
		КонецЕсли;
		Область.Параметры.ДеньВыдачи = День(Период);
		Месяц  = Формат(Период,"ДФ=MMММ");
        УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), Месяц, 4, , Месяц);
		Область.Параметры.МесяцВыдачи = Месяц;
		Область.Параметры.ГодВыдачи =  Формат(Период,"ДФ=гггг");

	КонецЕсли;
	ДокументРезультат.Вывести(Область);
	
КонецПроцедуры

Процедура СформироватьСправкаОМестеРаботы(ДокументРезультат) 
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Дата актуальности установим на последний день года. 
	Запрос.УстановитьПараметр("ДатаАктуальности",	КонецДня(Период));
	Запрос.УстановитьПараметр("Сотрудник",		Сотрудник);
	Запрос.УстановитьПараметр("Организация",		Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",ОбщегоНазначения.ГоловнаяОрганизация(Организация));

	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаботникиОрганизаций.Должность,
	|	ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество КАК ФИО,
	|	ПОДСТРОКА(ФИОРуководителя.Имя, 1, 1) + ""."" + ПОДСТРОКА(ФИОРуководителя.Отчество, 1, 1) + ФИОРуководителя.Фамилия КАК ФИОРуковолителя,
	|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность КАК ДолжностьРуководителя,
	|	РаботникиОрганизаций.Организация.НаименованиеПолное КАК Организация
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|			&ДатаАктуальности,
	|			Сотрудник = &Сотрудник) КАК РаботникиОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаАктуальности, ) КАК ФИОФизЛицСрезПоследних
	|		ПО РаботникиОрганизаций.Сотрудник.Физлицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
	|				&ДатаАктуальности,
	|				СтруктурнаяЕдиница = &Организация
	|					И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)) КАК ОтветственныеЛицаОрганизацийСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаАктуальности, ) КАК ФИОРуководителя
	|			ПО ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо = ФИОРуководителя.ФизЛицо
	|		ПО (ИСТИНА)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Макет = ПолучитьМакет("СправкаОМестеРаботы");
	
	Область = Макет.ПолучитьОбласть("Справка");
	
	Если Выборка.Следующий() Тогда
		Область.Параметры.Заполнить(Выборка);
		Область.Параметры.Номер = Номер;
		Область.Параметры.Период = Период;
		Область.Параметры.МестоВыдачи = МестоВыдачи;
		Область.Параметры.Адресат = Адресат.НаименованиеПолное;
		Область.Параметры.ДеньВыдачи = День(Период);
		Месяц  = Формат(Период,"ДФ=MMММ");
        УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), Месяц, 4, ,Месяц);
		Область.Параметры.МесяцВыдачи = Месяц;
		Область.Параметры.ГодВыдачи =  Формат(Период,"ДФ=гггг");

	КонецЕсли;
	ДокументРезультат.Вывести(Область);
	
КонецПроцедуры

Процедура СформироватьСправкаОНахожденииВОтпускеПоУходу(ДокументРезультат) 
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Дата актуальности установим на последний день года. 
	Запрос.УстановитьПараметр("ДатаАктуальности",	КонецДня(Период));
	Запрос.УстановитьПараметр("Сотрудник",		Сотрудник);
	Запрос.УстановитьПараметр("Организация",		Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",ОбщегоНазначения.ГоловнаяОрганизация(Организация));

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество КАК ФИО,
	|	ПОДСТРОКА(ФИОРуководителя.Имя, 1, 1) + ""."" + ПОДСТРОКА(ФИОРуководителя.Отчество, 1, 1) + ФИОРуководителя.Фамилия КАК ФИОРуковолителя,
	|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность КАК ДолжностьРуководителя,
	|	СостояниеРаботниковОрганизацийСрезПоследних.Период,
	|	СостояниеРаботниковОрганизацийСрезПоследних.Регистратор.Номер КАК НомерПриказа,
	|	СостояниеРаботниковОрганизацийСрезПоследних.Регистратор.Дата КАК ДатаПриказа,
	|	РаботникиОрганизацийСрезПоследних.Должность,
	|	РаботникиОрганизацийСрезПоследних.Организация.НаименованиеПолное КАК Организация
	|ИЗ
	|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
	|			&ДатаАктуальности,
	|			СтруктурнаяЕдиница = &Организация
	|				И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)) КАК ОтветственныеЛицаОрганизацийСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаАктуальности, ) КАК ФИОРуководителя
	|		ПО ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо = ФИОРуководителя.ФизЛицо,
	|	РегистрСведений.СостояниеРаботниковОрганизаций.СрезПоследних(
	|			&ДатаАктуальности,
	|			Сотрудник = &Сотрудник
	|				И Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком)) КАК СостояниеРаботниковОрганизацийСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&ДатаАктуальности,
	|				Сотрудник = &Сотрудник
	|					И ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)) КАК РаботникиОрганизацийСрезПоследних
	|		ПО СостояниеРаботниковОрганизацийСрезПоследних.Сотрудник = РаботникиОрганизацийСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаАктуальности, ) КАК ФИОФизЛицСрезПоследних
	|		ПО СостояниеРаботниковОрганизацийСрезПоследних.Сотрудник.Физлицо = ФИОФизЛицСрезПоследних.ФизЛицо";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Макет = ПолучитьМакет("СправкаОНахожденииВОтпускеПоУходу");
	
	Область = Макет.ПолучитьОбласть("Справка");
	
	Если Выборка.Следующий() Тогда
		Область.Параметры.Заполнить(Выборка);
		Область.Параметры.Номер = Номер;
		Область.Параметры.Период = Период;
		Область.Параметры.МестоВыдачи = МестоВыдачи;
		Область.Параметры.Адресат = Адресат.НаименованиеПолное;
		Область.Параметры.ДеньВыдачи = День(Период);
		Месяц  = Формат(Период,"ДФ=MMММ");
        УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), Месяц, 4, ,Месяц);
		Область.Параметры.МесяцВыдачи = Месяц;
		Область.Параметры.ГодВыдачи =  Формат(Период,"ДФ=гггг");
		
		Область.Параметры.ДеньПриказа = День(Выборка.ДатаПриказа);
		МесяцПриказа  = Формат(Выборка.ДатаПриказа,"ДФ=MMММ");
        УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), МесяцПриказа, 4, ,МесяцПриказа);
		Область.Параметры.МесяцПриказа = МесяцПриказа;
		Область.Параметры.ГодПриказа =  Формат(Выборка.ДатаПриказа,"ДФ=гггг");
		Область.Параметры.НомерПриказа = Выборка.НомерПриказа;
		
		Область.Параметры.ДеньОтпуска = День(Выборка.Период);
		МесяцОтпуска  = Формат(Выборка.Период,"ДФ=MMММ");
        УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), МесяцОтпуска, 4, ,МесяцОтпуска);
		Область.Параметры.МесяцОтпуска = МесяцОтпуска;
		Область.Параметры.ГодОтпуска =  Формат(Выборка.Период,"ДФ=гггг");
		
 	КонецЕсли;
	ДокументРезультат.Вывести(Область);
	
КонецПроцедуры

Процедура СформироватьСправкаОРазмереЗаработнойПлаты(ДокументРезультат) 
	
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	
	// Дата актуальности установим на последний день года. 
	Запрос.УстановитьПараметр("ДатаАктуальности",	КонецМесяца(ПериодКонец));
	//vvv
	Запрос.УстановитьПараметр("ДатаАктуальностиДолжности",Период);
	Запрос.УстановитьПараметр("ДатаДеноминации",ОбщегоНазначения.ПолучитьДатуДеноминации());
	//
	Запрос.УстановитьПараметр("НачалоГода",  		НачалоМесяца(ПериодНачало));
	Запрос.УстановитьПараметр("Физлицо",			Сотрудник.ФизЛицо);
	Запрос.УстановитьПараметр("Организация",		Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	//вкл дохды в натур форме
	Запрос.УстановитьПараметр("ВключатьДоходыВНатуральнойФорме",ВключатьДоходыВНатуральнойФорме);
 	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество, ФизическиеЛица.Наименование) КАК ФИО,
	|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + ""."" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1), ФизическиеЛица.Наименование) КАК ФИОСокр,
	|	РаботникиОрганизацииСрезПоследних.Сотрудник КАК Сотрудник,
	//vvv
	|	РаботникиОрганизацииСрезПоследних.Сотрудник.ДатаПриемаНаРаботу КАК ДатаПриемаНаРаботу,
	//|	РаботникиОрганизацииСрезПоследних.Организация,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаАктуальности
	|			И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделениеЗавершения
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделение
	|	КОНЕЦ КАК Организация,
	//|	РаботникиОрганизацииСрезПоследних.Должность,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаАктуальности
	|			И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ДолжностьЗавершения
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.Должность
	|	КОНЕЦ КАК Должность,
	//
	|	РаботникиОрганизацииСрезПоследних.Сотрудник.Физлицо.Пол КАК Пол
	|ПОМЕСТИТЬ ВТДанныеПОРаботнику
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаАктуальности, ФизЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	//vvv комментируем, в случае перемещения из обособленнго подразделения - неправильно работает отчет
	//|				&ДатаАктуальности,
	|				&ДатаАктуальностиДолжности,
	//
	|				Сотрудник.ФизЛицо = &ФизЛицо
	|					И Организация = &ГоловнаяОрганизация
	|					И Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК РаботникиОрганизацииСрезПоследних
	|		ПО (ВЫБОР
	|				КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаАктуальности
	|						И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделениеЗавершения
	|				ИНАЧЕ РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделение
	|			КОНЕЦ = &Организация)
	|ГДЕ
	|	ФизическиеЛица.Ссылка = &Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК Месяц
	|ПОМЕСТИТЬ ВТПериоды
	|ИЗ
	|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &НачалоГода И &ДатаАктуальности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	//vvv
	//|	НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) КАК Месяц,
	|	НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия, МЕСЯЦ) КАК Месяц,
	//|	СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат) КАК Результат
	|	ВЫРАЗИТЬ(СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат/ВЫБОР КОГДА (ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации<&ДатаДеноминации И &ДатаАктуальности>=&ДатаДеноминации) ТОГДА 10000 ИНАЧЕ 1 КОНЕЦ) КАК ЧИСЛО(15,2)) КАК Результат
	//
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|ГДЕ
	|	ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо = &ФизЛицо
	//vvv
	//|	И ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &НачалоГода И &ДатаАктуальности
	|	И ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия МЕЖДУ &НачалоГода И &ДатаАктуальности
	//
	|	И ВЫБОР
	|			КОГДА НЕ &ВключатьДоходыВНатуральнойФорме
	|				ТОГДА НЕ ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме 
	|		ИНАЧЕ Истина
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	//vvv
	//|	НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ)
	|	НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия, МЕСЯЦ)
	//
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	//vvv
	//|	НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ),
	|	ВЫБОР 
	|		КОГДА ДополнительныеНачисленияРаботниковОрганизаций.Регистратор ССЫЛКА Документ.ПремииРаботниковОрганизаций
	|			ТОГДА НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало, МЕСЯЦ)
	|	КОНЕЦ,
	//|	СУММА(ДополнительныеНачисленияРаботниковОрганизаций.Результат)
	|	ВЫРАЗИТЬ(СУММА(ДополнительныеНачисленияРаботниковОрганизаций.Результат/ВЫБОР КОГДА (ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации<&ДатаДеноминации И &ДатаАктуальности>=&ДатаДеноминации) ТОГДА 10000 ИНАЧЕ 1 КОНЕЦ) КАК ЧИСЛО(15,2))
	//
	|ИЗ
	|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисленияРаботниковОрганизаций
	|ГДЕ
	|	ДополнительныеНачисленияРаботниковОрганизаций.ФизЛицо = &ФизЛицо
	//vvv
	//|	И ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &НачалоГода И &ДатаАктуальности
	|	И ВЫБОР 
	|		КОГДА ДополнительныеНачисленияРаботниковОрганизаций.Регистратор ССЫЛКА Документ.ПремииРаботниковОрганизаций
	|			ТОГДА НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало, МЕСЯЦ)
	|	КОНЕЦ МЕЖДУ &НачалоГода И &ДатаАктуальности
	//
	|	И ДополнительныеНачисленияРаботниковОрганизаций.ВидРасчета <> ЗНАЧЕНИЕ(ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.ПереходящийОстаток)
	|	И ВЫБОР
	|			КОГДА НЕ &ВключатьДоходыВНатуральнойФорме
	|				ТОГДА НЕ ДополнительныеНачисленияРаботниковОрганизаций.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме 
	|		ИНАЧЕ Истина
	|		КОНЕЦ
   	|
	|СГРУППИРОВАТЬ ПО
	//vvv
	//|	НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ)
	|	ВЫБОР 
	|		КОГДА ДополнительныеНачисленияРаботниковОрганизаций.Регистратор ССЫЛКА Документ.ПремииРаботниковОрганизаций
	|			ТОГДА НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало, МЕСЯЦ)
	|	КОНЕЦ
	//
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеПОРаботнику.ФИО КАК ФИО,
	//vvv
	|	ДанныеПОРаботнику.ДатаПриемаНаРаботу КАК ДатаПриемаНаРаботу,
	//
	|	ДанныеПОРаботнику.ФИОСокр КАК ФИОСокр,
	|	ДанныеПОРаботнику.Должность КАК Должность,
	|	ПОДСТРОКА(ФИОРуководителя.Имя, 1, 1) + ""."" + ПОДСТРОКА(ФИОРуководителя.Отчество, 1, 1) + ""."" + ФИОРуководителя.Фамилия КАК ФИОРуководителя,
	|	ПОДСТРОКА(ФИОГлБухгалтера.Имя, 1, 1) + ""."" + ПОДСТРОКА(ФИОГлБухгалтера.Отчество, 1, 1) + ""."" + ФИОГлБухгалтера.Фамилия КАК ФИОГлБухгалтера,
	|	ДанныеПОРаботнику.Пол,
	|	ДанныеПОРаботнику.Организация.НаименованиеПолное КАК Организация
	|ИЗ
	|	ВТДанныеПОРаботнику КАК ДанныеПОРаботнику
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
	|				&ДатаАктуальности,
	|				СтруктурнаяЕдиница = &Организация
	|					И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)) КАК ОтветственныеЛицаОрганизацийСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаАктуальности, ) КАК ФИОРуководителя
	|		ПО (ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо = ФИОРуководителя.ФизЛицо)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
	|				&ДатаАктуальности,
	|				СтруктурнаяЕдиница = &Организация
	|					И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер)) КАК ОтветственныеЛицаОрганизацийСрезПоследних1
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаАктуальности, ) КАК ФИОГлБухгалтера
	|		ПО (ОтветственныеЛицаОрганизацийСрезПоследних1.ФизическоеЛицо = ФИОГлБухгалтера.ФизЛицо)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.Месяц КАК Месяц,
	|	СУММА(ЕСТЬNULL(Начисления.Результат, 0)) КАК Результат
	|ИЗ
	|	ВТПериоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисления КАК Начисления
	|		ПО Периоды.Месяц = Начисления.Месяц
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Месяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Месяц
	|ИТОГИ
	|	СУММА(Результат)
	|ПО
	|	ОБЩИЕ";

  	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаДанныеРаботника = Результат[3].Выбрать();
	ВыборкаДанныеЗаработка = Результат[4].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//vvv
	//Макет = ПолучитьМакет("СправкаОРазмереЗаработнойПлаты");
	Макет = ПолучитьМакет("СправкаОРазмереЗаработнойПлаты1");
	//
	
	ОбластьШапка = Макет.ПолучитьОбласть("ШапкаСправки");
	ОбластьТаблица = Макет.ПолучитьОбласть("ТаблицаСправки");
	ОбластьПодвал = Макет.ПолучитьОбласть("ПодвалСправки");
	
	Если ВыборкаДанныеРаботника.Следующий() Тогда
		
		ОбластьШапка.Параметры.Заполнить(ВыборкаДанныеРаботника);
		ФИОСокр = ВыборкаДанныеРаботника.ФИОСокр;
		УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), ФИОСокр, 2,ВыборкаДанныеРаботника.Пол , ФИОСокр);
		ОбластьШапка.Параметры.ФИОСокр = ФИОСокр; 
  		ОбластьШапка.Параметры.Период = Период;
		ОбластьШапка.Параметры.Номер = Номер;
		ОбластьШапка.Параметры.МестоВыдачи = МестоВыдачи;
		//vvv
		ОбластьШапка.Параметры.ДатаПриемаНаРаботу = Формат(ВыборкаДанныеРаботника.ДатаПриемаНаРаботу,"ДФ=dd.MM.yy");
		//
		ДокументРезультат.Вывести(ОбластьШапка);
		
		ПредыдущийГод = "";
		Пока ВыборкаДанныеЗаработка.Следующий() Цикл
			
			ОбластьПодвал.Параметры.СуммаЦифрамиПрописью = Формат(ВыборкаДанныеЗаработка.Результат,"ЧРГ=' '; ЧГ=3,0") + " " + РаботаСДиалогами.СформироватьСуммуПрописью(ВыборкаДанныеЗаработка.Результат,Константы.ВалютаРегламентированногоУчета.Получить());
			ВыборкаЗаработокПоМесяцам = ВыборкаДанныеЗаработка.Выбрать();
			Пока ВыборкаЗаработокПоМесяцам.Следующий() Цикл
				Если ПредыдущийГод <> ГОД(ВыборкаЗаработокПоМесяцам.Месяц) И ПредыдущийГод <> "" Тогда
					ДокументРезультат.Вывести(ОбластьТаблица);	
					ОбластьТаблица.Параметры.Год	 =  Формат(ВыборкаЗаработокПоМесяцам.Месяц,"ДФ=гггг");
					Для Индекс = 1 по 12 Цикл
						ОбластьТаблица.Параметры["Доход"+Индекс] = "";
	         		КонецЦикла
				КонецЕсли;
				
				НомерМесяца = Формат(ВыборкаЗаработокПоМесяцам.Месяц,"ДФ=M");
				ОбластьТаблица.Параметры["Доход"+НомерМесяца] = ВыборкаЗаработокПоМесяцам.Результат;
				ПредыдущийГод = ГОД(ВыборкаЗаработокПоМесяцам.Месяц);
				ОбластьТаблица.Параметры.Год	 =  Формат(ВыборкаЗаработокПоМесяцам.Месяц,"ДФ=гггг");


			КонецЦикла;
		КонецЦикла;
      	ДокументРезультат.Вывести(ОбластьТаблица);	
		
		ОбластьПодвал.Параметры.Заполнить(ВыборкаДанныеРаботника);
      	ОбластьПодвал.Параметры.ДеньВыдачи = День(Период);
		Месяц  = Формат(Период,"ДФ=MMММ");
		УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), Месяц, 4, , Месяц);
		ОбластьПодвал.Параметры.МесяцВыдачи = Месяц;
		ОбластьПодвал.Параметры.ГодВыдачи =  Формат(Период,"ДФ=гггг");
		ДокументРезультат.Вывести(ОбластьПодвал);	

	КонецЕсли;
	
КонецПроцедуры

#КонецЕсли

