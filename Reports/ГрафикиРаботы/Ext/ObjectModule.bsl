Перем мДлинаСуток Экспорт;

Процедура ГрафикРаботыВывести(Таб,ДатаНач,ДатаКон,Организация,ПодразделениеОрганизации) Экспорт
	
	Таб.Очистить();
	Макет = ПолучитьМакет("ГрафикРаботы");
	//Таб = ЭлементыФормы.ПолеТабличногоДокумента;
	
	
	Область = Макет.ПолучитьОбласть("Заголовок");
	Область.Параметры.Период = "" + ПредставлениеПериода(ДатаНач, КонецДня(ДатаКон), "ДФ=""ММММ.гггг""");
	//Область.Параметры.Организация = Организация.Наименование;
	Область.Параметры.ПодразделениеОрганизации = ПодразделениеОрганизации;
	Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, ТекущаяДата(),);
	Область.Параметры.Директор = Руководители.Руководитель;
	Таб.Вывести(Область);

	ОбластьШапкаОсновная = Макет.ПолучитьОбласть("ШапкаТаблицы|Основная");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаДата = Макет.ПолучитьОбласть("ШапкаТаблицы|Дата");
	ОбластьШапкаИтог = Макет.ПолучитьОбласть("ШапкаТаблицы|Итог");
	ОбластьДеталиОсновная = Макет.ПолучитьОбласть("Детали|Основная");
	ОбластьДеталиДата = Макет.ПолучитьОбласть("Детали|Дата");
	ОбластьДеталиИтог = Макет.ПолучитьОбласть("Детали|Итог");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	Таб.Вывести(ОбластьШапкаОсновная);
	
	НачДата = ДатаНач;
	ДД = Новый Массив(8);
	ДД[1] = "Пн.";
	ДД[2] = "Вт.";
	ДД[3] = "Ср.";
	ДД[4] = "Чт.";
	ДД[5] = "Пт.";
	ДД[6] = "Сб.";
	ДД[7] = "Вс.";
	Пока НачДата <= ДатаКон Цикл
		ОбластьШапкаДата.Параметры.Дата = Формат(НачДата, "ДФ=""дд.ММ""");
		ОбластьШапкаДата.Параметры.День = ДД[ДеньНедели(НачДата)];
		Таб.Присоединить(ОбластьШапкаДата);
		НачДата = КонецДня(НачДата) + 1;
	КонецЦикла;
	Таб.Присоединить(Макет.ПолучитьОбласть("ШапкаТаблицы|Итог"));
	
	ДД[1] = Перечисления.ДниНедели.Понедельник;
	ДД[2] = Перечисления.ДниНедели.Вторник;
	ДД[3] = Перечисления.ДниНедели.Среда;
	ДД[4] = Перечисления.ДниНедели.Четверг;
	ДД[5] = Перечисления.ДниНедели.Пятница;
	ДД[6] = Перечисления.ДниНедели.Суббота;
	ДД[7] = Перечисления.ДниНедели.Воскресенье;

	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря КАК ДатаКалендаря
	|ПОМЕСТИТЬ ВТПериоды
	|ИЗ
	|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &ДатаНач И &ДатаКон
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаботникиОрганизацийСрез.ДатаКалендаря,
	|	РаботникиОрганизацийСрез.Сотрудник,
	|	РаботникиОрганизаций.Должность,
	|	РаботникиОрганизаций.ГрафикРаботы,
	|	РаботникиОрганизаций.ПодразделениеОрганизации
	|ПОМЕСТИТЬ ВТДанныеСотрудника
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(РаботникиОрганизаций1.Период) КАК Период,
	|		РаботникиОрганизаций1.Сотрудник КАК Сотрудник,
	|		Периоды.ДатаКалендаря КАК ДатаКалендаря
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций1
	|			ПО Периоды.ДатаКалендаря >= РаботникиОрганизаций1.Период
	|	ГДЕ
	|		РаботникиОрганизаций1.ПричинаИзмененияСостояния <> &Увольнение
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.ДатаКалендаря,
	|		РаботникиОрганизаций1.Сотрудник) КАК РаботникиОрганизацийСрез
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|		ПО РаботникиОрганизацийСрез.Период = РаботникиОрганизаций.Период
	|			И РаботникиОрганизацийСрез.Сотрудник = РаботникиОрганизаций.Сотрудник
	|			И (РаботникиОрганизаций.ПодразделениеОрганизации = &ПодразделениеОрганизации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеСотрудника.ДатаКалендаря КАК Дата,
	|	ДанныеСотрудника.Сотрудник КАК Сотрудник,
	|	ДанныеСотрудника.ПодразделениеОрганизации,
	|	ДанныеСотрудника.Должность,
	|	ДанныеСотрудника.ГрафикРаботы,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА ГрафикиРаботыПоВидамВремени.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
	|					ТОГДА ГрафикиРаботыПоВидамВремени.ОсновноеЗначение
	|			КОНЕЦ), 0) КАК Дни,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА ГрафикиРаботыПоВидамВремени.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоЧасам)
	|					ТОГДА ГрафикиРаботыПоВидамВремени.ОсновноеЗначение
	|			КОНЕЦ), 0) КАК Часы,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА ГрафикиРаботыПоВидамВремени.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоНочнымЧасам)
	|					ТОГДА ГрафикиРаботыПоВидамВремени.ОсновноеЗначение
	|			КОНЕЦ), 0) КАК НочныеЧасы,
	|	РегламентированныйПроизводственныйКалендарь.ВидДня
	|ИЗ
	|	ВТДанныеСотрудника КАК ДанныеСотрудника
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|		ПО ДанныеСотрудника.ГрафикРаботы = ГрафикиРаботыПоВидамВремени.ГрафикРаботы
	|			И ДанныеСотрудника.ДатаКалендаря = ГрафикиРаботыПоВидамВремени.Дата
	|			И (ГрафикиРаботыПоВидамВремени.ВидУчетаВремени В (&ВидыУчетаВремени))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|		ПО ДанныеСотрудника.ДатаКалендаря = РегламентированныйПроизводственныйКалендарь.ДатаКалендаря
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеСотрудника.ДатаКалендаря,
	|	ДанныеСотрудника.Сотрудник,
	|	ДанныеСотрудника.ПодразделениеОрганизации,
	|	ДанныеСотрудника.Должность,
	|	ДанныеСотрудника.ГрафикРаботы,
	|	РегламентированныйПроизводственныйКалендарь.ВидДня
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата
	|ИТОГИ
	|	СУММА(Дни),
	|	СУММА(Часы),
	|	СУММА(НочныеЧасы)
	|ПО
	|	Сотрудник"; 	
	
	
	
	ВидыЗанятости = Новый Массив;
	ВидыЗанятости.Добавить(Перечисления.ВидыЗанятостиВОрганизации.Совместительство);
	ВидыЗанятости.Добавить(Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы);
	
	ВидыУчетаВремени = Новый Массив;
	ВидыУчетаВремени.Добавить(Перечисления.ВидыУчетаВремени.ПоЧасам);
	ВидыУчетаВремени.Добавить(Перечисления.ВидыУчетаВремени.ПоНочнымЧасам);
    ВидыУчетаВремени.Добавить(Перечисления.ВидыУчетаВремени.ПоДням);
	
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПодразделениеОрганизации", ПодразделениеОрганизации);
	Запрос.УстановитьПараметр("Увольнение", Перечисления.ПричиныИзмененияСостояния.Увольнение);
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон", НачалоМинуты(КонецДня(ДатаКон)));
	Запрос.УстановитьПараметр("ВидУчетаВремени", Перечисления.ВидыУчетаВремени.ПоЧасам);
	Запрос.УстановитьПараметр("ВидГрафика", Перечисления.ВидыРабочихГрафиков.Сменный);
	Запрос.УстановитьПараметр("Перемещение", Перечисления.ПричиныИзмененияСостояния.Перемещение);
	Запрос.УстановитьПараметр("Прием", Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	Запрос.УстановитьПараметр("ВидЗанятости", ВидыЗанятости);
	Запрос.УстановитьПараметр("ВидыУчетаВремени", ВидыУчетаВремени);
	
	ПустаяДата = '00010101';

	ВыборкаПоСотруднику = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоСотруднику.Следующий() цикл
		Если ЗначениеЗаполнено(ВыборкаПоСотруднику.Дни) тогда 
			ОбластьДеталиОсновная.Параметры.ФизЛицо =  ВыборкаПоСотруднику.Сотрудник;
			ОбластьДеталиОсновная.Параметры.ТабНом =  СокрЛП(ВыборкаПоСотруднику.Сотрудник.Код);
			Таб.Вывести(ОбластьДеталиОсновная);
			ВыборкаПоДням = ВыборкаПоСотруднику.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Дата = ДатаНач;

			Пока ВыборкаПоДням.Следующий() Цикл
				Если ЗначениеЗаполнено(ВыборкаПоДням.ГрафикРаботы) тогда
					Пока ВыборкаПоДням.Дата > Дата Цикл
						ОбластьДеталиДата= Макет.ПолучитьОбласть("Детали|Дата");	
						Таб.Присоединить(ОбластьДеталиДата);
						Дата = КонецДня(Дата) +1;
					КонецЦикла;

					Если ВыборкаПоДням.ГрафикРаботы.ВидГрафика = Перечисления.ВидыРабочихГрафиков.Пятидневка 
					ИЛИ ВыборкаПоДням.ГрафикРаботы.ВидГрафика = Перечисления.ВидыРабочихГрафиков.Шестидневка тогда
	                    ОбластьДеталиДата = Макет.ПолучитьОбласть("Детали|Дата");
						Если ВыборкаПоДням.Дни > 0 тогда
							Отбор = Новый Структура;
							Отбор.Вставить("ДеньНедели", ДД[ДеньНедели(ВыборкаПоДням.Дата)]);
							ВремяРаботы = ВыборкаПоДням.ГрафикРаботы.ПериодыСмены.НайтиСтроки(Отбор);
							Если ВремяРаботы.Количество() = 1 тогда
								ВремяНачала = ВремяРаботы[0].ВремяНачала;
								ВремяОкончания = ВремяРаботы[0].ВремяОкончания;
									
								Если ВыборкаПоДням.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный тогда
									ВремяОкончания = ВремяОкончания - 60*60;
								КонецЕсли;
						
								ОбластьДеталиДата.Параметры.ВремяРаботы1 = Формат(ВремяНачала,"ДФ=""ЧЧ:мм""")+"-"+ Формат(ВремяОкончания,"ДФ=""ЧЧ:мм""");
							ИначеЕсли ВремяРаботы.Количество() = 2 тогда
								ВремяНачала = ВремяРаботы[0].ВремяНачала;
								ВремяОкончания = ВремяРаботы[0].ВремяОкончания;
							 	ОбластьДеталиДата.Параметры.ВремяРаботы1 = Формат(ВремяНачала,"ДФ=""ЧЧ:мм""")+"-"+ Формат(ВремяОкончания,"ДФ=""ЧЧ:мм""");
								ВремяНачала = ВремяРаботы[1].ВремяНачала;
								ВремяОкончания = ВремяРаботы[1].ВремяОкончания;
								Если ВыборкаПоДням.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный тогда
									ВремяОкончания = ВремяОкончания - 60*60;
								КонецЕсли;
									ОбластьДеталиДата.Параметры.ВремяРаботы2 = Формат(ВремяНачала,"ДФ=""ЧЧ:мм""")+"-"+ Формат(ВремяОкончания,"ДФ=""ЧЧ:мм""");
								КонецЕсли;
									 
								ОбластьДеталиДата.Параметры.Часы = ВыборкаПоДням.Часы;
								Таб.Присоединить(ОбластьДеталиДата);
							Иначе 
								Таб.Присоединить(ОбластьДеталиДата);
							КонецЕсли;
					ИначеЕсли ВыборкаПоДням.ГрафикРаботы.ВидГрафика = Перечисления.ВидыРабочихГрафиков.Сменный тогда 
						ТаблицаСмен = ВыборкаПоДням.ГрафикРаботы.Смены;
						ДатаОтсчета = ВыборкаПоДням.ГрафикРаботы.ДатаОтсчета;
						КоличествоДней = ТаблицаСмен.Количество();
						ОбластьДеталиДата = Макет.ПолучитьОбласть("Детали|Дата");
						Если ВыборкаПоДням.Дни > 0 тогда 
		               		НомерДня = ((ВыборкаПоДням.Дата - ДатаОтсчета)/мДлинаСуток)%КоличествоДней;
							СтрокаТаблицыСмен = ТаблицаСмен[НомерДня];
							ТаблицаПериодовСмен = СтрокаТаблицыСмен.Смена.ПериодыСмены;
							Если ТаблицаПериодовСмен.Количество() = 1 тогда
								Если ТаблицаПериодовСмен[0].ВремяНачала = ПустаяДата тогда  
									ОбластьДеталиДата.Параметры.ВремяРаботы1 = "         -"+ Формат(ТаблицаПериодовСмен[0].ВремяОкончания,"ДФ=""ЧЧ:мм""");
								ИначеЕсли ТаблицаПериодовСмен[0].ВремяОкончания = КонецДня(ПустаяДата) тогда
									ОбластьДеталиДата.Параметры.ВремяРаботы1 = Формат(ТаблицаПериодовСмен[0].ВремяНачала,"ДФ=""ЧЧ:мм""")+"-";	
								Иначе
									ОбластьДеталиДата.Параметры.ВремяРаботы1 = Формат(ТаблицаПериодовСмен[0].ВремяНачала,"ДФ=""ЧЧ:мм""")+"-"+ Формат(ТаблицаПериодовСмен[0].ВремяОкончания,"ДФ=""ЧЧ:мм""");
								КонецЕсли;
							КонецЕсли;
							Если ТаблицаПериодовСмен.Количество() = 2 тогда 
									
								Если ТаблицаПериодовСмен[0].ВремяНачала = ПустаяДата тогда  
									ОбластьДеталиДата.Параметры.ВремяРаботы1 = "         -"+ Формат(ТаблицаПериодовСмен[0].ВремяОкончания,"ДФ=""ЧЧ:мм""");
								ИначеЕсли ТаблицаПериодовСмен[0].ВремяОкончания = КонецДня(ПустаяДата) тогда
									ОбластьДеталиДата.Параметры.ВремяРаботы1 = Формат(ТаблицаПериодовСмен[0].ВремяНачала,"ДФ=""ЧЧ:мм""")+"-";	
								Иначе
									ОбластьДеталиДата.Параметры.ВремяРаботы1 = Формат(ТаблицаПериодовСмен[0].ВремяНачала,"ДФ=""ЧЧ:мм""")+"-"+ Формат(ТаблицаПериодовСмен[0].ВремяОкончания,"ДФ=""ЧЧ:мм""");
								КонецЕсли;
								Если ТаблицаПериодовСмен[1].ВремяНачала = ПустаяДата тогда  
									ОбластьДеталиДата.Параметры.ВремяРаботы2 = "         -"+ Формат(ТаблицаПериодовСмен[1].ВремяОкончания,"ДФ=""ЧЧ:мм""");
								ИначеЕсли ТаблицаПериодовСмен[1].ВремяОкончания = КонецДня(ПустаяДата) тогда
									ОбластьДеталиДата.Параметры.ВремяРаботы2 = Формат(ТаблицаПериодовСмен[1].ВремяНачала,"ДФ=""ЧЧ:мм""")+"-";	
								Иначе
									ОбластьДеталиДата.Параметры.ВремяРаботы2 = Формат(ТаблицаПериодовСмен[1].ВремяНачала,"ДФ=""ЧЧ:мм""")+"-"+ Формат(ТаблицаПериодовСмен[1].ВремяОкончания,"ДФ=""ЧЧ:мм""");
								КонецЕсли;
										
							КонецЕсли;
							ОбластьДеталиДата.Параметры.Часы = ВыборкаПоДням.Часы;
							Таб.Присоединить(ОбластьДеталиДата);	
						Иначе 
							Таб.Присоединить(ОбластьДеталиДата);
						КонецЕсли;
					
					КонецЕсли;
				Иначе
					ОбластьДеталиДата = Макет.ПолучитьОбласть("Детали|Дата");
	                Таб.Присоединить(ОбластьДеталиДата);
				КонецЕсли;	
				Дата = КонецДня(Дата) +1;

	        КонецЦикла;
				
			ОбластьДеталиИтог.Параметры.РабочихДней = ВыборкаПоСотруднику.Дни;
			ОбластьДеталиИтог.Параметры.РабочихЧасов = ВыборкаПоСотруднику.Часы;
			ОбластьДеталиИтог.Параметры.РабочихНочных = ВыборкаПоСотруднику.НочныеЧасы;
			Таб.Присоединить(ОбластьДеталиИтог);
		КонецЕсли;
	КонецЦикла;
	
	Таб.Вывести(ОбластьПодвал);
КонецПроцедуры
#Если Клиент Тогда
	
НастройкаПериода = Новый НастройкаПериода;

#КонецЕсли
мДлинаСуток = 86400;