
#Если Клиент Тогда

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура СформироватьОтчет(ДокументРезультат, ЕстьОшибки = Ложь) Экспорт

	//Параметры документа
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ДокументРезультат.ПолеСлева			 = 0;
	ДокументРезультат.ПолеСправа		 = 0;
	ДокументРезультат.Защита             = Ложь;
	ДокументРезультат.ТолькоПросмотр     = Истина;
	ДокументРезультат.АвтоМасштаб		 = Истина;
	
	Запрос = Новый Запрос;
//	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	
	Запрос.УстановитьПараметр("парамПериод",	НачалоМесяца(Период));
	Запрос.УстановитьПараметр("Организация",		Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",ОбщегоНазначения.ГоловнаяОрганизация(Организация));

	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат) КАК Сумма,
	|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор.ДатаНачала КАК ДатаНачала,
	|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор.ДатаОкончания КАК ДатаОкончания,
	|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор.НомерВходящегоДокумента КАК Номер,
	|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор.СерияВходящегоДокумента КАК Серия,
	//vvv
	|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор.ДнейОплаты КАК КалДней,
	//
	|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор.ПричинаНетрудоспособности КАК ВидПособия,
	|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + ВЫБОР
	|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) <> """"
	|				ТОГДА "" "" + ФИОФизЛицСрезПоследних.Имя
	|			ИНАЧЕ """"
	|		КОНЕЦ + ВЫБОР
	|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) <> """"
	|				ТОГДА "" "" + ФИОФизЛицСрезПоследних.Отчество
	|			ИНАЧЕ """"
	|		КОНЕЦ, ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо.Наименование) КАК ФИО
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&парамПериод, ) КАК ФИОФизЛицСрезПоследних
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|ГДЕ
	|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор ССЫЛКА Документ.НачислениеПоБольничномуЛисту
	//vvv
	|	И ОсновныеНачисленияРаботниковОрганизаций.Регистратор.Организация = &Организация
	|	И ОсновныеНачисленияРаботниковОрганизаций.Регистратор.ВидРасчета = ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета
	//
	|	И НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) = &парамПериод
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор.ДатаНачала,
	|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор.ДатаОкончания,
	|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор.НомерВходящегоДокумента,
	|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор.СерияВходящегоДокумента,
	//vvv
	|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор.ДнейОплаты,
	//
	|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор.ПричинаНетрудоспособности,
	|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + ВЫБОР
	|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) <> """"
	|				ТОГДА "" "" + ФИОФизЛицСрезПоследних.Имя
	|			ИНАЧЕ """"
	|		КОНЕЦ + ВЫБОР
	|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) <> """"
	|				ТОГДА "" "" + ФИОФизЛицСрезПоследних.Отчество
	|			ИНАЧЕ """"
	|		КОНЕЦ, ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо.Наименование)";
	
	ВыборкаРезультата	=	Запрос.Выполнить().Выбрать();
	
	ДокументРезультат.Очистить();
	Макет 		 = ПолучитьМакет("РеестрБольныхЛистов");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаТаблицы =  Макет.ПолучитьОбласть("ШапкаТаблицы");
   	ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	// Организация
	ОбластьШапка.Параметры.Организация	= Организация.Наименование;
	ОбластьШапка.Параметры.Период	 = Формат(Период,"ДФ='MMMM yyyy'");


	ДокументРезультат.Вывести(ОбластьШапка);
	ДокументРезультат.Вывести(ОбластьШапкаТаблицы);

	ИтогоСумма  = 0;
	//vvv
	ИтогоКалДней = 0;
	//
	НомерПП = 0;	
	Пока ВыборкаРезультата.Следующий() Цикл
		НомерПП = НомерПП +1;
		ОбластьСтрокаТаблицы.Параметры.Заполнить(ВыборкаРезультата);
		ОбластьСтрокаТаблицы.Параметры.НомерПП = НомерПП;
		ИтогоСумма = ИтогоСумма + ВыборкаРезультата.Сумма; 
		//vvv
		ИтогоКалДней = ИтогоКалДней + ВыборкаРезультата.КалДней; 
		//
		ДокументРезультат.Вывести(ОбластьСтрокаТаблицы);
	КонецЦикла;
	
	ОбластьПодвалТаблицы.Параметры.ИтогоСумма   = ИтогоСумма;
	//vvv
	ОбластьПодвалТаблицы.Параметры.ИтогоКалДней   = ИтогоКалДней;
	//
	ДокументРезультат.Вывести(ОбластьПодвалТаблицы);
	
	ОбластьПодвал.Параметры.СуммаПрописью  =  РаботаСДиалогами.СформироватьСуммуПрописью(ИтогоСумма,Константы.ВалютаРегламентированногоУчета.Получить());
	ДокументРезультат.Вывести(ОбластьПодвал);
КонецПроцедуры	

#КонецЕсли

