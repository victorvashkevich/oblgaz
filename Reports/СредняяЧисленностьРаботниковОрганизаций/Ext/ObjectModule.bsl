Перем СохраненнаяНастройка Экспорт;        // Текущий вариант отчета

Перем ТаблицаВариантовОтчета Экспорт;      // Таблица вариантов доступных текущему пользователю

Функция СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина) Экспорт
	
	НастрокаПоУмолчанию        = КомпоновщикНастроек.ПолучитьНастройки();
	ТиповыеОтчеты.ПолучитьПримененуюНастройку(ЭтотОбъект);
	
	ТиповыеОтчеты.СформироватьТиповойОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета);
	КомпоновщикНастроек.ЗагрузитьНастройки(НастрокаПоУмолчанию);
	Возврат Результат;
		
КонецФункции

Процедура СохранитьНастройку() Экспорт

	СтруктураНастроек = ТиповыеОтчеты.ПолучитьСтруктуруПараметровТиповогоОтчета(ЭтотОбъект);
	СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураНастроек);
	
КонецПроцедуры

Процедура ПрименитьНастройку() Экспорт
	
	Схема = ТиповыеОтчеты.ПолучитьСхемуКомпоновкиОбъекта(ЭтотОбъект);

	// Считываение структуры настроек отчета
 	Если Не СохраненнаяНастройка.Пустая() Тогда
		
		СтруктураНастроек = СохраненнаяНастройка.ХранилищеНастроек.Получить();
		Если Не СтруктураНастроек = Неопределено Тогда
			КомпоновщикНастроек.ЗагрузитьНастройки(СтруктураНастроек.НастройкиКомпоновщика);
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтруктураНастроек);
		Иначе
			КомпоновщикНастроек.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
		КонецЕсли;
		
	Иначе
		КомпоновщикНастроек.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	СтруктураНатроек = Новый Структура();
	Возврат СтруктураНатроек;
КонецФункции

#Если ТолстыйКлиентОбычноеПриложение Тогда
	
// Настройка отчета при отработки расшифровки
Процедура Настроить(Отбор) Экспорт
	
	// Настройка отбора
	Для каждого ЭлементОтбора Из Отбор Цикл
		
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			ПолеОтбора = ЭлементОтбора.ЛевоеЗначение;
		Иначе
			ПолеОтбора = Новый ПолеКомпоновкиДанных(ЭлементОтбора.Поле);
		КонецЕсли;
		
		Если КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.НайтиПоле(ПолеОтбора) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			ЗаполнитьЗначенияСвойств(НовыйЭлементОтбора, ЭлементОтбора);
		Иначе
			НовыйЭлементОтбора.Использование  = Истина;
			НовыйЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
			Если ЭлементОтбора.Иерархия Тогда
				Если ТипЗнч(ЭлементОтбора.Значение) = Тип("СписокЗначений") Тогда
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии;
				Иначе
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
				КонецЕсли;
			Иначе
				Если ТипЗнч(ЭлементОтбора.Значение) = Тип("СписокЗначений") Тогда
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
				Иначе
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
				КонецЕсли;
			КонецЕсли;
			
			НовыйЭлементОтбора.ПравоеЗначение = ЭлементОтбора.Значение;
			
		КонецЕсли;
				
	КонецЦикла;
	
	ТиповыеОтчеты.УдалитьДублиОтбора(КомпоновщикНастроек);
	
КонецПроцедуры

#КонецЕсли

//Функция формирует таблицу средних численостей путем формирование наборов данных СКД в виде временных таблиц
Функция ПолучитьТаблицуЧисленностей(Организация = Неопределено, НачалоПериода, КонецПериода, РазворачиватьЧисленностьПоМесяцам = истина) Экспорт
	//1. Сформироват ВТ по месяца
	//2. Сформировать ВТ по периодам работы сотрудников
	//3. Сформировать ВТ по периодам работы договорников
	//4. Сформировать ВТ по сотрудникам, чья деятельность относится к ЕНВД
	//5. Сформировать ВТ по инвалидам
	ПустоеДерево = Новый ТаблицаЗначений;
	ПустоеДерево.Колонки.Добавить("МесяцОтчета");
	ПустоеДерево.Колонки.Добавить("Организация");
	ПустоеДерево.Колонки.Добавить("СреднеСписочнаяЧисленность");
	ПустоеДерево.Колонки.Добавить("СредняяЧисленность");
	ПустоеДерево.Колонки.Добавить("СредняяЧисленностьЕНВД");
	ПустоеДерево.Колонки.Добавить("СредняяЧисленностьНеЕНВД");
	ПустоеДерево.Колонки.Добавить("СредняяЧисленностьЖенщин");
	ПустоеДерево.Колонки.Добавить("СредняяЧисленностьЖенщинЕНВД");
	ПустоеДерево.Колонки.Добавить("СредняяЧисленностьЖенщинНеЕНВД");
	ПустоеДерево.Колонки.Добавить("СредняяЧисленностьИнвалидов");
	ПустоеДерево.Колонки.Добавить("СредняяЧисленностьИнвалидовЕНВД");
	ПустоеДерево.Колонки.Добавить("СредняяЧисленностьИнвалидовНеЕНВД");
	
	//1. 
	ЗапросСКДМесяцыОтчета = СхемаКомпоновкиДанных.НаборыДанных.МесяцыОтчета.Запрос;
	НомерПозиции = Найти(ЗапросСКДМесяцыОтчета, "{ВЫБРАТЬ")-1;
	МесяцыОтчета = Лев(ЗапросСКДМесяцыОтчета, НомерПозиции) + " ПОМЕСТИТЬ МесяцыОтчета "+ Символы.ПС + Прав(ЗапросСКДМесяцыОтчета, СтрДлина(ЗапросСКДМесяцыОтчета) - НомерПозиции);
	МесяцыОтчета = СтрЗаменить(МесяцыОтчета, "ВЫБРАТЬ РАЗРЕШЕННЫЕ", "ВЫБРАТЬ");
	МесяцыОтчета = СтрЗаменить(МесяцыОтчета, "И ИСТИНА", "И ВЫБОР КОГДА Организации.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА Организации.Ссылка ИНАЧЕ Организации.ГоловнаяОрганизация КОНЕЦ = &ГоловнаяОрганизация");

	Запрос = Новый Запрос(МесяцыОтчета);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначенияЗК.ГоловнаяОрганизация(Организация));
	СписокСостояний = Новый Массив;
	СписокСостояний.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком);
	СписокСостояний.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускПоБеременностиИРодам);
	СписокСостояний.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускУчебныйНеоплачиваемый);
	Запрос.УстановитьПараметр("Состояние", СписокСостояний);

	МенеджерВремТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВремТаблиц;
	МассивЗапросов = Новый Массив;
	#Если ТолстыйКлиентОбычноеПриложение тогда
	ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если ТолстыйКлиентОбычноеПриложение тогда
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	//2. 
	ЗапросСКД = СхемаКомпоновкиДанных.НаборыДанных.ПериодыРаботы.Элементы.Работники.Запрос;
	НомерПозиции = Найти(ЗапросСКД, "{ВЫБРАТЬ")-1;
	ТекстЗапроса = Лев(ЗапросСКД, НомерПозиции) + " ПОМЕСТИТЬ ПериодыРаботников "+ Символы.ПС + Прав(ЗапросСКД, СтрДлина(ЗапросСКД) - НомерПозиции);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВЫБРАТЬ РАЗРЕШЕННЫЕ", "ВЫБРАТЬ");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И ИСТИНА", "И РаботникиОрганизаций.Организация = &ГоловнаяОрганизация ");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИСТИНА КАК ВыборкаЕсть,", "ИСТИНКАКВыборкаЕсть,");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "(ИСТИНА) КАК ВыборкаЕсть,", "(ИСТИН)КАКВыборкаЕсть,");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИСТИНА)", "ИСТИН)");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИСТИНА", "СостояниеРаботниковОрганизаций.Организация = &ГоловнаяОрганизация ");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИСТИНКАКВыборкаЕсть,", "ИСТИНА КАК ВыборкаЕсть,");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "(ИСТИН)КАКВыборкаЕсть,", "(ИСТИНА) КАК ВыборкаЕсть,");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИСТИН)", "Организация = &ГоловнаяОрганизация)");
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	СписокСостояний = Новый Массив;
	СписокСостояний.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком);
	СписокСостояний.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускПоБеременностиИРодам);
	СписокСостояний.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускУчебныйНеоплачиваемый);
	Запрос.УстановитьПараметр("Состояние", СписокСостояний);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначенияЗК.ГоловнаяОрганизация(Организация));
	Запрос.МенеджерВременныхТаблиц = МенеджерВремТаблиц;
	#Если ТолстыйКлиентОбычноеПриложение тогда
	ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если ТолстыйКлиентОбычноеПриложение тогда
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	//3. 
	ЗапросСКД = СхемаКомпоновкиДанных.НаборыДанных.ПериодыРаботы.Элементы.Договорники.Запрос;
	НомерПозиции = Найти(ЗапросСКД, "{ВЫБРАТЬ")-1;
	ТекстЗапроса = Лев(ЗапросСКД, НомерПозиции) + " ПОМЕСТИТЬ ПериодыДоговорников "+ Символы.ПС + Прав(ЗапросСКД, СтрДлина(ЗапросСКД) - НомерПозиции);
	//ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВЫБРАТЬ РАЗРЕШЕННЫЕ", "ВЫБРАТЬ");
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	СписокСостояний = Новый Массив;
	СписокСостояний.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком);
	СписокСостояний.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускПоБеременностиИРодам);
	СписокСостояний.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускУчебныйНеоплачиваемый);
	Запрос.УстановитьПараметр("Состояние", СписокСостояний);
	Запрос.МенеджерВременныхТаблиц = МенеджерВремТаблиц;
	#Если ТолстыйКлиентОбычноеПриложение тогда
	ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если ТолстыйКлиентОбычноеПриложение тогда
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	//4. 
	ЗапросСКД = СхемаКомпоновкиДанных.НаборыДанных.РаспределениеПоВидамДеятельности.Запрос;
	НомерПозиции = Найти(ЗапросСКД, "{ВЫБРАТЬ")-1;
	ТекстЗапроса = Лев(ЗапросСКД, НомерПозиции) + " ПОМЕСТИТЬ РаспределениеПоВидамДеятельности "+ Символы.ПС + Прав(ЗапросСКД, СтрДлина(ЗапросСКД) - НомерПозиции);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВЫБРАТЬ РАЗРЕШЕННЫЕ", "ВЫБРАТЬ");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И ИСТИНА", "И СтраховыеВзносыСведенияОДоходах.Организация = &ГоловнаяОрганизация ");
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначенияЗК.ГоловнаяОрганизация(Организация));
	СписокСостояний = Новый Массив;
	СписокСостояний.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком);
	СписокСостояний.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускПоБеременностиИРодам);
	СписокСостояний.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускУчебныйНеоплачиваемый);
	Запрос.УстановитьПараметр("Состояние", СписокСостояний);
	Запрос.МенеджерВременныхТаблиц = МенеджерВремТаблиц;
	#Если ТолстыйКлиентОбычноеПриложение тогда
	ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если ТолстыйКлиентОбычноеПриложение тогда
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	//5. 
	ЗапросСКД = СхемаКомпоновкиДанных.НаборыДанных.СведенияОбИнвалидностиФизлиц.Запрос;
	НомерПозиции = Найти(ЗапросСКД, "{ВЫБРАТЬ")-1;
	ТекстЗапроса = Лев(ЗапросСКД, НомерПозиции) + " ПОМЕСТИТЬ СведенияОбИнвалидностиФизлиц "+ Символы.ПС + Прав(ЗапросСКД, СтрДлина(ЗапросСКД) - НомерПозиции);
	//ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВЫБРАТЬ РАЗРЕШЕННЫЕ", "ВЫБРАТЬ");
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	СписокСостояний = Новый Массив;
	СписокСостояний.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком);
	СписокСостояний.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускПоБеременностиИРодам);
	СписокСостояний.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускУчебныйНеоплачиваемый);
	Запрос.УстановитьПараметр("Состояние", СписокСостояний);
	Запрос.МенеджерВременныхТаблиц = МенеджерВремТаблиц;
	#Если ТолстыйКлиентОбычноеПриложение тогда
	ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		Запрос.Выполнить();
	Исключение
		#Если ТолстыйКлиентОбычноеПриложение тогда
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	
	ТЗ = 
	"ВЫБРАТЬ
	|	МесяцыОтчета.МесяцОтчета КАК МесяцОтчета,
	|	ПериодыРаботы.Организация КАК Организация,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПериодыРаботы.ВыборкаЕсть ЕСТЬ NULL )
	|					И ПериодыРаботы.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
	|				ТОГДА ПериодыРаботы.ЗанимаемыхСтавок
	|			ИНАЧЕ 0
	|		КОНЕЦ / МесяцыОтчета.КолвоДней) КАК СреднеСписочнаяЧисленность,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПериодыРаботы.ВыборкаЕсть ЕСТЬ NULL )
	|					И ПериодыРаботы.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
	|				ТОГДА ПериодыРаботы.ЗанимаемыхСтавок
	|			ИНАЧЕ 0
	|		КОНЕЦ / МесяцыОтчета.КолвоДней) КАК СредняяЧисленность,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПериодыРаботы.ВыборкаЕсть ЕСТЬ NULL )
	|					И ЕСТЬNULL(РаспределениеПоВидамДеятельности.ЕНВД, 0) <> 0
	|					И ПериодыРаботы.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
	|				ТОГДА ПериодыРаботы.ЗанимаемыхСтавок
	|			ИНАЧЕ 0
	|		КОНЕЦ / МесяцыОтчета.КолвоДней) КАК СредняяЧисленностьЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПериодыРаботы.ВыборкаЕсть ЕСТЬ NULL )
	|					И ЕСТЬNULL(РаспределениеПоВидамДеятельности.НеЕНВД, 1) <> 0
	|					И ПериодыРаботы.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
	|				ТОГДА ПериодыРаботы.ЗанимаемыхСтавок
	|			ИНАЧЕ 0
	|		КОНЕЦ / МесяцыОтчета.КолвоДней) КАК СредняяЧисленностьНеЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПериодыРаботы.ВыборкаЕсть ЕСТЬ NULL )
	|					И ЕСТЬNULL(РаспределениеПоВидамДеятельности.ЕНВД, 0) <> 0
	|					И ПериодыРаботы.ФизлицоПол = ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.Женский)
	|					И ПериодыРаботы.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
	|				ТОГДА ПериодыРаботы.ЗанимаемыхСтавок
	|			ИНАЧЕ 0
	|		КОНЕЦ / МесяцыОтчета.КолвоДней) КАК СредняяЧисленностьЖенщинЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПериодыРаботы.ВыборкаЕсть ЕСТЬ NULL )
	|					И ЕСТЬNULL(РаспределениеПоВидамДеятельности.НеЕНВД, 1) <> 0
	|					И ПериодыРаботы.ФизлицоПол = ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.Женский)
	|					И ПериодыРаботы.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
	|				ТОГДА ПериодыРаботы.ЗанимаемыхСтавок
	|			ИНАЧЕ 0
	|		КОНЕЦ / МесяцыОтчета.КолвоДней) КАК СредняяЧисленностьЖенщинНеЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПериодыРаботы.ВыборкаЕсть ЕСТЬ NULL )
	|					И ПериодыРаботы.ФизлицоПол = ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.Женский)
	|					И ПериодыРаботы.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
	|				ТОГДА ПериодыРаботы.ЗанимаемыхСтавок
	|			ИНАЧЕ 0
	|		КОНЕЦ / МесяцыОтчета.КолвоДней) КАК СредняяЧисленностьЖенщин,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПериодыРаботы.ВыборкаЕсть ЕСТЬ NULL )
	|					И ЕСТЬNULL(СведенияОбИнвалидностиФизлиц.Инвалидность, ЛОЖЬ)
	|					И ПериодыРаботы.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
	|				ТОГДА ПериодыРаботы.ЗанимаемыхСтавок
	|			ИНАЧЕ 0
	|		КОНЕЦ / МесяцыОтчета.КолвоДней) КАК СредняяЧисленностьИнвалидов,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПериодыРаботы.ВыборкаЕсть ЕСТЬ NULL )
	|					И ЕСТЬNULL(РаспределениеПоВидамДеятельности.ЕНВД, 0) <> 0
	|					И ЕСТЬNULL(СведенияОбИнвалидностиФизлиц.Инвалидность, ЛОЖЬ)
	|					И ПериодыРаботы.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
	|				ТОГДА ПериодыРаботы.ЗанимаемыхСтавок
	|			ИНАЧЕ 0
	|		КОНЕЦ / МесяцыОтчета.КолвоДней) КАК СредняяЧисленностьИнвалидовЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ПериодыРаботы.ВыборкаЕсть ЕСТЬ NULL )
	|					И ЕСТЬNULL(РаспределениеПоВидамДеятельности.НеЕНВД, 1) <> 0
	|					И ЕСТЬNULL(СведенияОбИнвалидностиФизлиц.Инвалидность, ЛОЖЬ)
	|					И ПериодыРаботы.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
	|				ТОГДА ПериодыРаботы.ЗанимаемыхСтавок
	|			ИНАЧЕ 0
	|		КОНЕЦ / МесяцыОтчета.КолвоДней) КАК СредняяЧисленностьИнвалидовНеЕНВД
	|ИЗ
	|	МесяцыОтчета КАК МесяцыОтчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ПериодыРаботников.ВидЗанятости КАК ВидЗанятости,
	|			ПериодыРаботников.МесяцОтчета КАК МесяцОтчета,
	|			ПериодыРаботников.Организация КАК Организация,
	|			ПериодыРаботников.Физлицо КАК Физлицо,
	|			ПериодыРаботников.Физлицо.Пол КАК ФизлицоПол,
	|			ПериодыРаботников.Должность КАК Должность,
	|			ПериодыРаботников.Дата КАК Дата,
	|			ПериодыРаботников.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
	|			ПериодыРаботников.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|			ПериодыРаботников.НеВключаетсяВСреднююЧисленность КАК НеВключаетсяВСреднююЧисленность,
	|			ПериодыРаботников.ВыборкаЕсть КАК ВыборкаЕсть
	|		ИЗ
	|			ПериодыРаботников КАК ПериодыРаботников
	|		
	|		ОБЪЕДИНИТЬ
	|		
	|		ВЫБРАТЬ
	|			ПериодыДоговорников.ВидЗанятости,
	|			ПериодыДоговорников.МесяцОтчета,
	|			ПериодыДоговорников.Организация,
	|			ПериодыДоговорников.Физлицо,
	|			ПериодыДоговорников.Физлицо.Пол,
	|			ПериодыДоговорников.Должность,
	|			ПериодыДоговорников.Дата,
	|			ПериодыДоговорников.ЗанимаемыхСтавок,
	|			ПериодыДоговорников.ПодразделениеОрганизации,
	|			ПериодыДоговорников.НеВключаетсяВСреднююЧисленность,
	|			ПериодыДоговорников.ВыборкаЕсть
	|		ИЗ
	|			ПериодыДоговорников КАК ПериодыДоговорников) КАК ПериодыРаботы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РаспределениеПоВидамДеятельности КАК РаспределениеПоВидамДеятельности
	|			ПО ПериодыРаботы.МесяцОтчета = РаспределениеПоВидамДеятельности.ПериодРегистрации
	|				И ПериодыРаботы.Физлицо = РаспределениеПоВидамДеятельности.Физлицо
	|				И ПериодыРаботы.Организация = РаспределениеПоВидамДеятельности.Организация
	|			ЛЕВОЕ СОЕДИНЕНИЕ СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|			ПО ПериодыРаботы.МесяцОтчета = СведенияОбИнвалидностиФизлиц.Период
	|				И ПериодыРаботы.Физлицо = СведенияОбИнвалидностиФизлиц.Физлицо
	|		ПО МесяцыОтчета.Дата = ПериодыРаботы.Дата 
	|		 И МесяцыОтчета.Организация = ПериодыРаботы.Организация
	|ГДЕ
	|	(ПериодыРаботы.Организация = &Организация ИЛИ ПериодыРаботы.Организация ЕСТЬ NULL)
	|	И (ПериодыРаботы.НеВключаетсяВСреднююЧисленность = 0 ИЛИ ПериодыРаботы.НеВключаетсяВСреднююЧисленность ЕСТЬ NULL)
	|
	|СГРУППИРОВАТЬ ПО
	|	МесяцыОтчета.МесяцОтчета,
	|	ПериодыРаботы.Организация";
	
	Если не РазворачиватьЧисленностьПоМесяцам тогда
		ТЗ = 
		"ВЫБРАТЬ 
		|СУММА(ВЫРАЗИТЬ(МесячнаяЧисленность.СреднеСписочнаяЧисленность КАК ЧИСЛО(15,0))) / КОЛИЧЕСТВО(МесячнаяЧисленность.МесяцОтчета) КАК СреднеСписочнаяЧисленность,
		|СУММА(ВЫРАЗИТЬ(МесячнаяЧисленность.СредняяЧисленность КАК ЧИСЛО(15,0))) / КОЛИЧЕСТВО(МесячнаяЧисленность.МесяцОтчета) КАК СредняяЧисленность,
		|СУММА(ВЫРАЗИТЬ(МесячнаяЧисленность.СредняяЧисленностьЕНВД КАК ЧИСЛО(15,0)))  / КОЛИЧЕСТВО(МесячнаяЧисленность.МесяцОтчета) КАК СредняяЧисленностьЕНВД,
		|СУММА(ВЫРАЗИТЬ(МесячнаяЧисленность.СредняяЧисленностьНеЕНВД КАК ЧИСЛО(15,0)))  / КОЛИЧЕСТВО(МесячнаяЧисленность.МесяцОтчета) КАК СредняяЧисленностьНеЕНВД,
		|СУММА(ВЫРАЗИТЬ(МесячнаяЧисленность.СредняяЧисленностьЖенщин КАК ЧИСЛО(15,0))) / КОЛИЧЕСТВО(МесячнаяЧисленность.МесяцОтчета) КАК СредняяЧисленностьЖенщин,
		|СУММА(ВЫРАЗИТЬ(МесячнаяЧисленность.СредняяЧисленностьЖенщинЕНВД КАК ЧИСЛО(15,0))) / КОЛИЧЕСТВО(МесячнаяЧисленность.МесяцОтчета) КАК СредняяЧисленностьЖенщинЕНВД,
		|СУММА(ВЫРАЗИТЬ(МесячнаяЧисленность.СредняяЧисленностьЖенщинНеЕНВД КАК ЧИСЛО(15,0))) / КОЛИЧЕСТВО(МесячнаяЧисленность.МесяцОтчета) КАК СредняяЧисленностьЖенщинНеЕНВД,
		|СУММА(ВЫРАЗИТЬ(МесячнаяЧисленность.СредняяЧисленностьИнвалидов КАК ЧИСЛО(15,0))) / КОЛИЧЕСТВО(МесячнаяЧисленность.МесяцОтчета) КАК СредняяЧисленностьИнвалидов,
		|СУММА(ВЫРАЗИТЬ(МесячнаяЧисленность.СредняяЧисленностьИнвалидовЕНВД КАК ЧИСЛО(15,0))) / КОЛИЧЕСТВО(МесячнаяЧисленность.МесяцОтчета) КАК СредняяЧисленностьИнвалидовЕНВД,
		|СУММА(ВЫРАЗИТЬ(МесячнаяЧисленность.СредняяЧисленностьИнвалидовНеЕНВД КАК ЧИСЛО(15,0))) / КОЛИЧЕСТВО(МесячнаяЧисленность.МесяцОтчета) КАК СредняяЧисленностьИнвалидовНеЕНВД
		|ИЗ
		|("+ТЗ+") КАК МесячнаяЧисленность";
	КонецЕсли;
	
	
	Запрос.Текст = ТЗ;
	Запрос.УстановитьПараметр("Организация", Организация);
	СписокСостояний = Новый Массив;
	СписокСостояний.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком);
	СписокСостояний.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускПоБеременностиИРодам);
	СписокСостояний.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускУчебныйНеоплачиваемый);
	Запрос.УстановитьПараметр("Состояние", СписокСостояний);
	#Если ТолстыйКлиентОбычноеПриложение тогда
	ФормированиеПечатныхФорм.ЗапомнитьПараметрыЗапроса(Запрос, МассивЗапросов);
	#КонецЕсли
	Попытка
		РезультатЗапроса = Запрос.Выполнить();
	Исключение
		#Если ТолстыйКлиентОбычноеПриложение тогда
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ФормированиеПечатныхФорм.ПроверитьОшибкуЗапрос(МассивЗапросов, ИнформацияОбОшибке, , истина);
		#КонецЕсли
		Возврат ПустоеДерево;
	КонецПопытки;
	
	Возврат РезультатЗапроса.Выгрузить();
КонецФункции


Процедура ДоработатьКомпоновщикПередВыводом() Экспорт
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("НачалоПериода"));
	Если ЗначениеПараметра = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ЗначениеПараметра.Значение = '00010101' Тогда
		ЗначениеПараметра.Значение =  НачалоГода(ТекущаяДата());
		ЗначениеПараметра.Использование = Истина;
	КонецЕсли;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КонецПериода"));
	Если ЗначениеПараметра = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ЗначениеПараметра.Значение = '00010101' Тогда
		ЗначениеПараметра.Значение =  КонецГода(ТекущаяДата());
		ЗначениеПараметра.Использование = Истина;
	КонецЕсли;
КонецПроцедуры

Если СохраненнаяНастройка = Неопределено Тогда
	СохраненнаяНастройка =  Справочники.СохраненныеНастройки.ПустаяСсылка();
КонецЕсли;

УправлениеОтчетами.ЗаменитьНазваниеПолейСхемыКомпоновкиДанных(СхемаКомпоновкиДанных);
//УправлениеОтчетамиПереопределяемый.ДобавитьУчетнуюПолитикуПОУСНДляРасчетаСреднесписочнойЧисленности(СхемаКомпоновкиДанных);
//СхемаКомпоновкиДанных.НаборыДанных.МесяцыУСН.Запрос = УправлениеОтчетамиПереопределяемый.ПодставитьЗапросДляПолученияНалоговойПолитики(СхемаКомпоновкиДанных.НаборыДанных.МесяцыУСН.Запрос);



