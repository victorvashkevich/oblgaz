Перем СохраненнаяНастройка Экспорт;        // Текущий вариант отчета

Перем ТаблицаВариантовОтчета Экспорт;      // Таблица вариантов доступных текущему пользователю

#Если ТолстыйКлиентОбычноеПриложение Тогда
	
Функция СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина) Экспорт
	
	//Параметры документа
	Результат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Результат.ПолеСлева			 = 0;
	Результат.ПолеСправа		 = 0;
	Результат.Защита             = Ложь;
	Результат.ТолькоПросмотр     = Истина;
	Результат.АвтоМАсштаб        = Истина;
	Результат.Очистить();
	
	ЗначениеПанелипользователя = ТиповыеОтчеты.ПолучитьЗначенияНастроекПанелиПользователяОбъекта(ЭтотОбъект);
	НастрокаПоУмолчанию        = КомпоновщикНастроек.ПолучитьНастройки();
	ТиповыеОтчеты.ПолучитьПримененуюНастройку(ЭтотОбъект);
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	
	Если ЗначениеПараметра <> Неопределено тогда
		Если Дата(ЗначениеПараметра.Значение) <> '00010101' тогда
			ДатаАктуальности = Дата(ЗначениеПараметра.Значение);
		Иначе
			ДатаАктуальности           = ОбщегоНазначенияЗК.ПолучитьРабочуюДату();
			ЗначениеПараметра.Значение = ОбщегоНазначенияЗК.ПолучитьРабочуюДату();
			ЗначениеПараметра.Использование = истина;
		КонецЕсли;
	Иначе
		ДатаАктуальности = ОбщегоНазначенияЗК.ПолучитьРабочуюДату();
	КонецЕсли;
	
	Если ЗначениеПараметра <> Неопределено тогда
		КурсВалютыОтчета = МодульВалютногоУчета.ПолучитьКурсВалюты(Константы.ВалютаРегламентированногоУчета.Получить(), Дата(ЗначениеПараметра.Значение)).Курс;
		ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КурсВалютыОтчета", ?(КурсВалютыОтчета = 0,1,КурсВалютыОтчета));
	КонецЕсли;
	
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "ПериодКонец",  КонецМесяца(ДатаАктуальности));
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "ПериодНачало", НачалоМесяца(ДатаАктуальности));
	
	КомпоновщикНастроек.Настройки.Структура.Очистить();
	КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
	
	ТиповыеОтчеты.ДобавитьГруппировку(КомпоновщикНастроек, "Организация", );
	//ТиповыеОтчеты.ДобавитьГруппировку(КомпоновщикНастроек, "Порядок", );
	ТиповыеОтчеты.ДобавитьГруппировку(КомпоновщикНастроек, "ПодразделениеОрганизации", );
	ГруппировкаДолжность=ТиповыеОтчеты.ДобавитьГруппировку(КомпоновщикНастроек, "Должность", );
	ГруппировкаНадбавки = ТиповыеОтчеты.ДобавитьГруппировку(КомпоновщикНастроек, "Повышение", ,ГруппировкаДолжность);
	ГруппировкаКоэффициента = ТиповыеОтчеты.ДобавитьГруппировку(КомпоновщикНастроек, "Коэффициент", ,ГруппировкаДолжность);
	
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "КоличествоСтавок");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "РазмерКоэффициента");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "РазмерПовышения");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ТарифнаяСтавка");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ДолжностьРуководителя");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "КадровикДолжность");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ФИОГлавбуха");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ФИОКадровика");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ФИОРуководителя");
	
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ФамилияГлавбуха");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ФамилияКадровика");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ФамилияРуководителя");
	
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ИмяГлавбуха");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ИмяКадровика");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ИмяРуководителя");
	
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ОтчествоГлавбуха");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ОтчествоКадровика");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ОтчествоРуководителя");
	
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "НормаДнейЗаПериод");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "НормаЧасовЗаПериод");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ВидТарифнойСтавки");
	
	
	//ТиповыеОтчеты.СформироватьТиповойОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета);
	//Возврат Результат;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	Макет = ПолучитьМакет("ШтатноеРасписание");
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.Настройки, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , , Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	ДеревоДанных =  Новый ДеревоЗначений;
	
	ПроцессорВывода.УстановитьОбъект(ДеревоДанных);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Для каждого ДанныеОрганизации из ДеревоДанных.Строки Цикл
		ВыведеноСтрокВОтчет   = 0;
		
		КоличествоСтрокОтчета = РассчитатьКолвоСтрокОтчета(ДанныеОрганизации);
		СписокНадбавок        = ПолучитьСписокПовышений(ДанныеОрганизации);
		СписокКоэффициентов   = ПолучитьСписокКоэффициентов(ДанныеОрганизации);
		//Количество надбавок должны быть не меньше трёх (согласно типовой форме)
		Пока СписокНадбавок.Количество()<3 Цикл
			СписокНадбавок.Добавить("");
		КонецЦикла;
		КоличествоНадбавок      = СписокНадбавок.Количество();
		КоличествоКоэффициентов = СписокКоэффициентов.Количество();
		//Выводим шапку
		ОбластьШапкаДоНадбавок = Макет.ПолучитьОбласть("Шапка|ДоНадбавок");
		ОбластьШапкаДоНадбавок.Параметры.НазваниеОрганизации = ДанныеОрганизации.Организация.НаименованиеПолное;
		ОбластьШапкаДоНадбавок.Параметры.Организация = ДанныеОрганизации.Организация;
		ОбластьШапкаДоНадбавок.Параметры.ДатаАктуальности = НачалоМесяца(ДатаАктуальности);
		Результат.Вывести(ОбластьШапкаДоНадбавок);
		
		ОбластьШапкаКоэффициент = Макет.ПолучитьОбласть("Шапка|Коэффициент");
		Для Н=0 по КоличествоКоэффициентов-1 цикл
			Результат.Присоединить(ОбластьШапкаКоэффициент);	
		КонецЦикла;	
		
		ОбластьШапкаТарифнаяСтавка=Макет.ПолучитьОбласть("Шапка|ТарифнаяСтавка");
		Результат.Присоединить(ОбластьШапкаТарифнаяСтавка);	
		
		ОбластьШапкаНадбавка = Макет.ПолучитьОбласть("Шапка|Надбавка");
		Для Н=0 по КоличествоНадбавок-1 цикл
			Результат.Присоединить(ОбластьШапкаНадбавка);	
		КонецЦикла;	
		
		// рассчитаем кол-во ставок
		//
		КолВоСтавок = 0;
		Для каждого СтрокаПодразделния из ДанныеОрганизации.Строки Цикл
			Для каждого СтрокаДолжность из СтрокаПодразделния.Строки Цикл
				КолСТ = 0;
				Для каждого СтрокаНадбавка из СтрокаДолжность.Строки Цикл
					КолСТ = СтрокаНадбавка.КоличествоСтавок;
				КонецЦикла;
				КолВоСтавок = КолВоСтавок + КолСТ;
			КонецЦикла;
		КонецЦикла;
		
		ОбластьШапкаДолжностнойОклад = Макет.ПолучитьОбласть("Шапка|ДолжностнойОклад");
		Результат.Присоединить(ОбластьШапкаДолжностнойОклад);
		
		ОбластьШапкаПослеНадбавок = Макет.ПолучитьОбласть("Шапка|ПослеНадбавок");
		ОбластьШапкаПослеНадбавок.Параметры.ШтатВКоличестве = "штат в количестве " + КолВоСтавок + " единиц";
		Результат.Присоединить(ОбластьШапкаПослеНадбавок);

		//Выводим шапку листа
		НомерВерхнейСтрокиШапки = Результат.ВысотаТаблицы + 1;
		ОбластьДоНадбавок = Макет.ПолучитьОбласть("ШапкаЛиста|ДоНадбавок");
		Результат.Вывести(ОбластьДоНадбавок);
		
		ОбластьКоэффициент = Макет.ПолучитьОбласть("ШапкаЛиста|Коэффициент");
		Для НК=0 по КоличествоКоэффициентов-1 цикл
			ОбластьКоэффициент.Параметры.ИмяКоэффициента = СписокКоэффициентов[НК];
			ОбластьКоэффициент.Параметры.НомерКолонки = 5+НК;
			Результат.Присоединить(ОбластьКоэффициент);	
		КонецЦикла;	
		
		ОбластьТарифнаяСтавка=Макет.ПолучитьОбласть("ШапкаЛиста|ТарифнаяСтавка");
		ОбластьТарифнаяСтавка.Параметры.НомерКолонки = КоличествоКоэффициентов+5;
		Результат.Присоединить(ОбластьТарифнаяСтавка);	
		
		ОбластьНадбавка = Макет.ПолучитьОбласть("ШапкаЛиста|Надбавка");
		Для Н=0 по КоличествоНадбавок-1 цикл
			ОбластьНадбавка.Параметры.ИмяНадбавки = СписокНадбавок[Н];
			ОбластьНадбавка.Параметры.НомерКолонки = (КоличествоКоэффициентов+6)+Н;
			Результат.Присоединить(ОбластьНадбавка);	
		КонецЦикла;	
		
		
		//Объединяем ячейки и пишем общий заголовок для коэффициентов 
		ОбластьШапкиКоэффициентов = Результат.Область(НомерВерхнейСтрокиШапки,ОбластьДоНадбавок.ШиринаТаблицы+1,НомерВерхнейСтрокиШапки,ОбластьДоНадбавок.ШиринаТаблицы+КоличествоКоэффициентов);
		ОбластьШапкиКоэффициентов.Объединить();
		ОбластьШапкиКоэффициентов.Текст = "Коэффициенты по ЕТС, руб";
		
		//Объединяем ячейки и пишем общий заголовок для надбавок 
		ОбластьШапкиНадбавок = Результат.Область(НомерВерхнейСтрокиШапки,ОбластьДоНадбавок.ШиринаТаблицы+КоличествоКоэффициентов+3,НомерВерхнейСтрокиШапки,ОбластьДоНадбавок.ШиринаТаблицы+КоличествоКоэффициентов+2+КоличествоНадбавок*3);
		ОбластьШапкиНадбавок.Объединить();
		ОбластьШапкиНадбавок.Текст = "Повышения, %";
		
		
		ОбластьДолжностнойОклад = Макет.ПолучитьОбласть("ШапкаЛиста|ДолжностнойОклад");
		ОбластьДолжностнойОклад.Параметры.НомерКолонкиДолжностнойОклад=6+КоличествоНадбавок+КоличествоКоэффициентов;
		Результат.Присоединить(ОбластьДолжностнойОклад);
		
		ОбластьПослеНадбавок = Макет.ПолучитьОбласть("ШапкаЛиста|ПослеНадбавок");
		ОбластьПослеНадбавок.Параметры.НомерКолонкиФонд = 7+КоличествоНадбавок+КоличествоКоэффициентов;
		ОбластьПослеНадбавок.Параметры.НомерКолонкиПримечание = 7+КоличествоНадбавок+КоличествоКоэффициентов+1;
		Результат.Присоединить(ОбластьПослеНадбавок);
		
		ОбластьСтрокаКоэффициент = Макет.ПолучитьОбласть("Строка|Коэффициент");
		ОбластьСтрокаТарифнаяСтавка = Макет.ПолучитьОбласть("Строка|ТарифнаяСтавка");
		
		ОбластьСтрокаДоНадбавок = Макет.ПолучитьОбласть("Строка|ДоНадбавок");
		ОбластьСтрокаНадбавка = Макет.ПолучитьОбласть("Строка|Надбавка");
		ОбластьСтрокаДолжностнойОклад = Макет.ПолучитьОбласть("Строка|ДолжностнойОклад");
		ОбластьСтрокаПослеНадбавок = Макет.ПолучитьОбласть("Строка|ПослеНадбавок");
		
		ОбластьПодвалаЛистаДоНадбавок = Макет.ПолучитьОбласть("ПодвалЛиста|ДоНадбавок");
		ОбластьПодвалаЛистаДолжностнойОклад = Макет.ПолучитьОбласть("ПодвалЛиста|ДолжностнойОклад");
		ОбластьПодвалаЛистаПослеНадбавок = Макет.ПолучитьОбласть("ПодвалЛиста|ПослеНадбавок");
		ОбластьПодвалаЛистаНадбавка = Макет.ПолучитьОбласть("ПодвалЛиста|Надбавка");
		ОбластьПодвалаЛистаКоэффициент = Макет.ПолучитьОбласть("ПодвалЛиста|Коэффициент");
		ОбластьПодвалаЛистаТарифнаяСтавка = Макет.ПолучитьОбласть("ПодвалЛиста|ТарифнаяСтавка");
		
		КоличествоСтавокЛиста = 0;
		МинимальныйМесячныйФондЛиста = 0;
		СуммаМинимальныхТарифныхСтавокЛиста = 0;
		МаксимальныйМесячныйФондЛиста = 0;
		СуммаМаксимальныйТарифныхСтавокЛиста = 0;
		
		// массив с двумя строками - для разбиения на страницы
		ВыводимыеОбласти = Новый Массив();
		ВыводимаяСтрока = Новый ТабличныйДокумент();
		ВыводимыеОбласти.Добавить(ВыводимаяСтрока);
		ВыводимыеОбласти.Добавить(Макет.ПолучитьОбласть("ПодвалЛиста"));
		
		
		КоличествоСтавокЛиста      = 0;
		ВсегоКоличествоСтавок = 0;
		МинимальныйМесячныйФондЛиста = 0;
		СуммаМинимальныхТарифныхСтавокЛиста = 0;
		МинимальныйМесячныйФондОрганизации  = 0;
		МаксимальныйМесячныйФондЛиста = 0;
		СуммаМинимальныхТарифныхСтавокЛиста = 0;
		МаксимальныйМесячныйФондОрганизации  = 0;
		
		ВывестиШтатноеРасписание(ДанныеОрганизации, ВыведеноСтрокВОтчет, КоличествоСтрокОтчета, Результат, СписокНадбавок, СписокКоэффициентов, ОбластьДоНадбавок, ОбластьКоэффициент, ОбластьТарифнаяСтавка,ОбластьНадбавка, ОбластьДолжностнойОклад,ОбластьПослеНадбавок,
		ОбластьСтрокаДоНадбавок, ОбластьСтрокаКоэффициент,ОбластьСтрокаТарифнаяСтавка,ОбластьСтрокаНадбавка, ОбластьСтрокаДолжностнойОклад,ОбластьСтрокаПослеНадбавок, ВыводимаяСтрока, КоличествоСтавокЛиста, МинимальныйМесячныйФондЛиста, МаксимальныйМесячныйФондЛиста,
		СуммаМинимальныхТарифныхСтавокЛиста, СуммаМаксимальныйТарифныхСтавокЛиста, ОбластьПодвалаЛистаДоНадбавок, ОбластьПодвалаЛистаКоэффициент,ОбластьПодвалаЛистаТарифнаяСтавка,ОбластьПодвалаЛистаНадбавка, ОбластьПодвалаЛистаДолжностнойОклад,ОбластьПодвалаЛистаПослеНадбавок, ВыводимыеОбласти, Макет, МинимальныйМесячныйФондОрганизации, МаксимальныйМесячныйФондОрганизации, ВсегоКоличествоСтавок);
		
		ОбластьПодвалаЛистаДоНадбавок.Параметры.КоличествоСтавок = КоличествоСтавокЛиста;
		Результат.Вывести(ОбластьПодвалаЛистаДоНадбавок);
		
		Для НК=0 по КоличествоКоэффициентов-1 цикл
			Результат.Присоединить(ОбластьПодвалаЛистаКоэффициент);
		КонецЦикла;	
		
		Результат.Присоединить(ОбластьПодвалаЛистаТарифнаяСтавка);
		
		
		Для Н=0 по КоличествоНадбавок-1 цикл
			Результат.Присоединить(ОбластьПодвалаЛистаНадбавка);
		КонецЦикла;	
		
		Результат.Присоединить(ОбластьПодвалаЛистаДолжностнойОклад);
		
		ОбластьПодвалаЛистаПослеНадбавок.Параметры.МесячныйФонд = ПолучитьСтрокуИзДвухЧисел(МинимальныйМесячныйФондЛиста, МаксимальныйМесячныйФондЛиста);
		Результат.Присоединить(ОбластьПодвалаЛистаПослеНадбавок);
		
		//Выводим подвал документа
		НомерВерхнейСтрокиПодвала = Результат.ВысотаТаблицы+1;
		ОбластьПодвалДоНадбавок = Макет.ПолучитьОбласть("Подвал|ДоНадбавок");
		
		ОбластьПодвалДоНадбавок.Параметры.Заполнить(ДанныеОрганизации); 
		ОбластьПодвалДоНадбавок.Параметры.КоличествоСтавок = ВсегоКоличествоСтавок;
		
		Подписи = Макет.ПолучитьОбласть("Подписи");
		Подписи.Параметры.Заполнить(ДанныеОрганизации);
		Подписи.Параметры.ФИОКадровика = УправлениеОтчетамиЗК.ФамилияИнициалыОтветсвенногоЛица(ДанныеОрганизации.ФИОКадровика, ДанныеОрганизации.ФамилияКадровика, ДанныеОрганизации.ИмяКадровика, ДанныеОрганизации.ОтчествоКадровика);
		Подписи.Параметры.ФИОГлавбуха = УправлениеОтчетамиЗК.ФамилияИнициалыОтветсвенногоЛица(ДанныеОрганизации.ФИОГлавбуха, ДанныеОрганизации.ФамилияГлавбуха, ДанныеОрганизации.ИмяГлавбуха, ДанныеОрганизации.ОтчествоГлавбуха);
		
		Результат.Вывести(ОбластьПодвалДоНадбавок);
		
		ОбластьПодвалКоэффициент = Макет.ПолучитьОбласть("Подвал|Коэффициент");
		Для Н=0 по КоличествоКоэффициентов-1 цикл
			Результат.Присоединить(ОбластьПодвалКоэффициент);	
		КонецЦикла;	
		
		ОбластьПодвалТарифнаяСтавка = Макет.ПолучитьОбласть("Подвал|ТарифнаяСтавка");
		Результат.Присоединить(ОбластьПодвалТарифнаяСтавка);	
		
		ОбластьПодвалНадбавка = Макет.ПолучитьОбласть("Подвал|Надбавка");
		Для Н=0 по КоличествоНадбавок-1 цикл
			Результат.Присоединить(ОбластьПодвалНадбавка);	
		КонецЦикла;	
		
		//ШиринаДляПодписи = КоличествоНадбавок*3-1;
		//НомерЛевойКолонкиДляПодписи = ОбластьПодвалДоНадбавок.ШиринаТаблицы+2;
		//НомерПравойКолонкиДляПодписи = НомерЛевойКолонкиДляПодписи + ШиринаДляПодписи-1;
		//ЛинияДляПодписи = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1);
		//
		////Объединим ячейки для 2-ух подписей руководителей
		//Для Н=1 по 2 цикл
		//	НомерСтрокиДляПодписи = НомерВерхнейСтрокиПодвала+Н*2;
		//	ОбластьВерхнейСтрокиПодписи = Результат.Область(НомерСтрокиДляПодписи,НомерЛевойКолонкиДляПодписи,НомерСтрокиДляПодписи,НомерПравойКолонкиДляПодписи);
		//	ОбластьВерхнейСтрокиПодписи.Объединить();
		//	ОбластьВерхнейСтрокиПодписи.ГраницаСнизу = ЛинияДляПодписи;
		//	ОбластьНижнейСтрокиПодписи = Результат.Область(НомерСтрокиДляПодписи+1,НомерЛевойКолонкиДляПодписи,НомерСтрокиДляПодписи+1,НомерПравойКолонкиДляПодписи);
		//	ОбластьНижнейСтрокиПодписи.Объединить();
		//	ОбластьНижнейСтрокиПодписи.Текст = "личная подпись";
		//КонецЦикла;	
		
		ОбластьПодвалДолжностнойОклад = Макет.ПолучитьОбласть("Подвал|ДолжностнойОклад");
		Результат.Присоединить(ОбластьПодвалДолжностнойОклад);
		
		ОбластьПодвалПослеНадбавок = Макет.ПолучитьОбласть("Подвал|ПослеНадбавок");
		ОбластьПодвалПослеНадбавок.Параметры.МесячныйФонд = ПолучитьСтрокуИзДвухЧисел(МинимальныйМесячныйФондОрганизации, МаксимальныйМесячныйФондОрганизации);
		
		ОбластьПодвалПослеНадбавок.Параметры.Заполнить(ДанныеОрганизации);
		Результат.Присоединить(ОбластьПодвалПослеНадбавок);
		//Результат.Вывести(Подписи);
		
		Если НЕ ДеревоДанных.Строки.Индекс(ДанныеОрганизации)+1 = ДеревоДанных.Строки.Количество() тогда
			Результат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

	КонецЦикла;                                                 	
	КомпоновщикНастроек.ЗагрузитьНастройки(НастрокаПоУмолчанию);
	Возврат Результат;
	
КонецФункции

Функция РассчитатьКолвоСтрокОтчета(ДанныеСтроки)
	КолВоДетальныхСтрок = 0;
	Для каждого СтрокаДвижения из ДанныеСтроки.Строки Цикл
		Если СтрокаДвижения.Строки.Количество() = 0 и ЗначениеЗаполнено(СтрокаДвижения.Должность)  тогда 
			//проверка на заполненость колонки "Должность" нужна для проверки выборки по подразделению без штатного расписания
			КолВоДетальныхСтрок = КолВоДетальныхСтрок + 1;
		ИначеЕсли СтрокаДвижения.Строки.Количество() > 0 тогда
			КолВоДетальныхСтрок = КолВоДетальныхСтрок + РассчитатьКолвоСтрокОтчета(СтрокаДвижения);
		КонецЕсли;
	КонецЦикла;
	Возврат КолВоДетальныхСтрок;	
КонецФункции

Функция ПолучитьСписокНадбавок(ДанныеСтроки, СписокНадбавок = Неопределено)
	Если СписокНадбавок = Неопределено тогда
		СписокНадбавок = Новый СписокЗначений; 
	КонецЕсли;
	Для каждого СтрокаДвижения из ДанныеСтроки.Строки Цикл
		Если ЗначениеЗаполнено(СтрокаДвижения.ВидНадбавки) И СписокНадбавок.НайтиПоЗначению(СтрокаДвижения.ВидНадбавки) = Неопределено тогда
			СписокНадбавок.Добавить(СтрокаДвижения.ВидНадбавки);
		КонецЕсли;
		Если СтрокаДвижения.Строки.Количество() <> 0 тогда 
			ПолучитьСписокНадбавок(СтрокаДвижения, СписокНадбавок);			
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокНадбавок;
КонецФункции

Функция ПолучитьСписокПовышений(ДанныеСтроки, СписокПовышений = Неопределено)
	Если СписокПовышений = Неопределено тогда
		СписокПовышений = Новый СписокЗначений; 
	КонецЕсли;
	Для каждого СтрокаДвижения из ДанныеСтроки.Строки Цикл
		Если ЗначениеЗаполнено(СтрокаДвижения.Повышение) И СписокПовышений.НайтиПоЗначению(СтрокаДвижения.Повышение) = Неопределено тогда
			СписокПовышений.Добавить(СтрокаДвижения.Повышение);
		КонецЕсли;
		Если СтрокаДвижения.Строки.Количество() <> 0 тогда 
			ПолучитьСписокПовышений(СтрокаДвижения, СписокПовышений);			
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокПовышений;
КонецФункции

Функция ПолучитьСписокКоэффициентов(ДанныеСтроки, СписокКоэффициентов = Неопределено)
	Если СписокКоэффициентов = Неопределено тогда
		СписокКоэффициентов = Новый СписокЗначений; 
	КонецЕсли;
	Для каждого СтрокаДвижения из ДанныеСтроки.Строки Цикл
		Если ЗначениеЗаполнено(СтрокаДвижения.Коэффициент) И СписокКоэффициентов.НайтиПоЗначению(СтрокаДвижения.Коэффициент) = Неопределено тогда
			СписокКоэффициентов.Добавить(СтрокаДвижения.Коэффициент);
		КонецЕсли;
		Если СтрокаДвижения.Строки.Количество() <> 0 тогда 
			ПолучитьСписокКоэффициентов(СтрокаДвижения, СписокКоэффициентов);			
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокКоэффициентов;
КонецФункции

Функция ПолучитьСтрокуИзДвухЧисел(Число1,Число2)
	Если Число1=Число2 Тогда
		Возврат ФормированиеПечатныхФорм.ФорматСумм(Число1);
	Иначе
		Возврат ""+ФормированиеПечатныхФорм.ФорматСумм(Число1)+" - "+ФормированиеПечатныхФорм.ФорматСумм(Число2);
	КонецЕсли;
КонецФункции	 
	


// Выводит строки по подразделениям очередного уровня
Процедура ВывестиШтатноеРасписание(ДанныеВыборкаСтрокШтРасписания, ВыведеноСтрокВОтчет, КоличествоСтрокОтчета, ДокументРезультат, 
	СписокНадбавок, СписокКоэффициентов, ОбластьДоНадбавок, ОбластьКоэффициент, ОбластьТарифнаяСтавка,ОбластьНадбавка, ОбластьДолжностнойОклад,ОбластьПослеНадбавок,
	ОбластьСтрокаДоНадбавок, ОбластьСтрокаКоэффициент,ОбластьСтрокаТарифнаяСтавка,ОбластьСтрокаНадбавка, ОбластьСтрокаДолжностнойОклад,ОбластьСтрокаПослеНадбавок, ВыводимаяСтрока, 
	КоличествоСтавокЛиста, МинимальныйМесячныйФондЛиста, МаксимальныйМесячныйФондЛиста, СуммаМинимальныхТарифныхСтавокЛиста, СуммаМаксимальныйТарифныхСтавокЛиста,
	ОбластьПодвалаЛистаДоНадбавок, ОбластьПодвалаЛистаКоэффициент,ОбластьПодвалаЛистаТарифнаяСтавка,ОбластьПодвалаЛистаНадбавка, ОбластьПодвалаЛистаДолжностнойОклад,ОбластьПодвалаЛистаПослеНадбавок, ВыводимыеОбласти, Макет, МинимальныйМесячныйФондОрганизации, МаксимальныйМесячныйФондОрганизации, ВсегоКоличествоСтавок)
	
	КоличествоНадбавок = СписокНадбавок.Количество();
	КоличествоКоэффициентов = СписокКоэффициентов.Количество();
	
	//МинимальныйМесячныйФондОрганизации = 0;
	Для каждого ВыборкаСтрокШтРасписания из ДанныеВыборкаСтрокШтРасписания.Строки Цикл 
		                                                                                                                                               
		//ВыборкаПодразделенийСледующегоУровня = ВыборкаСтрокШтРасписания.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		ЕстьВыборкаСледующегоУровня = ВыборкаСтрокШтРасписания.Строки.Количество() > 0 И НЕ ЗначениеЗаполнено(ВыборкаСтрокШтРасписания.Строки[0].Должность);
		
		МинСтавка = 0;
		МаксСтавка = 0;
		КоличествоСтавок = 0;
		МинФонд = 0;
		МаксФонд = 0;
		
		Для каждого ВыборкаСтрокШтРасписанияДолжность из ВыборкаСтрокШтРасписания.Строки Цикл 
			Если Не ЗначениеЗаполнено(ВыборкаСтрокШтРасписанияДолжность.Должность) тогда
				Продолжить;
			КонецЕсли;
			
			// Готовим строку отчета для последующего вывода
			ВыводимаяСтрока.Очистить();
			ВыведеноНадбавок = 0;
			ВыведеноКоэффициентов = 0;
			
			Для каждого ВыборкаСтрокШтРасписанияКоэффициент из ВыборкаСтрокШтРасписанияДолжность.Строки Цикл 
				
				Если ВыборкаСтрокШтРасписанияКоэффициент.Коэффициент = Неопределено ТОгда Продолжить; КонецЕсли;
				КоличествоСтавок = ВыборкаСтрокШтРасписанияКоэффициент.КоличествоСтавок;
				
				
				//Из первой строки надбавок возьмем общие данные позиции штатного расписания
				Если ВыведеноКоэффициентов = 0 Тогда
					//Выводим начало строки
					ОбластьСтрокаДоНадбавок.Параметры.Заполнить(ВыборкаСтрокШтРасписанияКоэффициент); 
					//ОбластьСтрокаДоНадбавок.Параметры.ОкладТарифнаяСтавка = ПолучитьСтрокуИзДвухЧисел(МинСт, МаксСт);
					КодПодразделения = ?(ОбщегоНазначения.ТолькоЦифрыВСтроке(ВыборкаСтрокШтРасписания.ПодразделениеОрганизации.Код), Формат(Число(ВыборкаСтрокШтРасписания.ПодразделениеОрганизации.Код), "ЧГ=0"), ВыборкаСтрокШтРасписания.ПодразделениеОрганизации.Код);
					ОбластьСтрокаДоНадбавок.Параметры.ПодразделениеОрганизацииКод = КодПодразделения;
					ВыводимаяСтрока.Вывести(ОбластьСтрокаДоНадбавок);
					
				КонецЕсли;	 
					 
				ОбластьСтрокаКоэффициент.Параметры.Заполнить(ВыборкаСтрокШтРасписанияКоэффициент);
				ВыводимаяСтрока.Присоединить(ОбластьСтрокаКоэффициент);	
				ВыведеноКоэффициентов = ВыведеноКоэффициентов+1;
			КонецЦикла;
			
			ОбластьСтрокаТарифнаяСтавка.Параметры.ОкладТарифнаяСтавка=ВыборкаСтрокШтРасписанияКоэффициент.ТарифнаяСтавка;
			ВыводимаяСтрока.Присоединить(ОбластьСтрокаТарифнаяСтавка);	
			
			//Цикл по надбавкам
			
			Для каждого ВыборкаСтрокШтРасписанияНадбавка из ВыборкаСтрокШтРасписанияДолжность.Строки Цикл 
				
				Если ВыборкаСтрокШтРасписанияНадбавка.Повышение = Неопределено Тогда Продолжить; КонецЕсли;
				
				КоличествоСтавок = ВыборкаСтрокШтРасписанияНадбавка.КоличествоСтавок;
				
				РазмерНадбавки = "";
				
				Если ВыборкаСтрокШтРасписанияНадбавка.РазмерПовышения <> NULL и ВыборкаСтрокШтРасписанияНадбавка.РазмерПовышения <> 0 Тогда											
					
					РазмерНадбавки = ВыборкаСтрокШтРасписанияНадбавка.РазмерПовышения;
					
				КонецЕсли;	 
				
				ОбластьСтрокаНадбавка.Параметры.РазмерНадбавки = РазмерНадбавки;
				ВыводимаяСтрока.Присоединить(ОбластьСтрокаНадбавка);	
				ВыведеноНадбавок = ВыведеноНадбавок+1;
				
			КонецЦикла;//Цикл по надбавкам
			
			// Согласно типовой формы должно быть не менее 3 колонок для надбавок
			ОбластьСтрокаНадбавка.Параметры.РазмерНадбавки = "";
			Для Н=ВыведеноНадбавок+1 По 3 цикл
				ВыводимаяСтрока.Присоединить(ОбластьСтрокаНадбавка);	
			КонецЦикла;	
			//ДокументРезультат.Вывести(ВыводимаяСтрока);
			//Продолжить;
			ВыводимаяСтрока.Присоединить(ОбластьСтрокаДолжностнойОклад);
			// Выводим хвост строки
			ОбластьСтрокаПослеНадбавок.Параметры.МесячныйФонд = ПолучитьСтрокуИзДвухЧисел(МинФонд, МаксФонд);
			ВыводимаяСтрока.Присоединить(ОбластьСтрокаПослеНадбавок);
			
			// Посчитали подготовленную строку
			ВыведеноСтрокВОтчет = ВыведеноСтрокВОтчет + 1;  
			
			// Проверим, уместится ли строка на странице или надо открывать новую страницу
			ВывестиПодвалЛиста = Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти);
			Если Не ВывестиПодвалЛиста и ВыведеноСтрокВОтчет = КоличествоСтрокОтчета Тогда
				// Для последней строки отчета дополнительно проверим, 
				// уместится ли на этой же странице подвал всего отчета
				ВыводимыеОбласти.Добавить(Макет.ПолучитьОбласть("Подвал"));
				ВывестиПодвалЛиста = Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти);
			КонецЕсли;	
			
			// Если нужно, выводим подвал листа
			Если ВывестиПодвалЛиста Тогда
				ОбластьПодвалаЛистаДоНадбавок.Параметры.КоличествоСтавок = КоличествоСтавокЛиста;
				ДокументРезультат.Вывести(ОбластьПодвалаЛистаДоНадбавок);
				
				Для Н=0 по КоличествоНадбавок-1 цикл
					ДокументРезультат.Присоединить(ОбластьПодвалаЛистаНадбавка);
				КонецЦикла;	
				
				ДокументРезультат.Присоединить(ОбластьПодвалаЛистаДолжностнойОклад); 
				
				ОбластьПодвалаЛистаПослеНадбавок.Параметры.МесячныйФонд = ПолучитьСтрокуИзДвухЧисел(МинимальныйМесячныйФондЛиста, МаксимальныйМесячныйФондЛиста);;
				ДокументРезультат.Присоединить(ОбластьПодвалаЛистаПослеНадбавок);
				
				//Начнем новую страницу
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				КоличествоСтавокЛиста = 0;
				МинимальныйМесячныйФондЛиста = 0;
				СуммаМинимальныхТарифныхСтавокЛиста = 0;
				МаксимальныйМесячныйФондЛиста = 0;
				СуммаМаксимальныйТарифныхСтавокЛиста = 0;
				
				//Выводим шапку нового листа
				НомерВерхнейСтрокиШапки = ДокументРезультат.ВысотаТаблицы+1;
				ДокументРезультат.Вывести(ОбластьДоНадбавок);
				Для Н=0 по КоличествоНадбавок-1 цикл
					ОбластьНадбавка.Параметры.ИмяНадбавки = СписокНадбавок[Н];
					ОбластьНадбавка.Параметры.НомерКолонки = 6+Н;
					ДокументРезультат.Присоединить(ОбластьНадбавка);	
				КонецЦикла;	
				//Объединяем ячейки и пишем общий заголовок для надбавок 
				ОбластьШапкиНадбавок = ДокументРезультат.Область(НомерВерхнейСтрокиШапки,ОбластьДоНадбавок.ШиринаТаблицы+1,НомерВерхнейСтрокиШапки,ОбластьДоНадбавок.ШиринаТаблицы+КоличествоНадбавок*3);
				ОбластьШапкиНадбавок.Объединить();
				ОбластьШапкиНадбавок.Текст = "Надбавки, руб";
				
				ОбластьДолжностнойОклад.Параметры.НомерКолонкиДолжностнойОклад=6+КоличествоНадбавок+КоличествоКоэффициентов;
				ДокументРезультат.Присоединить(ОбластьДолжностнойОклад);
				
				ОбластьПослеНадбавок.Параметры.НомерКолонкиФонд = 7+КоличествоНадбавок+КоличествоКоэффициентов;
				ОбластьПослеНадбавок.Параметры.НомерКолонкиПримечание = 7+КоличествоНадбавок+КоличествоКоэффициентов+1;
				ДокументРезультат.Присоединить(ОбластьПослеНадбавок);
			КонецЕсли;
			
			//Теперь выводим строку
			ДокументРезультат.Вывести(ВыводимаяСтрока);
			
			//Увеличиваем счетчики по листу
			КоличествоСтавокЛиста                = КоличествоСтавокЛиста + КоличествоСтавок;
			СуммаМинимальныхТарифныхСтавокЛиста  = СуммаМинимальныхТарифныхСтавокЛиста + МинСтавка;
			МинимальныйМесячныйФондЛиста         = МинимальныйМесячныйФондЛиста + МинФонд;
			МинимальныйМесячныйФондОрганизации   = МинимальныйМесячныйФондОрганизации + МинФонд;
			СуммаМаксимальныйТарифныхСтавокЛиста = СуммаМаксимальныйТарифныхСтавокЛиста + МаксСтавка;
			МаксимальныйМесячныйФондЛиста        = МаксимальныйМесячныйФондЛиста + МаксФонд;
			МаксимальныйМесячныйФондОрганизации  = МаксимальныйМесячныйФондОрганизации + МаксФонд;
			ВсегоКоличествоСтавок                = ВсегоКоличествоСтавок + КоличествоСтавок;
			
		КонецЦикла;//цикл по должностям
		
		Если ЕстьВыборкаСледующегоУровня тогда
			ВывестиШтатноеРасписание(ВыборкаСтрокШтРасписания, ВыведеноСтрокВОтчет, КоличествоСтрокОтчета, ДокументРезультат, 
			СписокНадбавок, СписокКоэффициентов,ОбластьДоНадбавок, ОбластьКоэффициент, ОбластьТарифнаяСтавка,ОбластьНадбавка, ОбластьДолжностнойОклад,ОбластьПослеНадбавок,
			ОбластьСтрокаДоНадбавок,ОбластьСтрокаКоэффициент,ОбластьСтрокаТарифнаяСтавка,ОбластьСтрокаНадбавка, ОбластьСтрокаДолжностнойОклад,ОбластьСтрокаПослеНадбавок, ВыводимаяСтрока, 
			КоличествоСтавокЛиста, МинимальныйМесячныйФондЛиста, МаксимальныйМесячныйФондЛиста, СуммаМинимальныхТарифныхСтавокЛиста, СуммаМаксимальныйТарифныхСтавокЛиста,
			ОбластьПодвалаЛистаДоНадбавок, ОбластьПодвалаЛистаКоэффициент,ОбластьПодвалаЛистаТарифнаяСтавка,ОбластьПодвалаЛистаНадбавка, ОбластьПодвалаЛистаДолжностнойОклад,ОбластьПодвалаЛистаПослеНадбавок, ВыводимыеОбласти, Макет, МинимальныйМесячныйФондОрганизации, МаксимальныйМесячныйФондОрганизации, ВсегоКоличествоСтавок)
		КонецЕсли;
		
	КонецЦикла;//цикл по подразделениям текущего уровня 
	
КонецПроцедуры
	
	
Процедура СохранитьНастройку() Экспорт
		
		СтруктураНастроек = ТиповыеОтчеты.ПолучитьСтруктуруПараметровТиповогоОтчета(ЭтотОбъект);
		СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураНастроек);
		
	КонецПроцедуры
	
Процедура ПрименитьНастройку() Экспорт
		
		Схема = ТиповыеОтчеты.ПолучитьСхемуКомпоновкиОбъекта(ЭтотОбъект);
		
		// Считываение структуры настроек отчета
		Если Не СохраненнаяНастройка.Пустая() Тогда
			
			СтруктураНастроек = СохраненнаяНастройка.ХранилищеНастроек.Получить();
			Если Не СтруктураНастроек = Неопределено Тогда
				КомпоновщикНастроек.ЗагрузитьНастройки(СтруктураНастроек.НастройкиКомпоновщика);
				ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтруктураНастроек);
			Иначе
				КомпоновщикНастроек.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
			КонецЕсли;
			
		Иначе
			КомпоновщикНастроек.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
		КонецЕсли;
		
	КонецПроцедуры
	
Процедура ПередВыводомЭлементРезультата(МакетКомпоновки, ПроцессорКомпоновки, ЭлементРезультата) Экспорт
		
	КонецПроцедуры

Процедура ПередВыводомОтчета(МакетКомпоновки, ПроцессорКомпоновки) Экспорт
		
		
	КонецПроцедуры
	
Процедура ПриВыводеЗаголовкаОтчета(ОбластьЗаголовок) Экспорт
	КонецПроцедуры
	
Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	СписокПолейПодстановкиОтборовПоУмолчанию = Новый Соответствие;
	СписокПолейПодстановкиОтборовПоУмолчанию.Вставить("Организация", "ОсновнаяОрганизация");
	
	Возврат Новый Структура("ИспользоватьСобытияПриФормированииОтчета,
	|ПриВыводеЗаголовкаОтчета,
	|ПослеВыводаПанелиПользователя,
	|ПослеВыводаПериода,
	|ПослеВыводаПараметра,
	|ПослеВыводаГруппировки,
	|ПослеВыводаОтбора,
	|ДействияПанелиИзменениеФлажкаДопНастроек,
	|ПриПолучениеНастроекПользователя, 
	|ЗаполнитьОтборыПоУмолчанию, 
	|СписокПолейПодстановкиОтборовПоУмолчанию", 
	ложь, ложь, ложь, ложь, ложь, ложь, ложь, ложь, ложь, истина, СписокПолейПодстановкиОтборовПоУмолчанию);
КонецФункции
	
#КонецЕсли

#Если ТолстыйКлиентОбычноеПриложение Тогда
	
	// Настройка отчета при отработки расшифровки
	Процедура Настроить(Отбор) Экспорт
		
		// Настройка отбора
		Для каждого ЭлементОтбора Из Отбор Цикл
			
			Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
				ПолеОтбора = ЭлементОтбора.ЛевоеЗначение;
			Иначе
				ПолеОтбора = Новый ПолеКомпоновкиДанных(ЭлементОтбора.Поле);
			КонецЕсли;
			
			Если КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.НайтиПоле(ПолеОтбора) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
				ЗаполнитьЗначенияСвойств(НовыйЭлементОтбора, ЭлементОтбора);
			Иначе
				НовыйЭлементОтбора.Использование  = Истина;
				НовыйЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
				Если ЭлементОтбора.Иерархия Тогда
					Если ТипЗнч(ЭлементОтбора.Значение) = Тип("СписокЗначений") Тогда
						НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии;
					Иначе
						НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
					КонецЕсли;
				Иначе
					Если ТипЗнч(ЭлементОтбора.Значение) = Тип("СписокЗначений") Тогда
						НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
					Иначе
						НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
					КонецЕсли;
				КонецЕсли;
				
				НовыйЭлементОтбора.ПравоеЗначение = ЭлементОтбора.Значение;
				
			КонецЕсли;
			
		КонецЦикла;
		
		ТиповыеОтчеты.УдалитьДублиОтбора(КомпоновщикНастроек);
		
	КонецПроцедуры
	
#КонецЕсли

Процедура ДоработатьКомпоновщикПередВыводом() Экспорт
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	Если ЗначениеПараметра = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеПараметра.Значение = Неопределено или Дата(ЗначениеПараметра.Значение) = '00010101' Тогда
		ЗначениеПараметра.Значение = КонецДня(ТекущаяДата());
		ЗначениеПараметра.Использование = Истина;
	КонецЕсли;
КонецПроцедуры



Если СохраненнаяНастройка = Неопределено Тогда
	СохраненнаяНастройка =  Справочники.СохраненныеНастройки.ПустаяСсылка();
КонецЕсли;

Если КомпоновщикНастроек = Неопределено Тогда
	КомпоновщикНастроек =  Новый КомпоновщикНастроекКомпоновкиДанных;
КонецЕсли;
УправлениеОтчетами.ЗаменитьНазваниеПолейСхемыКомпоновкиДанных(СхемаКомпоновкиДанных);