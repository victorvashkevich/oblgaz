
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура предназначена для записи наборов записей перерасчета для тех документов, которые затронуты
// данным набором записей регистра
// Если набор записей ШтатноеРасписаниеОрганизаций записывается с датами, после которых проводились 
// начисления зарплаты (по тем же физлицам, по которым записываем начисления), то нужно переначислить 
// зарплату (т.е. перезаполнить соответсвующие документы Начисление зарплаты)
// 
// Параметры:
//	нет
// Возвращаемое значение:
//	нет
//
Процедура ЗаписьПерерасчетов()
	
	Запрос = Новый Запрос;
	
	УсловиеТекст = "";
	Для Каждого ЭлементОтбора из ЭтотОбъект.Отбор Цикл
		Если ЭлементОтбора.Использование Тогда
			УсловиеТекст = УсловиеТекст + " И ШтатноеРасписание." + ЭлементОтбора.Имя + " = &" + ЭлементОтбора.Имя;
			Запрос.УстановитьПараметр(ЭлементОтбора.Имя, ЭлементОтбора.Значение);
		КонецЕсли;
		
	КонецЦикла;
	
	ЗапросТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Расчеты.Регистратор КАК Регистратор,
	|	Расчеты.ФизЛицо,
	|	Расчеты.Организация
	|ИЗ
	|	РегистрСведений.ШтатноеРасписаниеОрганизаций КАК ШтатноеРасписание
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ( 
	|			ВЫБРАТЬ РаботникиОрганизации.ПодразделениеОрганизации,
	|			        РаботникиОрганизации.Должность,
	|                   РаботникиОрганизации.Сотрудник
	|           ИЗ 	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|
	|			ОБЪЕДИНИТЬ ВСЕ 
	|			
	|			ВЫБРАТЬ
	|				Работники.ПодразделениеОрганизацииЗавершения КАК ПодразделениеОрганизации,
	|           	Работники.ДолжностьЗавершения КАК Должность,
	|          		Работники.Сотрудник
	|			ИЗ РегистрСведений.РаботникиОрганизаций КАК Работники
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ПериодыПерекрытия
	|				  			ПО ПериодыПерекрытия.Период <= Работники.ПериодЗавершения
	|				   			И ПериодыПерекрытия.Период > Работники.Период
	|							И ПериодыПерекрытия.Сотрудник = Работники.Сотрудник
	|			ГДЕ  
	|		  		Работники.ПериодЗавершения<>ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) 
	|				И ПериодыПерекрытия.Период ЕСТЬ NULL) КАК  РаботникиОрганизации
	|		ПО РаботникиОрганизации.ПодразделениеОрганизации = ШтатноеРасписание.ПодразделениеОрганизации
	|			И РаботникиОрганизации.Должность = ШтатноеРасписание.Должность
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Расчеты
	|		ПО Расчеты.Сотрудник = РаботникиОрганизации.Сотрудник
	|			И Расчеты.ПериодДействияНачало >= ШтатноеРасписание.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ПерерасчетОсновныхНачислений КАК Перерасчеты
	|		ПО Перерасчеты.ОбъектПерерасчета = Расчеты.Регистратор
	|			И Перерасчеты.ФизЛицо = Расчеты.ФизЛицо
	|			И (Перерасчеты.ВидРасчета = &парамПустойВидРасчета)
	|ГДЕ
	|	Перерасчеты.ОбъектПерерасчета ЕСТЬ NULL " + УсловиеТекст + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор";
	
	Запрос.УстановитьПараметр("парамПустойВидРасчета", ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка());

	Запрос.Текст = ЗапросТекст;
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПроведениеРасчетов.ДописатьПерерасчетыОсновныхНачислений(Выборка);
	
КонецПроцедуры

Процедура ЗаписьПерерасчетовВРегистрЗаполнениеПлановыхНачислений()
	
	Запрос = Новый Запрос;

	УсловиеТекст = "";
	Для Каждого ЭлементОтбора из ЭтотОбъект.Отбор Цикл
		Если ЭлементОтбора.Использование Тогда
			УсловиеТекст = УсловиеТекст + " И ШтатноеРасписание." + ЭлементОтбора.Имя + " = &" + ЭлементОтбора.Имя;
			Запрос.УстановитьПараметр(ЭлементОтбора.Имя, ЭлементОтбора.Значение);
		КонецЕсли;
		
	КонецЦикла;
	
	ЗапросТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Расчеты.Регистратор КАК ОбъектЗаполнения,
	|	Расчеты.Сотрудник,
	|	Расчеты.ОбособленноеПодразделение,
	|	Расчеты.ПериодРегистрации
	|ИЗ
	|	РегистрСведений.ШтатноеРасписаниеОрганизаций КАК ШтатноеРасписание
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			РаботникиОрганизации.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|			РаботникиОрганизации.Должность КАК Должность,
	|			РаботникиОрганизации.Сотрудник КАК Сотрудник
	|		ИЗ
	|			РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			Работники.ПодразделениеОрганизацииЗавершения,
	|			Работники.ДолжностьЗавершения,
	|			Работники.Сотрудник
	|		ИЗ
	|			РегистрСведений.РаботникиОрганизаций КАК Работники
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ПериодыПерекрытия
	|				ПО ПериодыПерекрытия.Период <= Работники.ПериодЗавершения
	|					И ПериодыПерекрытия.Период > Работники.Период
	|					И ПериодыПерекрытия.Сотрудник = Работники.Сотрудник
	|		ГДЕ
	|			Работники.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			И ПериодыПерекрытия.Период ЕСТЬ NULL ) КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.ПодразделениеОрганизации = ШтатноеРасписание.ПодразделениеОрганизации
	|			И РаботникиОрганизации.Должность = ШтатноеРасписание.Должность
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Расчеты
	|		ПО Расчеты.Сотрудник = РаботникиОрганизации.Сотрудник
	|			И Расчеты.ПериодДействияНачало >= ШтатноеРасписание.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаполнениеПлановыхНачислений КАК Перерасчеты
	|		ПО Перерасчеты.ОбъектЗаполнения = Расчеты.Регистратор
	|			И Перерасчеты.Сотрудник = Расчеты.Сотрудник
	|ГДЕ
	|	Расчеты.Регистратор ССЫЛКА Документ.НачислениеЗарплатыРаботникамОрганизаций
	|	И Перерасчеты.ОбъектЗаполнения ЕСТЬ NULL " + УсловиеТекст + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОбъектЗаполнения";
	

	Запрос.Текст = ЗапросТекст;
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПроведениеРасчетов.ДописатьПерерасчетыВЗаполнениеПлановыхНачислений(Выборка);
		
КонецПроцедуры // ЗаписьПерерасчетовВРегистрЗаполнениеПлановыхНачислений()

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура предназначена для заполнения набора записей штатного расписания по текущему состоянию кадров
// 
// Параметры:
//	Организация - СправочникСсылка.Организации,организация, для которой заполняется 
//					штатное расписание
//  Период - дата, дата по состоянию на которую осматривается кадровый состав
//
// Возвращаемое значение:
//	нет
//
Процедура Автозаполнение(Организация, Период, Сообщать = Ложь) Экспорт 
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Если Сообщать Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указана организация!");
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Период) Тогда
		Если Сообщать Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указана дата!");
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("ОченьБольшоеЧисло", 9999999999999);
	Запрос.УстановитьПараметр("парамДатаВалютногоУчета" , НачалоМесяца(Период));
	Запрос.УстановитьПараметр("парамМассивСпособовРасчетовБезВалюты" , ПроведениеРасчетов.ПолучитьСписокСпособовРасчетаНеТребующихУказанияВалюты());
	Запрос.УстановитьПараметр("парамПустаяВалюта" , Справочники.Валюты.ПустаяСсылка());
	Запрос.УстановитьПараметр("парамВалютаРегламентУчета" , Константы.ВалютаРегламентированногоУчета.Получить());
	МассивСпособов = Новый Массив;
	МассивСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням);
	МассивСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам);
	Запрос.УстановитьПараметр("МесячнаяСтавка", Перечисления.ВидыТарифныхСтавок.Месячная);
	Запрос.УстановитьПараметр("МесячныеРасчеты", МассивСпособов);
	Запрос.УстановитьПараметр("ДневнаяСтавка", Перечисления.ВидыТарифныхСтавок.Дневная);
	Запрос.УстановитьПараметр("ДневнойРасчет", Перечисления.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке);
	Запрос.УстановитьПараметр("ЧасоваяСтавка", Перечисления.ВидыТарифныхСтавок.Часовая);
	Запрос.УстановитьПараметр("ЧасовойРасчет", Перечисления.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизацииЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
	|	КОНЕЦ КАК ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ДолжностьЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.Должность
	|	КОНЕЦ КАК Должность,
	//|	РаботникиОрганизацийСрезПоследних.КоэффициентЕТС КАК КоэффициентЕТС,     отключино в связи с необходимостью разработки постановки
	//|	РаботникиОрганизацийСрезПоследних.РазрядЕТС КАК РазрядЕТС,               отключино в связи с необходимостью разработки постановки
	|	СУММА(ВЫБОР
	|			КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|					И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА РаботникиОрганизацийСрезПоследних.ЗанимаемыхСтавокЗавершения
	|			ИНАЧЕ РаботникиОрганизацийСрезПоследних.ЗанимаемыхСтавок
	|		КОНЕЦ) КАК КоличествоСтавок,
	|	ВЫБОР
	|		КОГДА МИНИМУМ(ВЫБОР
	|					КОГДА СтрокиОдногоСпособаРасчета.ПодразделениеОрганизации ЕСТЬ NULL 
	|						ТОГДА &ОченьБольшоеЧисло
	|					КОГДА ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Размер ЕСТЬ NULL 
	|						ТОГДА &ОченьБольшоеЧисло
	|					КОГДА ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.СпособРасчета В (&парамМассивСпособовРасчетовБезВалюты)
	|							ИЛИ ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта = &парамВалютаРегламентУчета
	|							ИЛИ ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта = &парамПустаяВалюта
	|						ТОГДА ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Размер
	|					ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Размер * ЕСТЬNULL(Валюты.Курс / Валюты.Кратность, 0)
	|				КОНЕЦ) = &ОченьБольшоеЧисло
	|			ТОГДА 0
	|		ИНАЧЕ МИНИМУМ(ВЫБОР
	|					КОГДА СтрокиОдногоСпособаРасчета.ПодразделениеОрганизации ЕСТЬ NULL 
	|						ТОГДА &ОченьБольшоеЧисло
	|					КОГДА ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Размер ЕСТЬ NULL 
	|						ТОГДА &ОченьБольшоеЧисло
	|					КОГДА ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.СпособРасчета В (&парамМассивСпособовРасчетовБезВалюты)
	|							ИЛИ ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта = &парамВалютаРегламентУчета
	|							ИЛИ ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта = &парамПустаяВалюта
	|						ТОГДА ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Размер
	|					ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Размер * ЕСТЬNULL(Валюты.Курс / Валюты.Кратность, 0)
	|				КОНЕЦ)
	|	КОНЕЦ КАК ТарифнаяСтавка,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СтрокиОдногоСпособаРасчета.ПодразделениеОрганизации ЕСТЬ NULL 
	|				ТОГДА 0
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Размер ЕСТЬ NULL 
	|				ТОГДА 0
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.СпособРасчета В (&парамМассивСпособовРасчетовБезВалюты)
	|					ИЛИ ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта = &парамВалютаРегламентУчета
	|					ИЛИ ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта = &парамПустаяВалюта
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Размер
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Размер * ЕСТЬNULL(Валюты.Курс / Валюты.Кратность, 0)
	|		КОНЕЦ) КАК МаксимальнаяТарифнаяСтавка,
	|	ВЫБОР
	|		КОГДА МИНИМУМ(ВЫБОР
	|					КОГДА СтрокиОдногоСпособаРасчета.ПодразделениеОрганизации ЕСТЬ NULL 
	|						ТОГДА """"
	|					ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.СпособРасчета
	|				КОНЕЦ) В (&МесячныеРасчеты)
	|			ТОГДА &МесячнаяСтавка
	|		КОГДА МИНИМУМ(ВЫБОР
	|					КОГДА СтрокиОдногоСпособаРасчета.ПодразделениеОрганизации ЕСТЬ NULL 
	|						ТОГДА """"
	|					ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.СпособРасчета
	|				КОНЕЦ) = &ДневнойРасчет
	|			ТОГДА &ДневнаяСтавка
	|		КОГДА МИНИМУМ(ВЫБОР
	|					КОГДА СтрокиОдногоСпособаРасчета.ПодразделениеОрганизации ЕСТЬ NULL 
	|						ТОГДА """"
	|					ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.СпособРасчета
	|				КОНЕЦ) = &ЧасовойРасчет
	|			ТОГДА &ЧасоваяСтавка
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ВидТарифнойСтавки,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА СтрокиОдногоГрафикаРаботы.ПодразделениеОрганизации ЕСТЬ NULL 
	|				ТОГДА """"
	|			ИНАЧЕ ВЫБОР
	|					КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|							И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА РаботникиОрганизацийСрезПоследних.ГрафикРаботыЗавершения
	|					ИНАЧЕ РаботникиОрганизацийСрезПоследних.ГрафикРаботы
	|				КОНЕЦ
	|		КОНЕЦ) КАК ГрафикРаботы,
	|	&Период КАК Период,
	|	&парамВалютаРегламентУчета КАК ВалютаТарифнойСтавки
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Период, Организация = &ГоловнаяОрганизация) КАК РаботникиОрганизацийСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВЫБОР
	|				КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|						И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизацииЗавершения
	|				ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
	|			КОНЕЦ КАК ПодразделениеОрганизации,
	|			ВЫБОР
	|				КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|						И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА РаботникиОрганизацийСрезПоследних.ДолжностьЗавершения
	|				ИНАЧЕ РаботникиОрганизацийСрезПоследних.Должность
	|			КОНЕЦ КАК Должность,
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|					КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|							И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА РаботникиОрганизацийСрезПоследних.ГрафикРаботыЗавершения
	|					ИНАЧЕ РаботникиОрганизацийСрезПоследних.ГрафикРаботы
	|				КОНЕЦ) КАК КоличествоГрафиковРаботы
	|		ИЗ
	|			РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Период, Организация = &ГоловнаяОрганизация) КАК РаботникиОрганизацийСрезПоследних
	|		ГДЕ
	|			ВЫБОР
	|					КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|							И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостоянияЗавершения
	|					ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния
	|				КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|			И ВЫБОР
	|					КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|							И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделениеЗавершения
	|					ИНАЧЕ РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделение
	|				КОНЕЦ = &Организация
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВЫБОР
	|				КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|						И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизацииЗавершения
	|				ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
	|			КОНЕЦ,
	|			ВЫБОР
	|				КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|						И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА РаботникиОрганизацийСрезПоследних.ДолжностьЗавершения
	|				ИНАЧЕ РаботникиОрганизацийСрезПоследних.Должность
	|			КОНЕЦ
	|		
	|		ИМЕЮЩИЕ
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|					КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|							И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА РаботникиОрганизацийСрезПоследних.ГрафикРаботыЗавершения
	|					ИНАЧЕ РаботникиОрганизацийСрезПоследних.ГрафикРаботы
	|				КОНЕЦ) = 1) КАК СтрокиОдногоГрафикаРаботы
	|		ПО (ВЫБОР
	|				КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|						И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизацииЗавершения
	|				ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
	|			КОНЕЦ = СтрокиОдногоГрафикаРаботы.ПодразделениеОрганизации)
	|			И (ВЫБОР
	|				КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|						И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА РаботникиОрганизацийСрезПоследних.ДолжностьЗавершения
	|				ИНАЧЕ РаботникиОрганизацийСрезПоследних.Должность
	|			КОНЕЦ = СтрокиОдногоГрафикаРаботы.Должность)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВЫБОР
	|				КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|						И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизацииЗавершения
	|				ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
	|			КОНЕЦ КАК ПодразделениеОрганизации,
	|			ВЫБОР
	|				КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|						И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА РаботникиОрганизацийСрезПоследних.ДолжностьЗавершения
	|				ИНАЧЕ РаботникиОрганизацийСрезПоследних.Должность
	|			КОНЕЦ КАК Должность,
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|					КОГДА НачисленияРаботников.ПериодЗавершения <= &Период
	|							И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА НачисленияРаботников.ВидРасчетаЗавершения.СпособРасчета
	|					ИНАЧЕ НачисленияРаботников.ВидРасчета.СпособРасчета
	|				КОНЕЦ) КАК СпособРасчета
	|		ИЗ
	|			РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
	|				&Период,
	|				ВидРасчетаИзмерение.Код ЕСТЬ NULL 
	|					И Организация = &ГоловнаяОрганизация) КАК НачисленияРаботников
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Период, Организация = &ГоловнаяОрганизация) КАК РаботникиОрганизацийСрезПоследних
	|				ПО НачисленияРаботников.Сотрудник = РаботникиОрганизацийСрезПоследних.Сотрудник
	|		ГДЕ
	|			ВЫБОР
	|					КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|							И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостоянияЗавершения
	|					ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния
	|				КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|			И ВЫБОР
	|					КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|							И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделениеЗавершения
	|					ИНАЧЕ РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделение
	|				КОНЕЦ = &Организация
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВЫБОР
	|				КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|						И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизацииЗавершения
	|				ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
	|			КОНЕЦ,
	|			ВЫБОР
	|				КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|						И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА РаботникиОрганизацийСрезПоследних.ДолжностьЗавершения
	|				ИНАЧЕ РаботникиОрганизацийСрезПоследних.Должность
	|			КОНЕЦ
	|		
	|		ИМЕЮЩИЕ
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|					КОГДА НачисленияРаботников.ПериодЗавершения <= &Период
	|							И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА НачисленияРаботников.ВидРасчетаЗавершения.СпособРасчета
	|					ИНАЧЕ НачисленияРаботников.ВидРасчета.СпособРасчета
	|				КОНЕЦ) = 1) КАК СтрокиОдногоСпособаРасчета
	|		ПО (ВЫБОР
	|				КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|						И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизацииЗавершения
	|				ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
	|			КОНЕЦ = СтрокиОдногоСпособаРасчета.ПодразделениеОрганизации)
	|			И (ВЫБОР
	|				КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|						И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА РаботникиОрганизацийСрезПоследних.ДолжностьЗавершения
	|				ИНАЧЕ РаботникиОрганизацийСрезПоследних.Должность
	|			КОНЕЦ = СтрокиОдногоСпособаРасчета.Должность)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			НачисленияРаботников.Сотрудник КАК Сотрудник,
	|			ВЫБОР
	|				КОГДА НачисленияРаботников.ПериодЗавершения <= &Период
	|						И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА НачисленияРаботников.ВидРасчетаЗавершения.СпособРасчета
	|				ИНАЧЕ НачисленияРаботников.ВидРасчета.СпособРасчета
	|			КОНЕЦ КАК СпособРасчета,
	|			ВЫБОР
	|				КОГДА НачисленияРаботников.ПериодЗавершения <= &Период
	|						И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА ВЫБОР
	|							КОГДА НачисленияРаботников.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|								ТОГДА ТарифныеСтавки.Размер
	|							ИНАЧЕ НачисленияРаботников.Показатель1Завершения
	|						КОНЕЦ
	|				ИНАЧЕ ВЫБОР
	|						КОГДА НачисленияРаботников.ВидРасчета.ТребуетВводаТарифногоРазряда
	|							ТОГДА ТарифныеСтавки.Размер
	|						ИНАЧЕ НачисленияРаботников.Показатель1
	|					КОНЕЦ
	|			КОНЕЦ КАК Размер,
	|			ВЫБОР
	|				КОГДА НачисленияРаботников.ПериодЗавершения <= &Период
	|						И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА ВЫБОР
	|							КОГДА НачисленияРаботников.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|								ТОГДА ТарифныеСтавки.Валюта
	|							ИНАЧЕ НачисленияРаботников.Валюта1Завершения
	|						КОНЕЦ
	|				ИНАЧЕ ВЫБОР
	|						КОГДА НачисленияРаботников.ВидРасчета.ТребуетВводаТарифногоРазряда
	|							ТОГДА ТарифныеСтавки.Валюта
	|						ИНАЧЕ НачисленияРаботников.Валюта1
	|					КОНЕЦ
	|			КОНЕЦ КАК Валюта
	|		ИЗ
	|			РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
	|				&Период,
	|				ВидРасчетаИзмерение.Код ЕСТЬ NULL 
	|					И Организация = &ГоловнаяОрганизация) КАК НачисленияРаботников
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок.СрезПоследних(&Период, ) КАК ТарифныеСтавки
	|				ПО (ВЫБОР
	|						КОГДА НачисленияРаботников.ПериодЗавершения <= &Период
	|								И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|							ТОГДА НачисленияРаботников.ТарифныйРазряд1Завершения
	|						ИНАЧЕ НачисленияРаботников.ТарифныйРазряд1
	|					КОНЕЦ = ТарифныеСтавки.ТарифныйРазряд)) КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних
	|		ПО ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник = РаботникиОрганизацийСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты
	|		ПО (Валюты.Период = &парамДатаВалютногоУчета)
	|			И Валюты.Валюта = ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта
	|ГДЕ
	|	ВЫБОР
	|			КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|					И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостоянияЗавершения
	|			ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния
	|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|	И ВЫБОР
	|			КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|					И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделениеЗавершения
	|			ИНАЧЕ РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделение
	|		КОНЕЦ = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизацииЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ДолжностьЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.Должность
	|	КОНЕЦ";
	//|	РаботникиОрганизацийСрезПоследних.КоэффициентЕТС, отключино в связи с необходимостью разработки постановки
	//|	РаботникиОрганизацийСрезПоследних.РазрядЕТС";     отключино в связи с необходимостью разработки постановки
	
	//собственно заполняем набор записей
	ЭтотОбъект.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры // Автозаполнение()

Процедура РассчитатьПоСтавкеПервогоРазряда(ДатаРасчета) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("парамПериод", ДатаРасчета);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.Должность,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.ШтатнаяЕдиница КАК ШтатнаяЕдиница,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.КоличествоСтавок,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.ВидТарифнойСтавки,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.ГрафикРаботы,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.ВалютаТарифнойСтавки,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.ОсобыеУсловияТруда,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.РазрядЕТС,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.КоэффициентЕТС,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.ПроцентПоКонтракту,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.ТарифнаяСтавка,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.РасчетнаяТарифнаяСтавка,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.ТарифныйСПовышениемПоИнструкции,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.РазмерСтавкиПервогоРазряда,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.ПовышенныйКоэффициентЕТС,
	|	ЕСТЬNULL(ШтатноеРасписаниеОрганизацийСрезПоследних.ИтоговоеПовышениеПоИнструкции, 0) КАК ИтоговоеПовышениеПоИнструкции,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.ТарифнаяСтавкаПервогоРазряда,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.КоличествоСтавокДляРасчетаМФЗП,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.БезЕТС,
	|	ПовышенияПоИнструкцииПоШтатномуДляРасценокСрезПоследних.Коэффициент КАК Коэффициент,
	|	ЕСТЬNULL(ПовышенияПоИнструкцииПоШтатномуДляРасценокСрезПоследних.Размер,0) КАК Размер
	|ИЗ
	|	РегистрСведений.ШтатноеРасписаниеОрганизацийДляРасценок.СрезПоследних(&парамПериод, ) КАК ШтатноеРасписаниеОрганизацийСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПовышенияПоИнструкцииПоШтатномуДляРасценок.СрезПоследних КАК ПовышенияПоИнструкцииПоШтатномуДляРасценокСрезПоследних
	|		ПО ШтатноеРасписаниеОрганизацийСрезПоследних.ШтатнаяЕдиница = ПовышенияПоИнструкцииПоШтатномуДляРасценокСрезПоследних.ШтатнаяЕдиница
	|			И ШтатноеРасписаниеОрганизацийСрезПоследних.Должность = ПовышенияПоИнструкцииПоШтатномуДляРасценокСрезПоследних.Должность
	|ГДЕ
	|	НЕ ШтатноеРасписаниеОрганизацийСрезПоследних.БезЕТС
	|
	|УПОРЯДОЧИТЬ ПО
	|	ШтатнаяЕдиница,
	|	Коэффициент";
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если Выборка.Количество() > 0 тогда
		ЭтотОбъект.Очистить();
	КонецЕсли;
	//Пока Выборка.Следующий() Цикл
	Пока Выборка.СледующийПоЗначениюПоля("ШтатнаяЕдиница") Цикл
		Если ЗначениеЗаполнено(Выборка.ТарифнаяСтавкаПервогоРазряда) тогда
			РазмерСтавкиПервогоРазряда = ПолучитьРазмерСтавкиПервогоРазряда(Выборка.ТарифнаяСтавкаПервогоРазряда,ДатаРасчета);
			Если РазмерСтавкиПервогоРазряда.Следующий() тогда
				Запись = ЭтотОбъект.Добавить();
				ЗаполнитьЗначенияСвойств(Запись,Выборка);
				Запись.Период = ДатаРасчета;
				Запись.РазмерСтавкиПервогоРазряда =  РазмерСтавкиПервогоРазряда.Размер;
				СтавкаПервого = РазмерСтавкиПервогоРазряда.Размер;
				//vvv
				ВидСтавки=Выборка.ВидТарифнойСтавки;
				Если ВидСтавки=Перечисления.ВидыТарифныхСтавок.Часовая Тогда
					ЧасовВГоду = РегистрыСведений.РазмерыПараметровДляРасчетаРБ.ПолучитьПоследнее(ДатаРасчета,Новый Структура("ВидПараметра",Перечисления.ВидыПараметровДляРасчетаЗарплаты.СреднемесячнаяНормаЧасов));
					Если ЧасовВГоду.Размер<>0 ТОгда
						СтавкаПервого=СтавкаПервого/ЧасовВГоду.Размер;
					Иначе
						Сообщить("Среднее число рабочих часов за год не установлено. Невозможно рассчитать тарифную ставку!");
						Возврат;
					КонецЕсли;			
				КонецЕсли;
				//
				ТарифнаяСтавка = Выборка.КоэффициентЕТС*?(Выборка.ПовышенныйКоэффициентЕТС=0,1,Выборка.ПовышенныйКоэффициентЕТС)*СтавкаПервого;			
				//Если ВидСтавки=Перечисления.ВидыТарифныхСтавок.Месячная Тогда
					ТарифнаяСтавка = Окр(ТарифнаяСтавка,2);			
				//КонецЕсли;		
				Запись.ТарифнаяСтавка = ТарифнаяСтавка;
				ТарифныйСПовышениемПоИнструкции = ТарифнаяСтавка + ТарифнаяСтавка*Выборка.ИтоговоеПовышениеПоИнструкции/100;
				//vvv будем сумму каждого повышения считать отдельно
				Если ВидСтавки=Перечисления.ВидыТарифныхСтавок.Месячная Тогда
					ТарифныйСПовышениемПоИнструкции = ТарифнаяСтавка + Окр(ТарифнаяСтавка*Выборка.ИтоговоеПовышениеПоИнструкции/100,-2);
				Иначе
					ТарифныйСПовышениемПоИнструкции=ТарифнаяСтавка;
					Пока Выборка.СледующийПоЗначениюПоля("Коэффициент") Цикл
					//Для Каждого Повышение ИЗ ПовышенияПоИнструкции Цикл
						ТарифныйСПовышениемПоИнструкции = ТарифныйСПовышениемПоИнструкции+ТарифнаяСтавка*Выборка.Размер/100;;	
					КонецЦикла;
				КонецЕсли;
				//
				Запись.ТарифныйСПовышениемПоИнструкции = ТарифныйСПовышениемПоИнструкции;
				Запись.РасчетнаяТарифнаяСтавка = ТарифныйСПовышениемПоИнструкции;
			Иначе
				Сообщить("Не заполнен размер ставки первого разряда для: " + Выборка.ТарифнаяСтавкаПервогоРазряда, СтатусСообщения.Важное);	
			КонецЕсли;
		Иначе
			Сообщить("Не заполнен вид ставки первого разряда для : " + Выборка.Должность, СтатусСообщения.Важное);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьРазмерСтавкиПервогоРазряда(ТарифнаяСтавкаПервогоРазряда,ДатаРасчета)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("парамСтавка", ТарифнаяСтавкаПервогоРазряда);
	Запрос.УстановитьПараметр("парамПериод", КонецДня(ДатаРасчета));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТарифныеСтавкиПервогоРазрядаОрганизацийСрезПоследних.Размер
	|ИЗ
	|	РегистрСведений.ТарифныеСтавкиПервогоРазрядаОрганизаций.СрезПоследних(
	|			&парамПериод,
	|			Организация В (ВЫБРАТЬ ПЕРВЫЕ 1
	|					Организации.Ссылка
	|				ИЗ
	|					Справочник.Организации КАК Организации
	|				ГДЕ
	|					Организации.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|				И ТарифнаяСтавка = &парамСтавка) КАК ТарифныеСтавкиПервогоРазрядаОрганизацийСрезПоследних";
	
	Возврат Запрос.Выполнить().Выбрать();
		
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ 

// Обработчик события ПередЗаписью набора записей регистра сведений
Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Замещение Тогда
		// запишем перерасчеты по тем записям, которые сейчас будут замещены
		ЗаписьПерерасчетов();
		ЗаписьПерерасчетовВРегистрЗаполнениеПлановыхНачислений();
	КонецЕсли;


	
КонецПроцедуры

// Обработчик события ПриЗаписи набора записей регистра сведений
Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// запишем перерасчеты по новым записям
	ЗаписьПерерасчетов();
	ЗаписьПерерасчетовВРегистрЗаполнениеПлановыхНачислений();
	
КонецПроцедуры

