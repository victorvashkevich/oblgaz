////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПРОВЕДЕНИЯ В СВЯЗАННЫЕ РЕГИСТРЫ

Процедура СоздатьДвиженияПоЗарплатаЗаМесяцОрганизаций(Регистратор)
	
	ХарактерВыплатыПоРегистратору = ЗарплатаКВыплатеОрганизацийПереопределяемый.ХарактерВыплатыПоДокументу(Регистратор);
	
	НаборЗаписейЗарплатаЗаМесяц = РегистрыНакопления.ЗарплатаЗаМесяцОрганизаций.СоздатьНаборЗаписей();
	НаборЗаписейЗарплатаЗаМесяц.Отбор.Регистратор.Установить(Отбор.Регистратор.Значение);
	
	НаборЗаписейЗарплатаЗаМесяц.Загрузить(Выгрузить());
	Для Каждого Запись Из НаборЗаписейЗарплатаЗаМесяц Цикл
		Запись.ПериодВзаиморасчетов = НачалоМесяца(Запись.ПериодВзаиморасчетов);
		Если НЕ ЗначениеЗаполнено(Запись.ХарактерВыплаты) И ЗначениеЗаполнено(ХарактерВыплатыПоРегистратору) Тогда
			Запись.ХарактерВыплаты = ХарактерВыплатыПоРегистратору;
		КонецЕсли;
	КонецЦикла;	
	НаборЗаписейЗарплатаЗаМесяц.Записать();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, Замещение)
	
	Для Каждого Запись Из ЭтотОбъект Цикл
		Запись.ПериодВзаиморасчетов = НачалоМесяца(Запись.ПериодВзаиморасчетов);
	КонецЦикла
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
        Возврат;
    КонецЕсли;

	Регистратор = Отбор.Регистратор.Значение;
	Если Регистратор.Метаданные().Движения.Содержит(Метаданные.РегистрыНакопления.ЗарплатаЗаМесяцОрганизаций) Тогда
		СоздатьДвиженияПоЗарплатаЗаМесяцОрганизаций(Регистратор);	
	КонецЕсли;
	
КонецПроцедуры
