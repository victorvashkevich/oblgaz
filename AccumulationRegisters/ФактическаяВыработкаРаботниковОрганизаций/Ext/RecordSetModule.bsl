Процедура ПередЗаписью(Отказ, Замещение)
		
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЗарегистрироватьПерерасчетыПоФактическойВыработке();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЗарегистрироватьПерерасчетыПоФактическойВыработке();
	
КонецПроцедуры

Процедура ЗарегистрироватьПерерасчетыПоФактическойВыработке()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Основные.ФизЛицо,
	|	Основные.Регистратор КАК Регистратор,
	|	Основные.Организация
	|ИЗ
	|	РегистрНакопления.ФактическаяВыработкаРаботниковОрганизаций КАК ФактическаяВыработка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Основные
	|		ПО ФактическаяВыработка.Период >= Основные.ПериодДействияНачало
	|			И ФактическаяВыработка.Период <= Основные.ПериодДействияКонец
	|			И (Основные.ВидРасчета.СпособРасчета = &СдельныйЗаработок)
	|			И ФактическаяВыработка.Сотрудник = Основные.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ПерерасчетОсновныхНачислений КАК Перерасчеты
	|		ПО Перерасчеты.ОбъектПерерасчета = Основные.Регистратор
	|			И Перерасчеты.ФизЛицо = Основные.ФизЛицо
	|			И (Перерасчеты.ВидРасчета = &ПустойВидРасчета)
	|ГДЕ
	|	ФактическаяВыработка.Регистратор = &Регистратор
	|	И Перерасчеты.ФизЛицо ЕСТЬ NULL 
	|	И Основные.Регистратор ЕСТЬ НЕ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор");
	
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("СдельныйЗаработок", Перечисления.СпособыРасчетаОплатыТруда.СдельныйЗаработок);
	Запрос.УстановитьПараметр("ПустойВидРасчета", ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка());
	
	Выборка = Запрос.Выполнить().Выбрать();
	ПроведениеРасчетов.ДописатьПерерасчетыОсновныхНачислений(Выборка);
	
КонецПроцедуры

