/////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Копирует значения движения в строку сторно нового движения
// для измерений и реквизитов. Ресурсы инвертируются
//
Процедура ЗаполнитьДвижениеСторно(Движение, Строка, МетаданныеОбъект)

	// измерения
	Для Каждого МДОбъект из МетаданныеОбъект.Измерения Цикл
		Движение[МДОбъект.Имя] = Строка[МДОбъект.Имя];
	КонецЦикла;

	// ресурсы
	Для Каждого МДОбъект из МетаданныеОбъект.Ресурсы Цикл
		Движение[МДОбъект.Имя] = - Строка[МДОбъект.Имя];
	КонецЦикла;

	// реквизиты
	Для Каждого МДОбъект из МетаданныеОбъект.Реквизиты Цикл
		Движение[МДОбъект.Имя] = Строка[МДОбъект.Имя];
	КонецЦикла;

КонецПроцедуры // ЗаполнитьДвижениеСторно

// Заполняет набор записей по указанному регистру сторнирующими движениями
//
Процедура ЗаполнитьНаборЗаписей(ЗаполняемыйНаборЗаписей, МетаданныеРегистр) Экспорт

	ЭтоРегистрРасчета     = Ложь;
	ЭтоРегистрБухгалтерии = Ложь;
	ЭтоРегистрНакопления  = Ложь;
    //vvv
	ЕстьРеквизитСторнируемыйДокумент = Ложь;
	//
	
	Если ОбщегоНазначения.ПринадлежностьКлассуМетаданных("РегистрыРасчета", МетаданныеРегистр) Тогда
		ЭтоРегистрРасчета     = Истина;
		НаборЗаписей          = РегистрыРасчета[МетаданныеРегистр.Имя].СоздатьНаборЗаписей();
		Если МетаданныеРегистр.Имя = "ОсновныеНачисленияРаботниковОрганизаций" Тогда
			//НаборЗаписей.мВыполнятьРасчетПериодаНачисленияСотрудника = 
			//	ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), СторнируемыйДокумент.Организация, "ПроверкаПериодовНачисления")
		КонецЕсли;
		//vvv
		ЕстьРеквизитСторнируемыйДокумент = МетаданныеРегистр.Имя = "ОсновныеНачисленияРаботниковОрганизаций" или МетаданныеРегистр.Имя = "ДополнительныеНачисленияРаботниковОрганизаций";
		//
	ИначеЕсли ОбщегоНазначения.ПринадлежностьКлассуМетаданных("РегистрыНакопления", МетаданныеРегистр) Тогда
		ЭтоРегистрНакопления  = Истина;
		НаборЗаписей          = РегистрыНакопления[МетаданныеРегистр.Имя].СоздатьНаборЗаписей();
	КонецЕсли;

	НаборЗаписей.Отбор.Регистратор.Значение = СторнируемыйДокумент;
	НаборЗаписей.Прочитать();

	Для Каждого ДвижениеСторнируемое Из НаборЗаписей Цикл

		// реквизиты
		Если ЭтоРегистрРасчета Тогда

			ДвижениеСторно = ЗаполняемыйНаборЗаписей.Добавить();

			ЗаполнитьДвижениеСторно(ДвижениеСторно, ДвижениеСторнируемое, МетаданныеРегистр);

			ДвижениеСторно.ПериодРегистрации = ПериодРегистрации;
			ДвижениеСторно.ВидРасчета        = ДвижениеСторнируемое.ВидРасчета;
			ДвижениеСторно.Сторно            = НЕ ДвижениеСторнируемое.Сторно;
            //vvv
			Если ЕстьРеквизитСторнируемыйДокумент Тогда
				ДвижениеСторно.СторнируемыйДокумент = ДвижениеСторнируемое.Регистратор;
			КонецЕсли;
			//
			
			Если МетаданныеРегистр.ПериодДействия Тогда
				ДвижениеСторно.ПериодДействияНачало = ДвижениеСторнируемое.ПериодДействияНачало;
				ДвижениеСторно.ПериодДействияКонец  = ДвижениеСторнируемое.ПериодДействияКонец;
			КонецЕсли;

			Если МетаданныеРегистр.БазовыйПериод Тогда
				ДвижениеСторно.БазовыйПериодНачало = ДвижениеСторнируемое.БазовыйПериодНачало;
				ДвижениеСторно.БазовыйПериодКонец  = ДвижениеСторнируемое.БазовыйПериодКонец;
			КонецЕсли;

		ИначеЕсли ЭтоРегистрНакопления Тогда

			ДвижениеСторно = ЗаполняемыйНаборЗаписей.Добавить();

			ЗаполнитьДвижениеСторно(ДвижениеСторно, ДвижениеСторнируемое, МетаданныеРегистр);
			
			Если МетаданныеРегистр.ВидРегистра = Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Остатки Тогда
				ДвижениеСторно.ВидДвижения = ДвижениеСторнируемое.ВидДвижения
			КонецЕсли;
			
			Если МетаданныеРегистр.Имя = "НДФЛСведенияОДоходах" Тогда
				ДвижениеСторно.Период = ДвижениеСторнируемое.Период;
				ДвижениеСторно.ПериодРегистрации = ПериодРегистрации;
			ИначеЕсли МетаданныеРегистр.Имя = "ВнутрисменноеВремяРаботниковОрганизаций"   Тогда
				ДвижениеСторно.Период = ДвижениеСторнируемое.Период;
			//vvv
			ИначеЕсли МетаданныеРегистр.Имя = "ВзаиморасчетыСРаботникамиОрганизаций" Тогда
				ДвижениеСторно.Период = ПериодРегистрации;
			ИначеЕсли МетаданныеРегистр.Имя = "ЗарплатаЗаМесяцОрганизаций" Тогда
				ДвижениеСторно.Период = ПериодРегистрации;	
			//
			Иначе
				ДвижениеСторно.Период = Дата;
			КонецЕсли;

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры // ЗаполнитьНаборЗаписей()

Процедура ИзменитьПериодРегистрацииЗаписей(ЗаполняемыйНаборЗаписей, МетаданныеРегистр) Экспорт
	Если ОбщегоНазначения.ПринадлежностьКлассуМетаданных("РегистрыРасчета", МетаданныеРегистр) ИЛИ МетаданныеРегистр.Имя = "НДФЛСведенияОДоходах" Тогда
    	Для Каждого Движение Из ЗаполняемыйНаборЗаписей Цикл
            Движение.ПериодРегистрации = ПериодРегистрации;
    	КонецЦикла;
	КонецЕсли;
	//vvv
	Если (МетаданныеРегистр.Имя = "ВзаиморасчетыСРаботникамиОрганизаций") или (МетаданныеРегистр.Имя = "ЗарплатаЗаМесяцОрганизаций") Тогда
    	Для Каждого Движение Из ЗаполняемыйНаборЗаписей Цикл
            Движение.Период = ПериодРегистрации;
    	КонецЦикла;
	КонецЕсли;
	//

КонецПроцедуры
