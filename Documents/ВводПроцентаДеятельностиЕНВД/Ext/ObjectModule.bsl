////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры:
//	Режим - режим проведения
//
// Возвращаемое значение:
//	Результат запроса
//
Функция СформироватьЗапросПоШапке(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" ,		Ссылка);
	Запрос.УстановитьПараметр("парамПустаяОрганизация",	Справочники.Организации.ПустаяСсылка());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВводПроцентаДеятельностиЕНВД.Дата,
	|	ВводПроцентаДеятельностиЕНВД.Организация,
	|	ВЫБОР
	|		КОГДА ВводПроцентаДеятельностиЕНВД.Организация.ГоловнаяОрганизация = &парамПустаяОрганизация
	|			ТОГДА ВводПроцентаДеятельностиЕНВД.Организация
	|		ИНАЧЕ ВводПроцентаДеятельностиЕНВД.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ВводПроцентаДеятельностиЕНВД.Период,
	|	ВводПроцентаДеятельностиЕНВД.Ссылка
	|ИЗ
	|	Документ.ВводПроцентаДеятельностиЕНВД КАК ВводПроцентаДеятельностиЕНВД
	|ГДЕ
	|	ВводПроцентаДеятельностиЕНВД.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по таблице "РаботникиОрганизации" документа
//
// Параметры:
//	Режим - режим проведения
//
// Возвращаемое значение:
//	Результат запроса.
//
Функция СформироватьЗапросПоРаботникиОрганизации(Режим)

	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",			Ссылка);
	Запрос.УстановитьПараметр("Период",					Период);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",	ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СписокРаботников.Сотрудник.Наименование КАК СотрудникНаименование,
	|	СписокРаботников.Сотрудник,
	|	СписокРаботников.ПодпадаетПодЕНВД,
	|	СписокРаботников.СтатьяЗатратЕНВД,
	|	СписокРаботников.СтатьяЗатратНеЕНВД,
	|	СписокРаботников.НомерСтроки,
	|	ВЫБОР
	|		КОГДА СписокРаботников.Сотрудник.Организация = &ГоловнаяОрганизация
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОшибкаНеСоответствиеСотрудникаИОрганизации,
	|	СписокРаботников.КонфликтныйНомерСтроки,
	|	СуществующиеДвижения.Регистратор.Представление КАК КонфликтныйДокумент,
	|	СписокРаботников.Период
	|ИЗ
	|	(ВЫБРАТЬ
	|		СписокРаботников.НомерСтроки КАК НомерСтроки,
	|		СписокРаботников.Сотрудник КАК Сотрудник,
	|		СписокРаботников.ПодпадаетПодЕНВД КАК ПодпадаетПодЕНВД,
	|		СписокРаботников.СтатьяЗатратЕНВД КАК СтатьяЗатратЕНВД,
	|		СписокРаботников.СтатьяЗатратНеЕНВД КАК СтатьяЗатратНеЕНВД,
	|		МИНИМУМ(ПовторяющиесяСтроки.НомерСтроки) КАК КонфликтныйНомерСтроки,
	|		СписокРаботников.МесяцРегистрации КАК Период
	|	ИЗ
	|		Документ.ВводПроцентаДеятельностиЕНВД.РаботникиОрганизации КАК СписокРаботников
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводПроцентаДеятельностиЕНВД.РаботникиОрганизации КАК ПовторяющиесяСтроки
	|			ПО СписокРаботников.Ссылка = ПовторяющиесяСтроки.Ссылка
	|				И СписокРаботников.НомерСтроки < ПовторяющиесяСтроки.НомерСтроки
	|				И СписокРаботников.Сотрудник = ПовторяющиесяСтроки.Сотрудник
	|				И СписокРаботников.МесяцРегистрации = ПовторяющиесяСтроки.МесяцРегистрации
	|	ГДЕ
	|		СписокРаботников.Ссылка = &ДокументСсылка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СписокРаботников.НомерСтроки,
	|		СписокРаботников.Сотрудник,
	|		СписокРаботников.ПодпадаетПодЕНВД,
	|		СписокРаботников.СтатьяЗатратЕНВД,
	|		СписокРаботников.СтатьяЗатратНеЕНВД,
	|		СписокРаботников.МесяцРегистрации) КАК СписокРаботников
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СуществующиеДвижения.Сотрудник КАК Сотрудник,
	|			СуществующиеДвижения.Регистратор КАК Регистратор,
	|			СуществующиеДвижения.ПериодРегистрации КАК ПериодРегистрации
	|		ИЗ
	|			РегистрСведений.ПроцентДеятельностиЕНВДСотрудников КАК СуществующиеДвижения
	|		ГДЕ
	|			СуществующиеДвижения.ПериодРегистрации В
	|					(ВЫБРАТЬ
	|						СписокРаботников.МесяцРегистрации
	|					ИЗ
	|						Документ.ВводПроцентаДеятельностиЕНВД.РаботникиОрганизации КАК СписокРаботников
	|					СГРУППИРОВАТЬ ПО
	|								СписокРаботников.МесяцРегистрации)
	|			И СуществующиеДвижения.Сотрудник В
	|					(ВЫБРАТЬ
	|						СписокРаботников.Сотрудник
	|					ИЗ
	|						Документ.ВводПроцентаДеятельностиЕНВД.РаботникиОрганизации КАК СписокРаботников
	|					СГРУППИРОВАТЬ ПО
	|								СписокРаботников.Сотрудник)) КАК СуществующиеДвижения
	|		ПО СписокРаботников.Сотрудник = СуществующиеДвижения.Сотрудник
	|			И СписокРаботников.Период = СуществующиеДвижения.ПериодРегистрации";
	
	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоРаботникиОрганизации()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизтов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//	ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//	Отказ 					- флаг отказа в проведении.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана организация!", Отказ, Заголовок);
		
	ИначеЕсли ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Период) Тогда
		БухгалтерскийИНалоговыйУчет.ОбновитьДанныеУчетнойПолитикиПоНалоговомуУчету(глЗначениеПеременной("глУчетнаяПолитикаПоНалоговомуУчету"), КонецМесяца(Период), Организация);
		Если Не глЗначениеПеременной("глУчетнаяПолитикаПоНалоговомуУчету")[КонецМесяца(Период)][Организация].ОрганизацияЯвляетсяПлательщикомЕНВД Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Организация не применяет ЕНВД!", Отказ, Заголовок);
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Период) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указан период!", Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения реквизитов в строке ТЧ "РаботникиОрганизации" документа.
// Если какой-то из реквизтов, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по строке ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//	ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//	ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//								  из результата запроса
//	Отказ						- флаг отказа в проведении.
//	Заголовок					- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеСтрокиРаботникаОрганизации(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок)

	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
									""" табл. части ""Работники организации"": ";
	
	// Сотрудник
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не выбран работник!", Отказ, Заголовок);
	КонецЕсли;
	
	// Организация сотрудника должна совпадать с организацией документа
	Если ВыборкаПоСтрокамДокумента.ОшибкаНеСоответствиеСотрудникаИОрганизации Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "указанный сотрудник оформлен на другую организацию!", Отказ, Заголовок);
	КонецЕсли;
	
	// месяц регистрации
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Период) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не задан месяц регистрации!", Отказ, Заголовок);
	КонецЕсли;

	// Одинаковые строки
	Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.КонфликтныйНомерСтроки) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке  + "по работнику " + ВыборкаПоСтрокамДокумента.СотрудникНаименование + " обнаружено повторное назначение процента деятельности ЕНВД в строке №" + ВыборкаПоСтрокамДокумента.КонфликтныйНомерСтроки + "!", Отказ, Заголовок);
	КонецЕсли;
	
	// Движения в регистре на дату из документа
	Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.КонфликтныйДокумент) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "на период "+ Формат(ВыборкаПоСтрокамДокумента.Период, "ДФ='ММММ гггг'") + " процент деятельности ЕНВД уже зарегистрирован документом " + Символы.ПС + ВыборкаПоСтрокамДокумента.КонфликтныйДокумент + "!", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиРаботникаОрганизации()

// По строке выборки результата запроса по документу формируем движения по регистрам
//
// Параметры: 
//	ВыборкаПоШапкеДокумента					- выборка из результата запроса по шапке документа,
//	ВыборкаПоРаботникиОрганизации			- выборка из результата запроса по табличной части,
// Возвращаемое значение:
//	Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамСведений(ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации)
	
	Движение = Движения.ПроцентДеятельностиЕНВДСотрудников.Добавить();
	// Свойства
	
	// Измерения
	Движение.ПериодРегистрации	= ВыборкаПоРаботникиОрганизации.Период;
	Движение.Сотрудник			= ВыборкаПоРаботникиОрганизации.Сотрудник;
	Движение.Организация		= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
	
	// Ресурсы
	Движение.ПодпадаетПодЕНВД	= ВыборкаПоРаботникиОрганизации.ПодпадаетПодЕНВД;
	Движение.СтатьяЗатратЕНВД	= ВыборкаПоРаботникиОрганизации.СтатьяЗатратЕНВД;
	Движение.СтатьяЗатратНеЕНВД	= ВыборкаПоРаботникиОрганизации.СтатьяЗатратНеЕНВД;
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамСведений()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);

	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Режим);

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();

	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);

		// Движения стоит добавлять, если в проведении еще не отказано (отказ =ложь)
		Если НЕ Отказ Тогда

			// получим реквизиты табличной части
			РезультатЗапросаПоРаботники = СформироватьЗапросПоРаботникиОрганизации(Режим);
			ВыборкаПоРаботникиОрганизации = РезультатЗапросаПоРаботники.Выбрать();

			Пока ВыборкаПоРаботникиОрганизации.Следующий() Цикл 

				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиРаботникаОрганизации(ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации, Отказ, Заголовок);

				Если НЕ Отказ Тогда

					// Заполним записи в наборах записей регистров
					ДобавитьСтрокуВДвиженияПоРегистрамСведений(ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации);
					
				КонецЕсли;

			КонецЦикла;
			
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры // ОбработкаПроведения()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(РаботникиОрганизации);
	
	Если Не ВводДанныхПоПериодам Тогда
		//перед записью документа заполним месяц регистрации
		Для каждого СтрокаТЧ Из РаботникиОрганизации Цикл
			СтрокаТЧ.МесяцРегистрации = Период;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
