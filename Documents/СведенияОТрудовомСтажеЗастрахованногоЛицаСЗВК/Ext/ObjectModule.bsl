////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ РАБОТЫ ФОРМ

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке()

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПерваяТаблица.Ссылка.Дата КАК Дата,
	|	ПерваяТаблица.Ссылка.Номер КАК Номер,
	|	ПерваяТаблица.Ссылка.Организация КАК Организация,
	|	ПерваяТаблица.Ссылка.Организация.Наименование КАК ОрганизацияНаименование,
	|	ПерваяТаблица.Ссылка.Организация.НаименованиеОКОПФ Как ОрганизацияНаименованиеОКОПФ,
	|	ВЫБОР
	|		КОГДА ПерваяТаблица.Ссылка.Организация.ГоловнаяОрганизация = &парамПустаяОрганизация
	|			ТОГДА ПерваяТаблица.Ссылка.Организация
	|		ИНАЧЕ ПерваяТаблица.Ссылка.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ПерваяТаблица.Ссылка.Ответственный КАК Ответственный,
	|	ПерваяТаблица.Ссылка.ТипСведений КАК ТипСведений,
	|	ПерваяТаблица.Ссылка.Ссылка КАК Ссылка,
	|	ПерваяТаблица.ФизЛицо КАК ФизЛицо,
	|	ПерваяТаблица.Ссылка.ФорматФайла,
	|	ПерваяТаблица.НомерСтроки,
	|	ВтораяТаблица.НомерСтроки КАК НомерПовторяющейсяСтроки
	|ИЗ
	|	Документ.СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК.РаботникиОрганизации КАК ПерваяТаблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК.РаботникиОрганизации КАК ВтораяТаблица
	|		ПО ПерваяТаблица.ФизЛицо = ВтораяТаблица.ФизЛицо
	|			И ПерваяТаблица.Ссылка = ВтораяТаблица.Ссылка
	|			И ПерваяТаблица.НомерСтроки < ВтораяТаблица.НомерСтроки
	|ГДЕ
	|	ПерваяТаблица.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Проверяет правильность заполнения шапки документа
// Если какой-то из реквизтов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 					- флаг отказа в проведении.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана организация, которая подает сведения!", Отказ, Заголовок);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Ответственный) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указано ответственное лицо!", Отказ, Заголовок);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ФорматФайла) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указан формат файла!", Отказ, Заголовок);
	ИначеЕсли ВыборкаПоШапкеДокумента.ФорматФайла = Перечисления.ФорматФайлаПФР.Версия07 Тогда	
		Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ОрганизацияНаименованиеОКОПФ) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Предупреждение: Не указано наименование ОКОПФ организации",,Заголовок);
		ИначеЕсли СтрДлина(ВыборкаПоШапкеДокумента.ОрганизацияНаименованиеОКОПФ) > 40 Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Предупреждение: Наименование ОКОПФ организации обрезано до 40 символов.",,Заголовок);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения документа
Процедура ПроверитьЗаполнениеДокумента(ВыборкаПоДокументу, Отказ, Заголовок)

	КоличествоДокументов = ВыборкаПоДокументу.Количество();
	Если КоличествоДокументов = 0 тогда
		ОбщегоНазначения.СообщитьОбОшибке("Список работников пуст!", Отказ, Заголовок);
	КонецЕсли;

	ПроверялиШапку = Ложь;
	Пока ВыборкаПоДокументу.Следующий() цикл

		//Проверка реквизитов шапки документа
		Если Не ПроверялиШапку тогда
			ПроверитьЗаполнениеШапки(ВыборкаПоДокументу, Отказ, Заголовок);
			ПроверялиШапку = Истина;
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(ВыборкаПоДокументу.ФизЛицо) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Строка №"+ВыборкаПоДокументу.НомерСтроки+": Не выбран работник!", Отказ, Заголовок);
		КонецЕсли;
		
		//Контроль дубля строк
		Если ВыборкаПоДокументу.НомерПовторяющейсяСтроки <> NULL тогда
			ОбщегоНазначения.СообщитьОбОшибке("Строка №"+ВыборкаПоДокументу.НомерПовторяющейсяСтроки+": Работник "+ВыборкаПоДокументу.ФизЛицо+ " указан в документе дважды!", Отказ, Заголовок);
		КонецЕсли;
	КонецЦикла;
	
	Если КоличествоДокументов > 200 тогда
		ОбщегоНазначения.СообщитьОбОшибке("В документе должно быть не более 200 форм СЗВ-К (работников)!", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры

// Проверяет правильность заполнения реквизитов физлица 
// Если какой-то из реквизтов, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по строке ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//  							  из результата запроса по работникам, 
//  Отказ 						- флаг отказа в проведении.
//
Процедура ПроверитьДанныеФизлица(ВыборкаПоСтрокамДокумента, ВыборкаПоШапкеДокумента, ФамилияФизЛица, ИмяФизЛица, Отказ, Заголовок)

	СтрокаНачалаСообщенияОбОшибке = "В строке № """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) + """: ";
	// ФизЛицо
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ФизЛицо) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не выбран работник!", Отказ, Заголовок);
	Иначе	
		СтрокаНачалаСообщенияОбОшибке = СтрокаНачалаСообщенияОбОшибке + "По работнику "+ВыборкаПоСтрокамДокумента.ФизЛицоНаименование + " ";
		Если НЕ ВыборкаПоСтрокамДокумента.ФизЛицоРаботаетВОрганизации тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- не работает в организации " + ВыборкаПоШапкеДокумента.ОрганизацияНаименование + "!", Отказ, Заголовок);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.СтраховойНомерПФР) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задан страховой номер!", Отказ, Заголовок);
		Иначе	
			Если НЕ РегламентированнаяОтчетность.СтраховойНомерПФРСоответствуетТребованиям(ВыборкаПоСтрокамДокумента.СтраховойНомерПФР) тогда
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Задан неверный страховой номер!", Отказ, Заголовок);
			КонецЕсли;	
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ФамилияФизЛица) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задана фамилия!", Отказ, Заголовок);
		КонецЕсли;	
		Если НЕ ЗначениеЗаполнено(ИмяФизЛица) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задано имя!", Отказ, Заголовок);
		КонецЕсли;	

		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаРождения) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задана дата рождения!", Отказ, Заголовок);
		ИначеЕсли ВыборкаПоСтрокамДокумента.ДатаРождения > Дата тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Дата рождения не может быть больше даты подачи сведений!", Отказ, Заголовок);
		КонецЕсли;	

	КонецЕсли;

КонецПроцедуры // ПроверитьДанныеФизлица()

//Формирует строку "дополнительных сведений" по исчисляемому стажу в "удобочитаемом" виде для отражения в формах
Функция СобратьСтрокуИсчисляемогоСтажа(ЗаписьСтажа)
	
	НулевойПараметр	=	ЗаписьСтажа.НулевойПараметрИсчисляемогоСтажа;
	ПервыйПараметр	=	ЗаписьСтажа.ПервыйПараметрИсчисляемогоСтажа;
	ВторойПараметр	=	ЗаписьСтажа.ВторойПараметрИсчисляемогоСтажа;
	ТретийПараметр	=	ЗаписьСтажа.ТретийПараметрИсчисляемогоСтажа;
	
	Если ЗаписьСтажа.ОснованиеИсчисляемогоСтажаКод	=	Справочники.ОснованияИсчисляемогоТрудовогоСтажа.ВОДОЛАЗ.Код Тогда
		Возврат ?(ПервыйПараметр	>	0,""+ПервыйПараметр+" ч ","")+?(ВторойПараметр>0,""+ВторойПараметр+" мин","");
	ИначеЕсли ЗаписьСтажа.ОснованиеИсчисляемогоСтажаКод	=	Справочники.ОснованияИсчисляемогоТрудовогоСтажа.СЕЗОН.Код Тогда
		Возврат ""
	Иначе
		Если НулевойПараметр	=	""	тогда
			Возврат ?(ПервыйПараметр>0,""+ПервыйПараметр+" м ","")+?(ВторойПараметр>0,""+ВторойПараметр+" дн ","")+СокрЛП("" + ТретийПараметр);
		Иначе
			Возврат ?(НулевойПараметр>0,""+НулевойПараметр+" г ","")	+	?(ПервыйПараметр>0,""+ПервыйПараметр+" м ","")+?(ВторойПараметр>0,""+ВторойПараметр+" дн ","")+СокрЛП("" + ТретийПараметр);
		КонецЕсли;
	КонецЕсли;
КонецФункции 

//Формирует строку "дополнительных сведений" по выслуге лет в "удобочитаемом" виде для отражения в формах.
Функция СобратьСтрокуПенсииЗаВыслугуЛет(ЗаписьСтажа)

	КодОснования 	=   ЗаписьСтажа.ОснованиеВыслугиЛетКод;
	ПервыйПараметр	=	ЗаписьСтажа.ПервыйПараметрВыслугиЛет;
	ВторойПараметр	=	ЗаписьСтажа.ВторойПараметрВыслугиЛет;
	ТретийПараметр	=	ЗаписьСтажа.ТретийПараметрВыслугиЛет;
	
	Если 
		(КодОснования	=	СокрЛП(Справочники.ОснованияВыслугиЛет.ИСПКЛС1.Код)) 	или 
		(КодОснования	=	СокрЛП(Справочники.ОснованияВыслугиЛет.САМОЛЕТ.Код))	или 
		(КодОснования	=	СокрЛП(Справочники.ОснованияВыслугиЛет.СПЕЦАВ.Код)) 	или 
		(КодОснования	=	СокрЛП(Справочники.ОснованияВыслугиЛет.ЛЕТИСП.Код)) 	или 
		(КодОснования	=	СокрЛП(Справочники.ОснованияВыслугиЛет.ИТСИСП.Код)) 	или 
		(КодОснования	=	СокрЛП(Справочники.ОснованияВыслугиЛет.ИНСПЕКТ.Код)) 	или
		(КодОснования	=	СокрЛП(Справочники.ОснованияВыслугиЛет.ОПЫТИСП.Код))	тогда
		Возврат ?(ПервыйПараметр>0,""+ПервыйПараметр+" ч ","")+?(ВторойПараметр>0,""+ВторойПараметр+" мин","");
	ИначеЕсли 
		(КодОснования	=	СокрЛП(Справочники.ОснованияВыслугиЛет.РЕАКТИВН.Код)) 	или 
		(КодОснования	=	СокрЛП(Справочники.ОснованияВыслугиЛет.НОРМАПР.Код)) 	тогда
		Возврат ?(ПервыйПараметр>0,""+ПервыйПараметр+" прыжков ","");
	ИначеЕсли 
		(КодОснования	=	СокрЛП(Справочники.ОснованияВыслугиЛет.НОРМСП.Код)) 	тогда
		Возврат ?(ПервыйПараметр>0,""+ПервыйПараметр+" сп/под ","");
	ИначеЕсли 
		(КодОснования	=	СокрЛП(Справочники.ОснованияВыслугиЛет.УВД.Код)) 	или 
		(КодОснования	=	СокрЛП(Справочники.ОснованияВыслугиЛет.ИТС.Код))	тогда
		Возврат ?(ПервыйПараметр>0,""+ПервыйПараметр+" м ","")+?(ВторойПараметр>0,""+ВторойПараметр+" дн ","");
	ИначеЕсли 
		(КодОснования	=	СокрЛП(Справочники.ОснованияВыслугиЛет.ХИРУРГД.Код)) 	или 
		(КодОснования	=	СокрЛП(Справочники.ОснованияВыслугиЛет.ХИРУРСМ.Код)) 	или 
		(КодОснования	=	СокрЛП(Справочники.ОснованияВыслугиЛет.ЗП81ГД.Код)) 	или 
		(КодОснования	=	СокрЛП(Справочники.ОснованияВыслугиЛет.ЗП81СМ.Код)) 	тогда
		Возврат ?(ТретийПараметр>0,""+ТретийПараметр+" ставок ","");
	ИначеЕсли 
		(КодОснования	=	СокрЛП(Справочники.ОснованияВыслугиЛет.ЗП80РК.Код)) или 
		(КодОснования	=	СокрЛП(Справочники.ОснованияВыслугиЛет.ЗП80ПД.Код)) тогда
		Возврат ?(ПервыйПараметр>0,""+ПервыйПараметр+" ч ","")+?(ТретийПараметр>0,""+ТретийПараметр+" ставок ","");
	КонецЕсли;
	
	Возврат "";
КонецФункции // СобратьСтрокуПенсииЗаВыслугуЛет

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Если Клиент Тогда

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	Если      ИмяМакета = "ПечатьФайла" Тогда
		ЕстьОшибки = Ложь;
		ТекстФайла = РегламентированнаяОтчетность.ПолучитьТекстФайла(ЭтотОбъект,ЕстьОшибки);
		Если ЕстьОшибки тогда
			Возврат Неопределено;
		КонецЕсли;	 
		
		Макет = ПолучитьМакет("ФормаСЗВ_К");
		ДокументРезультат = Новый ТабличныйДокумент;
		ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК_ФормаСЗВ_К";
		
		//Получаем форматы необходимых записей
		ДокументФорматЗаписей = ПолучитьМакет("ФорматЗаписей");
		ФорматЗаписиКОНВ = ПроцедурыПерсонифицированогоУчета.ПолучитьФорматЗаписи("КОНВ",ДокументФорматЗаписей);
		ФорматЗаписиДЕЯТ = ПроцедурыПерсонифицированогоУчета.ПолучитьФорматЗаписи("ДЕЯТ",ДокументФорматЗаписей);
		ФорматЗаписиПСТЖ = ПроцедурыПерсонифицированогоУчета.ПолучитьФорматЗаписи("ПСТЖ",ДокументФорматЗаписей);
		ФорматЗаписиПЛГТ = ПроцедурыПерсонифицированогоУчета.ПолучитьФорматЗаписи("ПЛГТ",ДокументФорматЗаписей);
		ФорматЗаписиТЕРР = ПроцедурыПерсонифицированогоУчета.ПолучитьФорматЗаписи("ТЕРР",ДокументФорматЗаписей);
		ФорматЗаписиОСОБ = ПроцедурыПерсонифицированогоУчета.ПолучитьФорматЗаписи("ОСОБ",ДокументФорматЗаписей);
		ФорматЗаписиВЫСЛ = ПроцедурыПерсонифицированогоУчета.ПолучитьФорматЗаписи("ВЫСЛ",ДокументФорматЗаписей);
		
		//Обработка заголовка файла
		ИнформацияОПачке = Новый Структура;
		Если ПроцедурыПерсонифицированогоУчета.РазобратьЗаголовокФайла(ТекстФайла,ИнформацияОПачке)=0 тогда
			Возврат Неопределено;
		КонецЕсли;	
		
		//Обработка документов файла
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьШапка2 = Макет.ПолучитьОбласть("Шапка2");
		ОбластьШапка3 = Макет.ПолучитьОбласть("Шапка3");
		ОбластьШапкаПериоды = Макет.ПолучитьОбласть("ШапкаПериоды");
		ОбластьШапкаДеят = Макет.ПолучитьОбласть("ШапкаДЕЯТ");
		ОбластьСтрокаСтажа = Макет.ПолучитьОбласть("СтрокаСтажа");
		ОбластьШапкаИтогов = Макет.ПолучитьОбласть("ШапкаИтогов");
		ОбластьСтрокаТЕРР = Макет.ПолучитьОбласть("СтрокаТЕРР");
		ОбластьСтрокаТЕРР2 = Макет.ПолучитьОбласть("СтрокаТЕРР2");
		ОбластьСтрокаОСОБ = Макет.ПолучитьОбласть("СтрокаОСОБ");
		ОбластьСтрокаОСОБ2 = Макет.ПолучитьОбласть("СтрокаОСОБ2");
		ОбластьСтрокаВЫСЛ = Макет.ПолучитьОбласть("СтрокаВЫСЛ");
		ОбластьСтрокаВЫСЛ2 = Макет.ПолучитьОбласть("СтрокаВЫСЛ2");
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		
		//Установим заранее для всех работников
		ОтветственныеЛица = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, Дата, Ответственный.ФизЛицо);
		ОбластьПодвал.Параметры.Дата = ПроцедурыПерсонифицированогоУчета.ДатаВОтчет(Дата);
		ОбластьПодвал.Параметры.ДолжностьРуководителя		 	= ОтветственныеЛица.РуководительДолжность;
		ОбластьПодвал.Параметры.РасшифровкаПодписиРуководителя	= ОтветственныеЛица.Руководитель;
		
		Н=5;//Номер строки первой записи КОНВ
		
		// строк на листе
		СтрокНаЛисте	=	68.05;
		//количество строк для вывода записи о стаже
		ВысотаСтрокаСтажа = 3;
		
		//Цикл по документам файла
		Для НомерДокумента = 1 по ИнформацияОПачке.ДокументовВПачке цикл
			
			//Читаем запись КОНВ
			СтрокаФайла = СтрПолучитьСтроку(ТекстФайла,Н);
			Н= Н + 1;
			ЗаписьКОНВ = ПроцедурыПерсонифицированогоУчета.ПолучитьСтруктуруЗаписи(ФорматЗаписиКОНВ);
			СтрОшибка = "";
			Если НЕ ПроцедурыПерсонифицированогоУчета.РазложитьСтрокуВСтруктуруЗаписи(СтрокаФайла,"КОНВ",ФорматЗаписиКОНВ,ЗаписьКОНВ,СтрОшибка) тогда
				Сообщить("Ошибка в строке файла № "+Н+": "+СтрОшибка);
				Возврат Неопределено;
			КонецЕсли;	
			
			//Каждый новый работник с новой страницы
			Если НомерДокумента<>1 тогда
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;	 
			
			//Высота выходной формы в строках по текущему работнику
			ВысотаТаблицы =	0;
			
			//Счетчик листов по текущему работнику
			КолВоЛистов = 1;
			
			//Выводим шапку
			Если ЗначениеЗаполнено(ЗаписьКОНВ.ТипФормы) Тогда
				ОбластьШапка.Рисунки["ТипФормы"+ЗаписьКОНВ.ТипФормы].Текст    =   "ю";
			КонецЕсли;
			ОбластьШапка.Параметры.СтраховойНомер					=	ЗаписьКОНВ.СтраховойНомер;
			ОбластьШапка.Параметры.Фамилия							=	ЗаписьКОНВ.Фамилия;
			ОбластьШапка.Параметры.Имя								=	ЗаписьКОНВ.Имя;
			ОбластьШапка.Параметры.Отчество							=	ЗаписьКОНВ.Отчество;
			ОбластьШапка.Параметры.ДатаРождения						=	ПроцедурыПерсонифицированогоУчета.ДатаВОтчет(ЗаписьКОНВ.СтандартнаяДатаРождения);
			ОбластьШапка.Параметры.ТерриториальныеУсловия			=	ЗаписьКОНВ.ТерриториальныеУсловияКод + ?(ЗаписьКОНВ.РайонныйКоэффициент = 0, "",", " + ЗаписьКОНВ.РайонныйКоэффициент);
			ДокументРезультат.Вывести(ОбластьШапка);
			ДокументРезультат.Вывести(ОбластьШапкаПериоды);
			ВысотаТаблицы	=	ВысотаТаблицы	+	14.5;
			
			//Ссылка на область с названием вида формы: единая, начало, продолжение, окончание
			НомерСтрокиВариантСЗВК =  ДокументРезультат.ВысотаТаблицы-13;
			
			//Первоначально считаем, что все данные поместятся на одном листе
			ДокументРезультат.Область(НомерСтрокиВариантСЗВК,2).Текст = "Форма СЗВ-К (единая)";
			
			//Установим заранее для новых листов по текущему работнику
			ОбластьШапка3 = Макет.ПолучитьОбласть("Шапка3");
			ОбластьШапка3.Параметры.СтраховойНомер					=	ЗаписьКОНВ.СтраховойНомер;
			ОбластьШапка3.Параметры.ФИО								=	ЗаписьКОНВ.Фамилия	+	" "	+	Лев(ЗаписьКОНВ.Имя,1)	+	". "	+	Лев(ЗаписьКОНВ.Отчество,1)+".";
			
			//Цикл по периодам деятельности работника
			Для НомерПериодаДеятельности = 1 по ЗаписьКОНВ.ЧислоЗаписейОПериодахДеятельности цикл
				
				//Читаем запись ДЕЯТ
				СтрокаФайла = СтрПолучитьСтроку(ТекстФайла,Н);
				Н= Н + 1;
				ЗаписьДЕЯТ = ПроцедурыПерсонифицированогоУчета.ПолучитьСтруктуруЗаписи(ФорматЗаписиДЕЯТ);
				СтрОшибка = "";
				Если НЕ ПроцедурыПерсонифицированогоУчета.РазложитьСтрокуВСтруктуруЗаписи(СтрокаФайла,"ДЕЯТ",ФорматЗаписиДЕЯТ,ЗаписьДЕЯТ,СтрОшибка) тогда
					Сообщить("Ошибка в строке файла № "+Н+": "+СтрОшибка);
					Возврат Неопределено;
				КонецЕсли;	
				
				//Выводим шапку периода деятельности
				ВысотаШапкаДЕЯТ	=	8;
				ОбластьШапкаДЕЯТ.Параметры.НаименованиеОрганизации	=	ЗаписьДЕЯТ.НаименованиеОрганизации;
				ОбластьШапкаДЕЯТ.Параметры.ВидДеятельности			=	ЗаписьДЕЯТ.ВидДеятельностиКод;
				ОбластьШапкаДЕЯТ.Параметры.НомерПериода				=	""+ЗаписьДЕЯТ.НомерЗаписи+".";
				Если	СтрДлина(СокрЛП(ЗаписьДЕЯТ.НаименованиеОрганизации))	>	65	тогда
					ВысотаШапкаДЕЯТ	=	ВысотаШапкаДЕЯТ	+	1;
				КонецЕсли;
				
				// шапка стажа, без самого стажа выводиться не может
				Если	ЗаписьДЕЯТ.ЧислоЗаписейОСтаже	>	0	тогда
					ДополнениеСтрокаСтажа	=	ВысотаСтрокаСтажа;
				КонецЕсли;
				
				//Контроль выхода за пределы листа
				Если (ВысотаТаблицы	+	ВысотаШапкаДЕЯТ	+	ДополнениеСтрокаСтажа)	>=	СтрокНаЛисте	тогда
					Если	КолВоЛистов	=	1	тогда
						ДокументРезультат.Область(НомерСтрокиВариантСЗВК,2).Текст	=	"Форма СЗВ-К (начало)";
						ДокументРезультат.Область(НомерСтрокиВариантСЗВК,13).Текст	=	"Лист 1";
					КонецЕсли;
					КолВоЛистов	= КолВоЛистов +	1;
					ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					// перед тем как выводить шапку стажа, выведем шапку СЗВ-К и номер листа
					ОбластьШапка2.Параметры.НомерЛиста = "Лист " + КолВоЛистов;
					ДокументРезультат.Вывести(ОбластьШапка2);
					НомерСтрокиВариантСЗВК = ДокументРезультат.ВысотаТаблицы;
					ДокументРезультат.Вывести(ОбластьШапка3);
					ДокументРезультат.Вывести(ОбластьШапкаПериоды);
					ВысотаТаблицы =	4.5;
				КонецЕсли;
				
				ДокументРезультат.Вывести(ОбластьШапкаДЕЯТ);
				ВысотаТаблицы	=	ВысотаТаблицы	+	ВысотаШапкаДЕЯТ;
				
				//Цикл по основным записям о стаже
				Для НомерОснованойЗаписи = 1 по  ЗаписьДЕЯТ.ЧислоЗаписейОСтаже цикл
					
					//Читаем запись ПСТЖ
					СтрокаФайла = СтрПолучитьСтроку(ТекстФайла,Н);
					Н= Н + 1;
					ЗаписьПСТЖ = ПроцедурыПерсонифицированогоУчета.ПолучитьСтруктуруЗаписи(ФорматЗаписиПСТЖ);
					СтрОшибка = "";
					Если НЕ ПроцедурыПерсонифицированогоУчета.РазложитьСтрокуВСтруктуруЗаписи(СтрокаФайла,"ПСТЖ",ФорматЗаписиПСТЖ,ЗаписьПСТЖ,СтрОшибка) тогда
						Сообщить("Ошибка в строке файла № "+Н+": "+СтрОшибка);
						Возврат Неопределено;
					КонецЕсли;	
					
					//Выводим запись ПСТЖ
					ОбластьСтрокаСтажа.Параметры.НомерПериода 					= ЗаписьПСТЖ.НомерПериода;
					ОбластьСтрокаСтажа.Параметры.ДатаНачалаПериода 				= Формат(ЗаписьПСТЖ.ДатаНачалаПериода,"ДФ='дд.ММ.гггг'");
					ОбластьСтрокаСтажа.Параметры.ДатаОкончанияПериода 			= Формат(ЗаписьПСТЖ.ДатаОкончанияПериода,"ДФ='дд.ММ.гггг'");
					ОбластьСтрокаСтажа.Параметры.Должность 						= ЗаписьПСТЖ.Должность;
					ОбластьСтрокаСтажа.Параметры.ТерриториальныеУсловияКод 		= ЗаписьПСТЖ.ТерриториальныеУсловияКод;
					ОбластьСтрокаСтажа.Параметры.РайонныйКоэффициент			= ЗаписьПСТЖ.РайонныйКоэффициент;
					ОбластьСтрокаСтажа.Параметры.ОсобыеУсловияТрудаКод 			= ЗаписьПСТЖ.ОсобыеУсловияТрудаКод;
					ОбластьСтрокаСтажа.Параметры.КодПозицииСписка 				= ЗаписьПСТЖ.КодПозицииСписка;
					ОбластьСтрокаСтажа.Параметры.ОснованиеИсчисляемогоСтажаКод 	= ЗаписьПСТЖ.ОснованиеИсчисляемогоСтажаКод;
					ОбластьСтрокаСтажа.Параметры.ИсчисляемыйСтажДопСведения 	= СобратьСтрокуИсчисляемогоСтажа(ЗаписьПСТЖ);
					ОбластьСтрокаСтажа.Параметры.ОснованиеВыслугиЛетКод 		= ЗаписьПСТЖ.ОснованиеВыслугиЛетКод;
					ОбластьСтрокаСтажа.Параметры.ВыслугаЛетДопСведения 			= СобратьСтрокуПенсииЗаВыслугуЛет(ЗаписьПСТЖ);
					ВысотаВрСтрокаСтажа = ВысотаСтрокаСтажа;
					Если	СтрДлина(СокрЛП(ЗаписьПСТЖ.Должность))	>	65	тогда
						ВысотаВрСтрокаСтажа	=	ВысотаВрСтрокаСтажа	+	1;
					КонецЕсли;
					
					//Контроль выхода за пределы листа
					Если (ВысотаТаблицы	+	ВысотаВрСтрокаСтажа)	>=	СтрокНаЛисте	тогда
						Если	КолВоЛистов	=	1	тогда
							ДокументРезультат.Область(НомерСтрокиВариантСЗВК,2).Текст	=	"Форма СЗВ-К (начало)";
							ДокументРезультат.Область(НомерСтрокиВариантСЗВК,13).Текст	=	"Лист 1";
						КонецЕсли;
						КолВоЛистов	= КолВоЛистов +	1;
						ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
						// перед тем как выводить стаж,выведем шапку СЗВ-К и шапку стажа
						ОбластьШапка2.Параметры.НомерЛиста = "Лист " + КолВоЛистов;
						ДокументРезультат.Вывести(ОбластьШапка2);
						НомерСтрокиВариантСЗВК = ДокументРезультат.ВысотаТаблицы;
						ДокументРезультат.Вывести(ОбластьШапка3);
						ДокументРезультат.Вывести(ОбластьШапкаПериоды);
						ДокументРезультат.Вывести(ОбластьШапкаДЕЯТ);
						ВысотаТаблицы =	4.5 + ВысотаШапкаДЕЯТ;
					КонецЕсли;	
					
					ДокументРезультат.Вывести(ОбластьСтрокаСтажа);
					ВысотаТаблицы	=	ВысотаТаблицы	+	ВысотаВрСтрокаСтажа;
					
					//Цикл по дополнительным записям о стаже
					Для НомерДополнительнойЗаписи = 1 по  ЗаписьПСТЖ.ЧислоДополнительныхЗаписей цикл
						
						//Читаем запись ПЛГТ
						СтрокаФайла = СтрПолучитьСтроку(ТекстФайла,Н);
						Н= Н + 1;
						ЗаписьПЛГТ = ПроцедурыПерсонифицированогоУчета.ПолучитьСтруктуруЗаписи(ФорматЗаписиПЛГТ);
						СтрОшибка = "";
						Если НЕ ПроцедурыПерсонифицированогоУчета.РазложитьСтрокуВСтруктуруЗаписи(СтрокаФайла,"ПЛГТ",ФорматЗаписиПЛГТ,ЗаписьПЛГТ,СтрОшибка) тогда
							Сообщить("Ошибка в строке файла № "+Н+": "+СтрОшибка);
							Возврат Неопределено;
						КонецЕсли;	
						
						//Выводим запись ПЛГТ
						ОбластьСтрокаСтажа.Параметры.НомерПериода 					= "";
						ОбластьСтрокаСтажа.Параметры.ДатаНачалаПериода 				= "";
						ОбластьСтрокаСтажа.Параметры.ДатаОкончанияПериода 			= "";
						ОбластьСтрокаСтажа.Параметры.Должность 						= ЗаписьПЛГТ.Должность;
						ОбластьСтрокаСтажа.Параметры.ТерриториальныеУсловияКод 		= ЗаписьПЛГТ.ТерриториальныеУсловияКод;
						ОбластьСтрокаСтажа.Параметры.РайонныйКоэффициент			= ЗаписьПЛГТ.РайонныйКоэффициент;
						ОбластьСтрокаСтажа.Параметры.ОсобыеУсловияТрудаКод 			= ЗаписьПЛГТ.ОсобыеУсловияТрудаКод;
						ОбластьСтрокаСтажа.Параметры.КодПозицииСписка 				= ЗаписьПЛГТ.КодПозицииСписка;
						ОбластьСтрокаСтажа.Параметры.ОснованиеИсчисляемогоСтажаКод 	= ЗаписьПЛГТ.ОснованиеИсчисляемогоСтажаКод;
						ОбластьСтрокаСтажа.Параметры.ИсчисляемыйСтажДопСведения 	= СобратьСтрокуИсчисляемогоСтажа(ЗаписьПЛГТ);
						ОбластьСтрокаСтажа.Параметры.ОснованиеВыслугиЛетКод 		= ЗаписьПЛГТ.ОснованиеВыслугиЛетКод;
						ОбластьСтрокаСтажа.Параметры.ВыслугаЛетДопСведения 			= СобратьСтрокуПенсииЗаВыслугуЛет(ЗаписьПЛГТ);
						ВысотаВрСтрокаСтажа = 3;
						Если	СтрДлина(СокрЛП(ЗаписьПЛГТ.Должность))	>	65	тогда
							ВысотаВрСтрокаСтажа	=	ВысотаВрСтрокаСтажа	+	1;
						КонецЕсли;
						
						//Контроль выхода за пределы листа
						Если (ВысотаТаблицы	+	ВысотаВрСтрокаСтажа)	>=	СтрокНаЛисте	тогда
							Если	КолВоЛистов	=	1	тогда
								ДокументРезультат.Область(НомерСтрокиВариантСЗВК,2).Текст	=	"Форма СЗВ-К (начало)";
								ДокументРезультат.Область(НомерСтрокиВариантСЗВК,13).Текст	=	"Лист 1";
							КонецЕсли;
							КолВоЛистов	= КолВоЛистов +	1;
							ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
							// перед тем как выводить стаж,выведем шапку СЗВ-К и шапку стажа
							ОбластьШапка2.Параметры.НомерЛиста = "Лист " + КолВоЛистов;
							ДокументРезультат.Вывести(ОбластьШапка2);
							НомерСтрокиВариантСЗВК = ДокументРезультат.ВысотаТаблицы;
							ДокументРезультат.Вывести(ОбластьШапка3);
							ДокументРезультат.Вывести(ОбластьШапкаПериоды);
							ДокументРезультат.Вывести(ОбластьШапкаДЕЯТ);
							ВысотаТаблицы =	4.5 + ВысотаШапкаДЕЯТ;
						КонецЕсли;	
						
						ДокументРезультат.Вывести(ОбластьСтрокаСтажа);
						ВысотаТаблицы	=	ВысотаТаблицы	+	ВысотаВрСтрокаСтажа;
						
					КонецЦикла;	
					
				КонецЦикла;//Цикл по основным записям о стаже	
				
			КонецЦикла;//Цикл по периодам деятельности работника	
			
			// Вывод подвала с итоговыми записями		
			ВысотаПодвала	= 19 + Макс(ЗаписьКОНВ.ЧислоЗаписейПоТерриториальнымУсловиям-1,0) + Макс(ЗаписьКОНВ.ЧислоЗаписейПоОсобымУсловиямТруда-1,0) + Макс(ЗаписьКОНВ.ЧислоЗаписейПоВыслугеЛет-1,0);
			
			//Контроль выхода за пределы листа
			Если	(ВысотаТаблицы	+	ВысотаПодвала)	>=	СтрокНаЛисте	тогда
				Если	КолВоЛистов	=	1	тогда
					ДокументРезультат.Область(НомерСтрокиВариантСЗВК,2).Текст	=	"Форма СЗВ-К (начало)";
					ДокументРезультат.Область(НомерСтрокиВариантСЗВК,13).Текст	=	"Лист 1";
				КонецЕсли;
				КолВоЛистов	= КолВоЛистов +	1;
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				// перед тем как выводить шапку стажа, выведем шапку СЗВ-К и номер листа
				ОбластьШапка2.Параметры.НомерЛиста = "Лист " + КолВоЛистов;
				ДокументРезультат.Вывести(ОбластьШапка2);
				НомерСтрокиВариантСЗВК = ДокументРезультат.ВысотаТаблицы;
				ДокументРезультат.Вывести(ОбластьШапка3);
				ВысотаТаблицы =	3.5;
			КонецЕсли;
			
			Если КолВоЛистов <> 1 тогда
				ДокументРезультат.Область(НомерСтрокиВариантСЗВК,2).Текст = "Форма СЗВ-К (окончание)";//подвал - последний лист
			КонецЕсли;
			
			//Общий трудовой стаж
			ОбластьШапкаИтогов.Параметры.Лет = ЗаписьКОНВ.ОбщийСтажЛет;
			ОбластьШапкаИтогов.Параметры.Месяцев = ЗаписьКОНВ.ОбщийСтажМесяцев;
			ОбластьШапкаИтогов.Параметры.Дней = ЗаписьКОНВ.ОбщийСтажДней;
			ДокументРезультат.Вывести(ОбластьШапкаИтогов);
			
			//Вывод записей ТЕРР
			Если ЗаписьКОНВ.ЧислоЗаписейПоТерриториальнымУсловиям = 0 тогда
				ОбластьСтрокаТЕРР.Параметры.КодСтажа = "";
				ОбластьСтрокаТЕРР.Параметры.Лет = 0;
				ОбластьСтрокаТЕРР.Параметры.Месяцев = 0;
				ОбластьСтрокаТЕРР.Параметры.Дней = 0;
				ДокументРезультат.Вывести(ОбластьСтрокаТЕРР);
			КонецЕсли;	
			
			Для НомерЗаписиТЕРР = 1 по ЗаписьКОНВ.ЧислоЗаписейПоТерриториальнымУсловиям цикл
				
				//Прочитаем запись ТЕРР
				СтрокаФайла = СтрПолучитьСтроку(ТекстФайла,Н);
				Н= Н + 1;
				ЗаписьТЕРР = ПроцедурыПерсонифицированогоУчета.ПолучитьСтруктуруЗаписи(ФорматЗаписиТЕРР);
				СтрОшибка = "";
				Если НЕ ПроцедурыПерсонифицированогоУчета.РазложитьСтрокуВСтруктуруЗаписи(СтрокаФайла,"ТЕРР",ФорматЗаписиТЕРР,ЗаписьТЕРР,СтрОшибка) тогда
					Сообщить("Ошибка в строке файла № "+Н+": "+СтрОшибка);
					Возврат Неопределено;
				КонецЕсли;	
				
				Если НомерЗаписиТЕРР = 1 тогда
					ОбластьТЕРР = ОбластьСтрокаТЕРР;
				Иначе	
					ОбластьТЕРР = ОбластьСтрокаТЕРР2;
				КонецЕсли;	 
				
				ОбластьТЕРР.Параметры.КодСтажа = ЗаписьТЕРР.ТерриториальныеУсловияКод;
				ОбластьТЕРР.Параметры.Лет = ЗаписьТЕРР.ТерриториальныеУсловияЛет;
				ОбластьТЕРР.Параметры.Месяцев = ЗаписьТЕРР.ТерриториальныеУсловияМесяцев;
				ОбластьТЕРР.Параметры.Дней = ЗаписьТЕРР.ТерриториальныеУсловияДней;
				ДокументРезультат.Вывести(ОбластьТЕРР);
			КонецЦикла;//Цикл по записям ТЕРР	
			
			//Вывод записей ОСОБ
			
			Если ЗаписьКОНВ.ЧислоЗаписейПоОсобымУсловиямТруда = 0 тогда
				ОбластьСтрокаОСОБ.Параметры.КодСтажа = "";
				ОбластьСтрокаОСОБ.Параметры.Лет = 0;
				ОбластьСтрокаОСОБ.Параметры.Месяцев = 0;
				ОбластьСтрокаОСОБ.Параметры.Дней = 0;
				ДокументРезультат.Вывести(ОбластьСтрокаОСОБ);
			КонецЕсли;	
			
			Для НомерЗаписиОСОБ = 1 по ЗаписьКОНВ.ЧислоЗаписейПоОсобымУсловиямТруда цикл
				
				//Прочитаем запись ОСОБ
				СтрокаФайла = СтрПолучитьСтроку(ТекстФайла,Н);
				Н= Н + 1;
				ЗаписьОСОБ = ПроцедурыПерсонифицированогоУчета.ПолучитьСтруктуруЗаписи(ФорматЗаписиОСОБ);
				СтрОшибка = "";
				Если НЕ ПроцедурыПерсонифицированогоУчета.РазложитьСтрокуВСтруктуруЗаписи(СтрокаФайла,"ОСОБ",ФорматЗаписиОСОБ,ЗаписьОСОБ,СтрОшибка) тогда
					Сообщить("Ошибка в строке файла № "+Н+": "+СтрОшибка);
					Возврат Неопределено;
				КонецЕсли;	
				
				Если НомерЗаписиОСОБ = 1 тогда
					ОбластьОСОБ = ОбластьСтрокаОСОБ;
				Иначе	
					ОбластьОСОБ = ОбластьСтрокаОСОБ2;
				КонецЕсли;	 
				
				ОбластьОСОБ.Параметры.КодСтажа = ЗаписьОСОБ.ОсобыеУсловияТрудаКод;
				ОбластьОСОБ.Параметры.Лет = ЗаписьОСОБ.ОсобыеУсловияТрудаЛет;
				ОбластьОСОБ.Параметры.Месяцев = ЗаписьОСОБ.ОсобыеУсловияТрудаМесяцев;
				ОбластьОСОБ.Параметры.Дней = ЗаписьОСОБ.ОсобыеУсловияТрудаДней;
				ДокументРезультат.Вывести(ОбластьОСОБ);
			КонецЦикла;//Цикл по записям ОСОБ	
			
			//Вывод записей ВЫСЛ
			Если ЗаписьКОНВ.ЧислоЗаписейПоВыслугеЛет = 0 тогда
				ОбластьСтрокаВЫСЛ.Параметры.КодСтажа = "";
				ОбластьСтрокаВЫСЛ.Параметры.Лет = 0;
				ОбластьСтрокаВЫСЛ.Параметры.Месяцев = 0;
				ОбластьСтрокаВЫСЛ.Параметры.Дней = 0;
				ДокументРезультат.Вывести(ОбластьСтрокаВЫСЛ);
			КонецЕсли;	
			
			Для НомерЗаписиВЫСЛ = 1 по ЗаписьКОНВ.ЧислоЗаписейПоВыслугеЛет цикл
				
				//Прочитаем запись ВЫСЛ
				СтрокаФайла = СтрПолучитьСтроку(ТекстФайла,Н);
				Н= Н + 1;
				ЗаписьВЫСЛ = ПроцедурыПерсонифицированогоУчета.ПолучитьСтруктуруЗаписи(ФорматЗаписиВЫСЛ);
				СтрОшибка = "";
				Если НЕ ПроцедурыПерсонифицированогоУчета.РазложитьСтрокуВСтруктуруЗаписи(СтрокаФайла,"ВЫСЛ",ФорматЗаписиВЫСЛ,ЗаписьВЫСЛ,СтрОшибка) тогда
					Сообщить("Ошибка в строке файла № "+Н+": "+СтрОшибка);
					Возврат Неопределено;
				КонецЕсли;	
				
				Если НомерЗаписиВЫСЛ = 1 тогда
					ОбластьВЫСЛ = ОбластьСтрокаВЫСЛ;
				Иначе	
					ОбластьВЫСЛ = ОбластьСтрокаВЫСЛ2;
				КонецЕсли;	 
				
				ОбластьВЫСЛ.Параметры.КодСтажа = ЗаписьВЫСЛ.ВыслугаЛетОснованиеКод;
				ОбластьВЫСЛ.Параметры.Лет = ЗаписьВЫСЛ.ВыслугаЛетЛет;
				ОбластьВЫСЛ.Параметры.Месяцев = ЗаписьВЫСЛ.ВыслугаЛетМесяцев;
				ОбластьВЫСЛ.Параметры.Дней = ЗаписьВЫСЛ.ВыслугаЛетДней;
				ДокументРезультат.Вывести(ОбластьВЫСЛ);
			КонецЦикла;//Цикл по записям ОСОБ	
			
			//Выводим подвал
			ОбластьПодвал.Параметры.ТекстНаЛистах = "Сведения представлены на "+ КолВоЛистов+" "+ОбщегоНазначения.ФормаМножественногоЧисла("листе","листах","листах", КолВоЛистов);
			ДокументРезультат.Вывести(ОбластьПодвал);
			
		КонецЦикла;//Цикл по документам файла	
		
		ДокументРезультат.Автомасштаб = Истина;
		РаботаСДиалогами.НапечататьДокумент(ДокументРезультат,1,Ложь,"Сведения о трудовом стаже (форма СЗВ-К)");
		
		//Печать описи документов
		ДокументОписи = Новый ТабличныйДокумент;
		ДокументОписи.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК_АДВ_6";
		ПроцедурыПерсонифицированогоУчета.ВывестиОписьАДВ6(ДокументОписи,ИнформацияОПачке,ОтветственныеЛица);
		Возврат РаботаСДиалогами.НапечататьДокумент(ДокументОписи,1,Ложь,"Опись документов АДВ-6");
	КонецЕсли;

КонецФункции // Печать

#КонецЕсли

// Формирует файл, который можно будет записать на дискетку
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Строка - содержимое файла
//
Функция СформироватьВыходнойФайл(Отказ) Экспорт

	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	//Проверка корректности заполнения документа
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	КоличествоДокументов = ВыборкаПоШапкеДокумента.Количество();
	
	ПроверитьЗаполнениеДокумента(ВыборкаПоШапкеДокумента,Отказ, Заголовок);
	Если Отказ тогда
		Возврат "";
	КонецЕсли;

	//Получим массив ФизЛиц документа 
	Таблица = РаботникиОрганизации.Выгрузить();
	Таблица.Свернуть("ФизЛицо");
	МассивФизЛиц = Таблица.ВыгрузитьКолонку("ФизЛицо");

	//Выполним проверку записей стажа и получим результат запроса к самим записям
	РезультатЗапросаПоЗаписямСтажа = "";
	Если НЕ ПроцедурыПерсонифицированогоУчета.СЗВК_ПроверитьНаборЗаписейОСтаже(Ссылка,МассивФизЛиц, Дата, РезультатЗапросаПоЗаписямСтажа, ВыборкаПоШапкеДокумента) тогда
		Отказ = Истина;
		Возврат "";
	КонецЕсли;

	//Выполним проверку сведений о стаже и получим результат запроса к самим сведениям
	РезультатЗапросаПоИтоговомуСтажу = "";
	Если НЕ ПроцедурыПерсонифицированогоУчета.СЗВК_ПроверитьНаборСведенийДляОценкиПенсионныхПрав(Ссылка,МассивФизЛиц, РезультатЗапросаПоИтоговомуСтажу) тогда
		Отказ = Истина;
		Возврат "";
	КонецЕсли;

	////////////////////////////////////////////////////////////////////////////////////////////
	//ФОРМИРУЕМ ФАЙЛ СВЕДЕНИЙ
	
	ТекстФайла	=	"";
	НомерДокументаВПачке = 0;

	//Формируем заголовок выходного файла
	ДатаЗаполнения 			= ВыборкаПоШапкеДокумента.Дата;
	НомерПачки 				= ПроцедурыПерсонифицированогоУчета.НомерПачкиДокумента(ВыборкаПоШапкеДокумента.Номер);

	ТекстФайла	=	ТекстФайла + ПроцедурыПерсонифицированогоУчета.ПолучитьЗаписьЗаголовок();
	ТекстФайла	=	ТекстФайла + ПроцедурыПерсонифицированогоУчета.ПолучитьЗаписьОРаботодателе(ВыборкаПоШапкеДокумента.Организация, ВыборкаПоШапкеДокумента.Дата, Отказ);
	ТекстФайла	=	ТекстФайла + ПроцедурыПерсонифицированогоУчета.ПолучитьЗаписьОПачке(НомерПачки,ДатаЗаполнения,ВыборкаПоШапкеДокумента.ТипСведений,"",Год(ДатаЗаполнения));
	ТекстФайла	=	ТекстФайла + ПроцедурыПерсонифицированогоУчета.ПолучитьЗаписьОТипеДокумента("КОНВ",КоличествоДокументов);
	Если Отказ тогда
		Возврат "";
	КонецЕсли;

	//Получаем форматы необходимых записей
	ДокументФорматЗаписей = ПолучитьМакет("ФорматЗаписей");
	ФорматЗаписиКОНВ = ПроцедурыПерсонифицированогоУчета.ПолучитьФорматЗаписи("КОНВ",ДокументФорматЗаписей);
	ФорматЗаписиДЕЯТ = ПроцедурыПерсонифицированогоУчета.ПолучитьФорматЗаписи("ДЕЯТ",ДокументФорматЗаписей);
	ФорматЗаписиПСТЖ = ПроцедурыПерсонифицированогоУчета.ПолучитьФорматЗаписи("ПСТЖ",ДокументФорматЗаписей);
	ФорматЗаписиПЛГТ = ПроцедурыПерсонифицированогоУчета.ПолучитьФорматЗаписи("ПЛГТ",ДокументФорматЗаписей);
	ФорматЗаписиТЕРР = ПроцедурыПерсонифицированогоУчета.ПолучитьФорматЗаписи("ТЕРР",ДокументФорматЗаписей);
	ФорматЗаписиОСОБ = ПроцедурыПерсонифицированогоУчета.ПолучитьФорматЗаписи("ОСОБ",ДокументФорматЗаписей);
	ФорматЗаписиВЫСЛ = ПроцедурыПерсонифицированогоУчета.ПолучитьФорматЗаписи("ВЫСЛ",ДокументФорматЗаписей);

	ВыборкаПоРаботникиОрганизации = РезультатЗапросаПоЗаписямСтажа.Выбрать();

	Пока ВыборкаПоРаботникиОрганизации.СледующийПоЗначениюПоля("НомерСтроки") Цикл

		НомерДокументаВПачке = НомерДокументаВПачке + 1;

		//Инициалы должны быть указаны
		Фамилия = ВыборкаПоРаботникиОрганизации.Фамилия;
		Имя = ВыборкаПоРаботникиОрганизации.Имя;
		Отчество = ВыборкаПоРаботникиОрганизации.Отчество;
		Если "" + Фамилия + Имя + Отчество = ""  тогда
			ПроцедурыУправленияПерсоналом.ФамилияИнициалыФизЛица(ВыборкаПоРаботникиОрганизации.ФизЛицоНаименование,Фамилия,Имя,Отчество);
		КонецЕсли;

		//Проверим на наличие необходимых данных
		ЕстьОшибкиВДанныхФизЛица = Ложь;
		ПроверитьДанныеФизлица(ВыборкаПоРаботникиОрганизации, ВыборкаПоШапкеДокумента, Фамилия, Имя, ЕстьОшибкиВДанныхФизЛица, Заголовок);
		Если ЕстьОшибкиВДанныхФизЛица Тогда
			Отказ = Истина;
			Продолжить;
		КонецЕсли;

		Если ВыборкаПоРаботникиОрганизации.НомерПериодаТрудовойДеятельности = NULL тогда
			СтрОшибка = "Строка №"+ВыборкаПоРаботникиОрганизации.НомерСтроки+": Работник "+ВыборкаПоРаботникиОрганизации.ФизЛицо+ " не имеет записей о стаже!";
			ОбщегоНазначения.СообщитьОбОшибке(СтрОшибка, Отказ, Заголовок);
			Продолжить;
		КонецЕсли;

		//Берем запись КОНВ с пустыми полями
		ЗаписьКОНВ = ПроцедурыПерсонифицированогоУчета.ПолучитьСтруктуруЗаписи(ФорматЗаписиКОНВ);
		ЗаписьКОНВ.ТипЗаписи = "КОНВ";
		ЗаписьКОНВ.НомерДокументаВПачке = НомерДокументаВПачке;
		ЗаписьКОНВ.ТипФормы = ВыборкаПоШапкеДокумента.ТипСведений;
		ЗаписьКОНВ.ДатаЗаполнения = ВыборкаПоШапкеДокумента.Дата;

		//Данные по работнику ложим в запись КОНВ
		ЗаписьКОНВ.СтраховойНомер = ВыборкаПоРаботникиОрганизации.СтраховойНомерПФР;

		ЗаписьКОНВ.Фамилия = Фамилия;
		ЗаписьКОНВ.Имя = Имя;
		ЗаписьКОНВ.Отчество = Отчество;

		ЗаписьКОНВ.ТипДатыРождения = "СТАНДАРТ";
		ЗаписьКОНВ.СтандартнаяДатаРождения = ВыборкаПоРаботникиОрганизации.ДатаРождения;
		ЗаписьКОНВ.ТерриториальныеУсловияКод = ВыборкаПоРаботникиОрганизации.ТерриториальныеУсловияНа_31_12_2001Код;
		ЗаписьКОНВ.РайонныйКоэффициент = ВыборкаПоРаботникиОрганизации.РайонныйКоэффициентНа_31_12_2001;

		//Переменные для хранения строк файла сведений по итогам стажа: записи типа  ТЕРР, ОСОБ, ВЫСЛ
		СтрокиЗаписейТЕРР = "";
		СтрокиЗаписейОСОБ = "";
		СтрокиЗаписейВЫСЛ = "";

		ВыборкаПоИтоговомуСтажу = РезультатЗапросаПоИтоговомуСтажу.Выбрать();

		//Из запроса по итогам стажа возьмем данные об общем стаже
		СтруктураПоискаИтоговСтажа = Новый Структура("НомерСтроки");
		СтруктураПоискаИтоговСтажа.НомерСтроки = ВыборкаПоРаботникиОрганизации.НомерСтроки;

		НомерЗаписиТЕРР = 0;
		НомерЗаписиОСОБ = 0;
		НомерЗаписиВЫСЛ = 0;

		Пока ВыборкаПоИтоговомуСтажу.НайтиСледующий(СтруктураПоискаИтоговСтажа) цикл

			Если ВыборкаПоИтоговомуСтажу.ВидСтажа = NULL тогда
				СтрОшибка = "Строка №"+ВыборкаПоИтоговомуСтажу.НомерСтроки + ": Работник " + ВыборкаПоИтоговомуСтажу.ФизЛицо+ " не имеет сведений для оценки пенсионных прав!";
				ОбщегоНазначения.СообщитьОбОшибке(СтрОшибка, Отказ, Заголовок);
				Прервать;
			КонецЕсли;	 
			
			Если ВыборкаПоИтоговомуСтажу.ВидСтажа = Перечисления.ВидыТрудовогоСтажа.ОбщийТрудовойСтаж тогда 

				ЗаписьКОНВ.ОбщийСтажЛет = ВыборкаПоИтоговомуСтажу.Лет;
				ЗаписьКОНВ.ОбщийСтажМесяцев = ВыборкаПоИтоговомуСтажу.Месяцев;
				ЗаписьКОНВ.ОбщийСтажДней = ВыборкаПоИтоговомуСтажу.Дней;

			ИначеЕсли ВыборкаПоИтоговомуСтажу.ВидСтажа = Перечисления.ВидыТрудовогоСтажа.ТерриториальныеУсловия тогда 
                НомерЗаписиТЕРР = НомерЗаписиТЕРР + 1;

				//Формируем запись сведений по территориальным условиям
				ЗаписьТЕРР = ПроцедурыПерсонифицированогоУчета.ПолучитьСтруктуруЗаписи(ФорматЗаписиТЕРР);
				ЗаписьТЕРР.ТипЗаписи = "ТЕРР";
				ЗаписьТЕРР.НомерЗаписи = НомерЗаписиТЕРР;
				ЗаписьТЕРР.ТерриториальныеУсловияКод = ВыборкаПоИтоговомуСтажу.КодСтажа.Код;
				ЗаписьТЕРР.ТерриториальныеУсловияЛет = ВыборкаПоИтоговомуСтажу.Лет;
				ЗаписьТЕРР.ТерриториальныеУсловияМесяцев = ВыборкаПоИтоговомуСтажу.Месяцев;
				ЗаписьТЕРР.ТерриториальныеУсловияДней = ВыборкаПоИтоговомуСтажу.Дней;

				СтрокавФайл = ПроцедурыПерсонифицированогоУчета.ПолучитьСтрокуПоДаннымЗаписи(ЗаписьТЕРР,ФорматЗаписиТЕРР);
				СтрокиЗаписейТЕРР = СтрокиЗаписейТЕРР + СтрокавФайл + Символы.ПС;

			ИначеЕсли ВыборкаПоИтоговомуСтажу.ВидСтажа = Перечисления.ВидыТрудовогоСтажа.ОсобыеУсловияТруда тогда 
                НомерЗаписиОСОБ = НомерЗаписиОСОБ + 1;

				//Формируем запись сведений по территориальным условиям
				ЗаписьОСОБ = ПроцедурыПерсонифицированогоУчета.ПолучитьСтруктуруЗаписи(ФорматЗаписиОСОБ);
				ЗаписьОСОБ.ТипЗаписи = "ОСОБ";
				ЗаписьОСОБ.НомерЗаписи = НомерЗаписиОСОБ;
				ЗаписьОСОБ.ОсобыеУсловияТрудаКод = ВыборкаПоИтоговомуСтажу.КодСтажа.Код;
				ЗаписьОСОБ.ОсобыеУсловияТрудаЛет = ВыборкаПоИтоговомуСтажу.Лет;
				ЗаписьОСОБ.ОсобыеУсловияТрудаМесяцев = ВыборкаПоИтоговомуСтажу.Месяцев;
				ЗаписьОСОБ.ОсобыеУсловияТрудаДней = ВыборкаПоИтоговомуСтажу.Дней;

				СтрокавФайл = ПроцедурыПерсонифицированогоУчета.ПолучитьСтрокуПоДаннымЗаписи(ЗаписьОСОБ,ФорматЗаписиОСОБ);
				СтрокиЗаписейОСОБ = СтрокиЗаписейОСОБ + СтрокавФайл + Символы.ПС;

			ИначеЕсли ВыборкаПоИтоговомуСтажу.ВидСтажа = Перечисления.ВидыТрудовогоСтажа.ВыслугаЛет тогда 
				НомерЗаписиВЫСЛ = НомерЗаписиВЫСЛ + 1;

				//Формируем запись сведений по территориальным условиям
				ЗаписьВЫСЛ = ПроцедурыПерсонифицированогоУчета.ПолучитьСтруктуруЗаписи(ФорматЗаписиВЫСЛ);
				ЗаписьВЫСЛ.ТипЗаписи = "ВЫСЛ";
				ЗаписьВЫСЛ.НомерЗаписи = НомерЗаписиВЫСЛ;
				ЗаписьВЫСЛ.ВыслугаЛетОснованиеКод = ВыборкаПоИтоговомуСтажу.КодСтажа.Код;
				ЗаписьВЫСЛ.ВыслугаЛетЛет = ВыборкаПоИтоговомуСтажу.Лет;
				ЗаписьВЫСЛ.ВыслугаЛетМесяцев = ВыборкаПоИтоговомуСтажу.Месяцев;
				ЗаписьВЫСЛ.ВыслугаЛетДней = ВыборкаПоИтоговомуСтажу.Дней;

				СтрокавФайл = ПроцедурыПерсонифицированогоУчета.ПолучитьСтрокуПоДаннымЗаписи(ЗаписьВЫСЛ,ФорматЗаписиВЫСЛ);
				СтрокиЗаписейВЫСЛ = СтрокиЗаписейВЫСЛ + СтрокавФайл + Символы.ПС;
			КонецЕсли;	
		КонецЦикла;
    	ЗаписьКОНВ.ЧислоЗаписейПоТерриториальнымУсловиям = НомерЗаписиТЕРР;
		ЗаписьКОНВ.ЧислоЗаписейПоОсобымУсловиямТруда = НомерЗаписиОСОБ;
		ЗаписьКОНВ.ЧислоЗаписейПоВыслугеЛет = НомерЗаписиВЫСЛ;

		//Переменная для хранения строк файла сведений по текущему работнику: записи типа ДЕЯТ, ПСТЖ, ПЛГТ 
		СтрокиРаботникаОрганизации = "";

		//Перебор периодов деятельности
		ЧислоЗаписейОПериодахДеятельности = 0;
		Пока ВыборкаПоРаботникиОрганизации.СледующийПоЗначениюПоля("НомерПериодаТрудовойДеятельности") цикл

			ЧислоЗаписейОПериодахДеятельности = ЧислоЗаписейОПериодахДеятельности + 1;
			
			//Берем запись о периоде деятельности с пустыми полями
			ЗаписьДЕЯТ = ПроцедурыПерсонифицированогоУчета.ПолучитьСтруктуруЗаписи(ФорматЗаписиДЕЯТ);
			ЗаписьДЕЯТ.ТипЗаписи = "ДЕЯТ";
			ЗаписьДЕЯТ.НомерЗаписи = ВыборкаПоРаботникиОрганизации.НомерПериодаТрудовойДеятельности;
			ЗаписьДЕЯТ.НаименованиеОрганизации = СтрЗаменить(ВыборкаПоРаботникиОрганизации.ОрганизацияНаименование,"""",""); 
			ЗаписьДЕЯТ.ВидДеятельностиКод = ВыборкаПоРаботникиОрганизации.ВидДеятельностиКод;
			
			//Переменная для хранения строк файла сведений по текущему периоду деятельности работника
			СтрокиСтажПоПериоду = "";
			
         	//Перебор основных записей о стаже
			ЧислоЗаписейОСтаже = 0; 
			Пока ВыборкаПоРаботникиОрганизации.СледующийПоЗначениюПоля("НомерОсновнойЗаписи") цикл

				ЧислоЗаписейОСтаже = ЧислоЗаписейОСтаже + 1; 

				//Берем пустую запись "Основная запись о стаже"
				ЗаписьПСТЖ = ПроцедурыПерсонифицированогоУчета.ПолучитьСтруктуруЗаписи(ФорматЗаписиПСТЖ);
				ЗаписьПСТЖ.ТипЗаписи = "ПСТЖ";
				ЗаписьПСТЖ.НомерПериода = ВыборкаПоРаботникиОрганизации.НомерОсновнойЗаписи;
				ЗаписьПСТЖ.ДатаНачалаПериода = ВыборкаПоРаботникиОрганизации.ДатаНачалаПериода;
				ЗаписьПСТЖ.ДатаОкончанияПериода = ВыборкаПоРаботникиОрганизации.ДатаОкончанияПериода;
				ЗаписьПСТЖ.ОсобыеУсловияТрудаКод = ВыборкаПоРаботникиОрганизации.ОсобыеУсловияТрудаКод;
				ЗаписьПСТЖ.КодПозицииСписка = ВыборкаПоРаботникиОрганизации.КодПозицииСпискаКод;
				ЗаписьПСТЖ.ОснованиеИсчисляемогоСтажаКод = ВыборкаПоРаботникиОрганизации.ОснованиеИсчисляемогоСтажаКод;
				ЗаписьПСТЖ.НулевойПараметрИсчисляемогоСтажа = ВыборкаПоРаботникиОрганизации.НулевойПараметрИсчисляемогоСтажа;
				ЗаписьПСТЖ.ПервыйПараметрИсчисляемогоСтажа = ВыборкаПоРаботникиОрганизации.ПервыйПараметрИсчисляемогоСтажа;
				ЗаписьПСТЖ.ВторойПараметрИсчисляемогоСтажа = ВыборкаПоРаботникиОрганизации.ВторойПараметрИсчисляемогоСтажа;
				ЗаписьПСТЖ.ТретийПараметрИсчисляемогоСтажа = ВыборкаПоРаботникиОрганизации.ТретийПараметрИсчисляемогоСтажа;
				ЗаписьПСТЖ.ОснованиеВыслугиЛетКод = ВыборкаПоРаботникиОрганизации.ОснованиеВыслугиЛетКод;
				ЗаписьПСТЖ.ПервыйПараметрВыслугиЛет = ВыборкаПоРаботникиОрганизации.ПервыйПараметрВыслугиЛет;
				ЗаписьПСТЖ.ВторойПараметрВыслугиЛет = ВыборкаПоРаботникиОрганизации.ВторойПараметрВыслугиЛет;
				ЗаписьПСТЖ.ТретийПараметрВыслугиЛет = ВыборкаПоРаботникиОрганизации.ТретийПараметрВыслугиЛет;
				ЗаписьПСТЖ.ТерриториальныеУсловияКод = ВыборкаПоРаботникиОрганизации.ТерриториальныеУсловияКод;
				ЗаписьПСТЖ.РайонныйКоэффициент = ВыборкаПоРаботникиОрганизации.РайонныйКоэффициент;
				ЗаписьПСТЖ.Должность = ВыборкаПоРаботникиОрганизации.Должность;

				//Переменная для хранения строк с типом записей ПЛГТ
				СтрокиЛьготногоСтажа = "";
				
				//Перебор дополнительных записей о стаже
				ЧислоДополнительныхЗаписей = 0;
				Пока ВыборкаПоРаботникиОрганизации.СледующийПоЗначениюПоля("НомерДополнительнойЗаписи") цикл

					//Проверим на непустую выборку
					Если ВыборкаПоРаботникиОрганизации.НомерДополнительнойЗаписи = NULL тогда
						СтрокаНачалаСообщенияОбОшибке = "Строка № """+ СокрЛП(ВыборкаПоРаботникиОрганизации.НомерСтроки) +""" : Работник "+ ВыборкаПоРаботникиОрганизации.ФизЛицо;
						ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + " - Не имеет сведений о стаже!", Отказ);
						Возврат "";
					КонецЕсли;	

					//В дополнительной записи с номером 0 находится информация об основной записи
					Если ВыборкаПоРаботникиОрганизации.НомерДополнительнойЗаписи <> 0 тогда

						ЧислоДополнительныхЗаписей = ЧислоДополнительныхЗаписей + 1;

						//Берем пустую запись "Запись о льготном стаже"
						ЗаписьПЛГТ = ПроцедурыПерсонифицированогоУчета.ПолучитьСтруктуруЗаписи(ФорматЗаписиПЛГТ);
						ЗаписьПЛГТ.ТипЗаписи = "ПЛГТ";
						ЗаписьПЛГТ.НомерПериода = ВыборкаПоРаботникиОрганизации.НомерДополнительнойЗаписи;
						ЗаписьПЛГТ.ОсобыеУсловияТрудаКод = ВыборкаПоРаботникиОрганизации.ОсобыеУсловияТрудаКод;
						ЗаписьПЛГТ.КодПозицииСписка = ВыборкаПоРаботникиОрганизации.КодПозицииСпискаКод;
						ЗаписьПЛГТ.ОснованиеИсчисляемогоСтажаКод = ВыборкаПоРаботникиОрганизации.ОснованиеИсчисляемогоСтажаКод;
						ЗаписьПЛГТ.НулевойПараметрИсчисляемогоСтажа = ВыборкаПоРаботникиОрганизации.НулевойПараметрИсчисляемогоСтажа;
						ЗаписьПЛГТ.ПервыйПараметрИсчисляемогоСтажа = ВыборкаПоРаботникиОрганизации.ПервыйПараметрИсчисляемогоСтажа;
						ЗаписьПЛГТ.ВторойПараметрИсчисляемогоСтажа = ВыборкаПоРаботникиОрганизации.ВторойПараметрИсчисляемогоСтажа;
						ЗаписьПЛГТ.ТретийПараметрИсчисляемогоСтажа = ВыборкаПоРаботникиОрганизации.ТретийПараметрИсчисляемогоСтажа;
						ЗаписьПЛГТ.ОснованиеВыслугиЛетКод = ВыборкаПоРаботникиОрганизации.ОснованиеВыслугиЛетКод;
                		ЗаписьПЛГТ.ПервыйПараметрВыслугиЛет = ВыборкаПоРаботникиОрганизации.ПервыйПараметрВыслугиЛет;
                		ЗаписьПЛГТ.ВторойПараметрВыслугиЛет = ВыборкаПоРаботникиОрганизации.ВторойПараметрВыслугиЛет;
                		ЗаписьПЛГТ.ТретийПараметрВыслугиЛет = ВыборкаПоРаботникиОрганизации.ТретийПараметрВыслугиЛет;
                		ЗаписьПЛГТ.ТерриториальныеУсловияКод = ВыборкаПоРаботникиОрганизации.ТерриториальныеУсловияКод;
                		ЗаписьПЛГТ.РайонныйКоэффициент = ВыборкаПоРаботникиОрганизации.РайонныйКоэффициент;
                		ЗаписьПЛГТ.Должность = ВыборкаПоРаботникиОрганизации.Должность;

						//Сохраним запись ПЛГТ
						СтрокавФайл = ПроцедурыПерсонифицированогоУчета.ПолучитьСтрокуПоДаннымЗаписи(ЗаписьПЛГТ,ФорматЗаписиПЛГТ);
						СтрокиЛьготногоСтажа = СтрокиЛьготногоСтажа + СтрокавФайл + Символы.ПС;
					КонецЕсли;
					
				КонецЦикла;//Перебор дополнительных записей о стаже	

				ЗаписьПСТЖ.ЧислоДополнительныхЗаписей = ЧислоДополнительныхЗаписей;

				//Сохраним запись ПСТЖ
				СтрокавФайл = ПроцедурыПерсонифицированогоУчета.ПолучитьСтрокуПоДаннымЗаписи(ЗаписьПСТЖ,ФорматЗаписиПСТЖ);
				СтрокиСтажПоПериоду  = СтрокиСтажПоПериоду + СтрокавФайл + Символы.ПС;

				//Добавим записи ПЛГТ
				СтрокиСтажПоПериоду  = СтрокиСтажПоПериоду + ВРЕГ(СтрокиЛьготногоСтажа);

			КонецЦикла;//Перебор основных записей о стаже	

			ЗаписьДЕЯТ.ЧислоЗаписейОСтаже = ЧислоЗаписейОСтаже;

			//Сохраняем очередную запись ДЕЯТ по текущему работнику 
         	СтрокавФайл = ПроцедурыПерсонифицированогоУчета.ПолучитьСтрокуПоДаннымЗаписи(ЗаписьДЕЯТ,ФорматЗаписиДЕЯТ);
			СтрокиРаботникаОрганизации = СтрокиРаботникаОрганизации + СтрокавФайл + Символы.ПС;

			//Сохраняем записи ПСТЖ, ПЛГТ, относящиеся к очередному периоду деяетльности
			СтрокиРаботникаОрганизации	=	СтрокиРаботникаОрганизации	+ СтрокиСтажПоПериоду;

		КонецЦикла;//Перебор периодов деятельности

		ЗаписьКОНВ.ЧислоЗаписейОПериодахДеятельности = ЧислоЗаписейОПериодахДеятельности;

		//Добавляем в файл запись КОНВ по текущему работнику 
		СтрокавФайл = ПроцедурыПерсонифицированогоУчета.ПолучитьСтрокуПоДаннымЗаписи(ЗаписьКОНВ,ФорматЗаписиКОНВ);
		ТекстФайла	=	ТекстФайла	+	ВРег(СтрокавФайл) + Символы.ПС;

		//Добавляем в файл записи ДЕЯТ,ПСТЖ,ПЛГТ,ТЕРР,ОСОБ,ВЫСЛ
		СтрокавФайл = ПроцедурыПерсонифицированогоУчета.ПолучитьСтрокуПоДаннымЗаписи(ЗаписьКОНВ,ФорматЗаписиКОНВ);
		ТекстФайла	=	ТекстФайла	+	ВРег(СтрокиРаботникаОрганизации) + ВРег(СтрокиЗаписейТЕРР)+ ВРег(СтрокиЗаписейОСОБ)+ ВРег(СтрокиЗаписейВЫСЛ);
	КонецЦикла; 
	
	Возврат ТекстФайла;
КонецФункции 

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("ПечатьФайла","СЗВ-К");

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)

	//При проведении файл формируем заново 
	ТекстФайла = СформироватьВыходнойФайл(Отказ);
	Если Отказ тогда
		Возврат;
	КонецЕсли;	 

	//Сохраним сформированный файл сведений в регистре сведений
	Запись = Движения.АрхивДанныхРегламентированнойОтчетности.Добавить();
	Запись.Объект = Ссылка;
	Запись.ОписаниеДанных = "Файл-пачка форм СЗВ-К";
	Запись.Данные = ТекстФайла; 

КонецПроцедуры	

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(РаботникиОрганизации,, "Физлицо");
	
КонецПроцедуры
