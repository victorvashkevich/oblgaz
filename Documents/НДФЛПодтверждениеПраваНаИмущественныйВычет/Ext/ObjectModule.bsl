////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура Автозаполнение() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоГода(НачалоГода(Дата(НалоговыйПериод,01,01)) - 1));
	Запрос.УстановитьПараметр("ОкончаниеПериода", НачалоГода(Дата(НалоговыйПериод,01,01)) - 1 );
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(Дата(НалоговыйПериод,01,01)));
    Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&НачалоГода КАК ДатаСобытия,
	|	НДФЛИмущественныеВычетыФизлицОбороты.РазмерОборот КАК Расходы,
	|	НДФЛИмущественныеВычетыФизлицОбороты.КодВычетаИмущественный КАК КодВычета,
	|	НДФЛИмущественныеВычетыФизлицОбороты.ФизЛицо
	|ИЗ
	|	РегистрНакопления.НДФЛИмущественныеВычетыФизлиц.Обороты(&НачалоПериода, &ОкончаниеПериода, Год, Организация = &ГоловнаяОрганизация) КАК НДФЛИмущественныеВычетыФизлицОбороты";
	
	РаботникиОрганизации.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА


// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.УстановитьПараметр("ПустаяОрганизация" , Справочники.Организации.ПустаяСсылка());

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДФЛПодтверждениеПраваНаИмущественныйВычет.Дата,
	|	НДФЛПодтверждениеПраваНаИмущественныйВычет.Ссылка,
	|	НДФЛПодтверждениеПраваНаИмущественныйВычет.Организация,
	|	НДФЛПодтверждениеПраваНаИмущественныйВычет.НалоговыйПериод,
	|	НДФЛПодтверждениеПраваНаИмущественныйВычет.Ответственный,
	|	ВЫБОР
	|		КОГДА НДФЛПодтверждениеПраваНаИмущественныйВычет.Организация.ГоловнаяОрганизация = &ПустаяОрганизация
	|			ТОГДА НДФЛПодтверждениеПраваНаИмущественныйВычет.Организация
	|		ИНАЧЕ НДФЛПодтверждениеПраваНаИмущественныйВычет.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация
	|ИЗ
	|	Документ.НДФЛПодтверждениеПраваНаИмущественныйВычет КАК НДФЛПодтверждениеПраваНаИмущественныйВычет
	|ГДЕ
	|	НДФЛПодтверждениеПраваНаИмущественныйВычет.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по табличной части документам
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоРаботникиОрганизации(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЧРаботникиОрганизации.НомерСтроки,
	|	ТЧРаботникиОрганизации.ФизЛицо,
   //Минск н
   |	ТЧРаботникиОрганизации.КодВычета, 
   //Минск к
	|	ТЧРаботникиОрганизации.Расходы,
	|	ТЧРаботникиОрганизации.ПроцентыПоКредитам,
	|	ТЧРаботникиОрганизации.ДатаСобытия
	|ИЗ
	|	Документ.НДФЛПодтверждениеПраваНаИмущественныйВычет.РаботникиОрганизации КАК ТЧРаботникиОрганизации
	|ГДЕ
	|	ТЧРаботникиОрганизации.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизтов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 		 - флаг отказа в проведении,
//	Заголовок	 - Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана организация!", Отказ, Заголовок);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.НалоговыйПериод) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указан налоговый период, к доходам которого относится вычет!", Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения строки документа.
Процедура ПроверитьЗаполнениеСтрокиРаботникаОрганизации(ВыборкаПоРаботникиОрганизации, Отказ, Заголовок)

	НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоРаботникиОрганизации.НомерСтроки) +
						""" табл. части ""Работники организации"": ";
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.ФизЛицо) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указано физическое лицо!", Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.ДатаСобытия) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указана дата получения права на вычет!", Отказ, Заголовок);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.КодВычета) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указан код вычета!", Отказ, Заголовок);
	КонецЕсли;
	
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// По строке выборки результата запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоШапкеДокумента                  - выборка из результата запроса по шапке документа
//  СтруктураПроведенияПоРегистрамНакопления - структура, содержащая имена регистров 
//                                             накопления по которым надо проводить документ
//  СтруктураПараметров                      - структура параметров проведения.
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоРаботникиОрганизации, ВыборкаПоШапкеДокумента)
	
	Если ВыборкаПоРаботникиОрганизации.Расходы <> 0 Тогда
		
		Движение = Движения.НДФЛИмущественныеВычетыФизлиц.Добавить();
		// Свойства
		Движение.Период                 		= ВыборкаПоРаботникиОрганизации.ДатаСобытия;
		Движение.ВидДвижения					= ВидДвиженияНакопления.Приход;
		// Измерения
		Движение.ФизЛицо                		= ВыборкаПоРаботникиОрганизации.ФизЛицо;
		Движение.Организация               		= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
		Движение.Год		               		= ВыборкаПоШапкеДокумента.НалоговыйПериод;
		//vvv
		Движение.ПериодРегистрации         		= НачалоМесяца(ВыборкаПоШапкеДокумента.Дата);
		Движение.Период         				= НачалоМесяца(ВыборкаПоШапкеДокумента.Дата);
		Движение.МесяцНалоговогоПериода			= НачалоМесяца(ВыборкаПоРаботникиОрганизации.ДатаСобытия);
		Движение.ОбособленноеПодразделение  	= ВыборкаПоШапкеДокумента.Организация;
		//
		Движение.КодВычетаИмущественный         = ВыборкаПоРаботникиОрганизации.КодВычета;
		// Ресурсы
		Движение.Размер							= ВыборкаПоРаботникиОрганизации.Расходы; 

	КонецЕсли;

КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамНакопления


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	
 	//структура, содержащая имена регистров накопления по которым надо проводить документ
	Перем СтруктураПроведенияПоРегистрамНакопления;
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Режим);

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);

		// Движения стоит добавлять, если в проведении еще не отказано (отказ = ложь)
		Если НЕ Отказ Тогда

	// получим реквизиты табличной части
	РезультатЗапросаПоРаботники = СформироватьЗапросПоРаботникиОрганизации(Режим);
	ВыборкаПоРаботникиОрганизации = РезультатЗапросаПоРаботники.Выбрать();
	
	Пока ВыборкаПоРаботникиОрганизации.Следующий() Цикл 
		
		// проверим очередную строку табличной части
		ПроверитьЗаполнениеСтрокиРаботникаОрганизации(ВыборкаПоРаботникиОрганизации, Отказ, Заголовок);
		
		// Заполним записи в наборах записей регистров
		ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоРаботникиОрганизации, ВыборкаПоШапкеДокумента);
		
	КонецЦикла;
	
	КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(РаботникиОрганизации,, "Физлицо");
	
КонецПроцедуры
