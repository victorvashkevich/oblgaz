Перем мПрежнееОтражатьВУправленческомУчете;
Перем мУдалятьДвижения;

#Если Клиент Тогда
	
 // Определяет коды счетов дебета и кредита для вывода в печатную форму.
//
Функция ОпределитьКодыСчетСубсчет() 
	
	КодыСчетов=Новый Структура("Дебет,Кредит");
	
	// Определяем код счета кредита
	КодыСчетов.Кредит = ПланыСчетов.Хозрасчетный.КассаОрганизации.Код;
	
	//Определяем коды счетов дебета
	СтрокаДебет="";
	Запрос = Новый Запрос;
	Если ВидОперации = Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыРаботнику Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ЗарплатаКВыплатеОрганизацииЗарплата.Сумма) КАК Сумма,
		|	СУММА(ЗарплатаКВыплатеОрганизацииЗарплата.КомпенсацияЗаЗадержкуЗарплаты) КАК КомпенсацияЗаЗадержкуЗарплаты
		|ИЗ
		|	Документ.ЗарплатаКВыплатеОрганизаций.Зарплата КАК ЗарплатаКВыплатеОрганизацииЗарплата
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям КАК РанееВыплаченныеСуммы
		|		ПО ЗарплатаКВыплатеОрганизацииЗарплата.Ссылка = РанееВыплаченныеСуммы.Ведомость
		|			И ЗарплатаКВыплатеОрганизацииЗарплата.Физлицо = РанееВыплаченныеСуммы.Физлицо
		|			И (РанееВыплаченныеСуммы.Регистратор <> &Ссылка)
		|ГДЕ
		|	ЗарплатаКВыплатеОрганизацииЗарплата.ВыплаченностьЗарплаты = &Выплачено
		|	И ЗарплатаКВыплатеОрганизацииЗарплата.Ссылка = &парамПлатВедомость
		|	И ЗарплатаКВыплатеОрганизацииЗарплата.Физлицо = &парамКонтрагент
		|	И РанееВыплаченныеСуммы.Физлицо ЕСТЬ NULL ";
		Запрос.УстановитьПараметр("парамПлатВедомость",			ПлатежнаяВедомость);
		Запрос.УстановитьПараметр("парамКонтрагент",			Контрагент);
	Иначе	
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ЗарплатаКВыплатеОрганизацииЗарплата.Сумма) КАК Сумма,
		|	СУММА(ЗарплатаКВыплатеОрганизацииЗарплата.КомпенсацияЗаЗадержкуЗарплаты) КАК КомпенсацияЗаЗадержкуЗарплаты
		|ИЗ
		|	Документ.РасходныйКассовыйОрдер.ВыплатаЗаработнойПлаты КАК РасходныйКассовыйОрдерВыплатаЗаработнойПлаты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗарплатаКВыплатеОрганизаций.Зарплата КАК ЗарплатаКВыплатеОрганизацииЗарплата
		|		ПО РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ведомость = ЗарплатаКВыплатеОрганизацииЗарплата.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям КАК РанееВыплаченныеСуммы
		|		ПО РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ведомость = РанееВыплаченныеСуммы.Ведомость
		|			И ЗарплатаКВыплатеОрганизацииЗарплата.Физлицо = РанееВыплаченныеСуммы.Физлицо
		|			И (РанееВыплаченныеСуммы.Регистратор <> &Ссылка)
		|ГДЕ
		|	ЗарплатаКВыплатеОрганизацииЗарплата.ВыплаченностьЗарплаты = &Выплачено
		|	И РанееВыплаченныеСуммы.Физлицо ЕСТЬ NULL 
		|	И РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ссылка = &Ссылка";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("Выплачено",Перечисления.ВыплаченностьЗарплаты.Выплачено);
	
	ВыборкаСумм = Запрос.Выполнить().Выбрать();
	Если ВыборкаСумм.Следующий() Тогда
		Если ЗначениеЗаполнено(ВыборкаСумм.Сумма) Тогда
			СтрокаДебет=СтрокаДебет + ", " + ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда.Код;
		КонецЕсли;
		Если ЗначениеЗаполнено(ВыборкаСумм.КомпенсацияЗаЗадержкуЗарплаты) Тогда
			СтрокаДебет=СтрокаДебет + ", " + ПланыСчетов.Хозрасчетный.ПрочиеРасходы.Код;
		КонецЕсли;
	КонецЕсли;
	КодыСчетов.Дебет = Сред(СтрокаДебет,2);
	
	Возврат КодыСчетов;
	
КонецФункции // ОпределитьКодыСчетСубсчет()
	
// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьРКО()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасходныйКассовыйОрдер.Номер,
	|	РасходныйКассовыйОрдер.Дата КАК ДатаДокумента,
	|	РасходныйКассовыйОрдер.Организация,
	|	РасходныйКассовыйОрдер.Организация КАК ЮрФизЛицо,
	|	РасходныйКассовыйОрдер.Организация КАК Руководители,
	|	РасходныйКассовыйОрдер.Выдать,
	|	РасходныйКассовыйОрдер.Основание,
	|	РасходныйКассовыйОрдер.Приложение,
	|	РасходныйКассовыйОрдер.ПоДокументу,
	|	ЕСТЬNULL(ВложенныйЗапрос.Сумма, 0) КАК Сумма
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер";
	Если ВидОперации = Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыРаботнику Тогда
		Запрос.УстановитьПараметр("парамПлатВедомость", ПлатежнаяВедомость);
		Запрос.УстановитьПараметр("парамФизлицо", Контрагент);
		Запрос.Текст = Запрос.Текст + "
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СУММА(ЗарплатаКВыплатеОрганизацийЗарплата.Сумма + ЗарплатаКВыплатеОрганизацийЗарплата.КомпенсацияЗаЗадержкуЗарплаты) КАК Сумма,
		|			ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка
		|		ИЗ
		|			Документ.ЗарплатаКВыплатеОрганизаций.Зарплата КАК ЗарплатаКВыплатеОрганизацийЗарплата
		|		ГДЕ
		|			ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка = &парамПлатВедомость
		|			И ЗарплатаКВыплатеОрганизацийЗарплата.Физлицо = &парамФизлицо
		|
		|		СГРУППИРОВАТЬ ПО
		|			ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка) КАК ВложенныйЗапрос
		|		ПО РасходныйКассовыйОрдер.ПлатежнаяВедомость = ВложенныйЗапрос.Ссылка
		|
		|ГДЕ
		|	РасходныйКассовыйОрдер.Ссылка = &ТекущийДокумент";			
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыПоВедомостям Тогда
		Запрос.Текст = Запрос.Текст + "
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СУММА(РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.СуммаКВыплате) КАК Сумма,
		|			РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ссылка КАК Ссылка
		|		ИЗ
		|			Документ.РасходныйКассовыйОрдер.ВыплатаЗаработнойПлаты КАК РасходныйКассовыйОрдерВыплатаЗаработнойПлаты
		|		
		|		ГДЕ
		|			РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ссылка = &ТекущийДокумент
		|		СГРУППИРОВАТЬ ПО
		|			РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ссылка) КАК ВложенныйЗапрос
		|		ПО РасходныйКассовыйОрдер.Ссылка = ВложенныйЗапрос.Ссылка
		|
		|ГДЕ
		|	РасходныйКассовыйОрдер.Ссылка = &ТекущийДокумент";		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРКО.ВыплатаДепонентов Тогда
		Запрос.Текст = Запрос.Текст + "
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СУММА(ВыплатаДепонентов.СуммаКВыплате) КАК Сумма,
		|			ВыплатаДепонентов.Ссылка КАК Ссылка
		|		ИЗ
		|			Документ.РасходныйКассовыйОрдер.ВыплатаДепонентов КАК ВыплатаДепонентов
		|		
		|		ГДЕ
		|			ВыплатаДепонентов.Ссылка = &ТекущийДокумент
		|		СГРУППИРОВАТЬ ПО
		|			ВыплатаДепонентов.Ссылка) КАК ВложенныйЗапрос
		|		ПО РасходныйКассовыйОрдер.Ссылка = ВложенныйЗапрос.Ссылка
		|
		|ГДЕ
		|	РасходныйКассовыйОрдер.Ссылка = &ТекущийДокумент";
	Иначе
		Возврат Новый ТабличныйДокумент;
	КонецЕсли;
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	ТабДокумент   = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасходныйКассовыйОрдер_КО2";
	Макет         = ПолучитьОбщийМакет("КО2_РБ2016");
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаДокумента);
	
	// Выводим шапку накладной
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеОрганизации	= ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
	ОбластьМакета.Параметры.Сумма		    			= Формат(Шапка.Сумма,"ЧЦ=15; ЧДЦ=2")+" ";
	
	СуммаПрописью	= РаботаСДиалогами.СформироватьСуммуПрописью(Шапка.Сумма, ?(ОтражатьВБухгалтерскомУчете,Константы.ВалютаРегламентированногоУчета.Получить(),Константы.ВалютаУправленческогоУчета.Получить()));
	
	СуммаПрописьюКоп    = "";
	СуммаПрописьюРублей = ""; 
	СуммаПрописьюРублей = Лев(СуммаПрописью, Найти(СуммаПрописью, "бел") - 2);
	
	Если Шапка.Сумма = ЦЕЛ(Шапка.Сумма) Тогда
		СуммаПрописьюКоп = "00";
	Иначе
		СуммаПрописьюКоп = (Шапка.Сумма - ЦЕЛ(Шапка.Сумма)) * 100;
	КонецЕсли;
	
	ОбластьМакета.Параметры.СуммаПрописью		= СуммаПрописьюРублей;
	ОбластьМакета.Параметры.СуммаПрописьюКоп    = СуммаПрописьюКоп;	
	ОбластьМакета.Параметры.ДатаДокумента				= Формат(Шапка.ДатаДокумента, "ДФ=dd.MM.yyyy");
	ОбластьМакета.Параметры.НомерДокумента				= РаботаСДиалогами.ПолучитьНомерНаПечать(Шапка);
	
	КодыСчетСубсчет=ОпределитьКодыСчетСубсчет();
	
	ОбластьМакета.Параметры.ДебетСубСчет				=КодыСчетСубсчет.Дебет;
	//ОбластьМакета.Параметры.КредитСубСчет				=КодыСчетСубсчет.Кредит;

	Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Шапка.Руководители, КонецДня(Шапка.ДатаДокумента),);
	Руководитель = Руководители.Руководитель;
	РуководительДолжность = Руководители.РуководительДолжность;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;
	Кассир       = Руководители.Кассир;

	ОбластьМакета.Параметры.ФИОРуководителя				= Руководитель;
	//ОбластьМакета.Параметры.ДолжностьРуководителя		= РуководительДолжность;

	ОбластьМакета.Параметры.ФИОГлавногоБухгалтера		= Бухгалтер;
	ОбластьМакета.Параметры.ФИОКассира					= Кассир;

	ОбластьМакета.Параметры.Основание					= Шапка.Основание;
	ОбластьМакета.Параметры.Приложение					= Шапка.Приложение;
	
	ТекстВыдать=Шапка.Выдать;
	ТекстПоДокументу=Шапка.ПоДокументу;
		
	ОбластьМакета.Параметры.ФИОПолучателя				= ТекстВыдать;
	ОбластьМакета.Параметры.РеквизитыДокументаУдостоверяющегоЛичность = СокрЛП(ТекстПоДокументу);

	ТабДокумент.Вывести(ОбластьМакета);

	Возврат ТабДокумент;

КонецФункции // ПечатьРКО()

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	// Получить экземпляр документа на печать
	Возврат РаботаСДиалогами.НапечататьДокумент(ПечатьРКО(), КоличествоЭкземпляров, НаПринтер, РаботаСДиалогами.СформироватьЗаголовокДокумента(ЭтотОбъект, "Выплата зарплаты"));

КонецФункции // Печать

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("РКО","Расходный кассовый ордер");

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Выполняет автоматическое заполнение документа 
// 
// Параметры: 
//  нет
//
// Возвращаемое значение:
//  нет
//
Процедура АвтозаполнениеДепонентов(ОтборПоРаботникам = Неопределено) Экспорт

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Физлица",			ОтборПоРаботникам);
	Запрос.УстановитьПараметр("Организация",		Организация);
	Запрос.УстановитьПараметр("Дата",				?(ЭтоНовый(),КонецДня(Дата),Дата));
	
	ОтборПоРаботникамТекст = ?(ОтборПоРаботникам = Неопределено,"","И Физлицо В (&Физлица)");
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВзаиморасчетыСДепонентамиОрганизацийОстатки.Физлицо КАК Физлицо,
	|	ВзаиморасчетыСДепонентамиОрганизацийОстатки.Ведомость КАК Ведомость,
	|	ВзаиморасчетыСДепонентамиОрганизацийОстатки.Организация КАК Организация,
	|	ВзаиморасчетыСДепонентамиОрганизацийОстатки.СуммаОстаток КАК СуммаКВыплате
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСДепонентамиОрганизаций.Остатки(&Дата, Организация = &Организация
	|				" + ОтборПоРаботникамТекст + ") КАК ВзаиморасчетыСДепонентамиОрганизацийОстатки
	|ГДЕ
	|	ВзаиморасчетыСДепонентамиОрганизацийОстатки.СуммаОстаток > 0";
	
	ВыплатаДепонентов.Загрузить(Запрос.Выполнить().Выгрузить());
	СуммаДокумента = ВыплатаДепонентов.Итог("СуммаКВыплате");
	
КонецПроцедуры //  Автозаполнение

// Выполняет автоматическое заполнение документа 
// 
// Параметры: 
//  нет
//
// Возвращаемое значение:
//  нет
//
Процедура АвтозаполнениеПлатежныхВедомостей() Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Дата",?(ЭтоНовый(),КонецДня(Дата),Дата));
	
	Если ОтражатьВБухгалтерскомУчете Тогда
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЗарплатаКВыплатеОрганизацииЗарплата.Ссылка КАК Ведомость,
		|	СУММА(ЗарплатаКВыплатеОрганизацииЗарплата.Сумма + ЗарплатаКВыплатеОрганизацииЗарплата.КомпенсацияЗаЗадержкуЗарплаты) КАК СуммаКВыплате
		|ИЗ
		|	Документ.ЗарплатаКВыплатеОрганизаций.Зарплата КАК ЗарплатаКВыплатеОрганизацииЗарплата
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям КАК РанееВыплаченныеСуммы
		|		ПО ЗарплатаКВыплатеОрганизацииЗарплата.Ссылка = РанееВыплаченныеСуммы.Ведомость
		|			И ЗарплатаКВыплатеОрганизацииЗарплата.Физлицо = РанееВыплаченныеСуммы.Физлицо
		|			И (РанееВыплаченныеСуммы.Регистратор <> &Регистратор)
		|ГДЕ
		|	(НЕ ЗарплатаКВыплатеОрганизацииЗарплата.Ссылка В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ЗарплатаКВыплатеОрганизацииЗарплата.Ссылка
		|				ИЗ
		|					Документ.ЗарплатаКВыплатеОрганизаций.Зарплата КАК ЗарплатаКВыплатеОрганизацииЗарплата
		|				ГДЕ
		|					ЗарплатаКВыплатеОрганизацииЗарплата.Ссылка.СпособВыплаты = &ЧерезКассу
		|					И ЗарплатаКВыплатеОрганизацииЗарплата.ВыплаченностьЗарплаты = &НеВыплачено
		|					И ЗарплатаКВыплатеОрганизацииЗарплата.Ссылка.Организация = &Организация))
		|	И ЗарплатаКВыплатеОрганизацииЗарплата.Ссылка.Организация = &Организация
		|	И ЗарплатаКВыплатеОрганизацииЗарплата.Ссылка.СпособВыплаты = &ЧерезКассу
		|	И ЗарплатаКВыплатеОрганизацииЗарплата.ВыплаченностьЗарплаты = &Выплачено
		|	И ЗарплатаКВыплатеОрганизацииЗарплата.Ссылка.Дата <= &Дата
		|	И РанееВыплаченныеСуммы.Физлицо ЕСТЬ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗарплатаКВыплатеОрганизацииЗарплата.Ссылка";
		
		Запрос.УстановитьПараметр("ЧерезКассу",Перечисления.СпособыВыплатыЗарплаты.ЧерезКассу);
		Запрос.УстановитьПараметр("Выплачено",Перечисления.ВыплаченностьЗарплаты.Выплачено);
		Запрос.УстановитьПараметр("НеВыплачено",Перечисления.ВыплаченностьЗарплаты.НеВыплачено);
		Запрос.УстановитьПараметр("Организация",Организация);
		Запрос.УстановитьПараметр("Регистратор", Ссылка);
		Запрос.УстановитьПараметр("Дата",?(ЭтоНовый(),КонецДня(Дата),Дата));
		
	Иначе

		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗарплатаКВыплате.Ссылка КАК Ведомость,
		|	СУММА(ЗарплатаКВыплате.Сумма) КАК СуммаКВыплате
		|ИЗ
		|	Документ.ЗарплатаКВыплате.Зарплата КАК ЗарплатаКВыплате
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйКассовыйОрдер.ВыплатаЗаработнойПлаты КАК РасходныйКассовыйОрдерВыплатаЗаработнойПлаты
		|		ПО РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ведомость = ЗарплатаКВыплате.Ссылка
		|ГДЕ
		|	ЗарплатаКВыплате.Ссылка.Дата <= &Дата
		|	И РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.НомерСтроки ЕСТЬ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗарплатаКВыплате.Ссылка";
		
	КонецЕсли;
	
	ВыплатаЗаработнойПлаты.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры //  АвтозаполнениеПлатежныхВедомостей

// Заполняет по данным переданного физлица поля Выдать и По документу
//
// Параметры
//   СсылкаРаботник - СправочникСсылка.ФизическиеЛица, работник которому выдают з/пл
//                 или кассир-раздатчик
//
Процедура ЗаполнитьПоляВыдатьПоДокументу(СсылкаРаботник) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", СсылкаРаботник);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество,
	|	ФизическиеЛица.Наименование КАК ФИО,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументВид,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументСерия,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументНомер,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументДатаВыдачи,
	|	ВЫРАЗИТЬ(ПаспортныеДанныеФизЛицСрезПоследних.ДокументКемВыдан КАК СТРОКА(300)) КАК ДокументКемВыдан,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументКодПодразделения
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ФизЛицо = &Ссылка) КАК ФИОФизЛицСрезПоследних
	|		ПО ФизическиеЛица.Ссылка = ФИОФизЛицСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(&Дата, ФизЛицо = &Ссылка) КАК ПаспортныеДанныеФизЛицСрезПоследних
	|		ПО ФизическиеЛица.Ссылка = ПаспортныеДанныеФизЛицСрезПоследних.ФизЛицо
	|ГДЕ
	|	ФизическиеЛица.Ссылка = &Ссылка";

	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		СообщениеОбОшибке = "";
		
		Если Не (ПустаяСтрока(Выборка.Фамилия) И ПустаяСтрока(Выборка.Имя) И ПустаяСтрока(Выборка.Отчество)) Тогда
			Если Не ПроцедурыУправленияПерсоналом.ПросклонятьФамилиюИмяОтчество(глЗначениеПеременной("глКомпонентаСклоненияФИО"), Выборка.Фамилия, Выборка.Имя, Выборка.Отчество, 3,, Выдать, СообщениеОбОшибке) Тогда
				ОбщегоНазначения.СообщитьОбОшибке(СообщениеОбОшибке);
			КонецЕсли;
			
		Иначе
			Если Не ПроцедурыУправленияПерсоналом.ПросклонятьФИО(глЗначениеПеременной("глКомпонентаСклоненияФИО"), Выборка.ФИО, 3,, Выдать, СообщениеОбОшибке) Тогда
				ОбщегоНазначения.СообщитьОбОшибке(СообщениеОбОшибке);
			КонецЕсли;
			
		КонецЕсли;
		
		Если Выборка.ДокументВид <> NULL Тогда
		
			ПоДокументу = "" + Выборка.ДокументВид 
			+ ", серия: " + Выборка.ДокументСерия + ", № " + Выборка.ДокументНомер 
			+ ", выдан: " + Формат(Выборка.ДокументДатаВыдачи,"ДФ='дд ММММ гггг';ДП='Не указано'") + " года, " 
			+ Выборка.ДокументКемВыдан; 
			
		Иначе
			ПоДокументу = ""
		КонецЕсли; 
		
	Иначе
		Выдать = "";
		ПоДокументу = "";
	КонецЕсли;
	

КонецПроцедуры // ЗаполнитьПоляВыдатьПоДокументу()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

Процедура ЗаполнитьПоЗарплатеКВыплатеОрганизацииРегл(Основание)
	
	// Определим сумму выплаченной заработной платы
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Основание);
	Запрос.УстановитьПараметр("ВыплаченностьЗарплаты",Перечисления.ВыплаченностьЗарплаты.Выплачено);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);

	Запрос.Текст=
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ЗарплатаКВыплатеЗарплата.Сумма + ЗарплатаКВыплатеЗарплата.КомпенсацияЗаЗадержкуЗарплаты) КАК СуммаКВыплате,
	|	ЗарплатаКВыплатеЗарплата.Ссылка
	|ИЗ
	|	Документ.ЗарплатаКВыплатеОрганизаций.Зарплата КАК ЗарплатаКВыплатеЗарплата
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям КАК РанееВыплаченныеСуммы
	|		ПО ЗарплатаКВыплатеЗарплата.Ссылка = РанееВыплаченныеСуммы.Ведомость
	|			И ЗарплатаКВыплатеЗарплата.Физлицо = РанееВыплаченныеСуммы.Физлицо
	|			И (РанееВыплаченныеСуммы.Регистратор <> &Регистратор)
	|ГДЕ
	|	ЗарплатаКВыплатеЗарплата.Ссылка = &Ссылка
	|	И РанееВыплаченныеСуммы.Физлицо ЕСТЬ NULL 
	|	И ЗарплатаКВыплатеЗарплата.ВыплаченностьЗарплаты = &ВыплаченностьЗарплаты
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗарплатаКВыплатеЗарплата.Ссылка,
	|	ЗарплатаКВыплатеЗарплата.Удержано";

	РезультатЗапроса = Запрос.Выполнить();

	Если РезультатЗапроса.Пустой() Тогда
		ОбщегоНазначения.СообщитьОбОшибке("По текущей ведомости нет сумм к выплате!")
	Иначе	

		Выборка = РезультатЗапроса.Выбрать(); 
		Выборка.Следующий();
		
		СтрокаВедомость = ВыплатаЗаработнойПлаты.Добавить();
		СтрокаВедомость.Ведомость = Основание;
		ЗаполнитьЗначенияСвойств(СтрокаВедомость,Выборка);

		СуммаДокумента = Выборка.СуммаКВыплате;
	КонецЕсли;
	
	ОтражатьВУправленческомУчете=Ложь;
	ОтражатьВБухгалтерскомУчете=Истина;
	
КонецПроцедуры

Процедура ЗаполнитьПоЗарплатеКВыплатеУпр(Основание)
	
	СтрокаВедомость=ВыплатаЗаработнойПлаты.Добавить();
	СтрокаВедомость.Ведомость=Основание;

	// Определим сумму выплаченной заработной платы
	Запрос=Новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ЗарплатаКВыплатеЗарплата.Сумма) КАК Сумма
	|ИЗ
	|	Документ.ЗарплатаКВыплате.Зарплата КАК ЗарплатаКВыплатеЗарплата
	|ГДЕ
	|	ЗарплатаКВыплатеЗарплата.Ссылка = &Ссылка";

	Запрос.УстановитьПараметр("Ссылка",Основание);

	РезультатЗапроса=Запрос.Выполнить().Выбрать();
	Если РезультатЗапроса.Следующий() Тогда
		СтрокаВедомость.СуммаКВыплате=РезультатЗапроса.Сумма;
	КонецЕсли;
	
	Организация=УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");

	ОтражатьВУправленческомУчете = Истина;
	ОтражатьВБухгалтерскомУчете  = Ложь;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует структуру полей, обязательных для заполнения при отражении операции во 
// взаиморасчетах
// Возвращаемое значение:
//   СтруктурахПолей   – структура для проверки
//
Функция СтруктураОбязательныхПолейРасчетыУпр()

	СтруктураПолей = Новый Структура();

	Возврат СтруктураПолей;

КонецФункции // СтруктураОбязательныхПолейРасчетыУпр()

// Формирует структуру полей, обязательных для заполнения при отражении операции во 
// взаиморасчетах
// Возвращаемое значение:
//   СтруктурахПолей   – структура для проверки
//
Функция СтруктураОбязательныхПолейРасчетыРегл()

	СтруктураПолей = Новый Структура("Организация");

	Если ВидОперации = Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыРаботнику Тогда
		СтруктураПолей.Вставить("Контрагент");
		СтруктураПолей.Вставить("ПлатежнаяВедомость");
	КонецЕсли;
	
	Возврат СтруктураПолей;

КонецФункции // СтруктураОбязательныхПолейРасчетыУпр()

Процедура ПроверитьЗаполнениеДокументаУпр(Отказ, Режим, Заголовок)
	
	Если ОтражатьВУправленческомУчете Тогда 
		ОбщегоНазначения.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолейРасчетыУпр(), Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеДокументаРегл(Отказ, Заголовок)

	Если ОтражатьВБухгалтерскомУчете Тогда

		ОбщегоНазначения.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолейРасчетыРегл(), Отказ, Заголовок);
		
		Если ВидОперации = Перечисления.ВидыОперацийРКО.ВыплатаДепонентов Тогда
			
			Запрос = Новый Запрос;
			
			// Установим параметры запроса
			Запрос.УстановитьПараметр("ДокументСсылка",		Ссылка);
			Запрос.УстановитьПараметр("Дата",				Дата);
			Запрос.УстановитьПараметр("Организация",		Организация);
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	РасходныйКассовыйОрдерВыплатаДепонентов.НомерСтроки,
			|	РасходныйКассовыйОрдерВыплатаДепонентов.Ведомость КАК Ведомость,
			|	РасходныйКассовыйОрдерВыплатаДепонентов.Ведомость.Номер КАК Номер,
			|	РасходныйКассовыйОрдерВыплатаДепонентов.Ведомость.Дата КАК Дата,
			|	РасходныйКассовыйОрдерВыплатаДепонентов.ФизЛицо,
			|	ЕСТЬNULL(ВзаиморасчетыСДепонентамиОрганизацийОстатки.СуммаОстаток, 0) КАК ОстатокДепонента,
			|	РасходныйКассовыйОрдерВыплатаДепонентов.СуммаКВыплате,
			|	РасходныйКассовыйОрдерВыплатаДепонентов.Ведомость.Организация КАК Организация
			|ИЗ
			|	Документ.РасходныйКассовыйОрдер.ВыплатаДепонентов КАК РасходныйКассовыйОрдерВыплатаДепонентов
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСДепонентамиОрганизаций.Остатки(
			|				&Дата,
			|				Организация = &Организация
			|					И Физлицо В
			|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|							РасходныйКассовыйОрдерВыплатаДепонентов.ФизЛицо
			|						ИЗ
			|							Документ.РасходныйКассовыйОрдер.ВыплатаДепонентов КАК РасходныйКассовыйОрдерВыплатаДепонентов
			|						ГДЕ
			|							РасходныйКассовыйОрдерВыплатаДепонентов.Ссылка = &ДокументСсылка)) КАК ВзаиморасчетыСДепонентамиОрганизацийОстатки
			|		ПО РасходныйКассовыйОрдерВыплатаДепонентов.ФизЛицо = ВзаиморасчетыСДепонентамиОрганизацийОстатки.Физлицо
			|			И РасходныйКассовыйОрдерВыплатаДепонентов.Ведомость = ВзаиморасчетыСДепонентамиОрганизацийОстатки.Ведомость
			|ГДЕ
			|	РасходныйКассовыйОрдерВыплатаДепонентов.Ссылка = &ДокументСсылка
			|ИТОГИ ПО
			|	Ведомость";
			
			Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока Выборка.Следующий() Цикл
				
				ОшибкаОрганизации = Ложь;
				ВыборкаПоВыплатаДепонентов = Выборка.Выбрать();
				Пока ВыборкаПоВыплатаДепонентов.Следующий() Цикл
					
					НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоВыплатаДепонентов.НомерСтроки) +
					""" табл. части: ";
					
					Если НЕ ОшибкаОрганизации и ВыборкаПоВыплатаДепонентов.Организация <> Организация Тогда
					
						ОбщегоНазначения.СообщитьОбОшибке("" + ВыборкаПоВыплатаДепонентов.Организация + ": не совпадают организации в расходном кассовом ордере и платежной ведомости", Отказ, Заголовок);
						ОшибкаОрганизации = Истина;
						
					КонецЕсли;
					
					ЕстьФизЛицо = ЗначениеЗаполнено(ВыборкаПоВыплатаДепонентов.ФизЛицо);
					ЕстьВедомость = ЗначениеЗаполнено(ВыборкаПоВыплатаДепонентов.Ведомость);
					
					Если Не ЕстьФизЛицо Тогда
						ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указан работник!", Отказ, Заголовок);
					КонецЕсли;
					
					Если Не ЕстьВедомость Тогда
						ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "не указана платежная ведомость!", Отказ, Заголовок);
					КонецЕсли;
					
					Если ЕстьВедомость И ЕстьФизЛицо И ВыборкаПоВыплатаДепонентов.ОстатокДепонента < ВыборкаПоВыплатаДепонентов.СуммаКВыплате Тогда
						ОбщегоНазначения.СообщитьОбОшибке(НачалоСообщения + "невыданный остаток депонента (" + Формат(ВыборкаПоВыплатаДепонентов.ОстатокДепонента,"ЧДЦ=2") + ") меньше суммы, указанной в документе!", Отказ, Заголовок);
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыПоВедомостям Тогда
			
			// Проверка на то, чтобы в закрываемых ведомостях не было невыплаченных значений, совпадение организаций
			Запрос=Новый Запрос;
			Запрос.УстановитьПараметр("Ссылка",Ссылка);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗарплатаКВыплатеОрганизацииЗарплата.Ссылка КАК Ведомость,
			|	ЗарплатаКВыплатеОрганизацииЗарплата.Ссылка.Организация КАК Организация,
			|	ЗарплатаКВыплатеОрганизацииЗарплата.ВыплаченностьЗарплаты,
			|	ЗарплатаКВыплатеОрганизацииЗарплата.НомерСтроки
			|ИЗ
			|	Документ.РасходныйКассовыйОрдер.ВыплатаЗаработнойПлаты КАК РасходныйКассовыйОрдерВыплатаЗаработнойПлаты
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗарплатаКВыплатеОрганизаций.Зарплата КАК ЗарплатаКВыплатеОрганизацииЗарплата
			|		ПО РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ведомость = ЗарплатаКВыплатеОрганизацииЗарплата.Ссылка
			|ГДЕ
			|	РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ссылка = &Ссылка
			|ИТОГИ ПО
			|	Ведомость";
			РезультатЗапроса=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока РезультатЗапроса.Следующий() Цикл
				
				ОшибкаОрганизации = Ложь;
				
				ВложеннаяВыборка = РезультатЗапроса.Выбрать();
				Пока ВложеннаяВыборка.Следующий() Цикл
					
					Если НЕ ОшибкаОрганизации и ВложеннаяВыборка.Организация <> Организация Тогда
						
						Сообщить(ОбщегоНазначения.ПредставлениеДокументаПриПроведении(ВложеннаяВыборка.Ведомость)+": не совпадают организации в расходном кассовом ордере и платежной ведомости");
						ОшибкаОрганизации = Истина;
						Отказ = Истина;
						
					КонецЕсли; 
				
					Если ВложеннаяВыборка.ВыплаченностьЗарплаты = Перечисления.ВыплаченностьЗарплаты.НеВыплачено Тогда
						
						Сообщить(ОбщегоНазначения.ПредставлениеДокументаПриПроведении(ВложеннаяВыборка.Ведомость)+": в строке № "+ ВложеннаяВыборка.НомерСтроки +" указана отметка  ""Не выплачено""");
						Отказ = Истина;
						
					КонецЕсли; 
				
				КонецЦикла; 
				
			КонецЦикла;
			
			// Проверка на то, чтобы ведомости были раньше РКО.
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Дата",	Дата);
			Запрос.УстановитьПараметр("Ссылка",	Ссылка);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка КАК Ведомость
			|ИЗ
			|	Документ.РасходныйКассовыйОрдер.ВыплатаЗаработнойПлаты КАК РасходныйКассовыйОрдерВыплатаЗаработнойПлаты
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗарплатаКВыплатеОрганизаций.Зарплата КАК ЗарплатаКВыплатеОрганизацийЗарплата
			|		ПО РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ведомость = ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка
			|ГДЕ
			|	(ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка.Дата > &Дата
			|			ИЛИ ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка.ПериодРегистрации > &Дата)
			|	И РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ссылка = &Ссылка";
			РезультатЗапроса = Запрос.Выполнить().Выбрать();
			
			Пока РезультатЗапроса.Следующий() Цикл
				Сообщить(ОбщегоНазначения.ПредставлениеДокументаПриПроведении(РезультатЗапроса.Ведомость)+": оформлена позже, чем этот РКО или месяц начисления платежной ведомости больше даты этого РКО!");
				Отказ = Истина;
			КонецЦикла;

			
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыРаботнику Тогда
			
			Если ПлатежнаяВедомость.Организация <> Организация Тогда
				Сообщить(ОбщегоНазначения.ПредставлениеДокументаПриПроведении(ПлатежнаяВедомость)+": не совпадают организации в расходном кассовом ордере и платежной ведомости");
			КонецЕсли; 
			
			Если ПлатежнаяВедомость.СпособВыплаты = Перечисления.СпособыВыплатыЗарплаты.ЧерезБанк Тогда
				ОбщегоНазначения.СообщитьОбОшибке(ОбщегоНазначения.ПредставлениеДокументаПриПроведении(ПлатежнаяВедомость) + " установлен способ выплаты через банк!", Отказ, Заголовок);
			КонецЕсли;
			
			Если Дата < ПлатежнаяВедомость.Дата Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Указанная платежная ведомость оформлена позже, чем этот РКО!",Отказ,Заголовок);
			КонецЕсли;
			Если Дата < ПлатежнаяВедомость.ПериодРегистрации Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Месяц начисления платежной ведомости больше даты этого РКО!",Отказ,Заголовок);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Формирует запрос по табличной части документа
//
// Параметры: 
//  нет
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоРКОУпр()
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ЗарплатаКВыплатеЗарплата.Физлицо,
	|	ЗарплатаКВыплатеЗарплата.Сумма,
	|	ЗарплатаКВыплатеЗарплата.Ссылка.ХарактерВыплаты
	|ИЗ
	|	Документ.ЗарплатаКВыплате.Зарплата КАК ЗарплатаКВыплатеЗарплата
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйКассовыйОрдер.ВыплатаЗаработнойПлаты КАК РасходныйКассовыйОрдерВыплатаЗаработнойПлаты
	|		ПО ЗарплатаКВыплатеЗарплата.Ссылка = РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ведомость
	|ГДЕ
	|	РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ссылка = &Ссылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросПоРКОУпр()

Процедура ДвиженияПоЗарплатеУпр()

	// По регистру управленческих расчетов с работниками
	Если ОтражатьВУправленческомУчете Тогда

		// По регистру ВзаиморасчетыСРаботниками

		Результат = СформироватьЗапросПоРКОУпр().Выбрать();

		Пока Результат.Следующий() Цикл

			Строка = Движения.ВзаиморасчетыСРаботниками.Добавить();

			Строка.Период      = Дата;
			Строка.ВидДвижения = ВидДвиженияНакопления.Расход;
			Строка.Физлицо     = Результат.ФизЛицо;
			Строка.СуммаУпр    = Результат.Сумма;
			Строка.ХарактерВыплаты = Результат.ХарактерВыплаты;

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

// Формирует запрос по табличной части документа
//
// Параметры: 
//  нет
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоРКОРеглВед()
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",							Ссылка);
	Запрос.УстановитьПараметр("Выплачено",						Перечисления.ВыплаченностьЗарплаты.Выплачено);
	Запрос.УстановитьПараметр("парамУчетЗадолженностиПоМесяцам",ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "УчетЗадолженностиПоМесяцам"));
	Запрос.УстановитьПараметр("парамПустаяДата",				'00010101');
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка КАК Ведомость,
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка.ХарактерВыплаты,
	|	ВЫБОР
	|		КОГДА &парамУчетЗадолженностиПоМесяцам
	|			ТОГДА ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка.ПериодРегистрации
	|		ИНАЧЕ &парамПустаяДата
	|	КОНЕЦ КАК ПериодВзаиморасчетов,
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка.Организация КАК Организация,
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка КАК ВедомостьНаВыплату,
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Физлицо КАК ФизЛицо,
	|	СУММА(ЗарплатаКВыплатеОрганизацийЗарплата.Сумма) КАК СуммаВзаиморасчетов,
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Удержано,
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка.АвтоматическиПереноситьОстатки
	|ИЗ
	|	Документ.ЗарплатаКВыплатеОрганизаций.Зарплата КАК ЗарплатаКВыплатеОрганизацийЗарплата
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйКассовыйОрдер.ВыплатаЗаработнойПлаты КАК РасходныйКассовыйОрдерВыплатаЗаработнойПлаты
	|		ПО ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка = РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ведомость
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям КАК РанееВыплаченныеСуммы
	|		ПО ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка = РанееВыплаченныеСуммы.Ведомость
	|			И ЗарплатаКВыплатеОрганизацийЗарплата.Физлицо = РанееВыплаченныеСуммы.Физлицо
	|			И (РанееВыплаченныеСуммы.Регистратор <> &Ссылка)
	|ГДЕ
	|	РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ссылка = &Ссылка
	|	И ЗарплатаКВыплатеОрганизацийЗарплата.ВыплаченностьЗарплаты = &Выплачено
	|	И РанееВыплаченныеСуммы.Физлицо ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Физлицо,
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка,
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка.ХарактерВыплаты,
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка.Организация,
	|	ВЫБОР
	|		КОГДА &парамУчетЗадолженностиПоМесяцам
	|			ТОГДА ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка.ПериодРегистрации
	|		ИНАЧЕ &парамПустаяДата
	|	КОНЕЦ,
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Удержано,
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЗарплатаКВыплатеОрганизацийЗарплата.Сумма) <> 0";
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросПоРКОРеглВед()

// Формирует запрос по табличной части документа
//
// Параметры: 
//  нет
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоРКОРеглРаб()
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("парамПлатВедомость",				ПлатежнаяВедомость);
	Запрос.УстановитьПараметр("парамКонтрагент",				Контрагент);
	Запрос.УстановитьПараметр("парамВыплаченностьЗарплаты",		Перечисления.ВыплаченностьЗарплаты.Выплачено);
	Запрос.УстановитьПараметр("парамУчетЗадолженностиПоМесяцам",ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "УчетЗадолженностиПоМесяцам"));
	Запрос.УстановитьПараметр("парамПустаяДата",				'00010101');
	
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Физлицо,
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка.ХарактерВыплаты,
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка КАК ВедомостьНаВыплату,
	|	ВЫБОР
	|		КОГДА &парамУчетЗадолженностиПоМесяцам
	|			ТОГДА ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка.ПериодРегистрации
	|		ИНАЧЕ &парамПустаяДата
	|	КОНЕЦ КАК ПериодВзаиморасчетов,
	|	СУММА(ЗарплатаКВыплатеОрганизацийЗарплата.Сумма) КАК СуммаВзаиморасчетов,
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка.Организация
	|ИЗ
	|	Документ.ЗарплатаКВыплатеОрганизаций.Зарплата КАК ЗарплатаКВыплатеОрганизацийЗарплата
	|ГДЕ
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка = &парамПлатВедомость
	|	И ЗарплатаКВыплатеОрганизацийЗарплата.Физлицо = &парамКонтрагент
	|	И ЗарплатаКВыплатеОрганизацийЗарплата.ВыплаченностьЗарплаты = &парамВыплаченностьЗарплаты
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка,
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Физлицо";
	
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросПоРКОРеглРаб()

Процедура ДвиженияПоЗарплатеРегл()
	
	УчетЗадолженностиПоМесяцам = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "УчетЗадолженностиПоМесяцам");
	
	Если ОтражатьВБухгалтерскомУчете Тогда
		
		Если ВидОперации = Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыПоВедомостям Тогда
			
			// По регистру ВзаиморасчетыСРаботникамиОрганизаций
			Результат = СформироватьЗапросПоРКОРеглВед().Выбрать();
			
			Пока Результат.Следующий() Цикл
				Если Результат.СуммаВзаиморасчетов <> 0 Тогда
					СтрокаДвижения = Движения.СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаДвижения,Результат);
					
					СтрокаДвижения = Движения.ВзаиморасчетыСРаботникамиОрганизаций.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаДвижения,Результат);
					СтрокаДвижения.Период      = Дата;
					СтрокаДвижения.ВидДвижения = ВидДвиженияНакопления.Расход;
					СтрокаДвижения.Ведомость   = Результат.ВедомостьНаВыплату;
					СтрокаДвижения.СпособВыплаты = Перечисления.СпособыВыплатыЗарплаты.ЧерезКассу; 
					
					Если Результат.АвтоматическиПереноситьОстатки И УчетЗадолженностиПоМесяцам Тогда
						
						СтрокаДвижения = Движения.ВзаиморасчетыСРаботникамиОрганизаций.ДобавитьПриход();
			            ЗаполнитьЗначенияСвойств(СтрокаДвижения,Результат); 
						СтрокаДвижения.Период      = Дата;
                        СтрокаДвижения.СуммаВзаиморасчетов	= -Результат.Удержано;
								
						СтрокаДвижения = Движения.ВзаиморасчетыСРаботникамиОрганизаций.ДобавитьПриход();
						ЗаполнитьЗначенияСвойств(СтрокаДвижения,Результат);
						СтрокаДвижения.Период      = Дата;
						СтрокаДвижения.ПериодВзаиморасчетов	= КонецМесяца(Результат.ПериодВзаиморасчетов)+1;
						СтрокаДвижения.СуммаВзаиморасчетов	= Результат.Удержано;
                   						
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			// По регистру расчетов с бюджетом по НДФЛ
			ГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
			Запрос=Новый Запрос;
			Запрос.УстановитьПараметр("Ссылка",Ссылка);
			Запрос.УстановитьПараметр("Выплачено",Перечисления.ВыплаченностьЗарплаты.Выплачено);
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА ПлДок.Ссылка.Дата > КОНЕЦПЕРИОДА(МАКСИМУМ(ПлДок.Ведомость.ПериодРегистрации), МЕСЯЦ)
			|			ТОГДА ПлДок.Ссылка.Дата
			|		ИНАЧЕ КОНЕЦПЕРИОДА(МАКСИМУМ(ПлДок.Ведомость.ПериодРегистрации), МЕСЯЦ)
			|	КОНЕЦ КАК ДатаНДФЛ
			|ИЗ
			|	Документ.РасходныйКассовыйОрдер.ВыплатаЗаработнойПлаты КАК ПлДок
			|ГДЕ
			|	ПлДок.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	ПлДок.Ссылка.Дата";
			
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			ДатаНДФЛ = Выборка.ДатаНДФЛ;
			
			// Выборка долгов по НДФЛ в разрезе месяцев налогового периода по обособленному подразделению
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	СуммыВыплатИСальдоПоМесяцам.ФизЛицо КАК ФизЛицо,
			|	ЕСТЬNULL(СуммыВыплатИСальдоПоМесяцам.ВыплаченнаяСумма, 0) КАК ВыплаченнаяСумма,
			|	НДФЛРасчетыСБюджетомПоМесяцам.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
			|	НДФЛРасчетыСБюджетомПоМесяцам.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
			|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоМесяцам.СальдоПоНалогу, 0) КАК СальдоПоНалогуЗаМесяц,
			|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоГодам.СальдоПоНалогу, 0) КАК СальдоПоНалогуЗаНалоговыйПериод,
			|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.КодПоОКАТО, """") КАК КодПоОКАТО,
			|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.КПП, """") КАК КПП,
			|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.ПодразделениеОрганизации, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК ПодразделениеОрганизации,
			|	НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.Период КАК ДатаРегистрацииКодаОКАТО,
			|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.СальдоПоНалогу, 0) КАК СальдоПоОКАТО,
			|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоМесяцамПоОКАТОвсего.СальдоПоНалогу, 0) КАК ВсегоЗаМесяцПоОКАТО
			|ИЗ
			|	(ВЫБРАТЬ
			|		ЗарплатаКВыплате.Физлицо КАК ФизЛицо,
			|		СУММА(ЗарплатаКВыплате.Сумма) КАК ВыплаченнаяСумма
			|	ИЗ
			|		Документ.РасходныйКассовыйОрдер.ВыплатаЗаработнойПлаты КАК ПлДок
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗарплатаКВыплатеОрганизаций.Зарплата КАК ЗарплатаКВыплате
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям КАК РанееВыплаченныеСуммы
			|				ПО ЗарплатаКВыплате.Ссылка = РанееВыплаченныеСуммы.Ведомость
			|					И ЗарплатаКВыплате.Физлицо = РанееВыплаченныеСуммы.Физлицо
			|					И (РанееВыплаченныеСуммы.Регистратор <> &ДокументСсылка)
			|			ПО ПлДок.Ведомость = ЗарплатаКВыплате.Ссылка
			|	ГДЕ
			|		ПлДок.Ссылка = &ДокументСсылка
			|		И ЗарплатаКВыплате.ВыплаченностьЗарплаты = &Выплачено
			|		И РанееВыплаченныеСуммы.Физлицо ЕСТЬ NULL 
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ЗарплатаКВыплате.Физлицо) КАК СуммыВыплатИСальдоПоМесяцам
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
			|			НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
			|			НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
			|			СУММА(НДФЛРасчетыСБюджетом.СальдоПоНалогу) КАК СальдоПоНалогу
			|		ИЗ
			|			(ВЫБРАТЬ
			|				НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
			|				НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
			|				НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
			|				ВЫБОР
			|					КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|						ТОГДА НДФЛРасчетыСБюджетом.Налог
			|					ИНАЧЕ -НДФЛРасчетыСБюджетом.Налог
			|				КОНЕЦ КАК СальдоПоНалогу
			|			ИЗ
			|				РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
			|			ГДЕ
			|				НДФЛРасчетыСБюджетом.Регистратор <> &ДокументСсылка
			|				И НДФЛРасчетыСБюджетом.Организация = &ГоловнаяОрганизация
			|				И НДФЛРасчетыСБюджетом.ОбособленноеПодразделение = &ОбособленноеПодразделение
			|				И НДФЛРасчетыСБюджетом.Период <= &ДатаНДФЛ
			|			
			|			ОБЪЕДИНИТЬ ВСЕ
			|			
			|			ВЫБРАТЬ
			|				НДФЛКЗачету.ФизЛицо,
			|				НАЧАЛОПЕРИОДА(НДФЛКЗачету.Период, МЕСЯЦ),
			|				&Ставка13,
			|				ВЫБОР
			|					КОГДА НДФЛКЗачету.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|						ТОГДА НДФЛКЗачету.СуммаНДФЛКЗачету
			|					ИНАЧЕ -НДФЛКЗачету.СуммаНДФЛКЗачету
			|				КОНЕЦ
			|			ИЗ
			|				РегистрНакопления.НДФЛКЗачету КАК НДФЛКЗачету
			|			ГДЕ
			|				НДФЛКЗачету.Регистратор <> &ДокументСсылка
			|				И НДФЛКЗачету.Организация = &ГоловнаяОрганизация
			|				И НДФЛКЗачету.Период <= &ДатаНДФЛ) КАК НДФЛРасчетыСБюджетом
			|		
			|		СГРУППИРОВАТЬ ПО
			|			НДФЛРасчетыСБюджетом.ФизЛицо,
			|			НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента,
			|			НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ)) КАК НДФЛРасчетыСБюджетомПоМесяцам
			|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|				НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
			|				НДФЛРасчетыСБюджетом.НалоговыйПериод КАК НалоговыйПериод,
			|				НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
			|				СУММА(НДФЛРасчетыСБюджетом.СальдоПоНалогу) КАК СальдоПоНалогу
			|			ИЗ
			|				(ВЫБРАТЬ
			|					НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
			|					НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, ГОД) КАК НалоговыйПериод,
			|					НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
			|					ВЫБОР
			|						КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|							ТОГДА НДФЛРасчетыСБюджетом.Налог
			|						ИНАЧЕ -НДФЛРасчетыСБюджетом.Налог
			|					КОНЕЦ КАК СальдоПоНалогу
			|				ИЗ
			|					РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
			|				ГДЕ
			|					НДФЛРасчетыСБюджетом.Регистратор <> &ДокументСсылка
			|					И НДФЛРасчетыСБюджетом.Организация = &ГоловнаяОрганизация
			|					И НДФЛРасчетыСБюджетом.ОбособленноеПодразделение = &ОбособленноеПодразделение
			|					И НДФЛРасчетыСБюджетом.Период <= &ДатаНДФЛ
			|				
			|				ОБЪЕДИНИТЬ ВСЕ
			|				
			|				ВЫБРАТЬ
			|					НДФЛКЗачету.ФизЛицо,
			|					НАЧАЛОПЕРИОДА(НДФЛКЗачету.Период, ГОД),
			|					&Ставка13,
			|					ВЫБОР
			|						КОГДА НДФЛКЗачету.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|							ТОГДА НДФЛКЗачету.СуммаНДФЛКЗачету
			|						ИНАЧЕ -НДФЛКЗачету.СуммаНДФЛКЗачету
			|					КОНЕЦ
			|				ИЗ
			|					РегистрНакопления.НДФЛКЗачету КАК НДФЛКЗачету
			|				ГДЕ
			|					НДФЛКЗачету.Регистратор <> &ДокументСсылка
			|					И НДФЛКЗачету.Организация = &ГоловнаяОрганизация
			|					И НДФЛКЗачету.Период <= &ДатаНДФЛ) КАК НДФЛРасчетыСБюджетом
			|			
			|			СГРУППИРОВАТЬ ПО
			|				НДФЛРасчетыСБюджетом.ФизЛицо,
			|				НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента,
			|				НДФЛРасчетыСБюджетом.НалоговыйПериод) КАК НДФЛРасчетыСБюджетомПоГодам
			|			ПО НДФЛРасчетыСБюджетомПоМесяцам.ФизЛицо = НДФЛРасчетыСБюджетомПоГодам.ФизЛицо
			|				И НДФЛРасчетыСБюджетомПоМесяцам.СтавкаНалогообложенияРезидента = НДФЛРасчетыСБюджетомПоГодам.СтавкаНалогообложенияРезидента
			|				И (НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетомПоМесяцам.МесяцНалоговогоПериода, ГОД) = НДФЛРасчетыСБюджетомПоГодам.НалоговыйПериод)
			|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|				НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
			|				НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
			|				НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
			|				СУММА(ВЫБОР
			|						КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|							ТОГДА НДФЛРасчетыСБюджетом.Налог
			|						ИНАЧЕ -НДФЛРасчетыСБюджетом.Налог
			|					КОНЕЦ) КАК СальдоПоНалогу,
			|				НДФЛРасчетыСБюджетом.КодПоОКАТО КАК КодПоОКАТО,
			|				НДФЛРасчетыСБюджетом.КПП КАК КПП,
			|				МАКСИМУМ(НДФЛРасчетыСБюджетом.Период) КАК Период,
			|				НДФЛРасчетыСБюджетом.ПодразделениеОрганизации КАК ПодразделениеОрганизации
			|			ИЗ
			|				РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
			|			ГДЕ
			|				НДФЛРасчетыСБюджетом.Регистратор <> &ДокументСсылка
			|				И НДФЛРасчетыСБюджетом.Организация = &ГоловнаяОрганизация
			|				И НДФЛРасчетыСБюджетом.ОбособленноеПодразделение = &ОбособленноеПодразделение
			|				И НДФЛРасчетыСБюджетом.Период <= &ДатаНДФЛ
			|			
			|			СГРУППИРОВАТЬ ПО
			|				НДФЛРасчетыСБюджетом.ФизЛицо,
			|				НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ),
			|				НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента,
			|				НДФЛРасчетыСБюджетом.КодПоОКАТО,
			|				НДФЛРасчетыСБюджетом.КПП,
			|				НДФЛРасчетыСБюджетом.ПодразделениеОрганизации) КАК НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО
			|			ПО НДФЛРасчетыСБюджетомПоМесяцам.ФизЛицо = НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.ФизЛицо
			|				И НДФЛРасчетыСБюджетомПоМесяцам.СтавкаНалогообложенияРезидента = НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.СтавкаНалогообложенияРезидента
			|				И НДФЛРасчетыСБюджетомПоМесяцам.МесяцНалоговогоПериода = НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.МесяцНалоговогоПериода
			|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|				НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
			|				НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
			|				НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
			|				СУММА(ВЫБОР
			|						КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|							ТОГДА НДФЛРасчетыСБюджетом.Налог
			|						ИНАЧЕ -НДФЛРасчетыСБюджетом.Налог
			|					КОНЕЦ) КАК СальдоПоНалогу
			|			ИЗ
			|				РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
			|			ГДЕ
			|				НДФЛРасчетыСБюджетом.Регистратор <> &ДокументСсылка
			|				И НДФЛРасчетыСБюджетом.Организация = &ГоловнаяОрганизация
			|				И НДФЛРасчетыСБюджетом.ОбособленноеПодразделение = &ОбособленноеПодразделение
			|				И НДФЛРасчетыСБюджетом.Период <= &ДатаНДФЛ
			|			
			|			СГРУППИРОВАТЬ ПО
			|				НДФЛРасчетыСБюджетом.ФизЛицо,
			|				НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ),
			|				НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента) КАК НДФЛРасчетыСБюджетомПоМесяцамПоОКАТОвсего
			|			ПО НДФЛРасчетыСБюджетомПоМесяцам.ФизЛицо = НДФЛРасчетыСБюджетомПоМесяцамПоОКАТОвсего.ФизЛицо
			|				И НДФЛРасчетыСБюджетомПоМесяцам.СтавкаНалогообложенияРезидента = НДФЛРасчетыСБюджетомПоМесяцамПоОКАТОвсего.СтавкаНалогообложенияРезидента
			|				И НДФЛРасчетыСБюджетомПоМесяцам.МесяцНалоговогоПериода = НДФЛРасчетыСБюджетомПоМесяцамПоОКАТОвсего.МесяцНалоговогоПериода
			|		ПО СуммыВыплатИСальдоПоМесяцам.ФизЛицо = НДФЛРасчетыСБюджетомПоМесяцам.ФизЛицо
			|ГДЕ
			|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоМесяцам.СальдоПоНалогу, 0) > 0
			|	И ЕСТЬNULL(НДФЛРасчетыСБюджетомПоГодам.СальдоПоНалогу, 0) > 0
			|	И ЕСТЬNULL(СуммыВыплатИСальдоПоМесяцам.ВыплаченнаяСумма, 0) > 0
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизЛицо,
			|	СтавкаНалогообложенияРезидента,
			|	МесяцНалоговогоПериода,
			|	ДатаРегистрацииКодаОКАТО";
			
			Запрос.УстановитьПараметр("ДокументСсылка",				Ссылка);
			Запрос.УстановитьПараметр("Дата",						Дата);
			Запрос.УстановитьПараметр("ДатаНДФЛ",					ДатаНДФЛ);
			Запрос.УстановитьПараметр("ОбособленноеПодразделение",	Организация);
			Запрос.УстановитьПараметр("ГоловнаяОрганизация",		ГоловнаяОрганизация);
			Запрос.УстановитьПараметр("Ставка13",					Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13);
			
			ВременнаяТаблица = Новый ТаблицаЗначений;
			ВременнаяТаблица.Колонки.Добавить("КодПоОКАТО");
			ВременнаяТаблица.Колонки.Добавить("КПП");
			ВременнаяТаблица.Колонки.Добавить("ПодразделениеОрганизации");
			ВременнаяТаблица.Колонки.Добавить("СальдоПоОКАТО");
			
			Выборка= Запрос.Выполнить().Выбрать();
			
			Пока Выборка.СледующийПоЗначениюПоля("ФизЛицо") Цикл
				
				СуммаКВыплате = Выборка.ВыплаченнаяСумма;
				
				Пока Выборка.СледующийПоЗначениюПоля("СтавкаНалогообложенияРезидента") Цикл
					
					ОсталосьРаспределить = Мин(СуммаКВыплате,Выборка.СальдоПоНалогуЗаНалоговыйПериод);
					СуммаКВыплате = Макс(0,СуммаКВыплате - Выборка.СальдоПоНалогуЗаНалоговыйПериод);
					
					Пока Выборка.СледующийПоЗначениюПоля("МесяцНалоговогоПериода") И ОсталосьРаспределить > 0 Цикл
						
						// расчет суммы удерживаемого налога
						ПогашаемаяСумма = Мин(Выборка.СальдоПоНалогуЗаМесяц, ОсталосьРаспределить);
						ОсталосьРаспределить = ОсталосьРаспределить - ПогашаемаяСумма;
						
						Если Выборка.ВсегоЗаМесяцПоОКАТО = Выборка.СальдоПоОКАТО Или Выборка.ВсегоЗаМесяцПоОКАТО = 0 Тогда
							
							// запись удержания
							Движение = Движения.НДФЛРасчетыСБюджетом.Добавить();
							
							ЗаполнитьЗначенияСвойств(Движение,Выборка); // ФизЛицо, СтавкаНалогообложенияРезидента, МесяцНалоговогоПериода 
																		// КодПоОКАТО, КПП, ПодразделениеОрганизации
							
							//свойства
							Движение.Период      = Дата;
							Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
							//измерения
							Движение.Организация = ГоловнаяОрганизация;
							// ресурсы
							Движение.Налог       = ПогашаемаяСумма;
							// реквизиты
							Движение.ВидСтроки	 = Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Удержание;
							Движение.ОбособленноеПодразделение = Организация;
							
						Иначе
							
							ФизЛицо = Выборка.ФизЛицо;
							СтавкаНалогообложенияРезидента = Выборка.СтавкаНалогообложенияРезидента;
							МесяцНалоговогоПериода = Выборка.МесяцНалоговогоПериода;
							
							ВременнаяТаблица.Очистить();
							Пока Выборка.Следующий() Цикл
								ЗаполнитьЗначенияСвойств(ВременнаяТаблица.Добавить(),Выборка);
							КонецЦикла;
							
							Результат = ОбщегоНазначения.РаспределитьПропорционально(ПогашаемаяСумма,ВременнаяТаблица.ВыгрузитьКолонку("СальдоПоОКАТО"));
							
							Для каждого СтрокаОКАТО Из ВременнаяТаблица Цикл
								
								// запись удержания
								Движение = Движения.НДФЛРасчетыСБюджетом.Добавить();
								//свойства
								Движение.Период      = Дата;
								Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
								//измерения
								Движение.Физлицо     = ФизЛицо;
								Движение.Организация = ГоловнаяОрганизация;
								Движение.СтавкаНалогообложенияРезидента = СтавкаНалогообложенияРезидента;
								Движение.МесяцНалоговогоПериода = МесяцНалоговогоПериода;
								// ресурсы
								Движение.Налог       = Результат[ВременнаяТаблица.Индекс(СтрокаОКАТО)];
								// реквизиты
								Движение.ВидСтроки = Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Удержание;
								Движение.ОбособленноеПодразделение = Организация;
								Движение.КодПоОКАТО	 = СтрокаОКАТО.КодПоОКАТО; 
								Движение.КПП		 = СтрокаОКАТО.КПП; 
								Движение.ПодразделениеОрганизации = СтрокаОКАТО.ПодразделениеОрганизации; 
								
							КонецЦикла; 
						КонецЕсли;
						
					КонецЦикла;

				КонецЦикла; 
				
			КонецЦикла; 
			
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыРаботнику Тогда
			
			// По регистру ВзаиморасчетыСРаботникамиОрганизаций
			Результат = СформироватьЗапросПоРКОРеглРаб();
			
			Если Не Результат.Пустой() Тогда
				
				СтрокаДвижения = Движения.СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям.Добавить();
				СтрокаДвижения.Физлицо = Контрагент;
				СтрокаДвижения.Ведомость = ПлатежнаяВедомость;
				
				Выборка = Результат.Выбрать();
				Выборка.Следующий();
				Если Выборка.СуммаВзаиморасчетов <> 0 Тогда
					СтрокаДвижения = Движения.ВзаиморасчетыСРаботникамиОрганизаций.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаДвижения,Выборка);
					СтрокаДвижения.Период        = Дата;
					СтрокаДвижения.ВидДвижения   = ВидДвиженияНакопления.Расход;
					СтрокаДвижения.Ведомость     = Выборка.ВедомостьНаВыплату;
					СтрокаДвижения.СпособВыплаты = Перечисления.СпособыВыплатыЗарплаты.ЧерезКассу; 
				КонецЕсли;
				
			КонецЕсли;
			
			// По регистру расчетов с бюджетом по НДФЛ
			
			ГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
			Запрос=Новый Запрос;
			Запрос.УстановитьПараметр("парамПлатВедомость",	ПлатежнаяВедомость);
			
			// Выборка долгов по НДФЛ в разрезе месяцев налогового периода по обособленному подразделению
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	СуммыВыплатИСальдоПоМесяцам.ФизЛицо КАК ФизЛицо,
			|	ЕСТЬNULL(СуммыВыплатИСальдоПоМесяцам.ВыплаченнаяСумма, 0) КАК ВыплаченнаяСумма,
			|	НДФЛРасчетыСБюджетомПоМесяцам.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
			|	НДФЛРасчетыСБюджетомПоМесяцам.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
			|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоМесяцам.СальдоПоНалогу, 0) КАК СальдоПоНалогуЗаМесяц,
			|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоГодам.СальдоПоНалогу, 0) КАК СальдоПоНалогуЗаНалоговыйПериод,
			|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.КодПоОКАТО, """") КАК КодПоОКАТО,
			|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.КПП, """") КАК КПП,
			|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.ПодразделениеОрганизации, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК ПодразделениеОрганизации,
			|	НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.Период КАК ДатаРегистрацииКодаОКАТО,
			|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.СальдоПоНалогу, 0) КАК СальдоПоОКАТО,
			|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоМесяцамПоОКАТОвсего.СальдоПоНалогу, 0) КАК ВсегоЗаМесяцПоОКАТО
			|ИЗ
			|	(ВЫБРАТЬ
			|		ЗарплатаКВыплате.Физлицо КАК ФизЛицо,
			|		СУММА(ЗарплатаКВыплате.Сумма) КАК ВыплаченнаяСумма
			|	ИЗ
			|		Документ.ЗарплатаКВыплатеОрганизаций.Зарплата КАК ЗарплатаКВыплате
			|	ГДЕ
			|		ЗарплатаКВыплате.Ссылка = &ПлатежнаяВедомость
			|		И ЗарплатаКВыплате.Физлицо = &Физлицо
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ЗарплатаКВыплате.Физлицо) КАК СуммыВыплатИСальдоПоМесяцам
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
			|			НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
			|			НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
			|			СУММА(НДФЛРасчетыСБюджетом.СальдоПоНалогу) КАК СальдоПоНалогу
			|		ИЗ
			|			(ВЫБРАТЬ
			|				НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
			|				НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
			|				НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
			|				ВЫБОР
			|					КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|						ТОГДА НДФЛРасчетыСБюджетом.Налог
			|					ИНАЧЕ -НДФЛРасчетыСБюджетом.Налог
			|				КОНЕЦ КАК СальдоПоНалогу
			|			ИЗ
			|				РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
			|			ГДЕ
			|				НДФЛРасчетыСБюджетом.Регистратор <> &ДокументСсылка
			|				И НДФЛРасчетыСБюджетом.ФизЛицо = &Физлицо
			|				И НДФЛРасчетыСБюджетом.Организация = &ГоловнаяОрганизация
			|				И НДФЛРасчетыСБюджетом.ОбособленноеПодразделение = &ОбособленноеПодразделение
			|				И НДФЛРасчетыСБюджетом.Период <= &ДатаНДФЛ
			|			
			|			ОБЪЕДИНИТЬ ВСЕ
			|			
			|			ВЫБРАТЬ
			|				НДФЛКЗачету.ФизЛицо,
			|				НАЧАЛОПЕРИОДА(НДФЛКЗачету.Период, МЕСЯЦ),
			|				&Ставка13,
			|				ВЫБОР
			|					КОГДА НДФЛКЗачету.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|						ТОГДА НДФЛКЗачету.СуммаНДФЛКЗачету
			|					ИНАЧЕ -НДФЛКЗачету.СуммаНДФЛКЗачету
			|				КОНЕЦ
			|			ИЗ
			|				РегистрНакопления.НДФЛКЗачету КАК НДФЛКЗачету
			|			ГДЕ
			|				НДФЛКЗачету.Регистратор <> &ДокументСсылка
			|				И НДФЛКЗачету.ФизЛицо = &Физлицо
			|				И НДФЛКЗачету.Организация = &ГоловнаяОрганизация
			|				И НДФЛКЗачету.Период <= &ДатаНДФЛ) КАК НДФЛРасчетыСБюджетом
			|		
			|		СГРУППИРОВАТЬ ПО
			|			НДФЛРасчетыСБюджетом.ФизЛицо,
			|			НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента,
			|			НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ)) КАК НДФЛРасчетыСБюджетомПоМесяцам
			|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|				НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
			|				НДФЛРасчетыСБюджетом.НалоговыйПериод КАК НалоговыйПериод,
			|				НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
			|				СУММА(НДФЛРасчетыСБюджетом.СальдоПоНалогу) КАК СальдоПоНалогу
			|			ИЗ
			|				(ВЫБРАТЬ
			|					НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
			|					НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, ГОД) КАК НалоговыйПериод,
			|					НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
			|					ВЫБОР
			|						КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|							ТОГДА НДФЛРасчетыСБюджетом.Налог
			|						ИНАЧЕ -НДФЛРасчетыСБюджетом.Налог
			|					КОНЕЦ КАК СальдоПоНалогу
			|				ИЗ
			|					РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
			|				ГДЕ
			|					НДФЛРасчетыСБюджетом.Регистратор <> &ДокументСсылка
			|					И НДФЛРасчетыСБюджетом.ФизЛицо = &Физлицо
			|					И НДФЛРасчетыСБюджетом.Организация = &ГоловнаяОрганизация
			|					И НДФЛРасчетыСБюджетом.ОбособленноеПодразделение = &ОбособленноеПодразделение
			|					И НДФЛРасчетыСБюджетом.Период <= &ДатаНДФЛ
			|				
			|				ОБЪЕДИНИТЬ ВСЕ
			|				
			|				ВЫБРАТЬ
			|					НДФЛКЗачету.ФизЛицо,
			|					НАЧАЛОПЕРИОДА(НДФЛКЗачету.Период, ГОД),
			|					&Ставка13,
			|					ВЫБОР
			|						КОГДА НДФЛКЗачету.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|							ТОГДА НДФЛКЗачету.СуммаНДФЛКЗачету
			|						ИНАЧЕ -НДФЛКЗачету.СуммаНДФЛКЗачету
			|					КОНЕЦ
			|				ИЗ
			|					РегистрНакопления.НДФЛКЗачету КАК НДФЛКЗачету
			|				ГДЕ
			|					НДФЛКЗачету.Регистратор <> &ДокументСсылка
			|					И НДФЛКЗачету.ФизЛицо = &Физлицо
			|					И НДФЛКЗачету.Организация = &ГоловнаяОрганизация
			|					И НДФЛКЗачету.Период <= &ДатаНДФЛ) КАК НДФЛРасчетыСБюджетом
			|			
			|			СГРУППИРОВАТЬ ПО
			|				НДФЛРасчетыСБюджетом.ФизЛицо,
			|				НДФЛРасчетыСБюджетом.НалоговыйПериод,
			|				НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента) КАК НДФЛРасчетыСБюджетомПоГодам
			|			ПО НДФЛРасчетыСБюджетомПоМесяцам.ФизЛицо = НДФЛРасчетыСБюджетомПоГодам.ФизЛицо
			|				И НДФЛРасчетыСБюджетомПоМесяцам.СтавкаНалогообложенияРезидента = НДФЛРасчетыСБюджетомПоГодам.СтавкаНалогообложенияРезидента
			|				И (НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетомПоМесяцам.МесяцНалоговогоПериода, ГОД) = НДФЛРасчетыСБюджетомПоГодам.НалоговыйПериод)
			|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|				НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
			|				НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
			|				НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
			|				СУММА(ВЫБОР
			|						КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|							ТОГДА НДФЛРасчетыСБюджетом.Налог
			|						ИНАЧЕ -НДФЛРасчетыСБюджетом.Налог
			|					КОНЕЦ) КАК СальдоПоНалогу,
			|				НДФЛРасчетыСБюджетом.КодПоОКАТО КАК КодПоОКАТО,
			|				НДФЛРасчетыСБюджетом.КПП КАК КПП,
			|				МАКСИМУМ(НДФЛРасчетыСБюджетом.Период) КАК Период,
			|				НДФЛРасчетыСБюджетом.ПодразделениеОрганизации КАК ПодразделениеОрганизации
			|			ИЗ
			|				РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
			|			ГДЕ
			|				НДФЛРасчетыСБюджетом.Регистратор <> &ДокументСсылка
			|				И НДФЛРасчетыСБюджетом.Организация = &ГоловнаяОрганизация
			|				И НДФЛРасчетыСБюджетом.ОбособленноеПодразделение = &ОбособленноеПодразделение
			|				И НДФЛРасчетыСБюджетом.ФизЛицо = &Физлицо
			|				И НДФЛРасчетыСБюджетом.Период <= &ДатаНДФЛ
			|			
			|			СГРУППИРОВАТЬ ПО
			|				НДФЛРасчетыСБюджетом.ФизЛицо,
			|				НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ),
			|				НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента,
			|				НДФЛРасчетыСБюджетом.КодПоОКАТО,
			|				НДФЛРасчетыСБюджетом.КПП,
			|				НДФЛРасчетыСБюджетом.ПодразделениеОрганизации) КАК НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО
			|			ПО НДФЛРасчетыСБюджетомПоМесяцам.ФизЛицо = НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.ФизЛицо
			|				И НДФЛРасчетыСБюджетомПоМесяцам.СтавкаНалогообложенияРезидента = НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.СтавкаНалогообложенияРезидента
			|				И НДФЛРасчетыСБюджетомПоМесяцам.МесяцНалоговогоПериода = НДФЛРасчетыСБюджетомПоМесяцамПоОКАТО.МесяцНалоговогоПериода
			|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|				НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
			|				НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
			|				НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
			|				СУММА(ВЫБОР
			|						КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|							ТОГДА НДФЛРасчетыСБюджетом.Налог
			|						ИНАЧЕ -НДФЛРасчетыСБюджетом.Налог
			|					КОНЕЦ) КАК СальдоПоНалогу
			|			ИЗ
			|				РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
			|			ГДЕ
			|				НДФЛРасчетыСБюджетом.Регистратор <> &ДокументСсылка
			|				И НДФЛРасчетыСБюджетом.Организация = &ГоловнаяОрганизация
			|				И НДФЛРасчетыСБюджетом.ОбособленноеПодразделение = &ОбособленноеПодразделение
			|				И НДФЛРасчетыСБюджетом.ФизЛицо = &Физлицо
			|				И НДФЛРасчетыСБюджетом.Период <= &ДатаНДФЛ
			|			
			|			СГРУППИРОВАТЬ ПО
			|				НДФЛРасчетыСБюджетом.ФизЛицо,
			|				НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ),
			|				НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента) КАК НДФЛРасчетыСБюджетомПоМесяцамПоОКАТОвсего
			|			ПО НДФЛРасчетыСБюджетомПоМесяцам.ФизЛицо = НДФЛРасчетыСБюджетомПоМесяцамПоОКАТОвсего.ФизЛицо
			|				И НДФЛРасчетыСБюджетомПоМесяцам.СтавкаНалогообложенияРезидента = НДФЛРасчетыСБюджетомПоМесяцамПоОКАТОвсего.СтавкаНалогообложенияРезидента
			|				И НДФЛРасчетыСБюджетомПоМесяцам.МесяцНалоговогоПериода = НДФЛРасчетыСБюджетомПоМесяцамПоОКАТОвсего.МесяцНалоговогоПериода
			|		ПО (ИСТИНА)
			|ГДЕ
			|	ЕСТЬNULL(НДФЛРасчетыСБюджетомПоМесяцам.СальдоПоНалогу, 0) > 0
			|	И ЕСТЬNULL(НДФЛРасчетыСБюджетомПоГодам.СальдоПоНалогу, 0) > 0
			|	И ЕСТЬNULL(СуммыВыплатИСальдоПоМесяцам.ВыплаченнаяСумма, 0) > 0
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизЛицо,
			|	СтавкаНалогообложенияРезидента,
			|	МесяцНалоговогоПериода,
			|	ДатаРегистрацииКодаОКАТО";
			
			Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
			КонМесПериодаПлВедомости = КонецМесяца(ПлатежнаяВедомость.ПериодРегистрации);
			Если ПлатежнаяВедомость.Дата > КонМесПериодаПлВедомости Тогда
				ДатаОграничитель = Дата;
			Иначе
				ДатаОграничитель = КонМесПериодаПлВедомости;
			КонецЕсли;
			Запрос.УстановитьПараметр("ДатаНДФЛ", ДатаОграничитель);
			Запрос.УстановитьПараметр("ФизЛицо", Контрагент);
			Запрос.УстановитьПараметр("ПлатежнаяВедомость", ПлатежнаяВедомость);
			Запрос.УстановитьПараметр("ОбособленноеПодразделение", Организация);
			Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
			Запрос.УстановитьПараметр("Ставка13",Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13);
	
			ВременнаяТаблица = Новый ТаблицаЗначений;
			ВременнаяТаблица.Колонки.Добавить("КодПоОКАТО");
			ВременнаяТаблица.Колонки.Добавить("КПП");
			ВременнаяТаблица.Колонки.Добавить("ПодразделениеОрганизации");
			ВременнаяТаблица.Колонки.Добавить("СальдоПоОКАТО");
			
			Выборка= Запрос.Выполнить().Выбрать();
			
			Пока Выборка.СледующийПоЗначениюПоля("ФизЛицо") Цикл
				
				СуммаКВыплате = Выборка.ВыплаченнаяСумма;
				
				Пока Выборка.СледующийПоЗначениюПоля("СтавкаНалогообложенияРезидента") Цикл
					
					ОсталосьРаспределить = Мин(СуммаКВыплате,Выборка.СальдоПоНалогуЗаНалоговыйПериод);
					СуммаКВыплате = Макс(0,СуммаКВыплате - Выборка.СальдоПоНалогуЗаНалоговыйПериод);
					
					Пока Выборка.СледующийПоЗначениюПоля("МесяцНалоговогоПериода") И ОсталосьРаспределить > 0 Цикл

						
						// расчет суммы удерживаемого налога
						ПогашаемаяСумма = Мин(Выборка.СальдоПоНалогуЗаМесяц, ОсталосьРаспределить);
						ОсталосьРаспределить = ОсталосьРаспределить - ПогашаемаяСумма;
						
						Если Выборка.ВсегоЗаМесяцПоОКАТО = Выборка.СальдоПоОКАТО Или Выборка.ВсегоЗаМесяцПоОКАТО = 0 Тогда
							
							// запись удержания
							Движение = Движения.НДФЛРасчетыСБюджетом.Добавить();
							
							ЗаполнитьЗначенияСвойств(Движение,Выборка); // ФизЛицо, СтавкаНалогообложенияРезидента, МесяцНалоговогоПериода 
																		// КодПоОКАТО, КПП, ПодразделениеОрганизации
							
							//свойства
							Движение.Период      = Дата;
							Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
							//измерения
							Движение.Организация = ГоловнаяОрганизация;
							// ресурсы
							Движение.Налог       = ПогашаемаяСумма;
							// реквизиты
							Движение.ВидСтроки	 = Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Удержание;
							Движение.ОбособленноеПодразделение = Организация;
							
						Иначе
							
							ФизЛицо = Выборка.ФизЛицо;
							СтавкаНалогообложенияРезидента = Выборка.СтавкаНалогообложенияРезидента;
							МесяцНалоговогоПериода = Выборка.МесяцНалоговогоПериода;
							
							ВременнаяТаблица.Очистить();
							Пока Выборка.Следующий() Цикл
								ЗаполнитьЗначенияСвойств(ВременнаяТаблица.Добавить(),Выборка);
							КонецЦикла;
							
							Результат = ОбщегоНазначения.РаспределитьПропорционально(ПогашаемаяСумма,ВременнаяТаблица.ВыгрузитьКолонку("СальдоПоОКАТО"));
							
							Для каждого СтрокаОКАТО Из ВременнаяТаблица Цикл
								
								// запись удержания
								Движение = Движения.НДФЛРасчетыСБюджетом.Добавить();
								//свойства
								Движение.Период      = Дата;
								Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
								//измерения
								Движение.Физлицо     = ФизЛицо;
								Движение.Организация = ГоловнаяОрганизация;
								Движение.СтавкаНалогообложенияРезидента = СтавкаНалогообложенияРезидента;
								Движение.МесяцНалоговогоПериода = МесяцНалоговогоПериода;
								// ресурсы
								Движение.Налог       = Результат[ВременнаяТаблица.Индекс(СтрокаОКАТО)];
								// реквизиты
								Движение.ВидСтроки = Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Удержание;
								Движение.ОбособленноеПодразделение = Организация;
								Движение.КодПоОКАТО	 = СтрокаОКАТО.КодПоОКАТО; 
								Движение.КПП		 = СтрокаОКАТО.КПП; 
								Движение.ПодразделениеОрганизации = СтрокаОКАТО.ПодразделениеОрганизации; 
								
							КонецЦикла; 
						КонецЕсли;
						
					КонецЦикла;
				КонецЦикла; 
				
			КонецЦикла; 
			
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРКО.ВыплатаДепонентов Тогда
			
			Для каждого СтрокаТЧ Из ВыплатаДепонентов Цикл
				
				Если СтрокаТЧ.СуммаКВыплате = 0 Тогда
					Возврат
				КонецЕсли;
				
				Движение = Движения.ВзаиморасчетыСДепонентамиОрганизаций.Добавить();
				
				// Свойства
				Движение.Период      = Дата;
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				// Измерения
				Движение.Организация = Организация;
				Движение.ФизЛицо     = СтрокаТЧ.ФизЛицо;
				Движение.Ведомость   = СтрокаТЧ.Ведомость;
				
				// Ресурсы
				Движение.Сумма		 = СтрокаТЧ.СуммаКВыплате;
				
			КонецЦикла; 
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// удаление движений - документ не удаляеи движения автоматически
Процедура УдалитьДвижения()

	Если НЕ мУдалятьДвижения Тогда
		Возврат;
	КонецЕсли;
	
	Если мПрежнееОтражатьВУправленческомУчете Тогда
		Движения.ВзаиморасчетыСРаботниками.Очистить();
		Движения.ВзаиморасчетыСРаботниками.Записать();
	Иначе
		Движения.ВзаиморасчетыСРаботникамиОрганизаций.Очистить();
		Движения.ВзаиморасчетыСРаботникамиОрганизаций.Записать();
		Движения.СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям.Очистить();
		Движения.СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям.Записать();
		Движения.ВзаиморасчетыСДепонентамиОрганизаций.Очистить();
		Движения.ВзаиморасчетыСДепонентамиОрганизаций.Записать();
		Движения.НДФЛРасчетыСБюджетом.Очистить();
		Движения.НДФЛРасчетыСБюджетом.Записать();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	// Установим прежнее состояние ОтражатьВУправленческомУчете
	мПрежнееОтражатьВУправленческомУчете = Ссылка.ОтражатьВУправленческомУчете;
	
	мУдалятьДвижения = Не ЭтоНовый();
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		// получим реквизиты табличной части
		Если ОтражатьВБухгалтерскомУчете Тогда
			Если ВидОперации = Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыПоВедомостям Тогда
				Запрос = Новый Запрос;

				// Установим параметры запроса
				Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
				Запрос.УстановитьПараметр("Выплачено", Перечисления.ВыплаченностьЗарплаты.Выплачено);
				Запрос.УстановитьПараметр("Ведомости", ВыплатаЗаработнойПлаты.ВыгрузитьКолонку("Ведомость"));
				
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ЗарплатаКВыплатеОрганизацииЗарплата.Физлицо,
				|	ЗарплатаКВыплатеОрганизацииЗарплата.Физлицо.Наименование КАК ФизлицоНаименование,
				|	СУММА(ЗарплатаКВыплатеОрганизацииЗарплата.Сумма + ЗарплатаКВыплатеОрганизацииЗарплата.КомпенсацияЗаЗадержкуЗарплаты) КАК Сумма
				|ИЗ
				|	Документ.ЗарплатаКВыплатеОрганизаций.Зарплата КАК ЗарплатаКВыплатеОрганизацииЗарплата
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям КАК РанееВыплаченныеСуммы
				|		ПО ЗарплатаКВыплатеОрганизацииЗарплата.Ссылка = РанееВыплаченныеСуммы.Ведомость
				|			И ЗарплатаКВыплатеОрганизацииЗарплата.Физлицо = РанееВыплаченныеСуммы.Физлицо
				|			И (РанееВыплаченныеСуммы.Регистратор <> &ДокументСсылка)
				|ГДЕ
				|	ЗарплатаКВыплатеОрганизацииЗарплата.Ссылка В(&Ведомости)
				|	И ЗарплатаКВыплатеОрганизацииЗарплата.Сумма + ЗарплатаКВыплатеОрганизацииЗарплата.КомпенсацияЗаЗадержкуЗарплаты <> 0
				|	И ЗарплатаКВыплатеОрганизацииЗарплата.ВыплаченностьЗарплаты = &Выплачено
				|	И РанееВыплаченныеСуммы.Физлицо ЕСТЬ NULL 
				|
				|СГРУППИРОВАТЬ ПО
				|	ЗарплатаКВыплатеОрганизацииЗарплата.Физлицо
				|
				|УПОРЯДОЧИТЬ ПО
				|	ФизлицоНаименование";

				Работники.Загрузить(Запрос.Выполнить().Выгрузить());
				
			ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыРаботнику Тогда
				КраткийСоставДокумента = Строка(Контрагент);
			ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРКО.ВыплатаДепонентов Тогда
				Работники.Очистить();
			КонецЕсли;
				
		Иначе //Если ОтражатьВУправленческомУчете Тогда
			
			Запрос = Новый Запрос;

			// Установим параметры запроса
			Запрос.УстановитьПараметр("Ведомости", ВыплатаЗаработнойПлаты.ВыгрузитьКолонку("Ведомость"));
				
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗарплатаКВыплатеЗарплата.Физлицо,
			|	ЗарплатаКВыплатеЗарплата.Физлицо.Наименование КАК ФизлицоНаименование,
			|	СУММА(ЗарплатаКВыплатеЗарплата.Сумма) КАК Сумма
			|ИЗ
			|	Документ.ЗарплатаКВыплате.Зарплата КАК ЗарплатаКВыплатеЗарплата
			|ГДЕ
			|	ЗарплатаКВыплатеЗарплата.Ссылка В(&Ведомости)
			|	И ЗарплатаКВыплатеЗарплата.Сумма <> 0
			|
			|СГРУППИРОВАТЬ ПО
			|	ЗарплатаКВыплатеЗарплата.Физлицо,
			|	ЗарплатаКВыплатеЗарплата.Физлицо.Наименование
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизлицоНаименование";

			Работники.Загрузить(Запрос.Выполнить().Выгрузить());
				
		КонецЕсли;
		
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		
		Работники.Очистить();
		
	КонецЕсли;
	
	Если ОтражатьВУправленческомУчете Тогда
		КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(Работники,, "Физлицо");
	ИначеЕсли ВидОперации <> Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыРаботнику Тогда
		КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(Работники, ВыплатаДепонентов, "Физлицо");
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	// удалим движения
	УдалитьДвижения();
КонецПроцедуры

Процедура ОбработкаЗаполнения(Основание)

		
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ЗарплатаКВыплатеОрганизаций")	Тогда
		// Заполним реквизиты из стандартного набора по документу основанию.
		ОбщегоНазначения.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, Основание);

		Если Основание.СпособВыплаты = Перечисления.СпособыВыплатыЗарплаты.ЧерезБанк Тогда
			Сообщить("Платежная ведомость оформлена на перечисление в банк.");
			Возврат;
		КонецЕсли;
		ВидОперации = Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыПоВедомостям;
		ЗаполнитьПоЗарплатеКВыплатеОрганизацииРегл(Основание);

	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ЗарплатаКВыплате")	Тогда
        // Заполним реквизиты из стандартного набора по документу основанию.
		ОбщегоНазначения.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, Основание);

		ВидОперации = Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыПоВедомостям;
		ЗаполнитьПоЗарплатеКВыплатеУпр(Основание);

	КонецЕсли;
		
КонецПроцедуры // ОбработкаЗаполнения()

Процедура ОбработкаПроведения(Отказ, Режим)

	// удалим движения
	УдалитьДвижения();
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	ПроверитьЗаполнениеДокументаУпр(Отказ, Режим, Заголовок);
	ПроверитьЗаполнениеДокументаРегл(Отказ, Заголовок);

	Если Не Отказ Тогда

		ДвиженияПоЗарплатеУпр();
		ДвиженияПоЗарплатеРегл();
		
	КонецЕсли;

КонецПроцедуры // ОбработкаПроведения
