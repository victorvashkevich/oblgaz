



////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Выполняет автоматическое заполнение документа по данным документа и переданным параметрам
// 
// Параметры: 
//  нет
//
// Возвращаемое значение:
//  Логическое - удалось ли выполнить автоматическое заполнение документа
//
Функция Автозаполнение(ФизЛицо = Неопределено) Экспорт
	
	
	Запрос = Новый Запрос;
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Договор = Справочники.ОсобыеУсловияТруда.НайтиПоКоду("ДОГОВОР");
	Если Договор.Пустая() тогда
		ДоговорОбъект = Справочники.ОсобыеУсловияТруда.СоздатьЭлемент();
		ДоговорОбъект.Код = "ДОГОВОР";
		ДоговорОбъект.Наименование = "Работа, выполняемая на основе гражданско-правовых договоров (предметом которых являются оказание услуг, выполнение работ и создание объектов интеллектуальной собственности) у юридических лиц и индивидуальных предпринимателей";
		ДоговорОбъект.Записать();
		Договор = ДоговорОбъект.Ссылка;
	КонецЕсли;
	Дети = Справочники.ОсобыеУсловияТруда.НайтиПоКоду("ДЕТИ");
	Если Дети.Пустая() тогда
		ДетиОбъект = Справочники.ОсобыеУсловияТруда.СоздатьЭлемент();
		ДетиОбъект.Код = "ДЕТИ";
		ДетиОбъект.Наименование = "Период отпуска по уходу за ребенком и ухода за детьми до достижения ими возраста 3 лет";
		ДетиОбъект.Записать();
		Дети = ДетиОбъект.Ссылка;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("КонецПрошлогоГода", НачалоГода(ДатаРегистрации)-1);
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(ДатаРегистрации));
	Запрос.УстановитьПараметр("КонецГода", КонецГода(ДатаРегистрации)); 
	Запрос.УстановитьПараметр("СписокОтчитывающихсяПодразделений", Организация);
	Запрос.УстановитьПараметр("Увольнение", Перечисления.ПричиныИзмененияСостояния.Увольнение);
	Запрос.УстановитьПараметр("ВнСовместитель", Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
	Запрос.УстановитьПараметр("СписокОтчитывающихсяПодразделений", Организация);
	Запрос.УстановитьПараметр("ДоходБольничныйФСЗН", Справочники.ДоходыЕСН.БольничныйИзФСЗН);
	Запрос.УстановитьПараметр("ДоходФСЗН", Перечисления.ДоходыФСС_НС.Облагается);
	Запрос.УстановитьПараметр("ДатаПодачиСведений", ДатаРегистрации);// дата акуальности сведений о доходах и налогах
	Запрос.УстановитьПараметр("Договор",Договор);  
	Запрос.УстановитьПараметр("Дети",Дети);
	Запрос.УстановитьПараметр("ПоВсемФизЛицам", ФизЛицо = Неопределено);
	Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
	Запрос.УстановитьПараметр("ПустойДоговор", Документы.ДоговорНаВыполнениеРаботСФизЛицом.ПустаяСсылка());
	
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСНИсчисленный.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ЕСНИсчисленный.ПериодВзаиморасчетов, МЕСЯЦ) КАК ПериодВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА ЕСНИсчисленный.ПроцентФСЗН ЕСТЬ NULL 
	|			ТОГДА 35
	|		ИНАЧЕ ЕСНИсчисленный.ПроцентФСЗН + 1
	|	КОНЕЦ КАК ПроцентФСЗНОбщий,
	|	СУММА(ЕСНИсчисленный.ФСЗН) КАК ВзносыФСЗН,
	|	СУММА(ЕСНИсчисленный.ПенсионныйФонд) КАК ВзносыПН,
	|	СУММА(ЕСНИсчисленный.ФСЗН + ЕСНИсчисленный.ПенсионныйФонд) КАК Взносы
	|ПОМЕСТИТЬ ВТФСЗНИсчисленныйОбщий
	|ИЗ
	|	РегистрНакопления.ЕСНИсчисленный КАК ЕСНИсчисленный
	|ГДЕ
	|	ЕСНИсчисленный.ПериодВзаиморасчетов МЕЖДУ &НачалоГода И &КонецГода
	|	И ЕСНИсчисленный.Период <= &ДатаПодачиСведений
	|	И ЕСНИсчисленный.Организация = &СписокОтчитывающихсяПодразделений
	|	И (&ПоВсемФизЛицам
	|			ИЛИ ЕСНИсчисленный.ФизЛицо = &ФизЛицо)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНИсчисленный.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ЕСНИсчисленный.ПериодВзаиморасчетов, МЕСЯЦ),
	|	ЕСНИсчисленный.ПроцентФСЗН
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ПериодВзаиморасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФСЗНИсчисленныйОбщий.ФизЛицо КАК ФизЛицо,
	|	ФСЗНИсчисленныйОбщий.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
	|	ФСЗНИсчисленныйОбщий.ПроцентФСЗНОбщий,
	|	1 КАК ТарифРаботника,
	|	6 КАК ТарифСоциальноеСтрахование,
	|	ФСЗНИсчисленныйОбщий.ПроцентФСЗНОбщий - 6 - 1 КАК ТарифПенисонноеСтрахование,
	|	ФСЗНИсчисленныйОбщий.Взносы,
	|	ФСЗНИсчисленныйОбщий.ВзносыФСЗН,
	|	ФСЗНИсчисленныйОбщий.ВзносыПН
	|ПОМЕСТИТЬ ВТФСЗНИсчисленный
	|ИЗ
	|	ВТФСЗНИсчисленныйОбщий КАК ФСЗНИсчисленныйОбщий
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ПериодВзаиморасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ЕСНСведенияОДоходах.КодДоходаЕСН = &ДоходБольничныйФСЗН
	|				ТОГДА ЕСНСведенияОДоходах.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Пособия,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСНСведенияОДоходах.ДоходФСЗН = &ДоходФСЗН
	|				ТОГДА ЕСНСведенияОДоходах.БазаФСЗН
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Выплаты,
	|	ЕСНСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ЕСНСведенияОДоходах.ПериодВзаиморасчетов, МЕСЯЦ) КАК ПериодВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА ЕСНСведенияОДоходах.ДокументОснование = &ПустойДоговор
	|			ТОГДА ЕСНСведенияОДоходах.ФизЛицо.СтатусКатегория
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛиц.ДоговорПодряда)
	|	КОНЕЦ КАК Категория,
	|	ЕСНСведенияОДоходах.ДокументОснование
	|ПОМЕСТИТЬ ВТФСЗНДоходы
	|ИЗ
	|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	|ГДЕ
	|	ЕСНСведенияОДоходах.ПериодВзаиморасчетов МЕЖДУ &НачалоГода И &КонецГода
	|	И ЕСНСведенияОДоходах.Период <= &ДатаПодачиСведений
	|	И ЕСНСведенияОДоходах.Организация = &СписокОтчитывающихсяПодразделений
	|	И (&ПоВсемФизЛицам
	|			ИЛИ ЕСНСведенияОДоходах.ФизЛицо = &ФизЛицо)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНСведенияОДоходах.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ЕСНСведенияОДоходах.ПериодВзаиморасчетов, МЕСЯЦ),
	|	ЕСНСведенияОДоходах.ДокументОснование,
	|	ВЫБОР
	|		КОГДА ЕСНСведенияОДоходах.ДокументОснование ЕСТЬ NULL 
	|			ТОГДА ЕСНСведенияОДоходах.ФизЛицо.СтатусКатегория
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛиц.ДоговорПодряда)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСНСведенияОДоходах.ДокументОснование = &ПустойДоговор
	|			ТОГДА ЕСНСведенияОДоходах.ФизЛицо.СтатусКатегория
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛиц.ДоговорПодряда)
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ПериодВзаиморасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Периоды.ПериодВзаиморасчетов, МЕСЯЦ) КАК ПериодВзаиморасчетов,
	|	ГражданствоФизЛиц.ФизЛицо КАК Физлицо
	|ПОМЕСТИТЬ ВТДанныеОПравеНаПенсию
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
	|		ГражданствоФизЛиц.ФизЛицо КАК Физлицо,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТФСЗНДоходы КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО Периоды.ПериодВзаиморасчетов >= ГражданствоФизЛиц.Период
	 |         		И Периоды.ФизЛицо = ГражданствоФизЛиц.ФизЛицо 
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ГражданствоФизЛиц.ФизЛицо,
	|		Периоды.ПериодВзаиморасчетов) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО (ГражданствоФизЛиц.Период = Периоды.ПериодРегистра)
	|			И Периоды.ПериодВзаиморасчетов >= ГражданствоФизЛиц.Период
	|			И (ГражданствоФизЛиц.ФизЛицо = Периоды.Физлицо)
	|			И (ГражданствоФизЛиц.НеИмеетПравоНаПенсию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	ПериодВзаиморасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Периоды.ПериодВзаиморасчетов, МЕСЯЦ) КАК ПериодВзаиморасчетов,
	|	СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
	|	СведенияОбИнвалидностиФизлиц.ДатаВыдачи КАК ДатаВыдачиСправки
	|ПОМЕСТИТЬ ВТДанныеОИнвалидности
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
	|		СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
	|		МАКСИМУМ(СведенияОбИнвалидностиФизлиц.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТФСЗНДоходы КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|			ПО (КОНЕЦПЕРИОДА(Периоды.ПериодВзаиморасчетов, МЕСЯЦ) >= СведенияОбИнвалидностиФизлиц.Период)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СведенияОбИнвалидностиФизлиц.Физлицо,
	|		Периоды.ПериодВзаиморасчетов) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|		ПО (СведенияОбИнвалидностиФизлиц.Период = Периоды.ПериодВзаиморасчетов)
	|			И (СведенияОбИнвалидностиФизлиц.Физлицо = Периоды.Физлицо)
	|			И (СведенияОбИнвалидностиФизлиц.Инвалидность)
	|			И (СведенияОбИнвалидностиФизлиц.ГруппаИнвалидности = ""I""
	|				ИЛИ СведенияОбИнвалидностиФизлиц.ГруппаИнвалидности = ""II"")
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	ПериодВзаиморасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТФСЗНДоходы.ФизЛицо КАК ФизЛицо,
	|	ВТФСЗНДоходы.ПериодВзаиморасчетов КАК Месяц,
	|	ВТФСЗНДоходы.Категория КАК Категория,
	|	ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) КАК Выплаты,
	|	ЕСТЬNULL(ВТФСЗНДоходы.Пособия, 0) КАК Пособия,
	|	ВТФСЗНДоходы.ДокументОснование КАК Договор,
	|	ЕСТЬNULL(ВТФСЗНИсчисленный.ВзносыФСЗН, 0) КАК ВзносыФСЗН,
	//vvv врменная мера,т.к. небыло движений в 2013 году по РН "ЕСНИсчисленный"
	//|	ЕСТЬNULL(ВТФСЗНИсчисленный.Взносы, 0) КАК Взносы,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * 35 / 100 КАК ЧИСЛО(15, 0)) КАК Взносы,
	//
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * ЕСТЬNULL(ВТФСЗНИсчисленный.ТарифПенисонноеСтрахование, 0) / 100 КАК ЧИСЛО(15, 0)) КАК СуммаВзносовНаПенсионноеСтрахование,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * ЕСТЬNULL(ВТФСЗНИсчисленный.ТарифПенисонноеСтрахование, 0) / 100 КАК ЧИСЛО(15, 0))) = 0
	|			ТОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * 0.35 КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * 0.28 КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * 0.01 КАК ЧИСЛО(15, 0)))
	|		ИНАЧЕ (ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * 0.35 КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * 0.29 КАК ЧИСЛО(15, 0)))
	|	КОНЕЦ КАК СуммаВзносовНаСоциальноеСтрахование,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * 0.01 КАК ЧИСЛО(15, 0)) КАК СуммаВзносовРаботнику,
	|	ЕСТЬNULL(ВТФСЗНИсчисленный.ТарифРаботника, 1) КАК ТарифРаботнику,
	|	ЕСТЬNULL(ВТФСЗНИсчисленный.ТарифСоциальноеСтрахование, 6) КАК ТарифНаСоциальноеСтрахование,
	|	ЕСТЬNULL(ВТФСЗНИсчисленный.ТарифПенисонноеСтрахование, 28) КАК ТарифНаПенсионноеСтрахование,
	|	ЕСТЬNULL(ВТФСЗНИсчисленный.ПроцентФСЗНОбщий, 35) КАК ТарифВзносов,
	|	ВТФСЗНДоходы.ФизЛицо.СтраховойНомерПФР КАК ЛичныйНомер,
	|	ФИОФизЛицСрезПоследних.Фамилия КАК Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя КАК Имя,
	|	ФИОФизЛицСрезПоследних.Отчество КАК Отчество,
	|	ВТФСЗНДоходы.ДокументОснование.ДатаНачала КАК ДатаНачалаРабот,
	|	ВТФСЗНДоходы.ДокументОснование.ДатаОкончания КАК ДатаОкончанияРабот,
	|	ЕСТЬNULL(ВТФСЗНДоходы.ДокументОснование.НомерДоговора, ВТФСЗНДоходы.ДокументОснование.Номер) КАК НомерДоговора,
	|	ВТФСЗНДоходы.ДокументОснование.Дата КАК ДатаДоговора,
	|	ВЫБОР
	|		КОГДА ДанныеОИнвалидности.ДатаВыдачиСправки ЕСТЬ НЕ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА ДанныеОИнвалидности.ДатаВыдачиСправки >= КОНЕЦПЕРИОДА(ВТФСЗНДоходы.ПериодВзаиморасчетов, МЕСЯЦ)
	|						ТОГДА ДанныеОИнвалидности.ДатаВыдачиСправки
	|					ИНАЧЕ НАЧАЛОПЕРИОДА(ВТФСЗНДоходы.ПериодВзаиморасчетов, МЕСЯЦ)
	|				КОНЕЦ
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ДатаИзмененияТарифа
	|ИЗ
	|	ВТФСЗНДоходы КАК ВТФСЗНДоходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФСЗНИсчисленный КАК ВТФСЗНИсчисленный
	|		ПО ВТФСЗНДоходы.ФизЛицо = ВТФСЗНИсчисленный.ФизЛицо
	|			И ВТФСЗНДоходы.ПериодВзаиморасчетов = ВТФСЗНИсчисленный.ПериодВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&КонецГода, ) КАК ФИОФизЛицСрезПоследних
	|		ПО ВТФСЗНДоходы.ФизЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОПравеНаПенсию КАК ДанныеОПравеНаПенсию
	|		ПО ВТФСЗНДоходы.ФизЛицо = ДанныеОПравеНаПенсию.Физлицо
	|			И ВТФСЗНДоходы.ПериодВзаиморасчетов = ДанныеОПравеНаПенсию.ПериодВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОИнвалидности КАК ДанныеОИнвалидности
	|		ПО ВТФСЗНДоходы.ФизЛицо = ДанныеОИнвалидности.Физлицо
	|			И ВТФСЗНДоходы.ПериодВзаиморасчетов >= ДанныеОИнвалидности.ПериодВзаиморасчетов
	|			И (НАЧАЛОПЕРИОДА(ВТФСЗНДоходы.ПериодВзаиморасчетов, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДанныеОИнвалидности.ДатаВыдачиСправки, МЕСЯЦ))
	|ГДЕ
	|	ДанныеОПравеНаПенсию.Физлицо ЕСТЬ NULL 
	|ИТОГИ
	|	СУММА(Выплаты)
	|ПО
	|	ФизЛицо,
	|	Месяц";
	
	
	Результат = Запрос.Выполнить();
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("ФизЛицо");
	СтруктураПоиска.Вставить("Категория");
	СтруктураПоиска.Вставить("Договор");
	
	ВыборкаПоФизЛицу = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоФизЛицу.Следующий() Цикл
		ВыборкаПоМесяцам = ВыборкаПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоМесяцам.Следующий() Цикл
			ВсегоВыплат = ВыборкаПоМесяцам.Выплаты;
			ВыборкаПоДоговорам = ВыборкаПоМесяцам.Выбрать();
			Пока ВыборкаПоДоговорам.Следующий() Цикл
				СтруктураПоиска.ФизЛицо = ВыборкаПоДоговорам.ФизЛицо;
				СтруктураПоиска.Категория = ВыборкаПоДоговорам.Категория;
				СтруктураПоиска.Договор = ВыборкаПоДоговорам.Договор;
				НайденныеСтроки = РаботникиОрганизации.НайтиСтроки(СтруктураПоиска);
				Если НайденныеСтроки.Количество() = 0 Тогда
					СтрокаРаботник = РаботникиОрганизации.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРаботник,ВыборкаПоДоговорам);
				КонецЕсли;
				Если ЗначениеЗаполнено(ВыборкаПоДоговорам.Договор) Тогда
					НайденныеСтрокиСтажа =  СведенияОСтаже.НайтиСтроки(СтруктураПоиска);
					Если НайденныеСтрокиСтажа.Количество() = 0 Тогда
						СтрокаСтажа = СведенияОСтаже.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаСтажа,ВыборкаПоДоговорам);
						СтрокаСтажа.ВидДеятельности = Договор;
					КонецЕсли;
				КонецЕсли;
				СтрокаВзносов =  СведенияОВзносах.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаВзносов,ВыборкаПоДоговорам);
				Если ВсегоВыплат <> 0 Тогда
					//Взносы = ВыборкаПоДоговорам.Взносы*ВыборкаПоДоговорам.Выплаты/ВсегоВыплат;
					//СуммаВзносовНаСоциальноеСтрахование = ВыборкаПоДоговорам.СуммаВзносовНаСоциальноеСтрахование*ВыборкаПоДоговорам.Выплаты/ВсегоВыплат;
					//СуммаВзносовНаПенсионноеСтрахование = ВыборкаПоДоговорам.СуммаВзносовНаПенсионноеСтрахование*ВыборкаПоДоговорам.Выплаты/ВсегоВыплат;
					//СуммаВзносовРаботнику			 	= ВыборкаПоДоговорам.СуммаВзносовРаботнику*ВыборкаПоДоговорам.Выплаты/ВсегоВыплат;
					Взносы = ВыборкаПоДоговорам.Взносы;
					СуммаВзносовНаСоциальноеСтрахование = ВыборкаПоДоговорам.СуммаВзносовНаСоциальноеСтрахование;
					СуммаВзносовНаПенсионноеСтрахование = ВыборкаПоДоговорам.СуммаВзносовНаПенсионноеСтрахование;
					СуммаВзносовРаботнику			 	= ВыборкаПоДоговорам.СуммаВзносовРаботнику;
					
					
				Иначе
					Взносы = 0;
					СуммаВзносовНаСоциальноеСтрахование = 0;
					СуммаВзносовНаПенсионноеСтрахование = 0;
					СуммаВзносовРаботнику			 	= 0;
					
				КонецЕсли;
				СтрокаВзносов.Взносы = Взносы;
				СтрокаВзносов.СуммаВзносовНаСоциальноеСтрахование = СуммаВзносовНаСоциальноеСтрахование;
				СтрокаВзносов.СуммаВзносовНаПенсионноеСтрахование = СуммаВзносовНаПенсионноеСтрахование;
				СтрокаВзносов.СуммаВзносовРаботнику			 	  = СуммаВзносовРаботнику;
				
				СтрокаВзносов.СуммаУплаченныхВзносовНаСоциальноеСтрахование = СуммаВзносовНаСоциальноеСтрахование;
				СтрокаВзносов.СуммаУплаченныхВзносовНаПенсионноеСтрахование = СуммаВзносовНаПенсионноеСтрахование;
				СтрокаВзносов.СуммаУплаченныхВзносовРаботником			 	= СуммаВзносовРаботнику;
				
				//vvv взносыврем
				СтрокаСтажа=СведенияОСтаже.Добавить();
				СтрокаСтажа.ВидДеятельности=Справочники.ОсобыеУсловияТруда.ВзносыВрем;
				СтрокаСтажа.ДатаНачалаРабот=НачалоМесяца(ВыборкаПоМесяцам.Месяц);
				СтрокаСтажа.ДатаОкончанияРабот=КонецМесяца(ВыборкаПоМесяцам.Месяц);
				СтрокаСтажа.Категория=ВыборкаПоДоговорам.Категория;
				СтрокаСтажа.ФизЛицо=ВыборкаПоФизЛицу.ФизЛицо;
				//
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ДатыОтпусковТекст = 
	"ВЫБРАТЬ
	|	Работники.ФизЛицо КАК ФизЛицо,
	|	Работники.ДатаС КАК ДатаС,
	|	Работники.Организация КАК Организация,
	|	&Дети КАК ВидДеятельности,
	|	Работники.ПериодЗавершения КАК ПериодЗавершения
	|ПОМЕСТИТЬ ВТДатыОтпусков
	|ИЗ
	|	(ВЫБРАТЬ
	|		СостояниеРаботниковОрганизацийСрезПоследних.Сотрудник.Физлицо КАК ФизЛицо,
	|		&НачалоГода КАК ДатаС,
	|		СостояниеРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
	|		СостояниеРаботниковОрганизацийСрезПоследних.ПериодЗавершения КАК ПериодЗавершения
	|	ИЗ
	|		РегистрСведений.СостояниеРаботниковОрганизаций.СрезПоследних(
	|				&КонецПрошлогоГода,
	|				Организация = &СписокОтчитывающихсяПодразделений
	|					И Сотрудник.ВидЗанятости <> &ВнСовместитель
	|					И Организация = &СписокОтчитывающихсяПодразделений
	|					И (&ПоВсемФизЛицам
	|						ИЛИ Сотрудник.Физлицо = &ФизЛицо)) КАК СостояниеРаботниковОрганизацийСрезПоследних
	|	ГДЕ
	|		СостояниеРаботниковОрганизацийСрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СостояниеРаботниковОрганизаций.Сотрудник.Физлицо,
	|		СостояниеРаботниковОрганизаций.Период,
	|		СостояниеРаботниковОрганизаций.Организация,
	|		СостояниеРаботниковОрганизаций.ПериодЗавершения
	|	ИЗ
	|		РегистрСведений.СостояниеРаботниковОрганизаций КАК СостояниеРаботниковОрганизаций
	|	ГДЕ
	|		СостояниеРаботниковОрганизаций.Организация = &СписокОтчитывающихсяПодразделений
	|		И СостояниеРаботниковОрганизаций.Период МЕЖДУ &НачалоГода И &КонецГода
	|		И СостояниеРаботниковОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком)
	|		И (&ПоВсемФизЛицам
	|				ИЛИ СостояниеРаботниковОрганизаций.Сотрудник.Физлицо = &ФизЛицо)) КАК Работники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Работники.Сотрудник,
	|	Работники.ФизЛицо КАК ФизЛицо,
	|	Работники.ДатаС КАК ДатаС,
	|	Работники.Организация КАК Организация,
	|	Работники.ВидДеятельности КАК ВидДеятельности,
	|	Работники.КодПоОКПДТР КАК КодПоОКПДТР
	|ПОМЕСТИТЬ ВТДатыДвижений
	|ИЗ
	|	(ВЫБРАТЬ
	|		РаботникиОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
	|		РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо КАК ФизЛицо,
	|		&НачалоГода КАК ДатаС,
	|		РаботникиОрганизацийСрезПоследних.Организация КАК Организация,
	|		РаботникиОрганизацийСрезПоследних.ВидДеятельностиИзмерение КАК ВидДеятельности,
	|		РаботникиОрганизацийСрезПоследних.Должность.КодПоОКПДТР КАК КодПоОКПДТР
	|	ИЗ
	|		РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&КонецПрошлогоГода,
	|				Организация = &СписокОтчитывающихсяПодразделений
	|					И Сотрудник.ВидЗанятости <> &ВнСовместитель
	|					И НЕ ВидДеятельностиИзмерение.ПриминяетсяДляПУ6
	|					И (&ПоВсемФизЛицам
	|						ИЛИ Сотрудник.Физлицо = &ФизЛицо)) КАК РаботникиОрганизацийСрезПоследних
	|	ГДЕ
	|		РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния <> &Увольнение
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РаботникиОрганизаций.Сотрудник,
	|		РаботникиОрганизаций.Сотрудник.Физлицо,
	|		РаботникиОрганизаций.Период,
	|		РаботникиОрганизаций.Организация,
	|		РаботникиОрганизаций.ВидДеятельностиИзмерение,
	|		РаботникиОрганизаций.Должность.КодПоОКПДТР
	|	ИЗ
	|		РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|	ГДЕ
	|		РаботникиОрганизаций.Организация = &СписокОтчитывающихсяПодразделений
	|		И РаботникиОрганизаций.Период МЕЖДУ &НачалоГода И &КонецГода
	|		И РаботникиОрганизаций.ПричинаИзмененияСостояния <> &Увольнение
	|		И РаботникиОрганизаций.Сотрудник.ВидЗанятости <> &ВнСовместитель
	|		И НЕ РаботникиОрганизаций.ВидДеятельностиИзмерение.ПриминяетсяДляПУ6
	|		И (&ПоВсемФизЛицам
	|				ИЛИ РаботникиОрганизаций.Сотрудник.Физлицо = &ФизЛицо)) КАК Работники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыНазначений1.ВидДеятельности КАК ВидДеятельности,
	|	ДатыНазначений1.ФизЛицо КАК ФизЛицо,
	|	ДатыНазначений1.ФизЛицо.СтатусКатегория КАК Категория,
	|	ДатыНазначений1.ДатаС КАК ДатаНачалаРабот,
	|	ЕСТЬNULL(МИНИМУМ(ДОБАВИТЬКДАТЕ(ДатыНазначений2.Период, СЕКУНДА, -1)), &КонецГода) КАК ДатаОкончанияРабот,
	|	ДатыНазначений1.ФизЛицо.СтраховойНомерПФР КАК ЛичныйНомер,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество,
	|	ДатыНазначений1.КодПоОКПДТР КАК КодПоОКПДТР
	|ИЗ
	|	ВТДатыДвижений КАК ДатыНазначений1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ДатыНазначений2
	|		ПО (ДатыНазначений2.Сотрудник = ДатыНазначений1.Сотрудник)
	|			И (ДатыНазначений2.Организация = ДатыНазначений1.Организация)
	|			И (ДатыНазначений2.Период > ДатыНазначений1.ДатаС)
	|			И (ДатыНазначений2.Период < &КонецГода)
	|			И (ДатыНазначений2.Сотрудник.ВидЗанятости <> &ВнСовместитель)
	|			И (НЕ ДатыНазначений2.ВидДеятельностиИзмерение.ПриминяетсяДляПУ6)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&КонецГода, ) КАК ФИОФизЛицСрезПоследних
	|		ПО ДатыНазначений1.Сотрудник.Физлицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ДатыНазначений1.Сотрудник,
	|	ДатыНазначений1.ФизЛицо,
	|	ДатыНазначений1.ВидДеятельности,
	|	ДатыНазначений1.ДатаС,
	|	ДатыНазначений1.ФизЛицо.СтраховойНомерПФР,
	|	ДатыНазначений1.КодПоОКПДТР,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество,
	|	ДатыНазначений1.ФизЛицо.СтатусКатегория
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДатыОстпусков1.ВидДеятельности,
	|	ДатыОстпусков1.ФизЛицо,
	|	ДатыОстпусков1.ФизЛицо.СтатусКатегория,
	|	ДатыОстпусков1.ДатаС,
	|	ВЫБОР
	|		КОГДА ДатыОстпусков1.ПериодЗавершения > ЕСТЬNULL(МИНИМУМ(ДОБАВИТЬКДАТЕ(ДатыОстпусков2.Период, СЕКУНДА, -1)), &КонецГода)
	|			ТОГДА ЕСТЬNULL(МИНИМУМ(ДОБАВИТЬКДАТЕ(ДатыОстпусков2.Период, СЕКУНДА, -1)), &КонецГода)
	|		ИНАЧЕ ДатыОстпусков1.ПериодЗавершения
	|	КОНЕЦ,
	|	ДатыОстпусков1.ФизЛицо.СтраховойНомерПФР,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество,
	|	NULL
	|ИЗ
	|	ВТДатыОтпусков КАК ДатыОстпусков1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеРаботниковОрганизаций КАК ДатыОстпусков2
	|		ПО (ДатыОстпусков2.Организация = ДатыОстпусков1.Организация)
	|			И (ДатыОстпусков2.Период > ДатыОстпусков1.ДатаС)
	|			И (ДатыОстпусков2.Период < &КонецГода)
	|			И (ДатыОстпусков2.Сотрудник.ВидЗанятости <> &ВнСовместитель)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&КонецГода, ) КАК ФИОФизЛицСрезПоследних
	|		ПО ДатыОстпусков1.ФизЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ДатыОстпусков1.ФизЛицо,
	|	ДатыОстпусков1.ФизЛицо.СтатусКатегория,
	|	ДатыОстпусков1.ВидДеятельности,
	|	ДатыОстпусков1.ДатаС,
	|	ДатыОстпусков1.ПериодЗавершения,
	|	ДатыОстпусков1.ФизЛицо.СтраховойНомерПФР,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ДатыОтпусковТекст;
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	СтруктураПоиска.Договор = Документы.ДоговорНаВыполнениеРаботСФизЛицом.ПустаяСсылка();
	
	Пока Выборка.Следующий() Цикл
		СтруктураПоиска.ФизЛицо = Выборка.ФизЛицо;
		СтруктураПоиска.Категория = Выборка.Категория;
		НайденныеСтроки = РаботникиОрганизации.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() = 0 Тогда
			СтрокаРаботник = РаботникиОрганизации.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРаботник,Выборка);
		КонецЕсли;
		СтрокаСтажа = СведенияОСтаже.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтажа,Выборка);
	КонецЦикла;
	
	
	ПособияТекст = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТруда.Пособие) КАК ВидДеятельности,
	|	ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо КАК ФизЛицо,
	|	МИНИМУМ(ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало) КАК ДатаНачалаРабот,
	|	МАКСИМУМ(ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец) КАК ДатаОкончанияРабот,
	|	ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо.СтатусКатегория КАК Категория,
	|	ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо.СтраховойНомерПФР КАК ЛичныйНомер,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество,
	|	ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета,
	|	ОсновныеНачисленияРаботниковОрганизаций.ДатаНачалаСобытия
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&КонецГода, ) КАК ФИОФизЛицСрезПоследних
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|ГДЕ
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия МЕЖДУ &НачалоГода И &КонецГода
	|	И ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.БольничныйИзФСЗН)
	|	И ОсновныеНачисленияРаботниковОрганизаций.Организация = &СписокОтчитывающихсяПодразделений
	//vvv
	|	И (&ПоВсемФизЛицам
	|			ИЛИ ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо = &ФизЛицо)
	//
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо,
	|	ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо.СтатусКатегория,
	|	ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо.СтраховойНомерПФР,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество,
	|	ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета,
	|	ОсновныеНачисленияРаботниковОрганизаций.ДатаНачалаСобытия";  
	
	Запрос.Текст = ПособияТекст;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	СтруктураПоиска.Договор = Документы.ДоговорНаВыполнениеРаботСФизЛицом.ПустаяСсылка();
	
	Пока Выборка.Следующий() Цикл
		СтруктураПоиска.ФизЛицо = Выборка.ФизЛицо;
		СтруктураПоиска.Категория = Выборка.Категория;
		НайденныеСтроки = РаботникиОрганизации.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() = 0 Тогда
			СтрокаРаботник = РаботникиОрганизации.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРаботник,Выборка);
		КонецЕсли;
		СтрокаСтажа = СведенияОСтаже.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтажа,Выборка);
	КонецЦикла;
	
КонецФункции

// Выполняет автоматическое заполнение документа по данным документа и переданным параметрам
// 
// Параметры: 
//  нет
//
// Возвращаемое значение:
//  Логическое - удалось ли выполнить автоматическое заполнение документа
//
Функция Автозаполнение2014(ФизЛицо = Неопределено) Экспорт
	
	
	Запрос = Новый Запрос;
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Договор = Справочники.ОсобыеУсловияТруда.НайтиПоКоду("ДОГОВОР");
	Если Договор.Пустая() тогда
		ДоговорОбъект = Справочники.ОсобыеУсловияТруда.СоздатьЭлемент();
		ДоговорОбъект.Код = "ДОГОВОР";
		ДоговорОбъект.Наименование = "Работа, выполняемая на основе гражданско-правовых договоров (предметом которых являются оказание услуг, выполнение работ и создание объектов интеллектуальной собственности) у юридических лиц и индивидуальных предпринимателей";
		ДоговорОбъект.Записать();
		Договор = ДоговорОбъект.Ссылка;
	КонецЕсли;
	Дети = Справочники.ОсобыеУсловияТруда.НайтиПоКоду("ДЕТИ");
	Если Дети.Пустая() тогда
		ДетиОбъект = Справочники.ОсобыеУсловияТруда.СоздатьЭлемент();
		ДетиОбъект.Код = "ДЕТИ";
		ДетиОбъект.Наименование = "Период отпуска по уходу за ребенком и ухода за детьми до достижения ими возраста 3 лет";
		ДетиОбъект.Записать();
		Дети = ДетиОбъект.Ссылка;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("КонецПрошлогоГода", НачалоГода(ДатаРегистрации)-1);
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(ДатаРегистрации));
	//vvv
	//Запрос.УстановитьПараметр("КонецГода", КонецГода(ДатаРегистрации)); 
	Запрос.УстановитьПараметр("КонецГода", КонецМесяца(ДатаРегистрации)); 
	//
	Запрос.УстановитьПараметр("СписокОтчитывающихсяПодразделений", Организация);
	//vvv
	Запрос.УстановитьПараметр("СписокОтчитывающихсяПодразделений", ?(Организация.ГоловнаяОрганизация=Справочники.Организации.ПустаяСсылка(),Организация,Организация.ГоловнаяОрганизация));
	//
	Запрос.УстановитьПараметр("Увольнение", Перечисления.ПричиныИзмененияСостояния.Увольнение); 
	Запрос.УстановитьПараметр("ПриемНаРаботу", Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	Запрос.УстановитьПараметр("Перемещение", Перечисления.ПричиныИзмененияСостояния.Перемещение);


	Запрос.УстановитьПараметр("ВнСовместитель", Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
	Запрос.УстановитьПараметр("СписокОтчитывающихсяПодразделений", Организация);
	//vvv
	Запрос.УстановитьПараметр("СписокОтчитывающихсяПодразделений", ?(Организация.ГоловнаяОрганизация=Справочники.Организации.ПустаяСсылка(),Организация,Организация.ГоловнаяОрганизация));
	Запрос.УстановитьПараметр("ОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("ДатаДеноминации", ОбщегоНазначения.ПолучитьДатуДеноминации());
	//
	Запрос.УстановитьПараметр("ДоходБольничныйФСЗН", Справочники.ДоходыЕСН.БольничныйИзФСЗН);
	Запрос.УстановитьПараметр("ДоходФСЗН", Перечисления.ДоходыФСС_НС.Облагается);
	Запрос.УстановитьПараметр("ДатаПодачиСведений", ДатаРегистрации);// дата акуальности сведений о доходах и налогах
	Запрос.УстановитьПараметр("Договор",Договор);  
	Запрос.УстановитьПараметр("Дети",Дети);
	Запрос.УстановитьПараметр("ПоВсемФизЛицам", ФизЛицо = Неопределено);
	Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
	Запрос.УстановитьПараметр("ПустойДоговор", Документы.ДоговорНаВыполнениеРаботСФизЛицом.ПустаяСсылка());
	
		
	Запрос.Текст = 
	//vvv
	//"ВЫБРАТЬ	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	РаботникиОрганизаций.Сотрудник.Физлицо КАК ФизЛицо
	|ПОМЕСТИТЬ ВТФизЛицаДляОтбора
	|	ИЗ
	|		РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаПодачиСведений, ) КАК РаботникиОрганизаций
	|	ГДЕ
	|		РаботникиОрганизаций.ОбособленноеПодразделение = &ОбособленноеПодразделение
	|		И РаботникиОрганизаций.Сотрудник.Актуальность
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Физлицо
	|	ИЗ
	|		Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
	|	ГДЕ
	|		ДоговорНаВыполнениеРаботСФизЛицом.Дата МЕЖДУ &НачалоГода И &КонецГода
	|		И ДоговорНаВыполнениеРаботСФизЛицом.Организация = &ОбособленноеПодразделение
	|; 
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	РаботникиОрганизаций.Физлицо КАК ФизЛицо
	|ПОМЕСТИТЬ ВТФизЛица
	|	ИЗ ВТФизЛицаДляОтбора КАК РаботникиОрганизаций
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	|		ПО ЕСНСведенияОДоходах.ПериодВзаиморасчетов МЕЖДУ &НачалоГода И &КонецГода 
	|		И ЕСНСведенияОДоходах.ФизЛицо=РаботникиОрганизаций.ФизЛицо 	
	|		И ЕСНСведенияОДоходах.Организация = &СписокОтчитывающихсяПодразделений
	|		И (ЕСНСведенияОДоходах.ДоходФСЗН = &ДоходФСЗН ИЛИ ЕСНСведенияОДоходах.КодДоходаЕСН=&ДоходБольничныйФСЗН)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//
	|	ЕСНИсчисленный.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ЕСНИсчисленный.ПериодВзаиморасчетов, МЕСЯЦ) КАК ПериодВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА ЕСНИсчисленный.ПроцентФСЗН ЕСТЬ NULL 
	|			ТОГДА 35
	//vvv
	|		КОГДА ЕСНИсчисленный.ПроцентФСЗН=0 
	|			ТОГДА 35
	//
	|		ИНАЧЕ ЕСНИсчисленный.ПроцентФСЗН + 1
	|	КОНЕЦ КАК ПроцентФСЗНОбщий,
	|	СУММА(ЕСНИсчисленный.ФСЗН) КАК ВзносыФСЗН,
	|	СУММА(ЕСНИсчисленный.ПенсионныйФонд) КАК ВзносыПН,
	|	СУММА(ЕСНИсчисленный.ФСЗН + ЕСНИсчисленный.ПенсионныйФонд) КАК Взносы
	|ПОМЕСТИТЬ ВТФСЗНИсчисленныйОбщий
	|ИЗ
	|	РегистрНакопления.ЕСНИсчисленный КАК ЕСНИсчисленный
	//vvv
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизЛица КАК ФизЛица
	|		ПО ФизЛица.ФизЛицо=ЕСНИсчисленный.ФизЛицо	
	//
	|ГДЕ
	|	ЕСНИсчисленный.ПериодВзаиморасчетов МЕЖДУ &НачалоГода И &КонецГода
	|	И ЕСНИсчисленный.Период <= &ДатаПодачиСведений
	|	И ЕСНИсчисленный.Организация = &СписокОтчитывающихсяПодразделений
	|	И (&ПоВсемФизЛицам
	|			ИЛИ ЕСНИсчисленный.ФизЛицо = &ФизЛицо)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНИсчисленный.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ЕСНИсчисленный.ПериодВзаиморасчетов, МЕСЯЦ),
	//vvv
	//|	ЕСНИсчисленный.ПроцентФСЗН
	|	ВЫБОР
	|		КОГДА ЕСНИсчисленный.ПроцентФСЗН ЕСТЬ NULL 
	|			ТОГДА 35
	|		КОГДА ЕСНИсчисленный.ПроцентФСЗН=0 
	|			ТОГДА 35	
	|		ИНАЧЕ ЕСНИсчисленный.ПроцентФСЗН + 1
	|	КОНЕЦ
	//
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ПериодВзаиморасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//vvv
	//|ВЫБРАТЬ
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//
	|	ФСЗНИсчисленныйОбщий.ФизЛицо КАК ФизЛицо,
	|	ФСЗНИсчисленныйОбщий.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
	|	ФСЗНИсчисленныйОбщий.ПроцентФСЗНОбщий,
	|	1 КАК ТарифРаботника,
	|	6 КАК ТарифСоциальноеСтрахование,
	|	ФСЗНИсчисленныйОбщий.ПроцентФСЗНОбщий - 6 - 1 КАК ТарифПенисонноеСтрахование,
	|	ФСЗНИсчисленныйОбщий.Взносы,
	|	ФСЗНИсчисленныйОбщий.ВзносыФСЗН,
	|	ФСЗНИсчисленныйОбщий.ВзносыПН
	|ПОМЕСТИТЬ ВТФСЗНИсчисленный
	|ИЗ
	|	ВТФСЗНИсчисленныйОбщий КАК ФСЗНИсчисленныйОбщий
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ПериодВзаиморасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//vvv
	//|ВЫБРАТЬ
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//
	|	СУММА(ВЫБОР
	|			КОГДА ЕСНСведенияОДоходах.КодДоходаЕСН = &ДоходБольничныйФСЗН
	//vvv
	//|				ТОГДА ЕСНСведенияОДоходах.Результат
	|				ТОГДА ЕСНСведенияОДоходах.Результат * ВЫБОР
	|														КОГДА (ЕСНСведенияОДоходах.ПериодВзаиморасчетов<&ДатаДеноминации) И (ЕСНСведенияОДоходах.Период>=&ДатаДеноминации) ТОГДА 10000
	|														КОГДА (ЕСНСведенияОДоходах.ПериодВзаиморасчетов>=&ДатаДеноминации) И (ЕСНСведенияОДоходах.Период<&ДатаДеноминации) ТОГДА 0.0001
	|														ИНАЧЕ 1
	|													  КОНЕЦ
	//
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Пособия,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСНСведенияОДоходах.ДоходФСЗН = &ДоходФСЗН
	//vvv
	//|				ТОГДА ЕСНСведенияОДоходах.БазаФСЗН
	|				ТОГДА ЕСНСведенияОДоходах.БазаФСЗН * ВЫБОР
	|														КОГДА (ЕСНСведенияОДоходах.ПериодВзаиморасчетов<&ДатаДеноминации) И (ЕСНСведенияОДоходах.Период>=&ДатаДеноминации) ТОГДА 10000
	|														КОГДА (ЕСНСведенияОДоходах.ПериодВзаиморасчетов>=&ДатаДеноминации) И (ЕСНСведенияОДоходах.Период<&ДатаДеноминации) ТОГДА 0.0001
	|														ИНАЧЕ 1
	|													  КОНЕЦ
	//
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Выплаты,
	|	ЕСНСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ЕСНСведенияОДоходах.ПериодВзаиморасчетов, МЕСЯЦ) КАК ПериодВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА ЕСНСведенияОДоходах.ДокументОснование = &ПустойДоговор
	|			ТОГДА ЕСНСведенияОДоходах.ФизЛицо.СтатусКатегория
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛиц.ДоговорПодряда)
	|	КОНЕЦ КАК Категория,
	|	ЕСНСведенияОДоходах.ДокументОснование
	|ПОМЕСТИТЬ ВТФСЗНДоходы
	|ИЗ
	|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	//vvv
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаПодачиСведений) КАК РаботникиОрганизаций
	//|			ПО (ЕСНСведенияОДоходах.ФизЛицо = РаботникиОрганизаций.Сотрудник.ФизЛицо)
	//|			И (РаботникиОрганизаций.ОбособленноеПодразделение=&ОбособленноеПодразделение)
	//|			И (РаботникиОрганизаций.Сотрудник.Актуальность)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизЛица КАК РаботникиОрганизаций
	|		ПО ЕСНСведенияОДоходах.ФизЛицо = РаботникиОрганизаций.ФизЛицо
	//
	|ГДЕ
	|	ЕСНСведенияОДоходах.ПериодВзаиморасчетов МЕЖДУ &НачалоГода И &КонецГода
	//vvv комментируем иначе в пособия/доход не попадают переходящие больничные/отпуска
	//|	И ЕСНСведенияОДоходах.Период <= &ДатаПодачиСведений
	|	И (ЕСНСведенияОДоходах.ДокументОснование=ЗНАЧЕНИЕ(Документ.ДоговорНаВыполнениеРаботСФизЛицом.ПустаяСсылка) ИЛИ ЕСНСведенияОДоходах.ДокументОснование.Организация=&ОбособленноеПодразделение)  
	//
	|	И ЕСНСведенияОДоходах.Организация = &СписокОтчитывающихсяПодразделений
	|	И (&ПоВсемФизЛицам
	|			ИЛИ ЕСНСведенияОДоходах.ФизЛицо = &ФизЛицо)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНСведенияОДоходах.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ЕСНСведенияОДоходах.ПериодВзаиморасчетов, МЕСЯЦ),
	|	ЕСНСведенияОДоходах.ДокументОснование,
	|	ВЫБОР
	|		КОГДА ЕСНСведенияОДоходах.ДокументОснование ЕСТЬ NULL 
	|			ТОГДА ЕСНСведенияОДоходах.ФизЛицо.СтатусКатегория
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛиц.ДоговорПодряда)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСНСведенияОДоходах.ДокументОснование = &ПустойДоговор
	|			ТОГДА ЕСНСведенияОДоходах.ФизЛицо.СтатусКатегория
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛиц.ДоговорПодряда)
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ПериодВзаиморасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//vvv
	//|ВЫБРАТЬ
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//
	|	НАЧАЛОПЕРИОДА(Периоды.ПериодВзаиморасчетов, МЕСЯЦ) КАК ПериодВзаиморасчетов,
	|	ГражданствоФизЛиц.ФизЛицо КАК Физлицо
	|ПОМЕСТИТЬ ВТДанныеОПравеНаПенсию
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
	|		ГражданствоФизЛиц.ФизЛицо КАК Физлицо,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТФСЗНДоходы КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО Периоды.ПериодВзаиморасчетов >= ГражданствоФизЛиц.Период
	|				И Периоды.ФизЛицо = ГражданствоФизЛиц.ФизЛицо
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ГражданствоФизЛиц.ФизЛицо,
	|		Периоды.ПериодВзаиморасчетов) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО (ГражданствоФизЛиц.Период = Периоды.ПериодРегистра)
	|			И Периоды.ПериодВзаиморасчетов >= ГражданствоФизЛиц.Период
	|			И (ГражданствоФизЛиц.ФизЛицо = Периоды.Физлицо)
	|			И (ГражданствоФизЛиц.НеИмеетПравоНаПенсию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	ПериодВзаиморасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//vvv
	//|ВЫБРАТЬ
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//
	|	НАЧАЛОПЕРИОДА(Периоды.ПериодВзаиморасчетов, МЕСЯЦ) КАК ПериодВзаиморасчетов,
	|	СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
	|	СведенияОбИнвалидностиФизлиц.ДатаВыдачи КАК ДатаВыдачиСправки
	|ПОМЕСТИТЬ ВТДанныеОИнвалидности
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
	|		СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
	|		МАКСИМУМ(СведенияОбИнвалидностиФизлиц.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТФСЗНДоходы КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|			ПО (КОНЕЦПЕРИОДА(Периоды.ПериодВзаиморасчетов, МЕСЯЦ) >= СведенияОбИнвалидностиФизлиц.Период)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СведенияОбИнвалидностиФизлиц.Физлицо,
	|		Периоды.ПериодВзаиморасчетов) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|		ПО (СведенияОбИнвалидностиФизлиц.Период = Периоды.ПериодВзаиморасчетов)
	|			И (СведенияОбИнвалидностиФизлиц.Физлицо = Периоды.Физлицо)
	|			И (СведенияОбИнвалидностиФизлиц.Инвалидность)
	|			И (СведенияОбИнвалидностиФизлиц.ГруппаИнвалидности = ""I""
	|				ИЛИ СведенияОбИнвалидностиФизлиц.ГруппаИнвалидности = ""II"")
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	ПериодВзаиморасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//vvv
	//|ВЫБРАТЬ
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//
	|	ВТФСЗНДоходы.ФизЛицо КАК ФизЛицо,
	|	ВТФСЗНДоходы.ПериодВзаиморасчетов КАК Месяц,
	|	ВТФСЗНДоходы.Категория КАК Категория,
	|	ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) КАК Выплаты,
	|	ЕСТЬNULL(ВТФСЗНДоходы.Пособия, 0) КАК Пособия,
	|	ВТФСЗНДоходы.ДокументОснование КАК Договор,
	|	ЕСТЬNULL(ВТФСЗНИсчисленный.ВзносыФСЗН, 0) КАК ВзносыФСЗН,
	//vvv
	//|	ЕСТЬNULL(ВТФСЗНИсчисленный.Взносы, 0) КАК Взносы,
	|	ВЫБОР КОГДА ВТФСЗНДоходы.ПериодВзаиморасчетов<&ДатаДеноминации ТОГДА 
	|		ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * ЕСТЬNULL(ВТФСЗНИсчисленный.ПроцентФСЗНОбщий, 35) / 100 КАК ЧИСЛО(15, 0))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ЕСТЬNULL(ВЫРАЗИТЬ(ВТФСЗНДоходы.Выплаты КАК ЧИСЛО(15,2)), 0) * ЕСТЬNULL(ВТФСЗНИсчисленный.ПроцентФСЗНОбщий, 35) / 100 КАК ЧИСЛО(15, 2))
	|	КОНЕЦ  КАК Взносы,
	//|	ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * ЕСТЬNULL(ВТФСЗНИсчисленный.ТарифПенисонноеСтрахование, 0) / 100 КАК ЧИСЛО(15, 2)) КАК СуммаВзносовНаПенсионноеСтрахование,
	|	ВЫБОР КОГДА ВТФСЗНДоходы.ПериодВзаиморасчетов<&ДатаДеноминации ТОГДА 
	|		ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * ЕСТЬNULL(ВТФСЗНИсчисленный.ТарифПенисонноеСтрахование, 0) / 100 КАК ЧИСЛО(15, 0))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ЕСТЬNULL(ВЫРАЗИТЬ(ВТФСЗНДоходы.Выплаты КАК ЧИСЛО(15,2)), 0) * ЕСТЬNULL(ВТФСЗНИсчисленный.ТарифПенисонноеСтрахование, 0) / 100 КАК ЧИСЛО(15, 2))
	|	КОНЕЦ  КАК СуммаВзносовНаПенсионноеСтрахование,	
	//|	ВЫБОР
	//|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * ЕСТЬNULL(ВТФСЗНИсчисленный.ТарифПенисонноеСтрахование, 0) / 100 КАК ЧИСЛО(15, 2))) = 0
	//|			ТОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * 0.35 КАК ЧИСЛО(15, 2))) - (ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * 0.28 КАК ЧИСЛО(15, 2))) - (ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * 0.01 КАК ЧИСЛО(15, 2)))
	//|		ИНАЧЕ (ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * 0.35 КАК ЧИСЛО(15, 2))) - (ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * 0.29 КАК ЧИСЛО(15, 2)))
	//|	КОНЕЦ КАК СуммаВзносовНаСоциальноеСтрахование,
	//|	ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * 0.01 КАК ЧИСЛО(15, 2)) КАК СуммаВзносовРаботнику,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * ЕСТЬNULL(ВТФСЗНИсчисленный.ТарифПенисонноеСтрахование, 0) / 100 КАК ЧИСЛО(15, 2))) = 0
	|			ТОГДА ВЫБОР КОГДА ВТФСЗНДоходы.ПериодВзаиморасчетов<&ДатаДеноминации ТОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) *  0.07 КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * 0.01 КАК ЧИСЛО(15, 0))) ИНАЧЕ (ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * 0.07 КАК ЧИСЛО(15, 2))) - (ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * 0.01 КАК ЧИСЛО(15, 2))) КОНЕЦ
	|		ИНАЧЕ ВЫБОР КОГДА ВТФСЗНДоходы.ПериодВзаиморасчетов<&ДатаДеноминации ТОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * 0.35 КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * 0.28 КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * 0.01 КАК ЧИСЛО(15, 0))) ИНАЧЕ (ВЫРАЗИТЬ(ЕСТЬNULL(ВЫРАЗИТЬ(ВТФСЗНДоходы.Выплаты КАК ЧИСЛО(15,2)), 0) * 0.35 КАК ЧИСЛО(15, 2))) - (ВЫРАЗИТЬ(ЕСТЬNULL(ВЫРАЗИТЬ(ВТФСЗНДоходы.Выплаты КАК ЧИСЛО(15,2)), 0) * 0.28 КАК ЧИСЛО(15, 2))) - (ВЫРАЗИТЬ(ЕСТЬNULL(ВЫРАЗИТЬ(ВТФСЗНДоходы.Выплаты КАК ЧИСЛО(15,2)), 0) * 0.01 КАК ЧИСЛО(15, 2))) КОНЕЦ
	|	КОНЕЦ КАК СуммаВзносовНаСоциальноеСтрахование,
	|	ВЫБОР КОГДА ВТФСЗНДоходы.ПериодВзаиморасчетов<&ДатаДеноминации ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ВТФСЗНДоходы.Выплаты, 0) * 0.01 КАК ЧИСЛО(15, 0)) ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(ВЫРАЗИТЬ(ВТФСЗНДоходы.Выплаты КАК ЧИСЛО(15,2)), 0) * 0.01 КАК ЧИСЛО(15, 2)) КОНЕЦ КАК СуммаВзносовРаботнику,
	//
	|	ЕСТЬNULL(ВТФСЗНИсчисленный.ТарифРаботника, 1) КАК ТарифРаботнику,
	|	ЕСТЬNULL(ВТФСЗНИсчисленный.ТарифСоциальноеСтрахование, 6) КАК ТарифНаСоциальноеСтрахование,
	|	ЕСТЬNULL(ВТФСЗНИсчисленный.ТарифПенисонноеСтрахование, 28) КАК ТарифНаПенсионноеСтрахование,
	|	ЕСТЬNULL(ВТФСЗНИсчисленный.ПроцентФСЗНОбщий, 35) КАК ТарифВзносов,
	|	ВТФСЗНДоходы.ФизЛицо.СтраховойНомерПФР КАК ЛичныйНомер,
	|	ФИОФизЛицСрезПоследних.Фамилия КАК Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя КАК Имя,
	|	ФИОФизЛицСрезПоследних.Отчество КАК Отчество,
	|	ВТФСЗНДоходы.ДокументОснование.ДатаНачала КАК ДатаНачалаРабот,
	|	ВТФСЗНДоходы.ДокументОснование.ДатаОкончания КАК ДатаОкончанияРабот,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТФСЗНДоходы.ДокументОснование.НомерДоговора, ВТФСЗНДоходы.ДокументОснование.Номер) = """"
	|			ТОГДА ВТФСЗНДоходы.ДокументОснование.Номер
	|		ИНАЧЕ ЕСТЬNULL(ВТФСЗНДоходы.ДокументОснование.НомерДоговора, ВТФСЗНДоходы.ДокументОснование.Номер)
	|	КОНЕЦ КАК НомерДоговора,
	|	ВТФСЗНДоходы.ДокументОснование.Дата КАК ДатаДоговора,
	|	ВЫБОР
	|		КОГДА ДанныеОИнвалидности.ДатаВыдачиСправки ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ДанныеОИнвалидности.ДатаВыдачиСправки >= КОНЕЦПЕРИОДА(ВТФСЗНДоходы.ПериодВзаиморасчетов, МЕСЯЦ)
	|						ТОГДА ДанныеОИнвалидности.ДатаВыдачиСправки
	|					ИНАЧЕ НАЧАЛОПЕРИОДА(ВТФСЗНДоходы.ПериодВзаиморасчетов, МЕСЯЦ)
	|				КОНЕЦ
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ДатаИзмененияТарифа
	|ИЗ
	|	ВТФСЗНДоходы КАК ВТФСЗНДоходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФСЗНИсчисленный КАК ВТФСЗНИсчисленный
	|		ПО ВТФСЗНДоходы.ФизЛицо = ВТФСЗНИсчисленный.ФизЛицо
	|			И ВТФСЗНДоходы.ПериодВзаиморасчетов = ВТФСЗНИсчисленный.ПериодВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&КонецГода, ) КАК ФИОФизЛицСрезПоследних
	|		ПО ВТФСЗНДоходы.ФизЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОПравеНаПенсию КАК ДанныеОПравеНаПенсию
	|		ПО ВТФСЗНДоходы.ФизЛицо = ДанныеОПравеНаПенсию.Физлицо
	|			И ВТФСЗНДоходы.ПериодВзаиморасчетов = ДанныеОПравеНаПенсию.ПериодВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОИнвалидности КАК ДанныеОИнвалидности
	|		ПО ВТФСЗНДоходы.ФизЛицо = ДанныеОИнвалидности.Физлицо
	|			И ВТФСЗНДоходы.ПериодВзаиморасчетов >= ДанныеОИнвалидности.ПериодВзаиморасчетов
	|			И (НАЧАЛОПЕРИОДА(ВТФСЗНДоходы.ПериодВзаиморасчетов, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДанныеОИнвалидности.ДатаВыдачиСправки, МЕСЯЦ))
	|ГДЕ
	|	ДанныеОПравеНаПенсию.Физлицо ЕСТЬ NULL 
	//vvv
	| УПОРЯДОЧИТЬ ПО
	|	ФизЛицо,
	|	Месяц
	//
	|ИТОГИ
	|	СУММА(Выплаты)
	|ПО
	|	ФизЛицо,
	|	Месяц";
	
	
	Результат = Запрос.Выполнить();
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("ФизЛицо");
	СтруктураПоиска.Вставить("Категория");
	СтруктураПоиска.Вставить("Договор");
	
	ВыборкаПоФизЛицу = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоФизЛицу.Следующий() Цикл
		ВыборкаПоМесяцам = ВыборкаПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоМесяцам.Следующий() Цикл
			ВсегоВыплат = ВыборкаПоМесяцам.Выплаты;
			ВыборкаПоДоговорам = ВыборкаПоМесяцам.Выбрать();
			Пока ВыборкаПоДоговорам.Следующий() Цикл
				//vvv иначе попадают пустые строки
				//Если (ВыборкаПоДоговорам.Выплаты + ВыборкаПоДоговорам.Пособия) <= 0 Тогда Продолжить; КонецЕсли;
				Если (ВыборкаПоДоговорам.Выплаты + ВыборкаПоДоговорам.Пособия) < 0 Тогда Продолжить; КонецЕсли;
				//
				СтруктураПоиска.ФизЛицо = ВыборкаПоДоговорам.ФизЛицо;
				СтруктураПоиска.Категория = ВыборкаПоДоговорам.Категория;
				СтруктураПоиска.Договор = ВыборкаПоДоговорам.Договор;
				НайденныеСтроки = РаботникиОрганизации.НайтиСтроки(СтруктураПоиска);
				Если НайденныеСтроки.Количество() = 0 Тогда
					СтрокаРаботник = РаботникиОрганизации.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРаботник,ВыборкаПоДоговорам);
				КонецЕсли;
				Если ЗначениеЗаполнено(ВыборкаПоДоговорам.Договор) Тогда
					НайденныеСтрокиСтажа =  СведенияОСтаже.НайтиСтроки(СтруктураПоиска);
					Если НайденныеСтрокиСтажа.Количество() = 0 Тогда
						СтрокаСтажа = СведенияОСтаже.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаСтажа,ВыборкаПоДоговорам);
						СтрокаСтажа.ВидДеятельности = Договор;
						СтрокаСтажа = СведенияОСтаже.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаСтажа,ВыборкаПоДоговорам);
						СтрокаСтажа.ВидДеятельности = Справочники.ОсобыеУсловияТруда.ВзносыВрем;

					КонецЕсли;
				КонецЕсли;
				СтрокаВзносов =  СведенияОВзносах.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаВзносов,ВыборкаПоДоговорам);
				Если ВсегоВыплат <> 0 Тогда
					//Взносы = ВыборкаПоДоговорам.Взносы*ВыборкаПоДоговорам.Выплаты/ВсегоВыплат;
					//СуммаВзносовНаСоциальноеСтрахование = ВыборкаПоДоговорам.СуммаВзносовНаСоциальноеСтрахование*ВыборкаПоДоговорам.Выплаты/ВсегоВыплат;
					//СуммаВзносовНаПенсионноеСтрахование = ВыборкаПоДоговорам.СуммаВзносовНаПенсионноеСтрахование*ВыборкаПоДоговорам.Выплаты/ВсегоВыплат;
					//СуммаВзносовРаботнику			 	= ВыборкаПоДоговорам.СуммаВзносовРаботнику*ВыборкаПоДоговорам.Выплаты/ВсегоВыплат;
					Взносы = ВыборкаПоДоговорам.Взносы;
					СуммаВзносовНаСоциальноеСтрахование = ВыборкаПоДоговорам.СуммаВзносовНаСоциальноеСтрахование;
					СуммаВзносовНаПенсионноеСтрахование = ВыборкаПоДоговорам.СуммаВзносовНаПенсионноеСтрахование;
					СуммаВзносовРаботнику			 	= ВыборкаПоДоговорам.СуммаВзносовРаботнику;
					
					
				Иначе
					Взносы = 0;
					СуммаВзносовНаСоциальноеСтрахование = 0;
					СуммаВзносовНаПенсионноеСтрахование = 0;
					СуммаВзносовРаботнику			 	= 0;
					
				КонецЕсли;
				СтрокаВзносов.Взносы = Взносы;
				СтрокаВзносов.СуммаВзносовНаСоциальноеСтрахование = СуммаВзносовНаСоциальноеСтрахование;
				СтрокаВзносов.СуммаВзносовНаПенсионноеСтрахование = СуммаВзносовНаПенсионноеСтрахование;
				СтрокаВзносов.СуммаВзносовРаботнику			 	  = СуммаВзносовРаботнику;
				
				СтрокаВзносов.СуммаУплаченныхВзносовНаСоциальноеСтрахование = СуммаВзносовНаСоциальноеСтрахование;
				СтрокаВзносов.СуммаУплаченныхВзносовНаПенсионноеСтрахование = СуммаВзносовНаПенсионноеСтрахование;
				СтрокаВзносов.СуммаУплаченныхВзносовРаботником			 	= СуммаВзносовРаботнику;
				
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ДатыОтпусковТекст = 
	"ВЫБРАТЬ
	|	Работники.ФизЛицо КАК ФизЛицо,
	|	Работники.ДатаС КАК ДатаС,
	|	Работники.Организация КАК Организация,
	|	&Дети КАК ВидДеятельности,
	|	Работники.ПериодЗавершения КАК ПериодЗавершения
	|ПОМЕСТИТЬ ВТДатыОтпусков
	|ИЗ
	|	(ВЫБРАТЬ
	|		СостояниеРаботниковОрганизацийСрезПоследних.Сотрудник.Физлицо КАК ФизЛицо,
	|		&НачалоГода КАК ДатаС,
	|		СостояниеРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
	|		СостояниеРаботниковОрганизацийСрезПоследних.ПериодЗавершения КАК ПериодЗавершения
	|	ИЗ
	|		РегистрСведений.СостояниеРаботниковОрганизаций.СрезПоследних(
	|				&КонецПрошлогоГода,
	|				Организация = &СписокОтчитывающихсяПодразделений
	|					И Сотрудник.ВидЗанятости <> &ВнСовместитель
	|					И Организация = &СписокОтчитывающихсяПодразделений
	|					И (&ПоВсемФизЛицам
	|						ИЛИ Сотрудник.Физлицо = &ФизЛицо)) КАК СостояниеРаботниковОрганизацийСрезПоследних
	|	ГДЕ
	|		СостояниеРаботниковОрганизацийСрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком)
	//vvv добавляем условие, иначе входят люди, которые уже давно вышли из декрета
	|		И СостояниеРаботниковОрганизацийСрезПоследних.ПериодЗавершения>= &НачалоГода
	//
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СостояниеРаботниковОрганизаций.Сотрудник.Физлицо,
	|		СостояниеРаботниковОрганизаций.Период,
	|		СостояниеРаботниковОрганизаций.Организация,
	|		СостояниеРаботниковОрганизаций.ПериодЗавершения
	|	ИЗ
	|		РегистрСведений.СостояниеРаботниковОрганизаций КАК СостояниеРаботниковОрганизаций
	|	ГДЕ
	|		СостояниеРаботниковОрганизаций.Организация = &СписокОтчитывающихсяПодразделений
	|		И СостояниеРаботниковОрганизаций.Период МЕЖДУ &НачалоГода И &КонецГода
	|		И СостояниеРаботниковОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком)
	|		И (&ПоВсемФизЛицам
	|				ИЛИ СостояниеРаботниковОрганизаций.Сотрудник.Физлицо = &ФизЛицо)) КАК Работники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Работники.Сотрудник,
	|	Работники.ФизЛицо КАК ФизЛицо,
	|	Работники.ДатаС КАК ДатаС,
	|	Работники.Организация КАК Организация,
	|	Работники.ВидДеятельности КАК ВидДеятельности,
	|	Работники.КодПоОКПДТР КАК КодПоОКПДТР
	|ПОМЕСТИТЬ ВТДатыДвижений
	|ИЗ
	|	(ВЫБРАТЬ
	|		РаботникиОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
	|		РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо КАК ФизЛицо,
	|		&НачалоГода КАК ДатаС,
	|		РаботникиОрганизацийСрезПоследних.Организация КАК Организация,
	|		РаботникиОрганизацийСрезПоследних.ВидДеятельностиИзмерение КАК ВидДеятельности,
	|		РаботникиОрганизацийСрезПоследних.Должность.КодПоОКПДТР КАК КодПоОКПДТР
	|	ИЗ
	|		РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&КонецПрошлогоГода,
	//vvv
	//|				Организация = &СписокОтчитывающихсяПодразделений
	|				ОбособленноеПодразделение = &ОбособленноеПодразделение
	//
	|					И Сотрудник.ВидЗанятости <> &ВнСовместитель
	|					И НЕ ВидДеятельностиИзмерение.ПриминяетсяДляПУ6
	|					И (&ПоВсемФизЛицам
	|						ИЛИ Сотрудник.Физлицо = &ФизЛицо)) КАК РаботникиОрганизацийСрезПоследних
	|	ГДЕ
	|		РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния <> &Увольнение
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РаботникиОрганизаций.Сотрудник,
	|		РаботникиОрганизаций.Сотрудник.Физлицо,
	|		РаботникиОрганизаций.Период,
	|		РаботникиОрганизаций.Организация,
	|		РаботникиОрганизаций.ВидДеятельностиИзмерение,
	|		РаботникиОрганизаций.Должность.КодПоОКПДТР
	|	ИЗ
	|		РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|	ГДЕ
	//vvv
	//|		РаботникиОрганизаций.Организация = &СписокОтчитывающихсяПодразделений
	|		РаботникиОрганизаций.ОбособленноеПодразделение = &ОбособленноеПодразделение
	//
	|		И РаботникиОрганизаций.Период МЕЖДУ &НачалоГода И &КонецГода
	|		И РаботникиОрганизаций.ПричинаИзмененияСостояния <> &Увольнение
	|		И РаботникиОрганизаций.Сотрудник.ВидЗанятости <> &ВнСовместитель
	|		И НЕ РаботникиОрганизаций.ВидДеятельностиИзмерение.ПриминяетсяДляПУ6
	|		И (&ПоВсемФизЛицам
	|				ИЛИ РаботникиОрганизаций.Сотрудник.Физлицо = &ФизЛицо)) КАК Работники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыНазначений1.ВидДеятельности КАК ВидДеятельности,
	|	ДатыНазначений1.ФизЛицо КАК ФизЛицо,
	|	ДатыНазначений1.ФизЛицо.СтатусКатегория КАК Категория,
	|	ДатыНазначений1.ДатаС КАК ДатаНачалаРабот,
	|	ЕСТЬNULL(МИНИМУМ(ДОБАВИТЬКДАТЕ(ДатыНазначений2.Период, СЕКУНДА, -1)), &КонецГода) КАК ДатаОкончанияРабот,
	|	ДатыНазначений1.ФизЛицо.СтраховойНомерПФР КАК ЛичныйНомер,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество,
	|	ДатыНазначений1.КодПоОКПДТР КАК КодПоОКПДТР
	|ИЗ
	|	ВТДатыДвижений КАК ДатыНазначений1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ДатыНазначений2
	|		ПО (ДатыНазначений2.Сотрудник = ДатыНазначений1.Сотрудник)
	|			И (ДатыНазначений2.Организация = ДатыНазначений1.Организация)
	|			И (ДатыНазначений2.Период > ДатыНазначений1.ДатаС)
	|			И (ДатыНазначений2.Период < &КонецГода)
	|			И (ДатыНазначений2.Сотрудник.ВидЗанятости <> &ВнСовместитель)
	|			И (НЕ ДатыНазначений2.ВидДеятельностиИзмерение.ПриминяетсяДляПУ6)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&КонецГода, ) КАК ФИОФизЛицСрезПоследних
	|		ПО ДатыНазначений1.Сотрудник.Физлицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ДатыНазначений1.Сотрудник,
	|	ДатыНазначений1.ФизЛицо,
	|	ДатыНазначений1.ВидДеятельности,
	|	ДатыНазначений1.ДатаС,
	|	ДатыНазначений1.ФизЛицо.СтраховойНомерПФР,
	|	ДатыНазначений1.КодПоОКПДТР,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество,
	|	ДатыНазначений1.ФизЛицо.СтатусКатегория
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДатыОстпусков1.ВидДеятельности,
	|	ДатыОстпусков1.ФизЛицо,
	|	ДатыОстпусков1.ФизЛицо.СтатусКатегория,
	|	ДатыОстпусков1.ДатаС,
	|	ВЫБОР
	|		КОГДА ДатыОстпусков1.ПериодЗавершения > ЕСТЬNULL(МИНИМУМ(ДОБАВИТЬКДАТЕ(ДатыОстпусков2.Период, СЕКУНДА, -1)), &КонецГода)
	|			ТОГДА ЕСТЬNULL(МИНИМУМ(ДОБАВИТЬКДАТЕ(ДатыОстпусков2.Период, СЕКУНДА, -1)), &КонецГода)
	|		ИНАЧЕ ДатыОстпусков1.ПериодЗавершения
	|	КОНЕЦ,
	|	ДатыОстпусков1.ФизЛицо.СтраховойНомерПФР,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество,
	|	NULL
	|ИЗ
	|	ВТДатыОтпусков КАК ДатыОстпусков1
	//vvv
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаПодачиСведений) КАК РаботникиОрганизаций
	//|			ПО (ДатыОстпусков1.ФизЛицо = РаботникиОрганизаций.Сотрудник.ФизЛицо)
	//|			И (РаботникиОрганизаций.ОбособленноеПодразделение=&ОбособленноеПодразделение)
	//|			И (РаботникиОрганизаций.Сотрудник.Актуальность)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			РаботникиОрганизаций.Сотрудник.Физлицо КАК ФизЛицо
	|		ИЗ
	|			РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаПодачиСведений, ) КАК РаботникиОрганизаций
	|		ГДЕ
	|			РаботникиОрганизаций.ОбособленноеПодразделение = &ОбособленноеПодразделение
	|			И РаботникиОрганизаций.Сотрудник.Актуальность
	|
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Физлицо
	|		ИЗ
	|			Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
	|		ГДЕ
	|			ДоговорНаВыполнениеРаботСФизЛицом.Дата МЕЖДУ &НачалоГода И &КонецГода
	|			И ДоговорНаВыполнениеРаботСФизЛицом.Организация = &ОбособленноеПодразделение) КАК РаботникиОрганизаций
	|		ПО ДатыОстпусков1.ФизЛицо = РаботникиОрганизаций.ФизЛицо
	//
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеРаботниковОрганизаций КАК ДатыОстпусков2
	|		ПО ДатыОстпусков1.Организация = ДатыОстпусков2.Организация
	|			И ДатыОстпусков1.ФизЛицо = ДатыОстпусков2.Сотрудник.Физлицо
	|			И ДатыОстпусков1.ДатаС < ДатыОстпусков2.Период
	|			И (ДатыОстпусков2.Период < &КонецГода)
	|			И (ДатыОстпусков2.Сотрудник.ВидЗанятости <> &ВнСовместитель)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&КонецГода, ) КАК ФИОФизЛицСрезПоследних
	|		ПО ДатыОстпусков1.ФизЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ДатыОстпусков1.ФизЛицо,
	|	ДатыОстпусков1.ФизЛицо.СтатусКатегория,
	|	ДатыОстпусков1.ВидДеятельности,
	|	ДатыОстпусков1.ДатаС,
	|	ДатыОстпусков1.ПериодЗавершения,
	|	ДатыОстпусков1.ФизЛицо.СтраховойНомерПФР,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ДатыОтпусковТекст;
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	СтруктураПоиска.Договор = Документы.ДоговорНаВыполнениеРаботСФизЛицом.ПустаяСсылка();
	
	Пока Выборка.Следующий() Цикл
		СтруктураПоиска.ФизЛицо = Выборка.ФизЛицо;
		СтруктураПоиска.Категория = Выборка.Категория;
		НайденныеСтроки = РаботникиОрганизации.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() = 0 Тогда
			СтрокаРаботник = РаботникиОрганизации.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРаботник,Выборка);
		КонецЕсли;
		СтрокаСтажа = СведенияОСтаже.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтажа,Выборка);
	КонецЦикла;
	
	
	ПособияТекст = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТруда.Пособие) КАК ВидДеятельности,
	|	ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо КАК ФизЛицо,
	|	МИНИМУМ(ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало) КАК ДатаНачалаРабот,
	|	МАКСИМУМ(ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец) КАК ДатаОкончанияРабот,
	|	ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо.СтатусКатегория КАК Категория,
	|	ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо.СтраховойНомерПФР КАК ЛичныйНомер,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество,
	|	ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета,
	|	ОсновныеНачисленияРаботниковОрганизаций.ДатаНачалаСобытия
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	//vvv
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаПодачиСведений) КАК РаботникиОрганизаций
	//|			ПО (ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо = РаботникиОрганизаций.Сотрудник.ФизЛицо)
	//|			И (РаботникиОрганизаций.ОбособленноеПодразделение=&ОбособленноеПодразделение)
	//|			И (РаботникиОрганизаций.Сотрудник.Актуальность)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			РаботникиОрганизаций.Сотрудник.Физлицо КАК ФизЛицо
	|		ИЗ
	|			РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаПодачиСведений, ) КАК РаботникиОрганизаций
	|		ГДЕ
	|			РаботникиОрганизаций.ОбособленноеПодразделение = &ОбособленноеПодразделение
	|			И РаботникиОрганизаций.Сотрудник.Актуальность
	|
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Физлицо
	|		ИЗ
	|			Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
	|		ГДЕ
	|			ДоговорНаВыполнениеРаботСФизЛицом.Дата МЕЖДУ &НачалоГода И &КонецГода
	|			И ДоговорНаВыполнениеРаботСФизЛицом.Организация = &ОбособленноеПодразделение) КАК РаботникиОрганизаций
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо = РаботникиОрганизаций.ФизЛицо
	//
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&КонецГода, ) КАК ФИОФизЛицСрезПоследних
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|ГДЕ
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия МЕЖДУ &НачалоГода И &КонецГода
	|	И ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.БольничныйИзФСЗН)
	|	И ОсновныеНачисленияРаботниковОрганизаций.Организация = &СписокОтчитывающихсяПодразделений
	|	И (&ПоВсемФизЛицам
	|			ИЛИ ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо = &ФизЛицо)

	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо,
	|	ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо.СтатусКатегория,
	|	ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо.СтраховойНомерПФР,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество,
	|	ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета,
	|	ОсновныеНачисленияРаботниковОрганизаций.ДатаНачалаСобытия";  
	
	Запрос.Текст = ПособияТекст;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	СтруктураПоиска.Договор = Документы.ДоговорНаВыполнениеРаботСФизЛицом.ПустаяСсылка();
	
	Пока Выборка.Следующий() Цикл
		СтруктураПоиска.ФизЛицо = Выборка.ФизЛицо;
		СтруктураПоиска.Категория = Выборка.Категория;
		НайденныеСтроки = РаботникиОрганизации.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() = 0 Тогда
			СтрокаРаботник = РаботникиОрганизации.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРаботник,Выборка);
		КонецЕсли;
		СтрокаСтажа = СведенияОСтаже.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтажа,Выборка);
	КонецЦикла;
	
	ПериодыОплаты = 
	//vvv
	//"ВЫБРАТЬ
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//
	|	ОсновныеНачисленияРаботниковОрганизаций.Сотрудник КАК Сотрудник,
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало КАК ДатаНачалаРабот,
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец КАК ДатаОкончанияРабот
	|ПОМЕСТИТЬ ВТИсключаемыеПериоды
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
	|			(&ПоВсемФизЛицам
	|				ИЛИ ФизЛицо = &ФизЛицо)
	|				И Сотрудник.ВидЗанятости <> &ВнСовместитель
	|				И ВидРасчета.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ПериодыНеуплаты)) КАК ОсновныеНачисленияРаботниковОрганизаций
	|ГДЕ
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия МЕЖДУ &НачалоГода И &КонецГода
	|	И ОсновныеНачисленияРаботниковОрганизаций.Организация = &СписокОтчитывающихсяПодразделений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//vvv
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	//
	|	Работники.Сотрудник,
	|	МАКСИМУМ(Работники.ДатаПриема) КАК ДатаНачалаРабот,
	|	МИНИМУМ(Работники.ДатаУвольнения) КАК ДатаОкончанияРабот
	|ПОМЕСТИТЬ ВТДатыПриемаУвольнения
	|ИЗ
	|	(ВЫБРАТЬ
	|		РаботникиОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
	|		&НачалоГода КАК ДатаПриема,
	|		&КонецГода КАК ДатаУвольнения
	|	ИЗ
	|		РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&КонецПрошлогоГода,
	|				Организация = &СписокОтчитывающихсяПодразделений
	|					И Сотрудник.ВидЗанятости <> &ВнСовместитель
	|					И (&ПоВсемФизЛицам
	|						ИЛИ Сотрудник.Физлицо = &ФизЛицо)) КАК РаботникиОрганизацийСрезПоследних
	|	ГДЕ
	|		РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния <> &Увольнение
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РаботникиОрганизаций.Сотрудник,
	|		ВЫБОР
	|			КОГДА РаботникиОрганизаций.ПричинаИзмененияСостояния = &ПриемНаРаботу
	|				ТОГДА РаботникиОрганизаций.Период
	|			ИНАЧЕ &НачалоГода
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА РаботникиОрганизаций.ПричинаИзмененияСостояния = &Увольнение
	|				ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизаций.Период, ДЕНЬ, -1)
	|			ИНАЧЕ &КонецГода
	|		КОНЕЦ
	|	ИЗ
	|		РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|	ГДЕ
	|		РаботникиОрганизаций.Организация = &СписокОтчитывающихсяПодразделений
	|		И РаботникиОрганизаций.Период МЕЖДУ &НачалоГода И &КонецГода
	|		И РаботникиОрганизаций.ПричинаИзмененияСостояния <> &Перемещение
	|		И РаботникиОрганизаций.Сотрудник.ВидЗанятости <> &ВнСовместитель
	|		И (&ПоВсемФизЛицам
	|				ИЛИ РаботникиОрганизаций.Сотрудник.Физлицо = &ФизЛицо)) КАК Работники
	|
	|СГРУППИРОВАТЬ ПО
	|	Работники.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//vvv
	//|ВЫБРАТЬ
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//
	|	ПериодыНачалаРабот.ДатаНачалаРабот КАК ДатаНачалаРабот,
	|	МИНИМУМ(ПериодыОкончанияРабот.ДатаОкончанияРабот) КАК ДатаОкончанияРабот,
	|	ПериодыНачалаРабот.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТПериодыВзносов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДатыПриемаУвольнения.ДатаНачалаРабот КАК ДатаНачалаРабот,
	|		ДатыПриемаУвольнения.Сотрудник КАК Сотрудник,
	|		ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТруда.ВзносыВрем) КАК ВидДеятельности
	|	ИЗ
	|		ВТДатыПриемаУвольнения КАК ДатыПриемаУвольнения
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ИсключаемыеПериоды.ДатаНачалаРабот,
	|		ИсключаемыеПериоды.Сотрудник,
	|		ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТруда.ПустаяСсылка)
	|	ИЗ
	|		ВТИсключаемыеПериоды КАК ИсключаемыеПериоды
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ИсключаемыеПериоды.ДатаОкончанияРабот, ДЕНЬ, 1), ДЕНЬ),
	|		ИсключаемыеПериоды.Сотрудник,
	|		ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТруда.ПустаяСсылка)
	|	ИЗ
	|		ВТИсключаемыеПериоды КАК ИсключаемыеПериоды
	|	ГДЕ
	|		ИсключаемыеПериоды.ДатаОкончанияРабот <> &КонецГода) КАК ПериодыНачалаРабот
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДатыПриемаУвольнения.ДатаОкончанияРабот КАК ДатаОкончанияРабот,
	|			ДатыПриемаУвольнения.Сотрудник КАК Сотрудник
	|		ИЗ
	|			ВТДатыПриемаУвольнения КАК ДатыПриемаУвольнения
	|		
	|		ОБЪЕДИНИТЬ
	|		
	|		ВЫБРАТЬ
	|			ИсключаемыеПериоды.ДатаОкончанияРабот,
	|			ИсключаемыеПериоды.Сотрудник
	|		ИЗ
	|			ВТИсключаемыеПериоды КАК ИсключаемыеПериоды
	|		
	|		ОБЪЕДИНИТЬ
	|		
	|		ВЫБРАТЬ
	|			КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(ИсключаемыеПериоды.ДатаНачалаРабот, ДЕНЬ, -1), ДЕНЬ),
	|			ИсключаемыеПериоды.Сотрудник
	|		ИЗ
	|			ВТИсключаемыеПериоды КАК ИсключаемыеПериоды
	|		ГДЕ
	|			ИсключаемыеПериоды.ДатаНачалаРабот <> &НачалоГода) КАК ПериодыОкончанияРабот
	|		ПО ПериодыНачалаРабот.ДатаНачалаРабот < ПериодыОкончанияРабот.ДатаОкончанияРабот
	|			И ПериодыНачалаРабот.Сотрудник = ПериодыОкончанияРабот.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсключаемыеПериоды КАК ИсключаемыеПериоды
	|		ПО ПериодыНачалаРабот.ДатаНачалаРабот = ИсключаемыеПериоды.ДатаНачалаРабот
	|			И ПериодыНачалаРабот.Сотрудник = ИсключаемыеПериоды.Сотрудник
	|ГДЕ
	|	ИсключаемыеПериоды.ДатаНачалаРабот ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодыНачалаРабот.ДатаНачалаРабот,
	|	ПериодыНачалаРабот.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//vvv
	//|ВЫБРАТЬ
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//
	|	ВТПериодыВзносов.Сотрудник.Физлицо КАК Физлицо,
	|	ВТПериодыВзносов.ДатаНачалаРабот КАК ДатаНачалаРабот,
	|	ВТПериодыВзносов.ДатаОкончанияРабот,
	|	ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТруда.ВзносыВрем) КАК ВидДеятельности,
	|	ВТПериодыВзносов.Сотрудник.Физлицо.СтатусКатегория КАК Категория,
	|	ВТПериодыВзносов.Сотрудник.Физлицо.СтраховойНомерПФР КАК ЛичныйНомер,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ИЗ
	|	ВТПериодыВзносов КАК ВТПериодыВзносов
	//vvv
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаПодачиСведений) КАК РаботникиОрганизаций
	//|			ПО (ВТПериодыВзносов.Сотрудник.Физлицо = РаботникиОрганизаций.Сотрудник.ФизЛицо)
	//|			И (РаботникиОрганизаций.ОбособленноеПодразделение=&ОбособленноеПодразделение)
	//|			И (РаботникиОрганизаций.Сотрудник.Актуальность)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			РаботникиОрганизаций.Сотрудник.Физлицо КАК ФизЛицо
	|		ИЗ
	|			РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаПодачиСведений, ) КАК РаботникиОрганизаций
	|		ГДЕ
	|			РаботникиОрганизаций.ОбособленноеПодразделение = &ОбособленноеПодразделение
	|			И РаботникиОрганизаций.Сотрудник.Актуальность
	|
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Физлицо
	|		ИЗ
	|			Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
	|		ГДЕ
	|			ДоговорНаВыполнениеРаботСФизЛицом.Дата МЕЖДУ &НачалоГода И &КонецГода
	|			И ДоговорНаВыполнениеРаботСФизЛицом.Организация = &ОбособленноеПодразделение) КАК РаботникиОрганизаций
	|		ПО ВТПериодыВзносов.Сотрудник.ФизЛицо = РаботникиОрганизаций.ФизЛицо
	//
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&КонецГода, ) КАК ФИОФизЛицСрезПоследних
	|		ПО ВТПериодыВзносов.Сотрудник.Физлицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	Физлицо,
	|	ДатаНачалаРабот"; 
	
	Запрос.Текст = ПериодыОплаты;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();

	
	Пока Выборка.Следующий() Цикл
		СтруктураПоиска.ФизЛицо = Выборка.ФизЛицо;
		СтруктураПоиска.Категория = Выборка.Категория;
		НайденныеСтроки = РаботникиОрганизации.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() = 0 Тогда
			СтрокаРаботник = РаботникиОрганизации.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРаботник,Выборка);
		КонецЕсли;
		СтрокаСтажа = СведенияОСтаже.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтажа,Выборка);
	КонецЦикла; 	
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
	|	ДополнительныеНачисленияРаботниковОрганизаций.Сотрудник
	|ПОМЕСТИТЬ ВТСотрудникиПремия
	|ИЗ
	|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисленияРаботниковОрганизаций
	|ГДЕ
	|	ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &НачалоГода И &КонецГода
	//vvv
	//|	И ДополнительныеНачисленияРаботниковОрганизаций.Организация = &СписокОтчитывающихсяПодразделений
	//vvv
	|	И ДополнительныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение = &ОбособленноеПодразделение
	|   И (ДополнительныеНачисленияРаботниковОрганизаций.Сотрудник.ФизЛицо=&ФизЛицо ИЛИ &ПоВсемФизЛицам)
	//
	|	И ДополнительныеНачисленияРаботниковОрганизаций.ВидРасчета.КодДоходаЕСН В (ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ОблагаетсяПолностью), ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ОблагаетсяФСЗНиСТРАХ))
	|	И НЕ ДополнительныеНачисленияРаботниковОрганизаций.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.КомпенсацияОтпускаКалендарныеДни))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//vvv
	//|	НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
	|	НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия, МЕСЯЦ) КАК ПериодРегистрации,
	//
	|	ОсновныеНачисленияРаботниковОрганизаций.Сотрудник
	|ПОМЕСТИТЬ ВТСотрудникиПолучивышиеДоход
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|ГДЕ
	//vvv
	//|	ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &НачалоГода И &КонецГода
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия МЕЖДУ &НачалоГода И &КонецГода	
	|	И ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение = &ОбособленноеПодразделение
	|   И (ОсновныеНачисленияРаботниковОрганизаций.Сотрудник.ФизЛицо=&ФизЛицо ИЛИ &ПоВсемФизЛицам)
	|   И (ОсновныеНачисленияРаботниковОрганизаций.Результат<>0)
	|   И ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.КодДоходаЕСН<>ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ПустаяСсылка)
	//
	|	И НЕ ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.КодДоходаЕСН В (ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.НеОблагаетсяПолностью), ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ПособияИзФСЗН))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСотрудникиПремия.Сотрудник,
	|	ВТСотрудникиПремия.ПериодРегистрации,
	|	ВТСотрудникиПолучивышиеДоход.Сотрудник КАК Сотрудник1
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	ВТСотрудникиПремия КАК ВТСотрудникиПремия
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудникиПолучивышиеДоход КАК ВТСотрудникиПолучивышиеДоход
	|		ПО ВТСотрудникиПремия.Сотрудник = ВТСотрудникиПолучивышиеДоход.Сотрудник
	|			И ВТСотрудникиПремия.ПериодРегистрации = ВТСотрудникиПолучивышиеДоход.ПериодРегистрации
	|ГДЕ
	|	ВТСотрудникиПолучивышиеДоход.Сотрудник ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Сотрудники.Сотрудник,
	|	Сотрудники.Сотрудник.Физлицо КАК ФизЛицо,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество,
	|	Сотрудники.Сотрудник.Физлицо.СтатусКатегория КАК Категория,
	|	Сотрудники.Сотрудник.Физлицо.СтраховойНомерПФР КАК ЛичныйНомер,
	|	НАЧАЛОПЕРИОДА(Сотрудники.ПериодРегистрации, МЕСЯЦ) КАК ДатаНачалаРабот,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(Сотрудники.ПериодРегистрации, МЕСЯЦ) > ДатыПриемаУвольнения.ДатаОкончанияРабот
	|			ТОГДА ДатыПриемаУвольнения.ДатаОкончанияРабот
	|		ИНАЧЕ КОНЕЦПЕРИОДА(Сотрудники.ПериодРегистрации, МЕСЯЦ)
	|	КОНЕЦ КАК ДатаОкончанияРабот,
	|	ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТруда.Премия) КАК ВидДеятельности
	|ИЗ
	|	ВТСотрудники КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыПриемаУвольнения КАК ДатыПриемаУвольнения
	|		ПО Сотрудники.Сотрудник = ДатыПриемаУвольнения.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&КонецГода, ) КАК ФИОФизЛицСрезПоследних
	|		ПО Сотрудники.Сотрудник.Физлицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(Сотрудники.ПериодРегистрации, МЕСЯЦ) <= НАЧАЛОПЕРИОДА(ДатыПриемаУвольнения.ДатаОкончанияРабот, МЕСЯЦ)";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();

	
	Пока Выборка.Следующий() Цикл
		СтруктураПоиска.ФизЛицо = Выборка.ФизЛицо;
		СтруктураПоиска.Категория = Выборка.Категория;
		НайденныеСтроки = РаботникиОрганизации.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() = 0 Тогда
			СтрокаРаботник = РаботникиОрганизации.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРаботник,Выборка);
		КонецЕсли;
		СтрокаСтажа = СведенияОСтаже.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтажа,Выборка);
	КонецЦикла;
	
	
	
КонецФункции

#Если Клиент Тогда
	
//vvv	
Функция ПолучитьПрефикс(пТипФормы)
	
	Если пТипФормы=Перечисления.ТипыФормыДляПУ3.Исходная Тогда
		Возврат "1";
	ИначеЕсли пТипФормы=Перечисления.ТипыФормыДляПУ3.Отменяющая Тогда
		Возврат "2";
	ИначеЕсли пТипФормы=Перечисления.ТипыФормыДляПУ3.Пенсия Тогда	
		Возврат "3";
	КонецЕсли;
	
	Возврат "0";
	
КонецФункции


// Формирует файл, который можно будет записать на дискетку
	//
	// Параметры: 
	//  Нет
	//
	// Возвращаемое значение:
	//  Строка - содержимое файла
	//
//vvv добавим параметр	
//Функция СформироватьВыходнойФайл(Отказ) Экспорт
Функция СформироватьВыходнойФайл(Отказ,РазбиватьНаПачки=Истина) Экспорт
			
		мДлиннаСуток = 86400;
		
		// Заголовок для сообщений об ошибках проведения.
		Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
		
		ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
		Если ВыборкаПоШапкеДокумента.Следующий()=0 тогда
			Отказ = Истина;
			Возврат "";
		КонецЕсли;	
		
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);
		Если Отказ тогда
			Возврат "";
		КонецЕсли;	 
		
		Результат =	СформироватьЗапросПоРаботникиОрганизации();
		ВыборкаПоРаботникиОрганизации =	Результат.Выбрать(ОбходРезультатаЗапроса.Прямой);
		ТаблицаНачислений = ПолучитьТаблицуНачислений();
		ТаблицаСтажа = ПолучитьТаблицуСтажа();
		ТаблицаНеУплаченныеВзносы = ПроверитьНеУплаченныеВзносы();
		
		
		СписокОбработанныхАнкет = Новый СписокЗначений;
		
		МассивСтрок = Новый Массив;
		Месяц = 0;
		Пока Месяц <= 11 Цикл
			МассивСтрок.Добавить(" ");
			Месяц = Месяц+1;
		КонецЦикла;
		
		ТекстФайла	=	"";
		НомерДокументаВПачке = 0;
		
		//Формируем заголовок выходного файла
		ДатаФормирования = ВыборкаПоШапкеДокумента.Дата;
		ДеньШапки        = ?(День(ДатаФормирования)<10,"0","")+День(ДатаФормирования);
		МесяцШапки       = ?(Месяц(ДатаФормирования)<10,"0","")+Месяц(ДатаФормирования);
		ГодШапки 		 = Строка(СокрЛП(Формат(Год(ДатаФормирования), "ЧГ=0")));
		ДатаЗаполнения   = ДеньШапки+"/"+МесяцШапки+"/"+ГодШапки;
		//vvv комментируем
		//НомерПачки 				= ПроцедурыПерсонифицированогоУчета.НомерПачкиДокумента(ВыборкаПоШапкеДокумента.Номер);
		НомерПачки_=НомерПачки;
		//с 1.10.2019
		Если ТекущаяДата()>=Дата(2019,10,1) Тогда
			НомерПачки_ = "PU3_"+СокрЛП(ВыборкаПоШапкеДокумента.Организация.РегистрационныйНомерПФР)+"_"+СокрЛП(ВыборкаПоШапкеДокумента.Организация.ИНН)+"_"+ПолучитьПрефикс(ВыборкаПоШапкеДокумента.ТипФормы)+"_"+Формат(ДатаРегистрации,"ДФ=гггг")+"0"
							+Строка(Число(Формат(КонецКвартала(ДатаРегистрации),"ДФ=" "к")))+"_"+Формат(ТекущаяДата(),"ДФ=ггггММддччммсс");
		КонецЕсли;						
		//
		КоличествоДокументов 	= ВыборкаПоРаботникиОрганизации.Количество();
		
		Если Отказ тогда
			Возврат "";
		КонецЕсли;	 
		
		ТекстФайла = Новый ТекстовыйДокумент;
		//vvv
		//ТекстФайла.ДобавитьСтроку("ЗГЛВ=1.6=");	
		Если Год(ДатаРегистрации)<=2018 Тогда
			ТекстФайла.ДобавитьСтроку("ЗГЛВ=1.6=");	
		Иначе
			ТекстФайла.ДобавитьСтроку("ЗГЛВ=1.7=");	
		КонецЕсли;
		//
		ТекстФайла.ДобавитьСтроку(Врег("<ПАЧК="+?((ВыборкаПоШапкеДокумента.Организация.ИНН)= "", " ",СокрЛП(ВыборкаПоШапкеДокумента.Организация.ИНН)) +"="+?(СокрЛП(ВыборкаПоШапкеДокумента.Организация.РегистрационныйНомерПФР)= ""," ",СокрЛП(ВыборкаПоШапкеДокумента.Организация.РегистрационныйНомерПФР))+
		//vvv
		//"="+?(СокрЛП(ВыборкаПоШапкедокумента.Организация.НаименованиеПолное) = ""," ",СокрЛП(ВыборкаПоШапкеДокумента.Организация.НаименованиеПолное))+"="+СокрЛП(НомерПачки)+"= = =1="));
		"="+?(СокрЛП(ВыборкаПоШапкедокумента.Организация.НаименованиеПолное) = ""," ",СокрЛП(ВыборкаПоШапкеДокумента.Организация.НаименованиеПолное))+"="+СокрЛП(НомерПачки_)+"= = =1="));
		//
		ТекстФайла.ДобавитьСтроку("ТИПД=ПУ-3=1= = = =>");
		
		//vvv
		//ТипЗаписи    = "<ПУ-3=И="+?(СокрЛП(ВыборкаПоШапкеДокумента.Организация.РегистрационныйНомерПФР) = ""," ",СокрЛП(ВыборкаПоШапкеДокумента.Организация.РегистрационныйНомерПФР)) +"=";
		ТипЗаписи    = "<ПУ-3="+Лев(ТипФормы,1)+"="+?(СокрЛП(ВыборкаПоШапкеДокумента.Организация.РегистрационныйНомерПФР) = ""," ",СокрЛП(ВыборкаПоШапкеДокумента.Организация.РегистрационныйНомерПФР)) +"=";
		КоличествоДокументов=0;
		//
		ТекСтрока = 3;
		ИтогДохода = 0;
		ИтогБольн = 0;
		ИтогВзнос = 0;
		ИтогВзносУплач =0;
		
		РаботДоход = 0;
		РаботБольн = 0;
		РаботВзнос = 0;
		РаботВзносПоРаботнику = 0;  
		РаботВзносПенсСтрахование = 0;	
		РаботВзносСоцСтрахование = 0;
		РаботВзносУплачРаботником = 0;
		РаботВзносУплачПлательщиком = 0;
		РаботВзносУплач = 0;
		
		СтрокаЗамены = 3;
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ФизЛицо");
		СтруктураПоиска.Вставить("Категория");
		СтруктураПоиска.Вставить("Договор");
		
		
		Пока ВыборкаПоРаботникиОрганизации.Следующий()	Цикл
			
			//vvv
			Если КоличествоДокументов=199 И РазбиватьНаПачки Тогда
				СтрокаФайла = "ТИПД=ПУ-3="+СокрЛП(Строка(КоличествоДокументов))+"="+ ?(ИтогДохода = 0, 0, СокрЛП(Строка(Формат(ИтогДохода,"ЧГ=0"))))+"="+
				?(ИтогБольн = 0, 0, СокрЛП(Строка(Формат(ИтогБольн,"ЧГ=0"))))+"="+
				?(ИтогВзнос = 0, 0, СокрЛП(Строка(Формат(ИтогВзнос,"ЧГ=0"))))+"="+
				?(ИтогВзносУплач = 0, 0, СокрЛП(Строка(Формат(ИтогВзносУплач,"ЧГ=0"))))+"=>";
		
				ТекстФайла.ЗаменитьСтроку(3, СтрокаФайла);
				ТекстФайла.Показать("Файл-пачка форм ПУ-3","Файл сведений");
				ТекстФайла.Записать(КаталогВыгрузки+"\"+СокрЛП(НомерПачки_)+".txt",КодировкаТекста.ANSI);
				КоличествоДокументов=0;
				//НомерПачки_=Формат(Число(НомерПачки_)+1,"ЧГ=");    
				НомерПачки_ = "PU3_"+СокрЛП(ВыборкаПоШапкеДокумента.Организация.РегистрационныйНомерПФР)+"_"+СокрЛП(ВыборкаПоШапкеДокумента.Организация.ИНН)+"_"+ПолучитьПрефикс(ВыборкаПоШапкеДокумента.ТипФормы)+"_"+Формат(ДатаРегистрации,"ДФ=гггг")+"0"
							+Строка(Число(Формат(КонецКвартала(ДатаРегистрации),"ДФ=" "к")))+"_"+Формат(ТекущаяДата(),"ДФ=ггггММддччммсс");
				Сообщить("Пачка достигла предела в 199 человек! Создаем новую с №"+НомерПачки_);
				ТекстФайла = Новый ТекстовыйДокумент;
				Если Год(ДатаРегистрации)<=2018 Тогда
					ТекстФайла.ДобавитьСтроку("ЗГЛВ=1.6=");	
				Иначе
					ТекстФайла.ДобавитьСтроку("ЗГЛВ=1.7=");	
				КонецЕсли;	
				ТекстФайла.ДобавитьСтроку(Врег("<ПАЧК="+?((ВыборкаПоШапкеДокумента.Организация.ИНН)= "", " ",СокрЛП(ВыборкаПоШапкеДокумента.Организация.ИНН)) +"="+?(СокрЛП(ВыборкаПоШапкеДокумента.Организация.РегистрационныйНомерПФР)= ""," ",СокрЛП(ВыборкаПоШапкеДокумента.Организация.РегистрационныйНомерПФР))+
				"="+?(СокрЛП(ВыборкаПоШапкедокумента.Организация.НаименованиеПолное) = ""," ",СокрЛП(ВыборкаПоШапкеДокумента.Организация.НаименованиеПолное))+"="+СокрЛП(НомерПачки_)+"= = =1="));
				ТекстФайла.ДобавитьСтроку("ТИПД=ПУ-3=1= = = =>");
				ТипЗаписи    = "<ПУ-3="+Лев(ТипФормы,1)+"="+?(СокрЛП(ВыборкаПоШапкеДокумента.Организация.РегистрационныйНомерПФР) = ""," ",СокрЛП(ВыборкаПоШапкеДокумента.Организация.РегистрационныйНомерПФР)) +"=";  	
				ТекСтрока = 3;
				ИтогДохода = 0;
				ИтогБольн = 0;
				ИтогВзнос = 0;
				ИтогВзносУплач =0;
				
				РаботДоход = 0;
				РаботБольн = 0;
				РаботВзнос = 0;
				РаботВзносПоРаботнику = 0;  
				РаботВзносПенсСтрахование = 0;	
				РаботВзносСоцСтрахование = 0;
				РаботВзносУплачРаботником = 0;
				РаботВзносУплачПлательщиком = 0;
				РаботВзносУплач = 0;
			КонецЕсли;
			КоличествоДокументов=КоличествоДокументов+1;
			//
			//Инициалы должны быть указаны
			ТипЗаписиНач = "НЧСЛ=";
			СтрокаФайла = ТипЗаписи;			
			Фамилия = ВРег(?(ВыборкаПоРаботникиОрганизации.Фамилия = "", " ", СокрЛП(ВыборкаПоРаботникиОрганизации.Фамилия)));
			Имя = Врег(?(ВыборкаПоРаботникиОрганизации.Имя = "", " ", СокрЛП(ВыборкаПоРаботникиОрганизации.Имя)));
			Отчество = Врег(?(ВыборкаПоРаботникиОрганизации.Отчество = "", " ", СокрЛП(ВыборкаПоРаботникиОрганизации.Отчество)));			
			//vvv
			Фамилия = ВРег(?(ВыборкаПоРаботникиОрганизации.Фамилия = "", " ", СокрЛП(ВыборкаПоРаботникиОрганизации.Фамилия)));
			Имя = Врег(?(ВыборкаПоРаботникиОрганизации.Имя = "", " ", ЛЕВ(СокрЛП(ВыборкаПоРаботникиОрганизации.Имя),1)));
			Отчество = Врег(?(ВыборкаПоРаботникиОрганизации.Отчество = "", " ", ЛЕВ(СокрЛП(ВыборкаПоРаботникиОрганизации.Отчество),1)));
            //
			Категория =?( СокрЛП(ВыборкаПоРаботникиОрганизации.КодКатегории) = "", "01", СокрЛП(ВыборкаПоРаботникиОрганизации.КодКатегории));
			СтрокаФайла = СтрокаФайла+?(СокрЛП(ВыборкаПоРаботникиОрганизации.ЛичныйНомер) = ""," ",СокрЛП(ВыборкаПоРаботникиОрганизации.ЛичныйНомер))+"="+Фамилия+"="+Имя+"="+Отчество+"="+Категория+"=";
			
			НомерДокументаВПачке = 	НомерДокументаВПачке + 1;
			
			НомерДокументаВПачке = НомерДокументаВПачке;
			ТекстФайла.ДобавитьСтроку(СтрокаФайла);
			ТекСтрока = ТекСтрока+1;
			СтрокаЗамены = ТекСтрока;
			
			СтруктураПоиска.ФизЛицо   = ВыборкаПоРаботникиОрганизации.ФизЛицо;
			СтруктураПоиска.Категория = ВыборкаПоРаботникиОрганизации.Категория;
			СтруктураПоиска.Договор   = ВыборкаПоРаботникиОрганизации.Договор;
			СтрокиНачислений = ТаблицаНачислений.НайтиСтроки(СтруктураПоиска); 
			
			
			
			Если СтрокиНачислений.Количество()<> 0 тогда
				РаботДоход = 0;
				РаботБольн = 0;
				РаботВзнос = 0;
				РаботВзносПоРаботнику = 0;  
				РаботВзносПенсСтрахование = 0;	
				РаботВзносСоцСтрахование = 0;		
				РаботВзносУплач = 0;
		        РаботВзносУплачРаботником = 0;
		        РаботВзносУплачПлательщиком = 0;
				
				КоличествоМес = 0;
				Для каждого СтрокаМес из СтрокиНачислений Цикл
					СтрЗар = ?(СтрокаМес.Выплаты = 0, "0", СокрЛП(Строка(Формат(СтрокаМес.Выплаты,"ЧГ=0"))));
					//vvv комментируем
					//СтрБлн = ?(СтрокаМес.Пособия = 0 , ?(СтрокаМес.Выплаты = 0 И СтрокаМес.Взносы = 0,"0"," "), СокрЛП(Строка(Формат(СтрокаМес.Пособия,"ЧГ=0"))));
					СтрБлн = ?(СтрокаМес.Пособия = 0, "0", СокрЛП(Строка(Формат(СтрокаМес.Пособия,"ЧГ=0"))));
					//
					СтрВзн = ?(СтрокаМес.Взносы = 0, "0", СокрЛП(Строка(Формат(СтрокаМес.Взносы,"ЧГ=0"))));
					СтрВзнНачРаботник = ?(СтрокаМес.НачВзносыРаботнику = 0, "0", СокрЛП(Строка(Формат(СтрокаМес.НачВзносыРаботнику,"ЧГ=0"))));
					СтрВзнНачПенс = ?(СтрокаМес.НачВзносыНаПенсионноеСтрахование = 0, "0", СокрЛП(Строка(Формат(СтрокаМес.НачВзносыНаПенсионноеСтрахование,"ЧГ=0"))));
					СтрВзнНачСоц = ?(СтрокаМес.НачВзносыНаСоциальноеСтрахование = 0, "0", СокрЛП(Строка(Формат(СтрокаМес.НачВзносыНаСоциальноеСтрахование,"ЧГ=0"))));
					СтрВзнУплРаботник = ?(СтрокаМес.УплаченныеВзносыРаботником = 0, "0", СокрЛП(Строка(Формат(СтрокаМес.УплаченныеВзносыРаботником,"ЧГ=0"))));
					СтрВзнУплПлательщиком = ?(СтрокаМес.УплаченныеВзносыПлательщиком = 0, "0", СокрЛП(Строка(Формат(СтрокаМес.УплаченныеВзносыПлательщиком,"ЧГ=0"))));
					СтрВзнУпл = ?(СтрокаМес.ВзносыУплаченные = 0, "0", СокрЛП(Строка(Формат(СтрокаМес.ВзносыУплаченные,"ЧГ=0"))));				
					СтрТарифПоРаботнику = ?(СтрокаМес.ТарифРаботнику = 0, "0", СокрЛП(Строка(Формат(СтрокаМес.ТарифРаботнику,"ЧГ=0"))));
					СтрТарифПенсСтрахование = ?(СтрокаМес.ТарифНаПенСтрахование = 0, "0", СокрЛП(Строка(Формат(СтрокаМес.ТарифНаПенСтрахование,"ЧГ=0"))));
					СтрТарифСоцСтрахование = ?(СтрокаМес.ТарифНаСоцСтрахование = 0, "0", СокрЛП(Строка(Формат(СтрокаМес.ТарифНаСоцСтрахование,"ЧГ=0"))));
					СтрТарифДатаИзменения = ?(СтрокаМес.ДатаИзмененияТарифа = Дата(1,1,1,0,0,0), " " ,Формат(СтрокаМес.ДатаИзмененияТарифа,"ДФ=""дд/ММ/гггг"""));
					//vvv  с 2019 года нужно передавать код причины, если начислено меньше чем мин зп
					СтрКодПричиныМинЗП = ?(Не ЗначениеЗаполнено(СтрокаМес.КодПричины), " " ,СтрокаМес.КодПричины);
					//СтрокаЗар = ВРЕГ(ТипЗаписиНач+Формат(Месяц(СтрокаМес.Месяц),"ЧГ=0") + "=" + СтрЗар + "=" + СтрБлн + "=" + СтрВзнНачРаботник + "=" + СтрВзнНачПенс + "=" + СтрВзнНачСоц + "=" + СтрВзнУплРаботник + "=" + СтрВзнУплПлательщиком + "=" +СтрТарифПоРаботнику + "=" +СтрТарифПенсСтрахование + "=" + СтрТарифСоцСтрахование + "=" +СтрТарифДатаИзменения + "=");
					СтрокаЗар = ВРЕГ(ТипЗаписиНач+Формат(Месяц(СтрокаМес.Месяц),"ЧГ=0") + "=" + СтрЗар + "=" + СтрБлн + "=" + СтрВзнНачРаботник + "=" + СтрВзнНачПенс + "=" + СтрВзнНачСоц + "=" + СтрВзнУплРаботник + "=" + СтрВзнУплПлательщиком + "=" +СтрТарифПоРаботнику + "=" +СтрТарифПенсСтрахование + "=" + СтрТарифСоцСтрахование + "=" +СтрТарифДатаИзменения + "="+?(Год(ДатаРегистрации)<=2018,"",СтрКодПричиныМинЗП+"="));
					//
					МассивСтрок[Месяц(СтрокаМес.Месяц)-1] = СтрокаЗар;
					
					ИтогДохода = ИтогДохода + СтрокаМес.Выплаты;
					ИтогБольн = ИтогБольн + СтрокаМес.Пособия;
					ИтогВзнос = ИтогВзнос + СтрокаМес.Взносы;
					ИтогВзносУплач = ИтогВзносУплач + СтрокаМес.УплаченныеВзносыРаботником+СтрокаМес.УплаченныеВзносыПлательщиком;
					
					РаботДоход = РаботДоход + СтрокаМес.Выплаты;
					РаботБольн = РаботБольн + СтрокаМес.Пособия;
					РаботВзнос = РаботВзнос + СтрокаМес.Взносы;
					РаботВзносПоРаботнику = РаботВзносПоРаботнику + СтрокаМес.НачВзносыРаботнику;  
					РаботВзносПенсСтрахование = РаботВзносПенсСтрахование + СтрокаМес.НачВзносыНаПенсионноеСтрахование;	
					РаботВзносСоцСтрахование = РаботВзносСоцСтрахование + СтрокаМес.НачВзносыНаСоциальноеСтрахование;		
		            РаботВзносУплачРаботником = РаботВзносУплачРаботником + СтрокаМес.УплаченныеВзносыРаботником;
		            РаботВзносУплачПлательщиком = РаботВзносУплачПлательщиком + СтрокаМес.УплаченныеВзносыПлательщиком;					
					КоличествоМес = КоличествоМес+1;
				КонецЦикла;
			КонецЕсли;	
			
			Месяц = 0;
			СтрокиПоРаботнику = ТаблицаСтажа.НайтиСтроки(СтруктураПоиска); 
			Для Каждого СтрокаСтаж из СтрокиПоРаботнику цикл
				Если СокрЛП(СтрокаСтаж.ВидДеятельности) = "ДЕТИ" Тогда
					МесяцНачала = Месяц(СтрокаСтаж.ДатаНачалаРабот);
					МесяцОкончания = Месяц(СтрокаСтаж.ДатаОкончанияРабот);
					Для Месяц = МесяцНачала По МесяцОкончания Цикл
						Если НЕ ЗначениеЗаполнено(МассивСтрок[Месяц-1]) тогда
							//vvv
							//СтрокаЗар = ВРЕГ(ТипЗаписиНач+Формат(Месяц,"ЧГ=0")+ "=0=0=0=0=0=0=0=1=28=6= =");
							СтрокаЗар = ВРЕГ(ТипЗаписиНач+Формат(Месяц,"ЧГ=0")+ "=0=0=0=0=0=0=0=1=28=6= ="+?(Год(ДатаРегистрации)<=2018,""," ="));
							//

							МассивСтрок[Месяц-1] = СтрокаЗар;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
			
			Для Месяц = 0 По 11 Цикл
				Если ЗначениеЗаполнено(МассивСтрок[Месяц]) тогда
					СтрокаЗар = МассивСтрок[Месяц];
					ТекстФайла.ДобавитьСтроку(СтрокаЗар);
					ТекСтрока = ТекСтрока+1;
				КонецЕсли;
			КонецЦикла;
			МассивСтрок.Очистить();
			Месяц = 0;
			Пока Месяц <= 11 Цикл
				МассивСтрок.Добавить(" ");
				Месяц = Месяц+1;
			КонецЦикла;
			
			ТипЗаписиНач = "СТАЖ=";
			СтрокиПоРаботнику = ТаблицаСтажа.НайтиСтроки(СтруктураПоиска); 
			КоличествоЗаписейОСтаже = 0;
			ПредыдущийВидДейтельности = "";
			ПредыдущееОкончаниеРабот = "";
			ДатаНачалаРабот = "";
			НомерДоговора = "";
			ДатаДокумента = "";
			
			Если СтрокиПоРаботнику.Количество() <> 0 Тогда
				Для каждого СтрокаСтаж из СтрокиПоРаботнику цикл
					Если СтрокаСтаж.ВидДеятельности <> Справочники.ОсобыеУсловияТруда.ПустаяСсылка() Тогда
						ДатаФормирования = СтрокаСтаж.ДатаНачалаРабот;
						ДеньШапки        = ?(День(ДатаФормирования)<10,"0","")+День(ДатаФормирования);
						МесяцШапки       = ?(Месяц(ДатаФормирования)<10,"0","")+Месяц(ДатаФормирования);
						ГодШапки 		 = Строка(СокрЛП(Формат(Год(ДатаФормирования), "ЧГ=0")));
						ДатаНачалаРабот   = ДеньШапки+"/"+МесяцШапки+"/"+ГодШапки;
						
						
						ДатаФормирования = СтрокаСтаж.ДатаОкончанияРабот;
						ДеньШапки        = ?(День(ДатаФормирования)<10,"0","")+День(ДатаФормирования);
						МесяцШапки       = ?(Месяц(ДатаФормирования)<10,"0","")+Месяц(ДатаФормирования);
						ГодШапки 		 = Строка(СокрЛП(Формат(Год(ДатаФормирования), "ЧГ=0")));
						ДатаОкончанияРабот   = ДеньШапки+"/"+МесяцШапки+"/"+ГодШапки;
						
						СтрокаЗар = ВРЕГ(ТипЗаписиНач+ДатаНачалаРабот+"="+ДатаОкончанияРабот+"= ="+СокрЛП(СтрокаСтаж.ВидДеятельности)+"= = =");
						ТекстФайла.ДобавитьСтроку(СтрокаЗар);
						ТекСтрока = ТекСтрока+1;
						КоличествоЗаписейОСтаже = КоличествоЗаписейОСтаже+1;
						Если Категория = "03" Или Категория = "11" тогда
							//vvv
							Если СтрокаСтаж.ВидДеятельности=Справочники.ОсобыеУсловияТруда.ВзносыВрем ТОгда Продолжить; КонецЕсли;
							//
							НомерДоговора = СокрЛП(ВыборкаПоРаботникиОрганизации.НомерДоговора);
							ДатаФормирования = ВыборкаПоРаботникиОрганизации.ДатаДоговора;
							ДеньШапки        = ?(День(ДатаФормирования)<10,"0","")+День(ДатаФормирования);
							МесяцШапки       = ?(Месяц(ДатаФормирования)<10,"0","")+Месяц(ДатаФормирования);
							ГодШапки 		 = Строка(СокрЛП(Формат(Год(ДатаФормирования), "ЧГ=0")));
							ДатаДокумента   = ДеньШапки+"/"+МесяцШапки+"/"+ГодШапки;
							СтрокаФайла = СтрокаФайла+НомерДоговора+"="+ДатаДокумента+"=";
						КонецЕсли;
						ПредыдущийВидДейтельности = СтрокаСтаж.ВидДеятельности;
						ПредыдущееОкончаниеРабот = СтрокаСтаж.ДатаОкончанияРабот;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаЗар) тогда
				СтрокаЗар = СтрокаЗар + ">";
				ТекстФайла.ЗаменитьСтроку(ТекСтрока, СтрокаЗар);
				СтрокаЗар = " ";
			КонецЕсли;
			
			Если Категория <> "03" тогда
				Если НЕ ЗначениеЗаполнено(СтрокаФайла) тогда
					СтрокаФайла = " = ="
				Иначе
					СтрокаФайла = СтрокаФайла+" = =";
				КонецЕсли;
				
			КонецЕсли;			
			//vvv
			//СтрокаФайла = ВРЕГ(СтрокаФайла+ ?(РаботДоход = 0, " ", СокрЛП(Строка(Формат(РаботДоход,"ЧГ=0"))))+"="+
			СтрокаФайла = ВРЕГ(СтрокаФайла+ ?(РаботДоход = 0, "0", СокрЛП(Строка(Формат(РаботДоход,"ЧГ=0"))))+"="+
			//
			?(РаботБольн = 0, 0, СокрЛП(Строка(Формат(РаботБольн,"ЧГ=0"))))+"="+
			?(РаботВзносПоРаботнику = 0, 0, СокрЛП(Строка(Формат(РаботВзносПоРаботнику,"ЧГ=0"))))+"="+
			?(РаботВзносПенсСтрахование = 0, 0, СокрЛП(Строка(Формат(РаботВзносПенсСтрахование,"ЧГ=0"))))+"="+
			?(РаботВзносСоцСтрахование = 0, 0, СокрЛП(Строка(Формат(РаботВзносСоцСтрахование,"ЧГ=0"))))+"="+
			?(РаботВзносУплачРаботником = 0, 0, СокрЛП(Строка(Формат(РаботВзносУплачРаботником,"ЧГ=0"))))+"="+
            ?(РаботВзносУплачПлательщиком = 0, 0, СокрЛП(Строка(Формат(РаботВзносУплачПлательщиком,"ЧГ=0"))))+"="+
			//vvv комментируем
			//Формат(КоличествоМес,"ЧГ=0")+"="+?(КоличествоЗаписейОСтаже=0,"0",СокрЛП(Строка(Формат(КоличествоЗаписейОСтаже,"ЧГ=0"))))+"="+ДатаЗаполнения+"= ="+Формат(ГОД(ВыборкаПоШапкеДокумента.ПериодРегистрации),"ЧГ=0")+"= =");
			Формат(КоличествоМес,"ЧГ=0")+"="+?(КоличествоЗаписейОСтаже=0,"0",СокрЛП(Строка(Формат(КоличествоЗаписейОСтаже,"ЧГ=0"))))+"="+ДатаЗаполнения+"="+?(Год(ДатаРегистрации)<=2018," ",Строка(Число(Формат(КонецКвартала(ДатаРегистрации),"ДФ=" "к"))))+"="+Формат(ГОД(ВыборкаПоШапкеДокумента.ПериодРегистрации),"ЧГ=0")+"="+СокрЛП(ВыборкаПоШапкеДокумента.Телефон)+"=");
			//
			ТекстФайла.ЗаменитьСтроку(СтрокаЗамены, СтрокаФайла);
			
			
		КонецЦикла; 
		
		СтрокаФайла = "ТИПД=ПУ-3="+СокрЛП(Строка(КоличествоДокументов))+"="+ ?(ИтогДохода = 0, 0, СокрЛП(Строка(Формат(ИтогДохода,"ЧГ=0"))))+"="+
		?(ИтогБольн = 0, 0, СокрЛП(Строка(Формат(ИтогБольн,"ЧГ=0"))))+"="+
		?(ИтогВзнос = 0, 0, СокрЛП(Строка(Формат(ИтогВзнос,"ЧГ=0"))))+"="+
		?(ИтогВзносУплач = 0, 0, СокрЛП(Строка(Формат(ИтогВзносУплач,"ЧГ=0"))))+"=>";
		
		ТекстФайла.ЗаменитьСтроку(3, СтрокаФайла);
		
		//vvv
		Если РазбиватьНаПачки ТОгда
			ТекстФайла.Записать(КаталогВыгрузки+"\"+СокрЛП(НомерПачки_)+".txt",КодировкаТекста.ANSI);
		КОнецЕсли;
		//
		Возврат ТекстФайла.ПолучитьТекст();
		
		
	КонецФункции 
	
Функция ПолучитьТаблицуСтажа() Экспорт
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
		
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОЗаработкеРаботниковДПУ.ФизЛицо,
	|	СведенияОЗаработкеРаботниковДПУ.ДатаНачалаРабот,
	|	СведенияОЗаработкеРаботниковДПУ.ДатаОкончанияРабот,
	|	СведенияОЗаработкеРаботниковДПУ.ВидДеятельности,
	|	СведенияОЗаработкеРаботниковДПУ.КодПоОКПДТР,
	|	СведенияОЗаработкеРаботниковДПУ.Договор,
	|	СведенияОЗаработкеРаботниковДПУ.Категория
	|ИЗ
	|	Документ.СведенияОЗаработкеРаботниковДПУ.СведенияОСтаже КАК СведенияОЗаработкеРаботниковДПУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СведенияОЗаработкеРаботниковДПУ.СведенияОВзносах КАК СведенияОЗаработкеРаботниковДПУСведенияОВзносах
	|		ПО СведенияОЗаработкеРаботниковДПУ.Ссылка = СведенияОЗаработкеРаботниковДПУСведенияОВзносах.Ссылка
	|			И СведенияОЗаработкеРаботниковДПУ.ФизЛицо = СведенияОЗаработкеРаботниковДПУСведенияОВзносах.ФизЛицо
	|			И (НАЧАЛОПЕРИОДА(СведенияОЗаработкеРаботниковДПУ.ДатаНачалаРабот, МЕСЯЦ) = СведенияОЗаработкеРаботниковДПУСведенияОВзносах.Месяц)
	|ГДЕ
	|	СведенияОЗаработкеРаботниковДПУ.Ссылка = &ДокументСсылка";
	
	Возврат Запрос.Выполнить().Выгрузить();
		
КонецФункции
	
	
Функция ПолучитьТаблицуНачислений() Экспорт
		
		Запрос = Новый Запрос;
		
		Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияОЗаработкеРаботниковДПУ.ФизЛицо,
		|	СведенияОЗаработкеРаботниковДПУ.Месяц,
		|	СведенияОЗаработкеРаботниковДПУ.Выплаты,
		|	СведенияОЗаработкеРаботниковДПУ.Взносы,
		|	СведенияОЗаработкеРаботниковДПУ.ТарифВзносов,
		//vvv
		|	СведенияОЗаработкеРаботниковДПУ.КодПричины.Код КАК КодПричины,
		//
		|	СведенияОЗаработкеРаботниковДПУ.Пособия,
		|	СведенияОЗаработкеРаботниковДПУ.Договор,
		|	СведенияОЗаработкеРаботниковДПУ.Категория,
		|	СведенияОЗаработкеРаботниковДПУ.СуммаУплаченныхВзносовРаботником КАК ВзносыУплаченные,
		|	СведенияОЗаработкеРаботниковДПУ.СуммаВзносовРаботнику КАК НачВзносыРаботнику,
		|	СведенияОЗаработкеРаботниковДПУ.СуммаВзносовНаПенсионноеСтрахование КАК НачВзносыНаПенсионноеСтрахование,
		|	СведенияОЗаработкеРаботниковДПУ.СуммаВзносовНаСоциальноеСтрахование КАК НачВзносыНаСоциальноеСтрахование,
		|	СведенияОЗаработкеРаботниковДПУ.СуммаУплаченныхВзносовРаботником КАК УплаченныеВзносыРаботником,
		|	ЕСТЬNULL(СведенияОЗаработкеРаботниковДПУ.СуммаУплаченныхВзносовНаПенсионноеСтрахование, 0) + ЕСТЬNULL(СведенияОЗаработкеРаботниковДПУ.СуммаУплаченныхВзносовНаСоциальноеСтрахование, 0) КАК УплаченныеВзносыПлательщиком,
		|	СведенияОЗаработкеРаботниковДПУ.ТарифРаботнику,
		|	СведенияОЗаработкеРаботниковДПУ.ТарифНаПенсионноеСтрахование КАК ТарифНаПенСтрахование,
		|	СведенияОЗаработкеРаботниковДПУ.ТарифНаСоциальноеСтрахование КАК ТарифНаСоцСтрахование,
		|	ЕСТЬNULL(СведенияОЗаработкеРаботниковДПУ.ДатаИзмененияТарифа, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаИзмененияТарифа
		|ИЗ
		|	Документ.СведенияОЗаработкеРаботниковДПУ.СведенияОВзносах КАК СведенияОЗаработкеРаботниковДПУ
		|ГДЕ
		|	СведенияОЗаработкеРаботниковДПУ.Ссылка = &ДокументСсылка";
		
		Возврат Запрос.Выполнить().Выгрузить();
		
	КонецФункции
	
//vvv
Процедура ВыборФайлаДляВыгрузки(Элемент) Экспорт
	
	ДиалогФыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	Если ДиалогФыбораФайла.Выбрать() Тогда
		Элемент.Значение = ДиалогФыбораФайла.Каталог;
	КонецЕсли;
	
КонецПроцедуры	

Процедура РассчитатьВзносы(Стр) Экспорт
	
	//vvv
	//Стр.Взносы=Окр(Стр.Выплаты*35/100);
	//Стр.СуммаВзносовРаботнику=Окр(Стр.Выплаты*0.01);
	//Стр.СуммаВзносовНаПенсионноеСтрахование=Окр(Стр.Выплаты*28/100);
	Стр.Взносы=Окр(Стр.Выплаты*35/100,2);
	Стр.СуммаВзносовРаботнику=Окр(Стр.Выплаты*0.01,2);
	Стр.СуммаВзносовНаПенсионноеСтрахование=Окр(Стр.Выплаты*28/100,2);
	//
	Стр.СуммаВзносовНаСоциальноеСтрахование=Стр.Взносы-(Стр.СуммаВзносовРаботнику+Стр.СуммаВзносовНаПенсионноеСтрахование);
	
	Стр.СуммаУплаченныхВзносовРаботником=Стр.СуммаВзносовРаботнику;
	Стр.СуммаУплаченныхВзносовНаПенсионноеСтрахование=Стр.СуммаВзносовНаПенсионноеСтрахование;
	Стр.СуммаУплаченныхВзносовНаСоциальноеСтрахование=Стр.СуммаВзносовНаСоциальноеСтрахование;
	
КонецПроцедуры

Функция ПолучитьДанныеДляЗаполненияСтажа(Организация, Год) Экспорт
		
		Запрос = Новый Запрос;
		
		Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
		Запрос.УстановитьПараметр("СписокОтчитывающихсяПодразделений", Организация);
		Запрос.УстановитьПараметр("НачалоНП", НачалоГода(Год));
		Запрос.УстановитьПараметр("КонецНП", КонецГода(Год));
		Запрос.УстановитьПараметр("БольничныйПоТравме", ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаБЛПоТравмеНаПроизводстве);
		Запрос.УстановитьПараметр("ОтпускПоУходуЗаРебенком", ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты);
		Запрос.УстановитьПараметр("ПриемНаРаботу", Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
		Запрос.УстановитьПараметр("Перемещение", Перечисления.ПричиныИзмененияСостояния.Перемещение);
		Запрос.УстановитьПараметр("Увольнение", Перечисления.ПричиныИзмененияСостояния.Увольнение);
		Запрос.УстановитьПараметр("Договор", Перечисления.СпособыРасчетаОплатыТруда.ПоДоговоруФиксированнойСуммой);
		
		СписокФизлицТекст = "ВЫБРАТЬ 
		|	ТЧРаботникиОрганизации.ФизЛицо
		|ИЗ
		|	Документ.СведенияОЗаработкеРаботниковДПУ.РаботникиОрганизации КАК ТЧРаботникиОрганизации
		|
		|ГДЕ
		|	ТЧРаботникиОрганизации.Ссылка = &ДокументСсылка";
		
		ДатыДвиженийТекст = 
		"ВЫБРАТЬ
		|	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо КАК ФизЛицо,
		|	&НачалоНП КАК ДатаС,
		|	РаботникиОрганизацийСрезПоследних.Организация КАК Организация,
		|	РаботникиОрганизацийСрезПоследних.Должность.ВидДейтельности.Код КАК ВидДейтельности
		|ИЗ
		|   РегистрСведений.РаботникиОрганизаций.СрезПоследних(&НачалоНП) КАК РаботникиОрганизацийСрезПоследних
		|ГДЕ
		|   РаботникиОрганизацийСрезПоследних.Организация = &СписокОтчитывающихсяПодразделений
		|   И РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо В (" + СписокФизлицТекст + ")
		|   И РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния <> &Увольнение
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ
		|	РаботникиОрганизаций.Сотрудник.Физлицо,
		|	РаботникиОрганизаций.Период,
		|	РаботникиОрганизаций.Организация, 
		|	РаботникиОрганизаций.Должность.ВидДейтельности.Код КАК ВидДейтельности 
		|ИЗ
		|   РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|ГДЕ
		|	РаботникиОрганизаций.Организация = &СписокОтчитывающихсяПодразделений
		|   И РаботникиОрганизаций.Сотрудник.Физлицо В (" + СписокФизлицТекст + ")
		|   И РаботникиОрганизаций.Период МЕЖДУ &НачалоНП И &КонецНП
		|   И РаботникиОрганизаций.ПричинаИзмененияСостояния <> &Увольнение";
		
		ЗапросТекст = 
		"ВЫБРАТЬ 
		|	ДопСведОСтаже.ВидДейтельности КАК ВидДейтельности,
		|	ДопСведОстаже.ФизЛицо КАК ФизЛицо,
		|   ДопСведОСтаже.НачалоРабот КАК НачалоРабот,
		|   ДопСведОСтаже.ОкончаниеРабот КАК ОкончаниеРабот,
		|   ДопСведОСтаже.ДатаДокумента КАК ДатаДокумента,
		|   ДопСведОСтаже.НомерДокумента КАК НомерДокумента
		|ИЗ
		|   (ВЫБРАТЬ
		|		""ДОГОВОР"" КАК ВидДейтельности,
		|		ПлановыеНачисленияРаботниковОрганизаций.Сотрудник.Физлицо КАК ФизЛицо,
		|		ПлановыеНачисленияРаботниковОрганизаций.ДокументОснование.ДатаНачала КАК НачалоРабот,
		|		ПлановыеНачисленияРаботниковОрганизаций.ДокументОснование.ДатаОкончания КАК ОкончаниеРабот,
		|       ПлановыеНачисленияРаботниковОрганизаций.ДокументОснование.Дата КАК  ДатаДокумента,
		|       ПлановыеНачисленияРаботниковОрганизаций.ДокументОснование.Номер КАК НомерДокумента
		|	ИЗ
		|		РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
		|	ГДЕ
		|		ПлановыеНачисленияРаботниковОрганизаций.Период <= &КонецНП
		|		И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения >= &НачалоНП
		|		И ПлановыеНачисленияРаботниковОрганизаций.Организация = &СписокОтчитывающихсяПодразделений
		|		И ПлановыеНачисленияРаботниковОрганизаций.Сотрудник.Физлицо В (" + СписокФизлицТекст + ")
		|		И ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета.СпособРасчета = &Договор
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|    ВЫБРАТЬ  
		|       ""СТРАХСЛУЧ"" КАК ВидДейтельности, 
		|		ОсновныеНачисленияРаботниковОрганизаций.Сотрудник.ФизЛицо,
		|		ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало КАК НачалоРабот,
		|		ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец,
		|       NULL,
		|       NULL
		| 	ИЗ
		|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
		|   ГДЕ
		|      ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало <= &КонецНП
		|		И ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец >= &НачалоНП
		|		И ОсновныеНачисленияРаботниковОрганизаций.Организация = &СписокОтчитывающихсяПодразделений
		|		И ОсновныеНачисленияРаботниковОрганизаций.Сотрудник.ФизЛицо В (" + СписокФизлицТекст + ")
		|		И ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = &БольничныйПоТравме
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|    ВЫБРАТЬ  
		|       ""ДЕТИ"" КАК ВидДейтельности, 
		|		ОсновныеНачисленияРаботниковОрганизаций.Сотрудник.ФизЛицо,
		|		ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало КАК НачалоРабот,
		|		ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец,
		|       NULL,
		|       NULL
		| 	ИЗ
		|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
		|   ГДЕ
		|      ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало <= &КонецНП
		|		И ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец >= &НачалоНП
		|		И ОсновныеНачисленияРаботниковОрганизаций.Организация = &СписокОтчитывающихсяПодразделений
		|		И ОсновныеНачисленияРаботниковОрганизаций.Сотрудник.ФизЛицо В (" + СписокФизлицТекст + ")
		|		И ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = &ОтпускПоУходуЗаРебенком
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|	ДатыНазначений1.ВидДейтельности КАК ВидДейтельности,
		|	ДатыНазначений1.ФизЛицо КАК ФизЛицо,
		|	ДатыНазначений1.ДатаС КАК ДатаНачалаРабот,
		|	ЕСТЬNULL(МИНИМУМ(ДатыНазначений2.Период), &КонецНП) КАК ДатаОкончанияРабот,
		|	NULL,
		|	NULL
		|ИЗ
		|	(" + ДатыДвиженийТекст + ") КАК ДатыНазначений1
		|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ДатыНазначений2
		|					ПО ДатыНазначений2.Сотрудник.Физлицо = ДатыНазначений1.ФизЛицо
		|						И ДатыНазначений2.Организация = ДатыНазначений1.Организация
		|						И ДатыНазначений2.Период > ДатыНазначений1.ДатаС
		|						И (ДатыНазначений2.Период < &КонецНП)
		|			
		|СГРУППИРОВАТЬ ПО
		|	ДатыНазначений1.ФизЛицо,
		|   ДатыНазначений1.ВидДейтельности,
		|	ДатыНазначений1.ДатаС
		|) КАК ДопСведОСтаже
		|УПОРЯДОЧИТЬ ПО
		|	ФизЛицо,
		|	НачалоРабот,
		|	ВидДейтельности";
		
		
		Запрос.Текст = ЗапросТекст;
		ТаблицаСтажа = Запрос.Выполнить().Выгрузить();
		
		// Удалим из таблицы стажа незначимые записи:
		//  - если по физлицу имеется 2 непрерывных записи с одинаковыми условиями труда, то объединим данные записи 
		Н = ТаблицаСтажа.Количество() - 1;
		Пока Н > 0 Цикл
			
			ТекущаяЗапись = ТаблицаСтажа[Н];
			ПредшествующаяЗапись = ТаблицаСтажа[Н-1];
			
			Если ТекущаяЗапись.ФизЛицо = ПредшествующаяЗапись.ФизЛицо // если совпадает физлицо
				И ТекущаяЗапись.НачалоРабот = КонецДня(ПредшествующаяЗапись.ОкончаниеРабот)+1 // если записи непрерывны (идут друг за другом по времени)
				// и совпадают параметры стажа
				И ТекущаяЗапись.ВидДейтельности = ПредшествующаяЗапись.ВидДейтельности  
				Тогда
				// объединим записи в одну
				ПредшествующаяЗапись.ОкончаниеРабот = ТекущаяЗапись.ОкончаниеРабот;
				ТаблицаСтажа.Удалить(ТекущаяЗапись);
			КонецЕсли; 
			Н = Н - 1;	
		КонецЦикла;
		
		ПредшествующееФизЛицо = Справочники.ФизическиеЛица.ПустаяСсылка();
		МассивСтрок = Новый Массив;
		СтрокСтажа = 0;
		СтруктураПоиска = Новый Структура("ФизЛицо");
		Н = ТаблицаСтажа.Количество();
		Пока Н > 0 Цикл
			
			ТекущаяЗапись = ТаблицаСтажа[Н - 1];
			
			Если ТекущаяЗапись.ФизЛицо <> ПредшествующееФизЛицо Тогда
				ЗаполнитьЗначенияСвойств(СтруктураПоиска,ТекущаяЗапись);
				МассивСтрок = ТаблицаСтажа.НайтиСтроки(СтруктураПоиска);
				ПредшествующееФизЛицо = ТекущаяЗапись.ФизЛицо;
			КонецЕсли; 
			
			СтрокСтажа = МассивСтрок.Количество();
			//Если СтрокСтажа = 0 Тогда
			//	ЗаполнитьЗначенияСвойств(Таблица.Добавить(),ТекущаяЗапись);
			//	Н = Н - 1;	
			//	Продолжить;
			//КонецЕсли;
			
			НачалоРабот = ТекущаяЗапись.НачалоРабот;
			ОкончаниеРабот = ТекущаяЗапись.ОкончаниеРабот;
			
			Для Сч = 1 По СтрокСтажа Цикл
				СтрокаСтажа = МассивСтрок[СтрокСтажа - Сч];
				Если СтрокаСтажа.ВидДейтельности = "ДЕТИ" тогда
					
					Если НачалоРабот = СтрокаСтажа.НачалоРабот И ТекущаяЗапись.ВидДейтельности <> "ДЕТИ" тогда
						//Если ОкончаниеРабот = СтрокаСтажа.ОкончаниеРабот тогда
						//	ТекущаяЗапись.Удалить();
						//КонецЕсли;
						ТекущаяЗапись.НачалоРабот = НачалоДня(СтрокаСтажа.ОкончаниеРабот + 1);
					КонецЕсли;
					
					Если НачалоРабот < СтрокаСтажа.НачалоРабот Тогда
						Если ОкончаниеРабот > СтрокаСтажа.ОкончаниеРабот Тогда
							НоваяСтрока = ТаблицаСтажа.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекущаяЗапись);
							НоваяСтрока.НачалоРабот = КонецДня(СтрокаСтажа.ОкончаниеРабот) + 1;
							НоваяСтрока.ОкончаниеРабот = ОкончаниеРабот;
							ТекущаяЗапись.ОкончаниеРабот = НачалоДня(СтрокаСтажа.НачалоРабот) -1;
							
							
						КонецЕсли;
					КонецЕсли;		
					
					Если ОкончаниеРабот = СтрокаСтажа.ОкончаниеРабот И ТекущаяЗапись.ВидДейтельности <> "ДЕТИ" тогда
						ТекущаяЗапись.ОкончаниеРабот = НачалоДня(СтрокаСтажа.НачалоРабот - 1);
					КонецЕсли;
					
					
					
				КонецЕсли;
				
			КонецЦикла;				
			Н = Н - 1;	
		КонецЦикла;
		
		ТаблицаСтажа.Сортировать("ФизЛицо,НачалоРабот,ВидДейтельности");	
		
		Возврат ТаблицаСтажа;
	КонецФункции
	
Функция ПроверитьНеУплаченныеВзносы() 
	
		Запрос = Новый Запрос;
		
		Запрос.УстановитьПараметр("Ссылка" , Ссылка);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияОЗаработкеРаботниковДПУСведенияОВзносах.ФизЛицо КАК ФизЛицо,
		|	СведенияОЗаработкеРаботниковДПУСведенияОВзносах.Месяц КАК Месяц
		|ИЗ
		|	Документ.СведенияОЗаработкеРаботниковДПУ.СведенияОВзносах КАК СведенияОЗаработкеРаботниковДПУСведенияОВзносах
		|ГДЕ
		|	ЕСТЬNULL(СведенияОЗаработкеРаботниковДПУСведенияОВзносах.СуммаУплаченныхВзносовРаботником, 0) + ЕСТЬNULL(СведенияОЗаработкеРаботниковДПУСведенияОВзносах.СуммаУплаченныхВзносовНаПенсионноеСтрахование, 0) + ЕСТЬNULL(СведенияОЗаработкеРаботниковДПУСведенияОВзносах.СуммаУплаченныхВзносовНаСоциальноеСтрахование, 0) = 0
		|	И СведенияОЗаработкеРаботниковДПУСведенияОВзносах.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Месяц,
		|	ФизЛицо";
		
		Возврат Запрос.Выполнить().Выгрузить();
	
	

КонецФункции	
	
Функция ПреобразоватьДату(Дата1)
	
	ДеньШапки        = ?(День(Дата1)<10,"0","")+День(Дата1);
	МесяцШапки       = ?(Месяц(Дата1)<10,"0","")+Месяц(Дата1);
	ГодШапки 		 = Строка(СокрЛП(Формат(Год(Дата1), "ЧГ=0")));
	Дата2   = ДеньШапки+"/"+МесяцШапки+"/"+ГодШапки;
	
	Возврат Дата2;
	
КонецФункции

	
	
	//Процедура вывода файла сведений на печать
Процедура ПечатьФайла(РежимПечати = 0, МестоВызова = "") Экспорт
		
		ЕстьОшибки = Ложь;
		ТекстФайла = РегламентированнаяОтчетность.ПолучитьТекстФайла(ЭтотОбъект,ЕстьОшибки);
		Если ЕстьОшибки тогда
			Возврат;
		КонецЕсли;	 
		
		Макет = ПолучитьМакет("ФормаАДВ_1");
		ДокументРезультат = Новый ТабличныйДокумент;
		ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АнкетаЗастрахованногоЛица_ФормаАДВ_1";
		
		//Получаем таблицу формата записи
		ДокументФорматЗаписей = ПолучитьМакет("ФорматЗаписей");
		ТаблицаФорматаЗаписи = ПроцедурыПерсонифицированогоУчета.ПолучитьФорматЗаписи("АНКТ",ДокументФорматЗаписей);
		
		//Получаем инициализированную структуру, соответствующую формату записи 
		//ПустаяЗапись = ПолучитьСтруктуруЗаписи(ТаблицаФорматаЗаписи);
		
		//Обработка заголовка файла
		ИнформацияОПачке = Новый Структура;
		Если ПроцедурыПерсонифицированогоУчета.РазобратьЗаголовокФайла(ТекстФайла,ИнформацияОПачке)=0 тогда
			Возврат;
		КонецЕсли;	
		
		//Обработка документов файла
		ОбластьАнкета = Макет.ПолучитьОбласть("Анкета");
		
		Для Н=5 по СтрЧислоСтрок(ТекстФайла) цикл
			//Прочитаем запись из файла
			СтрокаФайла = СтрПолучитьСтроку(ТекстФайла,Н);
			Запись = ПроцедурыПерсонифицированогоУчета.ПолучитьСтруктуруЗаписи(ТаблицаФорматаЗаписи);
			СтрОшибка = "";
			Если НЕ ПроцедурыПерсонифицированогоУчета.РазложитьСтрокуВСтруктуруЗаписи(СтрокаФайла,"АНКТ",ТаблицаФорматаЗаписи,Запись,СтрОшибка) тогда
				Сообщить("Ошибка в строке файла № "+Н+": "+СтрОшибка);
				Возврат;
			КонецЕсли;	
			
			ОбластьАнкета.Параметры.ДатаЗаполнения					= 	"Дата заполнения "+ПроцедурыПерсонифицированогоУчета.ДатаВОтчет(Запись.ДатаЗаполнения);
			ОбластьАнкета.Параметры.Фамилия 						= Запись.Фамилия; 
			ОбластьАнкета.Параметры.Имя 							= Запись.Имя; 
			ОбластьАнкета.Параметры.Отчество 						= Запись.Отчество; 
			ОбластьАнкета.Параметры.Пол 							= Запись.Пол+"     (м/ж)"; 
			ОбластьАнкета.Параметры.ДатаРождения 					= ПроцедурыПерсонифицированогоУчета.ДатаВОтчет(Запись.СтандартнаяДатаРождения); 
			
			//Место рождения
			ОбластьАнкета.Параметры.МестоРожденияТип 				= 	?(Запись.ТипМестаРождения = "ОСОБОЕ", "особое", "");
			ОбластьАнкета.Параметры.МестоРожденияГород 				= 	Запись.МестоРожденияНаселенныйПункт;
			ОбластьАнкета.Параметры.МестоРожденияРайон 				= 	Запись.МестоРожденияРайон;
			ОбластьАнкета.Параметры.МестоРожденияОбласть			= 	Запись.МестоРожденияОбласть;
			ОбластьАнкета.Параметры.МестоРожденияСтрана			 	= 	Запись.МестоРожденияСтрана;
			
			ОбластьАнкета.Параметры.Гражданство 					= 	Запись.Гражданство;
			
			//Паспортные данные
			НаименованиеДокумента 									= 	Запись.ДокументНаименование;
			Серия1 													= 	Запись.ДокументСерияРимскиеЦифры;
			Серия2 													= 	Запись.ДокументСерияРусскиеБуквы;
			
			СерияНомер = Серия1 +?( СокрЛП(НаименованиеДокумента) 	= ВРЕГ("паспорт РБ"), " ", ?( СокрЛП(НаименованиеДокумента) = ВРЕГ("паспорт"), "-", "") ) + Серия2 +",  " + Формат(Запись.ДокументНомер,"ЧГ=0");
			
			ОбластьАнкета.Параметры.НаименованиеДокумента		= 	НаименованиеДокумента;
			ОбластьАнкета.Параметры.СерияНомер			 		= 	СерияНомер;
			ОбластьАнкета.Параметры.ДатаВыдачи 					= 	ПроцедурыПерсонифицированогоУчета.ДатаВОтчет(Запись.ДокументДатаВыдачи);
			ОбластьАнкета.Параметры.КемВыдан 					= 	Запись.ДокументКемВыдан;
			
			//Адреса
			ОбластьАнкета.Параметры.АдресРегистрации 			=	ПроцедурыПерсонифицированогоУчета.ПредставлениеАдресадляПФР(Запись.АдресРегистрации,0,"");
			ОбластьАнкета.Параметры.АдресФактический 			= 	ПроцедурыПерсонифицированогоУчета.ПредставлениеАдресадляПФР(Запись.АдресФактический,0,"");
			ОбластьАнкета.Параметры.Телефоны 					= 	Запись.Телефоны;
			
			ДокументРезультат.Вывести(ОбластьАнкета);
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЦикла;	
		
		РаботаСДиалогами.НапечататьДокумент(ДокументРезультат,1,Ложь,"Анкета застрахованного лица АДВ-1");
		
		//Печать описи документов
		ДокументОписи = Новый ТабличныйДокумент;
		ДокументОписи.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АнкетаЗастрахованногоЛица_АДВ_6";
		ОтветственныеЛица = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация,Дата,Ответственный.ФизЛицо);
		ПроцедурыПерсонифицированогоУчета.ВывестиОписьАДВ6(ДокументОписи,ИнформацияОПачке,ОтветственныеЛица);
		РаботаСДиалогами.НапечататьДокумент(ДокументОписи,1,Ложь,"Опись документов АДВ-6");
	КонецПроцедуры
	
#КонецЕсли

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке()
	
	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	
	Запрос.Текст = "
	|Выбрать 
	|	Дата, 
	|	Номер, 
	|	Организация,
	|	ДатаРегистрации КАК ПериодРегистрации,
	|	Ответственный,
	//vvv
	|	НомерПачки,
	|	КаталогВыгрузки,
	|	ТипФормы,
	|	КонтактнаяИнформация.Представление КАК Телефон,
	//
	| 	Ссылка 
	|Из 
	|	Документ." + Метаданные().Имя + "
	//vvv
	| ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|	ПО (Организация=КонтактнаяИнформация.Объект)
	|	И (КонтактнаяИнформация.Тип=ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	|	И (КонтактнаяИнформация.Вид=ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонОрганизации))
	//
	|Где 
	|	Ссылка = &ДокументСсылка
	|";
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросПоШапке()

// Выбирает данные, необходимые для заполнения утвержденных форм как из спр-ка
//  физлиц, так и из соотв. регистров сведений
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Результат запроса к данным работников документа.
//
Функция	СформироватьЗапросПоРаботникиОрганизации()
	
	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.УстановитьПараметр("ДатаАктуальности" , Дата);
	Запрос.УстановитьПараметр("ВидАдресаРегистрации" , Справочники.ВидыКонтактнойИнформации.ЮрАдресФизЛица);
	Запрос.УстановитьПараметр("ВидАдресаФактический" , Справочники.ВидыКонтактнойИнформации.ФактАдресФизЛица);
	Запрос.УстановитьПараметр("ВидТелефонаДомашний" , Справочники.ВидыКонтактнойИнформации.ТелефонФизЛица);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СведенияОЗаработкеРаботников.НомерСтроки КАК НомерСтроки,
	|	СведенияОЗаработкеРаботников.ФизЛицо КАК ФизЛицо,
	|	СведенияОЗаработкеРаботников.ФизЛицо.Наименование КАК ФизЛицоНаименование,
	|	ВЫБОР
	|		КОГДА СведенияОЗаработкеРаботников.ЛичныйНомер ЕСТЬ NULL 
	|			ТОГДА "" ""
	|		ИНАЧЕ СведенияОЗаработкеРаботников.ЛичныйНомер
	|	КОНЕЦ КАК ЛичныйНомер,
	|	ВЫБОР
	|		КОГДА СведенияОЗаработкеРаботников.Фамилия ЕСТЬ NULL 
	|			ТОГДА "" ""
	|		ИНАЧЕ СведенияОЗаработкеРаботников.Фамилия
	|	КОНЕЦ КАК Фамилия,
	|	ВЫБОР
	|		КОГДА СведенияОЗаработкеРаботников.Имя ЕСТЬ NULL 
	|			ТОГДА "" ""
	|		ИНАЧЕ СведенияОЗаработкеРаботников.Имя
	|	КОНЕЦ КАК Имя,
	|	ВЫБОР
	|		КОГДА СведенияОЗаработкеРаботников.Отчество ЕСТЬ NULL 
	|			ТОГДА "" ""
	|		ИНАЧЕ СведенияОЗаработкеРаботников.Отчество
	|	КОНЕЦ КАК Отчество,
	|	ВЫБОР
	|		КОГДА СведенияОЗаработкеРаботников.Категория.КодПФР ЕСТЬ NULL 
	|			ТОГДА "" ""
	|		ИНАЧЕ СведенияОЗаработкеРаботников.Категория.КодПФР
	|	КОНЕЦ КАК КодКатегории,
	|	СведенияОЗаработкеРаботников.Сотрудник,
	|	СведенияОЗаработкеРаботников.Категория КАК Категория,
	|	СведенияОЗаработкеРаботников.НомерДоговора,
	|	СведенияОЗаработкеРаботников.ДатаДоговора,
	|	СведенияОЗаработкеРаботников.Договор
	|ИЗ
	|	Документ.СведенияОЗаработкеРаботниковДПУ.РаботникиОрганизации КАК СведенияОЗаработкеРаботников
	|ГДЕ
	|	СведенияОЗаработкеРаботников.Ссылка = &ДокументСсылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизтов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 					- флаг отказа в проведении.
//	Заголовок				- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)
	
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана организация, которая подает сведения!", Отказ, Заголовок);
	КонецЕсли;
	//vvv
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.НомерПачки) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указан номер пачки!", Отказ, Заголовок);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.КаталогВыгрузки) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указан каталог выгрузки!", Отказ, Заголовок);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ТипФормы) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указан тип формы!", Отказ, Заголовок);
	КонецЕсли;
	//
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Ответственный) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указано ответственное лицо!", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения реквизитов в строке ТЧ "РаботникиОрганизации" документа.
// Если какой-то из реквизтов, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по строке ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//  							  из результата запроса по работникам, 
//  Отказ 						- флаг отказа в проведении.
//	Заголовок				- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеСтрокиРаботникаОрганизации(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Фамилия, Имя, Отказ ,Заголовок)
	
	СтрокаНачалаСообщенияОбОшибке = "В строке № """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
	""" табл. части ""Работники организации"": ";
	// ФизЛицо
	Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ФизЛицо) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не выбран работник!", Отказ ,Заголовок);
	Иначе	
		СтрокаНачалаСообщенияОбОшибке = СтрокаНачалаСообщенияОбОшибке + ВыборкаПоСтрокамДокумента.ФизЛицо + " ";
		
		Если ЗначениеЗаполнено(СтрЗаменить(ВыборкаПоСтрокамДокумента.СтраховойНомерПФР,"-","")) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Уже имеет страховой номер!", Отказ ,Заголовок);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Фамилия) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задана фамилия!", Отказ ,Заголовок);
		КонецЕсли;	
		Если Не ЗначениеЗаполнено(Имя) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задано имя!", Отказ ,Заголовок);
		КонецЕсли;	
		Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Пол) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задан пол!", Отказ ,Заголовок);
		КонецЕсли;	
		Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаРождения) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задана дата рождения!", Отказ ,Заголовок);
		Иначе
			Если ВыборкаПоСтрокамДокумента.ДатаРождения > Дата тогда
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Дата рождения не может быть больше даты подачи сведений!", Отказ ,Заголовок);
			КонецЕсли;	 
		КонецЕсли;	
		
		Если СокрЛП(СтрЗаменить(ВыборкаПоСтрокамДокумента.МестоРождения,",","")) = "" 
			или СокрЛП(СтрЗаменить(ВыборкаПоСтрокамДокумента.МестоРождения,",","")) = "0" Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не указано место рождения!", Отказ ,Заголовок);
		КонецЕсли; 
		
		//Паспортные данные
		Если ВыборкаПоСтрокамДокумента.ДокументВид = NULL Тогда
			
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не указаны паспортные данные!", Отказ ,Заголовок);
			
		Иначе
			
			//Проверка реквизитов паспортных данных
			Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДокументВид) Тогда
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задан вид документа, удостоверяющего личность!", Отказ ,Заголовок);
			КонецЕсли;	
			
			Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДокументДатаВыдачи) Тогда
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задана дата выдачи документа, удостоверяющего личность!", Отказ ,Заголовок);
			Иначе
				Если (ВыборкаПоСтрокамДокумента.ДатаРождения > ВыборкаПоСтрокамДокумента.ДокументДатаВыдачи) Тогда
					ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Дата рождения не должна превышать дату выдачи документа, удостоверяющего личность!", Отказ ,Заголовок);
				КонецЕсли;
			КонецЕсли;	
			
			Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДокументСерия) Тогда
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задана серия документа, удостоверяющего личность!", Отказ ,Заголовок);
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДокументНомер) Тогда
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задан номер документа, удостоверяющего личность!", Отказ ,Заголовок);
			КонецЕсли;
		КонецЕсли; 
		
		// Проверка адреса регистрации и проживания
		Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.АдресРегистрации) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задан адрес регистрации (юридический адрес)!", Отказ ,Заголовок);
		КонецЕсли;	
		Если НЕ РегламентированнаяОтчетность.АдресСоответствуетТребованиям(УправлениеКонтактнойИнформацией.РазложитьАдрес(ВыборкаПоСтрокамДокумента.АдресРегистрации)) тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- В адресе регистрации присутствуют латинские или недопустимые символы!", Отказ ,Заголовок);
		КонецЕсли;
		Если НЕ РегламентированнаяОтчетность.АдресСоответствуетТребованиям(УправлениеКонтактнойИнформацией.РазложитьАдрес(ВыборкаПоСтрокамДокумента.АдресФактический)) тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- В фактическом адресе проживания присутствуют латинские или недопустимые символы!", Отказ ,Заголовок);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиРаботникаОрганизации()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	//При проведении файл формируем заново 
	ТекстФайла = "";
	#Если Клиент Тогда
		
		//vvv
		//ТекстФайла = СформироватьВыходнойФайл(Отказ);
		ТекстФайла = СформироватьВыходнойФайл(Отказ,Ложь);
		//
	#КонецЕсли
	
	Если Отказ тогда
		Возврат;
	КонецЕсли;	 
	
	//Сохраним сформированный файл сведений в регистре сведений
	Запись = Движения["АрхивДанныхРегламентированнойОтчетности"].Добавить();
	Запись.Объект = Ссылка;
	Запись.ОписаниеДанных = "Файл-пачка форм ПУ-3";
	Запись.Данные = ТекстФайла; 
КонецПроцедуры	

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(РаботникиОрганизации,,"ФизЛицо");
	
КонецПроцедуры




