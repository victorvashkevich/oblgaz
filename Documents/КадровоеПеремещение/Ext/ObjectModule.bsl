Перем мДлинаСуток;
Перем СоответствиеВалютныеСпособыРасчета;
Перем мСписокНедоступныхРасчетов;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Заполняет начисления и удержания по схемам мотивации
//
Процедура ЗаполнениеПоСхемамМотивации(ИмяТабличнойЧасти = "") Экспорт
	
	Если ИмяТабличнойЧасти = "Начисления" ИЛИ ИмяТабличнойЧасти = "" Тогда
		Начисления.Очистить();
	КонецЕсли;
	
	Если ИмяТабличнойЧасти = "Взыскания" ИЛИ ИмяТабличнойЧасти = "" Тогда
		Взыскания.Очистить();
	КонецЕсли;
	
	// заполним табличные части Начисления и Взыскания
	НачисленияИВзыскания = ЗаполнениеДокументовДополнительный.ПолучитьТаблицуДействийСУправленческимиНачислениями(Работники.Выгрузить(), Ссылка, Дата);
	
	Если ИмяТабличнойЧасти = "Начисления" Тогда
		СтрокиНачисленийВзысканий = НачисленияИВзыскания.НайтиСтроки(Новый Структура("ЭтоНачисление", Истина));
	ИначеЕсли ИмяТабличнойЧасти = "Взыскания" Тогда
		СтрокиНачисленийВзысканий = НачисленияИВзыскания.НайтиСтроки(Новый Структура("ЭтоНачисление", Ложь));
	Иначе
		СтрокиНачисленийВзысканий = НачисленияИВзыскания;
	КонецЕсли;
	
	Для Каждого СтрокаНачисленийВзысканий Из СтрокиНачисленийВзысканий Цикл
		Если СтрокаНачисленийВзысканий.ЭтоНачисление Тогда
			НоваяСтрока = Начисления.Добавить();
		Иначе
			НоваяСтрока = Взыскания.Добавить();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаНачисленийВзысканий);
	КонецЦикла;
	
КонецПроцедуры

// Добавляет строки в табличные части "Начисления" и "Взыскания" на основе данных строки
//  табличной части "Работники"
//
Процедура ДобавитьНачисленияПоСтроке(СтрокаТабличнойЧасти) Экспорт
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(СтрокаТабличнойЧасти);
	
	ДействияСНачислениями = ЗаполнениеДокументовДополнительный.ПолучитьТаблицуДействийСУправленческимиНачислениями(Работники.Выгрузить(МассивСтрок), Ссылка, Дата);

	СтруктураПоиска = Новый Структура("Физлицо, ВидРасчета");
	
	Для Каждого СтрокаТаблицы Из ДействияСНачислениями Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТаблицы);
		Если СтрокаТаблицы.ЭтоНачисление Тогда
			МассивНачислений = Начисления.НайтиСтроки(СтруктураПоиска);
		Иначе
			МассивНачислений = Взыскания.НайтиСтроки(СтруктураПоиска);
		КонецЕсли;
		
		Если МассивНачислений.Количество() = 0 Тогда
			Если СтрокаТаблицы.ЭтоНачисление Тогда
				ЗаполнитьЗначенияСвойств(Начисления.Добавить(), СтрокаТаблицы);
			Иначе
				ЗаполнитьЗначенияСвойств(Взыскания.Добавить(), СтрокаТаблицы);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
		
	КадровоеПеремещениеПереопределяемый.ДобавитьДополнительноПоСтроке(ЭтотОбъект, СтрокаТабличнойЧасти);
	
КонецПроцедуры // ДобавитьНачисленияПоСтроке()

#Если ТолстыйКлиентОбычноеПриложение Тогда

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураПечатныхФорм = Новый Структура;
	
	КадровоеПеремещениеПереопределяемый.ДополнитьСтруктуруПечатныхФорм(СтруктураПечатныхФорм);
	
	Возврат СтруктураПечатныхФорм;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	ТабДокумент = КадровоеПеремещениеПереопределяемый.ПечатьДополнительныхФорм(ИмяМакета, ЭтотОбъект);

	Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект,"Кадровое перемещение "));

КонецФункции // Печать()

#КонецЕсли

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоШапке(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);

	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КадровоеПеремещение.Дата,
	|	КадровоеПеремещение.Ссылка
	|ИЗ
	|	Документ.КадровоеПеремещение КАК КадровоеПеремещение
	|ГДЕ
	|	КадровоеПеремещение.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по таблице "Работники" документа
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоРаботники(Режим)

	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("ПустойВидРасчета", ПланыВидовРасчета.УправленческиеНачисления.ПустаяСсылка());
	Запрос.УстановитьПараметр("Прекратить", Перечисления.ВидыДействияСНачислением.Прекратить);
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;	
	
	// получим временную таблицу с показателями начислений
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Начисления.ВидРасчета КАК ВидРасчета,
	|	МАКСИМУМ(Показатели.НомерСтроки) КАК КоличествоПоказателей,
	|	Показатели1.Показатель.Предопределенный КАК Показатель1Предопределенный,
	|	Показатели1.Показатель.Наименование КАК Показатель1Наименование,
	|	Показатели1.Показатель.ТипПоказателя КАК Показатель1ТипПоказателя,
	|	Показатели1.Показатель.ВозможностьИзменения КАК Показатель1ВозможностьИзменения,
	|	Показатели2.Показатель.Предопределенный КАК Показатель2Предопределенный,
	|	Показатели2.Показатель.Наименование КАК Показатель2Наименование,
	|	Показатели2.Показатель.ТипПоказателя КАК Показатель2ТипПоказателя,
	|	Показатели2.Показатель.ВозможностьИзменения КАК Показатель2ВозможностьИзменения,
	|	Показатели3.Показатель.Предопределенный КАК Показатель3Предопределенный,
	|	Показатели3.Показатель.Наименование КАК Показатель3Наименование,
	|	Показатели3.Показатель.ТипПоказателя КАК Показатель3ТипПоказателя,
	|	Показатели3.Показатель.ВозможностьИзменения КАК Показатель3ВозможностьИзменения,
	|	Показатели4.Показатель.Предопределенный КАК Показатель4Предопределенный,
	|	Показатели4.Показатель.Наименование КАК Показатель4Наименование,
	|	Показатели4.Показатель.ТипПоказателя КАК Показатель4ТипПоказателя,
	|	Показатели4.Показатель.ВозможностьИзменения КАК Показатель4ВозможностьИзменения,
	|	Показатели5.Показатель.Предопределенный КАК Показатель5Предопределенный,
	|	Показатели5.Показатель.Наименование КАК Показатель5Наименование,
	|	Показатели5.Показатель.ТипПоказателя КАК Показатель5ТипПоказателя,
	|	Показатели5.Показатель.ВозможностьИзменения КАК Показатель5ВозможностьИзменения,
	|	Показатели6.Показатель.Предопределенный КАК Показатель6Предопределенный,
	|	Показатели6.Показатель.Наименование КАК Показатель6Наименование,
	|	Показатели6.Показатель.ТипПоказателя КАК Показатель6ТипПоказателя,
	|	Показатели6.Показатель.ВозможностьИзменения КАК Показатель6ВозможностьИзменения,
	|	Показатели1.Показатель.Валюта КАК Показатель1Валюта,
	|	Показатели2.Показатель.Валюта КАК Показатель2Валюта,
	|	Показатели3.Показатель.Валюта КАК Показатель3Валюта,
	|	Показатели4.Показатель.Валюта КАК Показатель4Валюта,
	|	Показатели5.Показатель.Валюта КАК Показатель5Валюта,
	|	Показатели6.Показатель.Валюта КАК Показатель6Валюта,
	|	Показатели1.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель1ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели2.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель2ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели3.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель3ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели4.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель4ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели5.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель5ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели6.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель6ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели1.Показатель.ТарифнаяСтавка КАК Показатель1ТарифнаяСтавка,
	|	Показатели2.Показатель.ТарифнаяСтавка КАК Показатель2ТарифнаяСтавка,
	|	Показатели3.Показатель.ТарифнаяСтавка КАК Показатель3ТарифнаяСтавка,
	|	Показатели4.Показатель.ТарифнаяСтавка КАК Показатель4ТарифнаяСтавка,
	|	Показатели5.Показатель.ТарифнаяСтавка КАК Показатель5ТарифнаяСтавка,
	|	Показатели6.Показатель.ТарифнаяСтавка КАК Показатель6ТарифнаяСтавка
	|ПОМЕСТИТЬ ВТПоказателиНачислений
	|ИЗ
	|	Документ.КадровоеПеремещение.Начисления КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели
	|		ПО Начисления.ВидРасчета = Показатели.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели1
	|		ПО Начисления.ВидРасчета = Показатели1.Ссылка
	|			И (Показатели1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели2
	|		ПО Начисления.ВидРасчета = Показатели2.Ссылка
	|			И (Показатели2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели3
	|		ПО Начисления.ВидРасчета = Показатели3.Ссылка
	|			И (Показатели3.НомерСтроки = 3)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели4
	|		ПО Начисления.ВидРасчета = Показатели4.Ссылка
	|			И (Показатели4.НомерСтроки = 4)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели5
	|		ПО Начисления.ВидРасчета = Показатели5.Ссылка
	|			И (Показатели5.НомерСтроки = 5)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели6
	|		ПО Начисления.ВидРасчета = Показатели6.Ссылка
	|			И (Показатели6.НомерСтроки = 6)
	|ГДЕ
	|	Начисления.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.ВидРасчета,
	|	Показатели1.Показатель,
	|	Показатели2.Показатель,
	|	Показатели3.Показатель,
	|	Показатели4.Показатель,
	|	Показатели5.Показатель,
	|	Показатели6.Показатель,
	|	Показатели1.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели2.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели3.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели4.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели5.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели6.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели1.Показатель.Предопределенный,
	|	Показатели1.Показатель.Наименование,
	|	Показатели1.Показатель.ТипПоказателя,
	|	Показатели1.Показатель.ВозможностьИзменения,
	|	Показатели2.Показатель.Предопределенный,
	|	Показатели2.Показатель.Наименование,
	|	Показатели2.Показатель.ТипПоказателя,
	|	Показатели2.Показатель.ВозможностьИзменения,
	|	Показатели3.Показатель.Предопределенный,
	|	Показатели3.Показатель.Наименование,
	|	Показатели3.Показатель.ТипПоказателя,
	|	Показатели3.Показатель.ВозможностьИзменения,
	|	Показатели4.Показатель.Предопределенный,
	|	Показатели4.Показатель.Наименование,
	|	Показатели4.Показатель.ТипПоказателя,
	|	Показатели4.Показатель.ВозможностьИзменения,
	|	Показатели5.Показатель.Предопределенный,
	|	Показатели5.Показатель.Наименование,
	|	Показатели5.Показатель.ТипПоказателя,
	|	Показатели5.Показатель.ВозможностьИзменения,
	|	Показатели6.Показатель.Предопределенный,
	|	Показатели6.Показатель.Наименование,
	|	Показатели6.Показатель.ТипПоказателя,
	|	Показатели6.Показатель.ВозможностьИзменения,
	|	Показатели1.Показатель.ТарифнаяСтавка,
	|	Показатели2.Показатель.ТарифнаяСтавка,
	|	Показатели3.Показатель.ТарифнаяСтавка,
	|	Показатели4.Показатель.ТарифнаяСтавка,
	|	Показатели5.Показатель.ТарифнаяСтавка,
	|	Показатели6.Показатель.ТарифнаяСтавка,
	|	Показатели1.Показатель.Валюта,
	|	Показатели2.Показатель.Валюта,
	|	Показатели3.Показатель.Валюта,
	|	Показатели4.Показатель.Валюта,
	|	Показатели5.Показатель.Валюта,
	|	Показатели6.Показатель.Валюта
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасчета";

	Запрос.Выполнить();	
	
	ВТПоказателиНачислений = "ВТПоказателиНачислений";
	

	// получим временную таблицу с показателями начислений
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Удержания.ВидРасчета КАК ВидРасчета,
	|	МАКСИМУМ(Показатели.НомерСтроки) КАК КоличествоПоказателей,
	|	Показатели1.Показатель.Предопределенный КАК Показатель1Предопределенный,
	|	Показатели1.Показатель.Наименование КАК Показатель1Наименование,
	|	Показатели1.Показатель.ТипПоказателя КАК Показатель1ТипПоказателя,
	|	Показатели1.Показатель.ВозможностьИзменения КАК Показатель1ВозможностьИзменения,
	|	Показатели2.Показатель.Предопределенный КАК Показатель2Предопределенный,
	|	Показатели2.Показатель.Наименование КАК Показатель2Наименование,
	|	Показатели2.Показатель.ТипПоказателя КАК Показатель2ТипПоказателя,
	|	Показатели2.Показатель.ВозможностьИзменения КАК Показатель2ВозможностьИзменения,
	|	Показатели3.Показатель.Предопределенный КАК Показатель3Предопределенный,
	|	Показатели3.Показатель.Наименование КАК Показатель3Наименование,
	|	Показатели3.Показатель.ТипПоказателя КАК Показатель3ТипПоказателя,
	|	Показатели3.Показатель.ВозможностьИзменения КАК Показатель3ВозможностьИзменения,
	|	Показатели4.Показатель.Предопределенный КАК Показатель4Предопределенный,
	|	Показатели4.Показатель.Наименование КАК Показатель4Наименование,
	|	Показатели4.Показатель.ТипПоказателя КАК Показатель4ТипПоказателя,
	|	Показатели4.Показатель.ВозможностьИзменения КАК Показатель4ВозможностьИзменения,
	|	Показатели5.Показатель.Предопределенный КАК Показатель5Предопределенный,
	|	Показатели5.Показатель.Наименование КАК Показатель5Наименование,
	|	Показатели5.Показатель.ТипПоказателя КАК Показатель5ТипПоказателя,
	|	Показатели5.Показатель.ВозможностьИзменения КАК Показатель5ВозможностьИзменения,
	|	Показатели6.Показатель.Предопределенный КАК Показатель6Предопределенный,
	|	Показатели6.Показатель.Наименование КАК Показатель6Наименование,
	|	Показатели6.Показатель.ТипПоказателя КАК Показатель6ТипПоказателя,
	|	Показатели6.Показатель.ВозможностьИзменения КАК Показатель6ВозможностьИзменения,
	|	Показатели1.Показатель.Валюта КАК Показатель1Валюта,
	|	Показатели2.Показатель.Валюта КАК Показатель2Валюта,
	|	Показатели3.Показатель.Валюта КАК Показатель3Валюта,
	|	Показатели4.Показатель.Валюта КАК Показатель4Валюта,
	|	Показатели5.Показатель.Валюта КАК Показатель5Валюта,
	|	Показатели6.Показатель.Валюта КАК Показатель6Валюта,
	|	Показатели1.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель1ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели2.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель2ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели3.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель3ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели4.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель4ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели5.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель5ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели6.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель6ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели1.Показатель.ТарифнаяСтавка КАК Показатель1ТарифнаяСтавка,
	|	Показатели2.Показатель.ТарифнаяСтавка КАК Показатель2ТарифнаяСтавка,
	|	Показатели3.Показатель.ТарифнаяСтавка КАК Показатель3ТарифнаяСтавка,
	|	Показатели4.Показатель.ТарифнаяСтавка КАК Показатель4ТарифнаяСтавка,
	|	Показатели5.Показатель.ТарифнаяСтавка КАК Показатель5ТарифнаяСтавка,
	|	Показатели6.Показатель.ТарифнаяСтавка КАК Показатель6ТарифнаяСтавка
	|ПОМЕСТИТЬ ВТПоказателиУдержаний
	|ИЗ
	|	Документ.КадровоеПеремещение.Взыскания КАК Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели
	|		ПО Удержания.ВидРасчета = Показатели.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели1
	|		ПО Удержания.ВидРасчета = Показатели1.Ссылка
	|			И (Показатели1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели2
	|		ПО Удержания.ВидРасчета = Показатели2.Ссылка
	|			И (Показатели2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели3
	|		ПО Удержания.ВидРасчета = Показатели3.Ссылка
	|			И (Показатели3.НомерСтроки = 3)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели4
	|		ПО Удержания.ВидРасчета = Показатели4.Ссылка
	|			И (Показатели4.НомерСтроки = 4)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели5
	|		ПО Удержания.ВидРасчета = Показатели5.Ссылка
	|			И (Показатели5.НомерСтроки = 5)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели6
	|		ПО Удержания.ВидРасчета = Показатели6.Ссылка
	|			И (Показатели6.НомерСтроки = 6)
	|ГДЕ
	|	Удержания.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Удержания.ВидРасчета,
	|	Показатели1.Показатель,
	|	Показатели2.Показатель,
	|	Показатели3.Показатель,
	|	Показатели4.Показатель,
	|	Показатели5.Показатель,
	|	Показатели6.Показатель,
	|	Показатели1.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели2.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели3.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели4.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели5.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели6.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели1.Показатель.Предопределенный,
	|	Показатели1.Показатель.Наименование,
	|	Показатели1.Показатель.ТипПоказателя,
	|	Показатели1.Показатель.ВозможностьИзменения,
	|	Показатели2.Показатель.Предопределенный,
	|	Показатели2.Показатель.Наименование,
	|	Показатели2.Показатель.ТипПоказателя,
	|	Показатели2.Показатель.ВозможностьИзменения,
	|	Показатели3.Показатель.Предопределенный,
	|	Показатели3.Показатель.Наименование,
	|	Показатели3.Показатель.ТипПоказателя,
	|	Показатели3.Показатель.ВозможностьИзменения,
	|	Показатели4.Показатель.Предопределенный,
	|	Показатели4.Показатель.Наименование,
	|	Показатели4.Показатель.ТипПоказателя,
	|	Показатели4.Показатель.ВозможностьИзменения,
	|	Показатели5.Показатель.Предопределенный,
	|	Показатели5.Показатель.Наименование,
	|	Показатели5.Показатель.ТипПоказателя,
	|	Показатели5.Показатель.ВозможностьИзменения,
	|	Показатели6.Показатель.Предопределенный,
	|	Показатели6.Показатель.Наименование,
	|	Показатели6.Показатель.ТипПоказателя,
	|	Показатели6.Показатель.ВозможностьИзменения,
	|	Показатели1.Показатель.ТарифнаяСтавка,
	|	Показатели2.Показатель.ТарифнаяСтавка,
	|	Показатели3.Показатель.ТарифнаяСтавка,
	|	Показатели4.Показатель.ТарифнаяСтавка,
	|	Показатели5.Показатель.ТарифнаяСтавка,
	|	Показатели6.Показатель.ТарифнаяСтавка,
	|	Показатели1.Показатель.Валюта,
	|	Показатели2.Показатель.Валюта,
	|	Показатели3.Показатель.Валюта,
	|	Показатели4.Показатель.Валюта,
	|	Показатели5.Показатель.Валюта,
	|	Показатели6.Показатель.Валюта
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасчета";

	Запрос.Выполнить();	
	
	ВТПоказателиУдержаний = "ВТПоказателиУдержаний";	
	

	// Описание текста запроса:
	// Первая часть запроса  - вид строки запроса "Работники": 
	// 1. Выборка "ТЧРаботники": 
	//		Выбираются строки т.ч. "Работники" документа.  
	// 2. Выборка "ДанныеПоРаботникуДоНазначения": 
	//		Для каждой строки ТЧРаботники выполняем срез по регистру РегистрСведенийРаботники на дату ДатаНачала
	//		для выполнения движений и проверки "Работает ли работник на дату перемещения"
	//		(Использует данные выборки "ДатыПоследнегоДвиженияРаботника")
	// 3. Выборка "УчетОсновногоЗаработкаДоНазначения": 
	//		Для каждой строки ТЧРаботники выполняем срез по регистру УчетЗаработкаРаботников на дату ДатаНачала
	//		для восстановления данных по отражению затрат в учете на дату ДатаОкончания+1
	//		(Использует данные выборки "ДатыПоследнихДвиженийНачисленийРаботников")
	// 4. Выборка "ПересекающиесяСтроки": 
	//		Среди остальных строк документа ищем строки, имеющие пересекающийся период действия
	//
	// Вторая часть запроса - вид строки запроса "Начисления": 
	// 1. Выборка "КадровоеПеремещениеНачисления":
	//		Выбираются строки т.ч. "Начисления" документа 
	// 1. Выборка "КадровоеПеремещениеРаботники":
	//		Из строк т.ч. "Работники"  выбираются даты перемещения 
	// 3. Выборка "НачисленияДоНазначения": 
	//		Для каждой строки т.ч. "Работники" выполняем срез по регистру ПлановыеНачисленияРаботников на дату ДатаНачала
	//		для восстановления основного вида расчета на момент окончания перемещения
	//		(Использует данные выборки "ДатыПоследнихДвиженийНачисленийРаботников")
	// 4. Выборка "ПересекающиесяСтроки": 
	//		Среди остальных строк документа ищем строки, имеющие повторяющиеся виды начислений
	//
	// Третья часть запроса - вид строки запроса "КонфликтныйДокумент" - поиск конфликтных документов: 
	// 1. Выборка "ТЧРаботники":
	//		Выбираются строки документа 
	// 2. Выборка "РегистрСведенийРаботники":
	//		Для каждой строки ТЧРаботники ищем движения по регистру РегистрСведенийРаботники за период [ДатаНачала, ДатаОкончания]
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""Работники"" КАК ВидСтрокиЗапроса,
	|	ТЧРаботники.НомерСтроки КАК НомерСтроки,
	|	ТЧРаботники.Сотрудник,
	|	ТЧРаботники.Сотрудник.Наименование КАК СотрудникНаименование,
	|	ТЧРаботники.Сотрудник.Физлицо КАК Физлицо,
	|	ТЧРаботники.НовоеПодразделение,
	|	ТЧРаботники.НоваяДолжность,
	|	ТЧРаботники.ЗанимаемыхСтавок,
	|	ТЧРаботники.ДатаНачала,
	|	ТЧРаботники.ДатаОкончания,
	|	ТЧРаботники.НапомнитьПоЗавершении,
	|	ТЧРаботники.ГрафикРаботы,
	|	ТЧРаботники.СпособОтраженияВУпрУчете,
	|	ТЧРаботники.УчетНачисленийПоОрганизации,
	|	ПересекающиесяСтроки.КонфликтнаяСтрокаНомер,
	|	NULL КАК КонфликтныйДокумент,
	|	ДанныеПоРаботникуДоНазначения.Подразделение КАК ПрежнееПодразделение,
	|	ДанныеПоРаботникуДоНазначения.Должность КАК ПрежняяДолжность,
	|	ДанныеПоРаботникуДоНазначения.ЗанимаемыхСтавок КАК ПрежняяСтавка,
	|	ДанныеПоРаботникуДоНазначения.ГрафикРаботы КАК ПрежнийГрафикРаботы,
	|	УчетОсновногоЗаработкаДоНазначения.СпособОтраженияВУпрУчете КАК ПрежнийСпособОтраженияВУпрУчете,
	|	УчетОсновногоЗаработкаДоНазначения.УчетНачисленийПоОрганизации КАК ПрежнийУчетНачисленийПоОрганизации,
	|	ДанныеПоРаботникуДоНазначения.ДатаПоследнегоДвиженияПоРаботнику,
	|	NULL КАК Действие,
	|	NULL КАК ВидРасчета,
	|	ИСТИНА КАК ПроизвольнаяФормулаРасчета,
	|	NULL КАК ОсновноеНачисление,
	|	NULL КАК Показатель1,
	|	NULL КАК Валюта1,
	|	NULL КАК Показатель2,
	|	NULL КАК Валюта2,
	|	NULL КАК Показатель3,
	|	NULL КАК Валюта3,
	|	NULL КАК Показатель4,
	|	NULL КАК Валюта4,
	|	NULL КАК Показатель5,
	|	NULL КАК Валюта5,
	|	NULL КАК Показатель6,
	|	NULL КАК Валюта6,
	|	NULL КАК СпособРасчета,
	|	NULL КАК КоличествоПоказателей,
	|	NULL КАК ПрежнийВидРасчета,
	|	NULL КАК ПрежнийПоказатель1,
	|	NULL КАК ПрежняяВалюта1,
	|	NULL КАК ПрежнийПоказатель2,
	|	NULL КАК ПрежняяВалюта2,
	|	NULL КАК ПрежнийПоказатель3,
	|	NULL КАК ПрежняяВалюта3,
	|	NULL КАК ПрежнийПоказатель4,
	|	NULL КАК ПрежняяВалюта4,
	|	NULL КАК ПрежнийПоказатель5,
	|	NULL КАК ПрежняяВалюта5,
	|	NULL КАК ПрежнийПоказатель6,
	|	NULL КАК ПрежняяВалюта6,
	|	NULL КАК ТарифныйРазряд1,
	|	NULL КАК ТарифныйРазряд2,
	|	NULL КАК ТарифныйРазряд3,
	|	NULL КАК ТарифныйРазряд4,
	|	NULL КАК ТарифныйРазряд5,
	|	NULL КАК ТарифныйРазряд6,
	|	NULL КАК ПрежнийТарифныйРазряд1,
	|	NULL КАК ПрежнийТарифныйРазряд2,
	|	NULL КАК ПрежнийТарифныйРазряд3,
	|	NULL КАК ПрежнийТарифныйРазряд4,
	|	NULL КАК ПрежнийТарифныйРазряд5,
	|	NULL КАК ПрежнийТарифныйРазряд6,
	|	NULL КАК Показатель1Предопределенный,
	|	NULL КАК Показатель1Наименование,
	|	NULL КАК Показатель1ТипПоказателя,
	|	NULL КАК Показатель1ВозможностьИзменения,
	|	NULL КАК Показатель2Предопределенный,
	|	NULL КАК Показатель2Наименование,
	|	NULL КАК Показатель2ТипПоказателя,
	|	NULL КАК Показатель2ВозможностьИзменения,
	|	NULL КАК Показатель3Предопределенный,
	|	NULL КАК Показатель3Наименование,
	|	NULL КАК Показатель3ТипПоказателя,
	|	NULL КАК Показатель3ВозможностьИзменения,
	|	NULL КАК Показатель4Предопределенный,
	|	NULL КАК Показатель4Наименование,
	|	NULL КАК Показатель4ТипПоказателя,
	|	NULL КАК Показатель4ВозможностьИзменения,
	|	NULL КАК Показатель5Предопределенный,
	|	NULL КАК Показатель5Наименование,
	|	NULL КАК Показатель5ТипПоказателя,
	|	NULL КАК Показатель5ВозможностьИзменения,
	|	NULL КАК Показатель6Предопределенный,
	|	NULL КАК Показатель6Наименование,
	|	NULL КАК Показатель6ТипПоказателя,
	|	NULL КАК Показатель6ВозможностьИзменения,
	|	NULL КАК Показатель1ЗапрашиватьПриКадровыхПеремещениях,
	|	NULL КАК Показатель2ЗапрашиватьПриКадровыхПеремещениях,
	|	NULL КАК Показатель3ЗапрашиватьПриКадровыхПеремещениях,
	|	NULL КАК Показатель4ЗапрашиватьПриКадровыхПеремещениях,
	|	NULL КАК Показатель5ЗапрашиватьПриКадровыхПеремещениях,
	|	NULL КАК Показатель6ЗапрашиватьПриКадровыхПеремещениях,
	|	NULL КАК Показатель1ТарифнаяСтавка,
	|	NULL КАК Показатель2ТарифнаяСтавка,
	|	NULL КАК Показатель3ТарифнаяСтавка,
	|	NULL КАК Показатель4ТарифнаяСтавка,
	|	NULL КАК Показатель5ТарифнаяСтавка,
	|	NULL КАК Показатель6ТарифнаяСтавка
	|ИЗ
	|	Документ.КадровоеПеремещение.Работники КАК ТЧРаботники
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Работники.Подразделение КАК Подразделение,
	|			Работники.Должность КАК Должность,
	|			Работники.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
	|			Работники.ГрафикРаботы КАК ГрафикРаботы,
	|			ДатыПоследнегоДвиженияРаботника.НомерСтроки КАК НомерСтроки,
	|			ДатыПоследнегоДвиженияРаботника.ДатаДвижения КАК ДатаПоследнегоДвиженияПоРаботнику
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ТЧРаботники.НомерСтроки КАК НомерСтроки,
	|				МАКСИМУМ(РегистрСведенийРаботники.Период) КАК ДатаДвижения,
	|				ТЧРаботники.Сотрудник.Физлицо КАК Физлицо
	|			ИЗ
	|				Документ.КадровоеПеремещение.Работники КАК ТЧРаботники
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Работники КАК РегистрСведенийРаботники
	|					ПО (РегистрСведенийРаботники.ФизЛицо = ТЧРаботники.Сотрудник.Физлицо)
	|						И (РегистрСведенийРаботники.Период <= ТЧРаботники.ДатаНачала)
	|			ГДЕ
	|				ТЧРаботники.Ссылка = &ДокументСсылка
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ТЧРаботники.НомерСтроки,
	|				ТЧРаботники.Сотрудник.Физлицо) КАК ДатыПоследнегоДвиженияРаботника
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Работники КАК Работники
	|				ПО ДатыПоследнегоДвиженияРаботника.Физлицо = Работники.ФизЛицо
	|					И ДатыПоследнегоДвиженияРаботника.ДатаДвижения = Работники.Период) КАК ДанныеПоРаботникуДоНазначения
	|		ПО ТЧРаботники.НомерСтроки = ДанныеПоРаботникуДоНазначения.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			УчетЗаработкаРаботников.СпособОтраженияВУпрУчете КАК СпособОтраженияВУпрУчете,
	|			УчетЗаработкаРаботников.УчетНачисленийПоОрганизации КАК УчетНачисленийПоОрганизации,
	|			ДатыПоследнихДвиженийУчетаЗаработкаРаботников.НомерСтроки КАК НомерСтроки
	|		ИЗ
	|			(ВЫБРАТЬ
	|				МАКСИМУМ(УчетЗаработкаРаботников.Период) КАК ДатаДвижения,
	|				ТЧРаботники.Сотрудник.Физлицо КАК Физлицо,
	|				ТЧРаботники.НомерСтроки КАК НомерСтроки
	|			ИЗ
	|				Документ.КадровоеПеремещение.Работники КАК ТЧРаботники
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетЗаработкаРаботников КАК УчетЗаработкаРаботников
	|					ПО ТЧРаботники.Сотрудник.Физлицо = УчетЗаработкаРаботников.Физлицо
	|						И (УчетЗаработкаРаботников.Период <= ТЧРаботники.ДатаНачала)
	|			ГДЕ
	|				ТЧРаботники.Ссылка = &ДокументСсылка
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ТЧРаботники.Сотрудник.Физлицо,
	|				ТЧРаботники.НомерСтроки) КАК ДатыПоследнихДвиженийУчетаЗаработкаРаботников
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетЗаработкаРаботников КАК УчетЗаработкаРаботников
	|				ПО ДатыПоследнихДвиженийУчетаЗаработкаРаботников.Физлицо = УчетЗаработкаРаботников.Физлицо
	|					И ДатыПоследнихДвиженийУчетаЗаработкаРаботников.ДатаДвижения = УчетЗаработкаРаботников.Период) КАК УчетОсновногоЗаработкаДоНазначения
	|		ПО ТЧРаботники.НомерСтроки = УчетОсновногоЗаработкаДоНазначения.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТЧРаботники.НомерСтроки КАК НомерСтроки,
	|			МИНИМУМ(ТЧРаботники2.НомерСтроки) КАК КонфликтнаяСтрокаНомер
	|		ИЗ
	|			Документ.КадровоеПеремещение.Работники КАК ТЧРаботники
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КадровоеПеремещение.Работники КАК ТЧРаботники2
	|				ПО ТЧРаботники.Ссылка = ТЧРаботники2.Ссылка
	|					И ТЧРаботники.Сотрудник = ТЧРаботники2.Сотрудник
	|					И ТЧРаботники.НомерСтроки <> ТЧРаботники2.НомерСтроки
	|					И ТЧРаботники.ДатаНачала <= ТЧРаботники2.ДатаНачала
	|					И (ВЫБОР
	|						КОГДА ТЧРаботники.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|							ТОГДА ИСТИНА
	|						КОГДА ТЧРаботники.НапомнитьПоЗавершении
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ДОБАВИТЬКДАТЕ(ТЧРаботники.ДатаОкончания, ДЕНЬ, 1) >= ТЧРаботники2.ДатаНачала
	|					КОНЕЦ)
	|		ГДЕ
	|			ТЧРаботники.Ссылка = &ДокументСсылка
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТЧРаботники.НомерСтроки) КАК ПересекающиесяСтроки
	|		ПО ТЧРаботники.НомерСтроки = ПересекающиесяСтроки.НомерСтроки
	|ГДЕ
	|	ТЧРаботники.Ссылка = &ДокументСсылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Начисления"",
	|	КадровоеПеремещениеНачисления.НомерСтроки,
	|	КадровоеПеремещениеНачисления.Сотрудник,
	|	КадровоеПеремещениеРаботники.Сотрудник.Наименование,
	|	КадровоеПеремещениеНачисления.Сотрудник.Физлицо,
	|	NULL,
	|	NULL,
	|	NULL,
	|	КадровоеПеремещениеРаботники.ДатаНачала,
	|	КадровоеПеремещениеРаботники.ДатаОкончания,
	|	КадровоеПеремещениеРаботники.НапомнитьПоЗавершении,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ПересекающиесяСтроки.КонфликтнаяСтрокаНомер,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	КадровоеПеремещениеНачисления.Действие,
	|	КадровоеПеремещениеНачисления.ВидРасчета,
	|	ИСТИНА,
	|	КадровоеПеремещениеНачисления.ВидРасчета.ЗачетОтработанногоВремени,
	|	КадровоеПеремещениеНачисления.Показатель1,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеНачисления.Валюта1 ЕСТЬ NULL 
	|				ИЛИ КадровоеПеремещениеНачисления.Валюта1 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА Показатели.Показатель1Валюта
	|			ИНАЧЕ КадровоеПеремещениеНачисления.Валюта1
	|	КОНЕЦ,
	|	КадровоеПеремещениеНачисления.Показатель2,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеНачисления.Валюта2 ЕСТЬ NULL 
	|				ИЛИ КадровоеПеремещениеНачисления.Валюта2 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА Показатели.Показатель2Валюта
	|			ИНАЧЕ КадровоеПеремещениеНачисления.Валюта2
	|	КОНЕЦ,
	|	КадровоеПеремещениеНачисления.Показатель3,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеНачисления.Валюта3 ЕСТЬ NULL 
	|				ИЛИ КадровоеПеремещениеНачисления.Валюта3 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА Показатели.Показатель3Валюта
	|			ИНАЧЕ КадровоеПеремещениеНачисления.Валюта3
	|	КОНЕЦ,
	|	КадровоеПеремещениеНачисления.Показатель4,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеНачисления.Валюта4 ЕСТЬ NULL 
	|				ИЛИ КадровоеПеремещениеНачисления.Валюта4 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА Показатели.Показатель4Валюта
	|			ИНАЧЕ КадровоеПеремещениеНачисления.Валюта4
	|	КОНЕЦ,
	|	КадровоеПеремещениеНачисления.Показатель5,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеНачисления.Валюта5 ЕСТЬ NULL 
	|				ИЛИ КадровоеПеремещениеНачисления.Валюта5 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА Показатели.Показатель5Валюта
	|			ИНАЧЕ КадровоеПеремещениеНачисления.Валюта5
	|	КОНЕЦ,
	|	КадровоеПеремещениеНачисления.Показатель6,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеНачисления.Валюта6 ЕСТЬ NULL 
	|				ИЛИ КадровоеПеремещениеНачисления.Валюта6 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА Показатели.Показатель6Валюта
	|			ИНАЧЕ КадровоеПеремещениеНачисления.Валюта6
	|	КОНЕЦ,
	|	КадровоеПеремещениеНачисления.ВидРасчета.СпособРасчета,
	|	ЕСТЬNULL(Показатели.КоличествоПоказателей, 0),
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= НачисленияДоНазначения.ПериодЗавершения
	|				И НачисленияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА НачисленияДоНазначения.ВидРасчетаЗавершения
	|		ИНАЧЕ НачисленияДоНазначения.ВидРасчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= НачисленияДоНазначения.ПериодЗавершения
	|				И НачисленияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА НачисленияДоНазначения.Показатель1Завершения
	|		ИНАЧЕ НачисленияДоНазначения.Показатель1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= НачисленияДоНазначения.ПериодЗавершения
	|				И НачисленияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА НачисленияДоНазначения.Валюта1Завершения
	|		ИНАЧЕ НачисленияДоНазначения.Валюта1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= НачисленияДоНазначения.ПериодЗавершения
	|				И НачисленияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА НачисленияДоНазначения.Показатель2Завершения
	|		ИНАЧЕ НачисленияДоНазначения.Показатель2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= НачисленияДоНазначения.ПериодЗавершения
	|				И НачисленияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА НачисленияДоНазначения.Валюта2Завершения
	|		ИНАЧЕ НачисленияДоНазначения.Валюта2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= НачисленияДоНазначения.ПериодЗавершения
	|				И НачисленияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА НачисленияДоНазначения.Показатель3Завершения
	|		ИНАЧЕ НачисленияДоНазначения.Показатель3
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= НачисленияДоНазначения.ПериодЗавершения
	|				И НачисленияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА НачисленияДоНазначения.Валюта3Завершения
	|		ИНАЧЕ НачисленияДоНазначения.Валюта3
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= НачисленияДоНазначения.ПериодЗавершения
	|				И НачисленияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА НачисленияДоНазначения.Показатель4Завершения
	|		ИНАЧЕ НачисленияДоНазначения.Показатель4
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= НачисленияДоНазначения.ПериодЗавершения
	|				И НачисленияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА НачисленияДоНазначения.Валюта4Завершения
	|		ИНАЧЕ НачисленияДоНазначения.Валюта4
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= НачисленияДоНазначения.ПериодЗавершения
	|				И НачисленияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА НачисленияДоНазначения.Показатель5Завершения
	|		ИНАЧЕ НачисленияДоНазначения.Показатель5
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= НачисленияДоНазначения.ПериодЗавершения
	|				И НачисленияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА НачисленияДоНазначения.Валюта5Завершения
	|		ИНАЧЕ НачисленияДоНазначения.Валюта5
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= НачисленияДоНазначения.ПериодЗавершения
	|				И НачисленияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА НачисленияДоНазначения.Показатель6Завершения
	|		ИНАЧЕ НачисленияДоНазначения.Показатель6
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= НачисленияДоНазначения.ПериодЗавершения
	|				И НачисленияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА НачисленияДоНазначения.Валюта6Завершения
	|		ИНАЧЕ НачисленияДоНазначения.Валюта6
	|	КОНЕЦ,
	|	КадровоеПеремещениеНачисления.ТарифныйРазряд1,
	|	КадровоеПеремещениеНачисления.ТарифныйРазряд2,
	|	КадровоеПеремещениеНачисления.ТарифныйРазряд3,
	|	КадровоеПеремещениеНачисления.ТарифныйРазряд4,
	|	КадровоеПеремещениеНачисления.ТарифныйРазряд5,
	|	КадровоеПеремещениеНачисления.ТарифныйРазряд6,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= НачисленияДоНазначения.ПериодЗавершения
	|				И НачисленияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА НачисленияДоНазначения.ТарифныйРазряд1Завершения
	|		ИНАЧЕ НачисленияДоНазначения.ТарифныйРазряд1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= НачисленияДоНазначения.ПериодЗавершения
	|				И НачисленияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА НачисленияДоНазначения.ТарифныйРазряд2Завершения
	|		ИНАЧЕ НачисленияДоНазначения.ТарифныйРазряд2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= НачисленияДоНазначения.ПериодЗавершения
	|				И НачисленияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА НачисленияДоНазначения.ТарифныйРазряд3Завершения
	|		ИНАЧЕ НачисленияДоНазначения.ТарифныйРазряд3
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= НачисленияДоНазначения.ПериодЗавершения
	|				И НачисленияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА НачисленияДоНазначения.ТарифныйРазряд4Завершения
	|		ИНАЧЕ НачисленияДоНазначения.ТарифныйРазряд4
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= НачисленияДоНазначения.ПериодЗавершения
	|				И НачисленияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА НачисленияДоНазначения.ТарифныйРазряд5Завершения
	|		ИНАЧЕ НачисленияДоНазначения.ТарифныйРазряд5
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= НачисленияДоНазначения.ПериодЗавершения
	|				И НачисленияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА НачисленияДоНазначения.ТарифныйРазряд6Завершения
	|		ИНАЧЕ НачисленияДоНазначения.ТарифныйРазряд6
	|	КОНЕЦ,
	|	Показатели.Показатель1Предопределенный,
	|	Показатели.Показатель1Наименование,
	|	Показатели.Показатель1ТипПоказателя,
	|	Показатели.Показатель1ВозможностьИзменения,
	|	Показатели.Показатель2Предопределенный,
	|	Показатели.Показатель2Наименование,
	|	Показатели.Показатель2ТипПоказателя,
	|	Показатели.Показатель2ВозможностьИзменения,
	|	Показатели.Показатель3Предопределенный,
	|	Показатели.Показатель3Наименование,
	|	Показатели.Показатель3ТипПоказателя,
	|	Показатели.Показатель3ВозможностьИзменения,
	|	Показатели.Показатель4Предопределенный,
	|	Показатели.Показатель4Наименование,
	|	Показатели.Показатель4ТипПоказателя,
	|	Показатели.Показатель4ВозможностьИзменения,
	|	Показатели.Показатель5Предопределенный,
	|	Показатели.Показатель5Наименование,
	|	Показатели.Показатель5ТипПоказателя,
	|	Показатели.Показатель5ВозможностьИзменения,
	|	Показатели.Показатель6Предопределенный,
	|	Показатели.Показатель6Наименование,
	|	Показатели.Показатель6ТипПоказателя,
	|	Показатели.Показатель6ВозможностьИзменения,
	|	Показатели.Показатель1ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель2ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель3ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель4ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель5ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель6ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель1ТарифнаяСтавка,
	|	Показатели.Показатель2ТарифнаяСтавка,
	|	Показатели.Показатель3ТарифнаяСтавка,
	|	Показатели.Показатель4ТарифнаяСтавка,
	|	Показатели.Показатель5ТарифнаяСтавка,
	|	Показатели.Показатель6ТарифнаяСтавка
	|ИЗ
	|	Документ.КадровоеПеремещение.Начисления КАК КадровоеПеремещениеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КадровоеПеремещение.Работники КАК КадровоеПеремещениеРаботники
	|		ПО КадровоеПеремещениеНачисления.Ссылка = КадровоеПеремещениеРаботники.Ссылка
	|			И КадровоеПеремещениеНачисления.Сотрудник = КадровоеПеремещениеРаботники.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДатыПоследнихДвиженийНачисленийРаботников.Сотрудник КАК Сотрудник,
	|			ДатыПоследнихДвиженийНачисленийРаботников.ВидРасчета КАК Измерение,
	|			ПлановыеНачисленияРаботников.ВидРасчета КАК ВидРасчета,
	|			ПлановыеНачисленияРаботников.Показатель1 КАК Показатель1,
	|			ПлановыеНачисленияРаботников.Валюта1 КАК Валюта1,
	|			ПлановыеНачисленияРаботников.Показатель2 КАК Показатель2,
	|			ПлановыеНачисленияРаботников.Валюта2 КАК Валюта2,
	|			ПлановыеНачисленияРаботников.Показатель3 КАК Показатель3,
	|			ПлановыеНачисленияРаботников.Валюта3 КАК Валюта3,
	|			ПлановыеНачисленияРаботников.Показатель4 КАК Показатель4,
	|			ПлановыеНачисленияРаботников.Валюта4 КАК Валюта4,
	|			ПлановыеНачисленияРаботников.Показатель5 КАК Показатель5,
	|			ПлановыеНачисленияРаботников.Валюта5 КАК Валюта5,
	|			ПлановыеНачисленияРаботников.Показатель6 КАК Показатель6,
	|			ПлановыеНачисленияРаботников.Валюта6 КАК Валюта6,
	|			ПлановыеНачисленияРаботников.ВидРасчетаЗавершения КАК ВидРасчетаЗавершения,
	|			ПлановыеНачисленияРаботников.ПериодЗавершения КАК ПериодЗавершения,
	|			ПлановыеНачисленияРаботников.Показатель1Завершения КАК Показатель1Завершения,
	|			ПлановыеНачисленияРаботников.Показатель2Завершения КАК Показатель2Завершения,
	|			ПлановыеНачисленияРаботников.Показатель3Завершения КАК Показатель3Завершения,
	|			ПлановыеНачисленияРаботников.Показатель4Завершения КАК Показатель4Завершения,
	|			ПлановыеНачисленияРаботников.Показатель5Завершения КАК Показатель5Завершения,
	|			ПлановыеНачисленияРаботников.Показатель6Завершения КАК Показатель6Завершения,
	|			ПлановыеНачисленияРаботников.Валюта1Завершения КАК Валюта1Завершения,
	|			ПлановыеНачисленияРаботников.Валюта2Завершения КАК Валюта2Завершения,
	|			ПлановыеНачисленияРаботников.Валюта3Завершения КАК Валюта3Завершения,
	|			ПлановыеНачисленияРаботников.Валюта4Завершения КАК Валюта4Завершения,
	|			ПлановыеНачисленияРаботников.Валюта5Завершения КАК Валюта5Завершения,
	|			ПлановыеНачисленияРаботников.Валюта6Завершения КАК Валюта6Завершения,
	|			ПлановыеНачисленияРаботников.ТарифныйРазряд1Завершения КАК ТарифныйРазряд1Завершения,
	|			ПлановыеНачисленияРаботников.ТарифныйРазряд2Завершения КАК ТарифныйРазряд2Завершения,
	|			ПлановыеНачисленияРаботников.ТарифныйРазряд3Завершения КАК ТарифныйРазряд3Завершения,
	|			ПлановыеНачисленияРаботников.ТарифныйРазряд4Завершения КАК ТарифныйРазряд4Завершения,
	|			ПлановыеНачисленияРаботников.ТарифныйРазряд5Завершения КАК ТарифныйРазряд5Завершения,
	|			ПлановыеНачисленияРаботников.ТарифныйРазряд6Завершения КАК ТарифныйРазряд6Завершения,
	|			ПлановыеНачисленияРаботников.ТарифныйРазряд1 КАК ТарифныйРазряд1,
	|			ПлановыеНачисленияРаботников.ТарифныйРазряд2 КАК ТарифныйРазряд2,
	|			ПлановыеНачисленияРаботников.ТарифныйРазряд3 КАК ТарифныйРазряд3,
	|			ПлановыеНачисленияРаботников.ТарифныйРазряд4 КАК ТарифныйРазряд4,
	|			ПлановыеНачисленияРаботников.ТарифныйРазряд5 КАК ТарифныйРазряд5,
	|			ПлановыеНачисленияРаботников.ТарифныйРазряд6 КАК ТарифныйРазряд6
	|		ИЗ
	|			(ВЫБРАТЬ
	|				МАКСИМУМ(НачисленияРаботников.Период) КАК ДатаДвижения,
	|				ТЧРаботники.Сотрудник КАК Сотрудник,
	|				НачисленияРаботников.ВидРасчетаИзмерение КАК ВидРасчета
	|			ИЗ
	|				Документ.КадровоеПеремещение.Работники КАК ТЧРаботники
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботников КАК НачисленияРаботников
	|					ПО ТЧРаботники.ФизЛицо = НачисленияРаботников.ФизЛицо
	|						И (НачисленияРаботников.Период <= ТЧРаботники.ДатаНачала)
	|			ГДЕ
	|				ТЧРаботники.Ссылка = &ДокументСсылка
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ТЧРаботники.Сотрудник,
	|				НачисленияРаботников.ВидРасчетаИзмерение) КАК ДатыПоследнихДвиженийНачисленийРаботников
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботников КАК ПлановыеНачисленияРаботников
	|				ПО ДатыПоследнихДвиженийНачисленийРаботников.Сотрудник.Физлицо = ПлановыеНачисленияРаботников.ФизЛицо
	|					И ДатыПоследнихДвиженийНачисленийРаботников.ДатаДвижения = ПлановыеНачисленияРаботников.Период
	|					И ДатыПоследнихДвиженийНачисленийРаботников.ВидРасчета = ПлановыеНачисленияРаботников.ВидРасчетаИзмерение) КАК НачисленияДоНазначения
	|		ПО КадровоеПеремещениеНачисления.Сотрудник = НачисленияДоНазначения.Сотрудник
	|			И (ВЫБОР
	|				КОГДА КадровоеПеремещениеНачисления.ВидРасчета.ЗачетОтработанногоВремени
	|					ТОГДА &ПустойВидРасчета
	|				ИНАЧЕ КадровоеПеремещениеНачисления.ВидРасчета
	|			КОНЕЦ = НачисленияДоНазначения.Измерение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТЧНачисления.НомерСтроки КАК НомерСтроки,
	|			МИНИМУМ(ТЧНачисления2.НомерСтроки) КАК КонфликтнаяСтрокаНомер
	|		ИЗ
	|			Документ.КадровоеПеремещение.Начисления КАК ТЧНачисления
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КадровоеПеремещение.Начисления КАК ТЧНачисления2
	|				ПО (ТЧНачисления2.Ссылка = ТЧНачисления.Ссылка)
	|					И ТЧНачисления.Сотрудник = ТЧНачисления2.Сотрудник
	|					И (ТЧНачисления.ВидРасчета = ТЧНачисления2.ВидРасчета
	|						ИЛИ ТЧНачисления.ВидРасчета.ЗачетОтработанногоВремени
	|							И ТЧНачисления2.ВидРасчета.ЗачетОтработанногоВремени)
	|					И ТЧНачисления.НомерСтроки < ТЧНачисления2.НомерСтроки
	|		ГДЕ
	|			ТЧНачисления.Ссылка = &ДокументСсылка
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТЧНачисления.НомерСтроки) КАК ПересекающиесяСтроки
	|		ПО КадровоеПеремещениеНачисления.НомерСтроки = ПересекающиесяСтроки.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиНачислений КАК Показатели
	|		ПО КадровоеПеремещениеНачисления.ВидРасчета = Показатели.ВидРасчета
	|ГДЕ
	|	КадровоеПеремещениеНачисления.Ссылка = &ДокументСсылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Взыскания"",
	|	КадровоеПеремещениеВзыскания.НомерСтроки,
	|	NULL,
	|	КадровоеПеремещениеРаботники.Сотрудник.Физлицо.Наименование,
	|	КадровоеПеремещениеВзыскания.Физлицо,
	|	NULL,
	|	NULL,
	|	NULL,
	|	КадровоеПеремещениеРаботники.ДатаНачала,
	|	КадровоеПеремещениеРаботники.ДатаОкончания,
	|	КадровоеПеремещениеРаботники.НапомнитьПоЗавершении,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ПересекающиесяСтроки.КонфликтнаяСтрокаНомер,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	КадровоеПеремещениеВзыскания.Действие,
	|	КадровоеПеремещениеВзыскания.ВидРасчета,
	|	ИСТИНА,
	|	NULL,
	|	КадровоеПеремещениеВзыскания.Показатель1,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеВзыскания.Валюта1 ЕСТЬ NULL 
	|				ИЛИ КадровоеПеремещениеВзыскания.Валюта1 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА Показатели.Показатель1Валюта
	|			Иначе КадровоеПеремещениеВзыскания.Валюта1
	|	КОНЕЦ,
	|	КадровоеПеремещениеВзыскания.Показатель2,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеВзыскания.Валюта2 ЕСТЬ NULL 
	|				ИЛИ КадровоеПеремещениеВзыскания.Валюта2 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА Показатели.Показатель2Валюта
	|			Иначе КадровоеПеремещениеВзыскания.Валюта2
	|	КОНЕЦ,
	|	КадровоеПеремещениеВзыскания.Показатель3,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеВзыскания.Валюта3 ЕСТЬ NULL 
	|				ИЛИ КадровоеПеремещениеВзыскания.Валюта3 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА Показатели.Показатель3Валюта
	|			Иначе КадровоеПеремещениеВзыскания.Валюта3
	|	КОНЕЦ,
	|	КадровоеПеремещениеВзыскания.Показатель4,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеВзыскания.Валюта4 ЕСТЬ NULL 
	|				ИЛИ КадровоеПеремещениеВзыскания.Валюта4 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА Показатели.Показатель4Валюта
	|			Иначе КадровоеПеремещениеВзыскания.Валюта4
	|	КОНЕЦ,
	|	КадровоеПеремещениеВзыскания.Показатель5,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеВзыскания.Валюта5 ЕСТЬ NULL 
	|				ИЛИ КадровоеПеремещениеВзыскания.Валюта5 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА Показатели.Показатель5Валюта
	|			Иначе КадровоеПеремещениеВзыскания.Валюта5
	|	КОНЕЦ,
	|	КадровоеПеремещениеВзыскания.Показатель6,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеВзыскания.Валюта6 ЕСТЬ NULL 
	|				ИЛИ КадровоеПеремещениеВзыскания.Валюта6 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА Показатели.Показатель6Валюта
	|			Иначе КадровоеПеремещениеВзыскания.Валюта6
	|	КОНЕЦ,
	|	КадровоеПеремещениеВзыскания.ВидРасчета.СпособРасчета,
	|	ЕСТЬNULL(Показатели.КоличествоПоказателей, 0),
	|	ВзысканияДоНазначения.ВидРасчета,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= ВзысканияДоНазначения.ПериодЗавершения
	|				И ВзысканияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВзысканияДоНазначения.Показатель1Завершения
	|		ИНАЧЕ ВзысканияДоНазначения.Показатель1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= ВзысканияДоНазначения.ПериодЗавершения
	|				И ВзысканияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВзысканияДоНазначения.Валюта1Завершения
	|		ИНАЧЕ ВзысканияДоНазначения.Валюта1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= ВзысканияДоНазначения.ПериодЗавершения
	|				И ВзысканияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВзысканияДоНазначения.Показатель2Завершения
	|		ИНАЧЕ ВзысканияДоНазначения.Показатель2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= ВзысканияДоНазначения.ПериодЗавершения
	|				И ВзысканияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВзысканияДоНазначения.Валюта2Завершения
	|		ИНАЧЕ ВзысканияДоНазначения.Валюта2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= ВзысканияДоНазначения.ПериодЗавершения
	|				И ВзысканияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВзысканияДоНазначения.Показатель3Завершения
	|		ИНАЧЕ ВзысканияДоНазначения.Показатель3
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= ВзысканияДоНазначения.ПериодЗавершения
	|				И ВзысканияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВзысканияДоНазначения.Валюта3Завершения
	|		ИНАЧЕ ВзысканияДоНазначения.Валюта3
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= ВзысканияДоНазначения.ПериодЗавершения
	|				И ВзысканияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВзысканияДоНазначения.Показатель4Завершения
	|		ИНАЧЕ ВзысканияДоНазначения.Показатель4
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= ВзысканияДоНазначения.ПериодЗавершения
	|				И ВзысканияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВзысканияДоНазначения.Валюта4Завершения
	|		ИНАЧЕ ВзысканияДоНазначения.Валюта4
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= ВзысканияДоНазначения.ПериодЗавершения
	|				И ВзысканияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВзысканияДоНазначения.Показатель5Завершения
	|		ИНАЧЕ ВзысканияДоНазначения.Показатель5
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= ВзысканияДоНазначения.ПериодЗавершения
	|				И ВзысканияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВзысканияДоНазначения.Валюта5Завершения
	|		ИНАЧЕ ВзысканияДоНазначения.Валюта5
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= ВзысканияДоНазначения.ПериодЗавершения
	|				И ВзысканияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВзысканияДоНазначения.Показатель6Завершения
	|		ИНАЧЕ ВзысканияДоНазначения.Показатель6
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеРаботники.ДатаНачала >= ВзысканияДоНазначения.ПериодЗавершения
	|				И ВзысканияДоНазначения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВзысканияДоНазначения.Валюта6Завершения
	|		ИНАЧЕ ВзысканияДоНазначения.Валюта6
	|	КОНЕЦ,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	Показатели.Показатель1Предопределенный,
	|	Показатели.Показатель1Наименование,
	|	Показатели.Показатель1ТипПоказателя,
	|	Показатели.Показатель1ВозможностьИзменения,
	|	Показатели.Показатель2Предопределенный,
	|	Показатели.Показатель2Наименование,
	|	Показатели.Показатель2ТипПоказателя,
	|	Показатели.Показатель2ВозможностьИзменения,
	|	Показатели.Показатель3Предопределенный,
	|	Показатели.Показатель3Наименование,
	|	Показатели.Показатель3ТипПоказателя,
	|	Показатели.Показатель3ВозможностьИзменения,
	|	Показатели.Показатель4Предопределенный,
	|	Показатели.Показатель4Наименование,
	|	Показатели.Показатель4ТипПоказателя,
	|	Показатели.Показатель4ВозможностьИзменения,
	|	Показатели.Показатель5Предопределенный,
	|	Показатели.Показатель5Наименование,
	|	Показатели.Показатель5ТипПоказателя,
	|	Показатели.Показатель5ВозможностьИзменения,
	|	Показатели.Показатель6Предопределенный,
	|	Показатели.Показатель6Наименование,
	|	Показатели.Показатель6ТипПоказателя,
	|	Показатели.Показатель6ВозможностьИзменения,
	|	Показатели.Показатель1ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель2ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель3ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель4ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель5ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель6ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель1ТарифнаяСтавка,
	|	Показатели.Показатель2ТарифнаяСтавка,
	|	Показатели.Показатель3ТарифнаяСтавка,
	|	Показатели.Показатель4ТарифнаяСтавка,
	|	Показатели.Показатель5ТарифнаяСтавка,
	|	Показатели.Показатель6ТарифнаяСтавка
	|ИЗ
	|	Документ.КадровоеПеремещение.Взыскания КАК КадровоеПеремещениеВзыскания
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КадровоеПеремещение.Работники КАК КадровоеПеремещениеРаботники
	|		ПО КадровоеПеремещениеВзыскания.Ссылка = КадровоеПеремещениеРаботники.Ссылка
	|			И КадровоеПеремещениеВзыскания.Физлицо = КадровоеПеремещениеРаботники.Сотрудник.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДатыПоследнихДвиженийУдержанийРаботников.Физлицо КАК Физлицо,
	|			ДатыПоследнихДвиженийУдержанийРаботников.ВидРасчета КАК Измерение,
	|			ПлановыеУдержанияРаботников.ВидРасчета КАК ВидРасчета,
	|			ПлановыеУдержанияРаботников.Показатель1 КАК Показатель1,
	|			ПлановыеУдержанияРаботников.Валюта1 КАК Валюта1,
	|			ПлановыеУдержанияРаботников.Показатель2 КАК Показатель2,
	|			ПлановыеУдержанияРаботников.Валюта2 КАК Валюта2,
	|			ПлановыеУдержанияРаботников.Показатель3 КАК Показатель3,
	|			ПлановыеУдержанияРаботников.Валюта3 КАК Валюта3,
	|			ПлановыеУдержанияРаботников.Показатель4 КАК Показатель4,
	|			ПлановыеУдержанияРаботников.Валюта4 КАК Валюта4,
	|			ПлановыеУдержанияРаботников.Показатель5 КАК Показатель5,
	|			ПлановыеУдержанияРаботников.Валюта5 КАК Валюта5,
	|			ПлановыеУдержанияРаботников.Показатель6 КАК Показатель6,
	|			ПлановыеУдержанияРаботников.Валюта6 КАК Валюта6,
	|			ПлановыеУдержанияРаботников.ПериодЗавершения КАК ПериодЗавершения,
	|			ПлановыеУдержанияРаботников.Показатель1Завершения КАК Показатель1Завершения,
	|			ПлановыеУдержанияРаботников.Показатель2Завершения КАК Показатель2Завершения,
	|			ПлановыеУдержанияРаботников.Показатель3Завершения КАК Показатель3Завершения,
	|			ПлановыеУдержанияРаботников.Показатель4Завершения КАК Показатель4Завершения,
	|			ПлановыеУдержанияРаботников.Показатель5Завершения КАК Показатель5Завершения,
	|			ПлановыеУдержанияРаботников.Показатель6Завершения КАК Показатель6Завершения,
	|			ПлановыеУдержанияРаботников.Валюта1Завершения КАК Валюта1Завершения,
	|			ПлановыеУдержанияРаботников.Валюта2Завершения КАК Валюта2Завершения,
	|			ПлановыеУдержанияРаботников.Валюта3Завершения КАК Валюта3Завершения,
	|			ПлановыеУдержанияРаботников.Валюта4Завершения КАК Валюта4Завершения,
	|			ПлановыеУдержанияРаботников.Валюта5Завершения КАК Валюта5Завершения,
	|			ПлановыеУдержанияРаботников.Валюта6Завершения КАК Валюта6Завершения
	|		ИЗ
	|			(ВЫБРАТЬ
	|				МАКСИМУМ(УдержанияРаботников.Период) КАК ДатаДвижения,
	|				ТЧРаботники.Сотрудник.Физлицо КАК Физлицо,
	|				УдержанияРаботников.ВидРасчета КАК ВидРасчета
	|			ИЗ
	|				Документ.КадровоеПеремещение.Работники КАК ТЧРаботники
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияРаботников КАК УдержанияРаботников
	|					ПО ТЧРаботники.Сотрудник.Физлицо = УдержанияРаботников.ФизЛицо
	|						И (УдержанияРаботников.Период <= ТЧРаботники.ДатаНачала)
	|			ГДЕ
	|				ТЧРаботники.Ссылка = &ДокументСсылка
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ТЧРаботники.Сотрудник,
	|				УдержанияРаботников.ВидРасчета,
	|				ТЧРаботники.Сотрудник.Физлицо) КАК ДатыПоследнихДвиженийУдержанийРаботников
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияРаботников КАК ПлановыеУдержанияРаботников
	|				ПО ДатыПоследнихДвиженийУдержанийРаботников.Физлицо = ПлановыеУдержанияРаботников.ФизЛицо
	|					И ДатыПоследнихДвиженийУдержанийРаботников.ДатаДвижения = ПлановыеУдержанияРаботников.Период
	|					И ДатыПоследнихДвиженийУдержанийРаботников.ВидРасчета = ПлановыеУдержанияРаботников.ВидРасчета) КАК ВзысканияДоНазначения
	|		ПО КадровоеПеремещениеВзыскания.Физлицо = ВзысканияДоНазначения.Физлицо
	|			И КадровоеПеремещениеВзыскания.ВидРасчета = ВзысканияДоНазначения.ВидРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТЧВзыскания.НомерСтроки КАК НомерСтроки,
	|			МИНИМУМ(ТЧВзыскания2.НомерСтроки) КАК КонфликтнаяСтрокаНомер
	|		ИЗ
	|			Документ.КадровоеПеремещение.Взыскания КАК ТЧВзыскания
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КадровоеПеремещение.Взыскания КАК ТЧВзыскания2
	|				ПО (ТЧВзыскания2.Ссылка = ТЧВзыскания.Ссылка)
	|					И ТЧВзыскания.Физлицо = ТЧВзыскания2.Физлицо
	|					И ТЧВзыскания.ВидРасчета = ТЧВзыскания2.ВидРасчета
	|					И ТЧВзыскания.НомерСтроки < ТЧВзыскания2.НомерСтроки
	|		ГДЕ
	|			ТЧВзыскания.Ссылка = &ДокументСсылка
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТЧВзыскания.НомерСтроки) КАК ПересекающиесяСтроки
	|		ПО КадровоеПеремещениеВзыскания.НомерСтроки = ПересекающиесяСтроки.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиУдержаний КАК Показатели
	|		ПО КадровоеПеремещениеВзыскания.ВидРасчета = Показатели.ВидРасчета
	|ГДЕ
	|	КадровоеПеремещениеВзыскания.Ссылка = &ДокументСсылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""КонфликтныйДокумент"",
	|	ТЧРаботники.НомерСтроки,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ПРЕДСТАВЛЕНИЕ(РегистрСведенийРаботники.Регистратор),
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ИСТИНА,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.КадровоеПеремещение.Работники КАК ТЧРаботники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Работники КАК РегистрСведенийРаботники
	|		ПО (РегистрСведенийРаботники.ФизЛицо = ТЧРаботники.Сотрудник.Физлицо)
	|			И ((НЕ ТЧРаботники.НапомнитьПоЗавершении)
	|					И (РегистрСведенийРаботники.Период МЕЖДУ ТЧРаботники.ДатаНачала И ВЫБОР
	|						КОГДА ТЧРаботники.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|							ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ИНАЧЕ ДОБАВИТЬКДАТЕ(ТЧРаботники.ДатаОкончания, ДЕНЬ, 1)
	|					КОНЕЦ)
	|				ИЛИ РегистрСведенийРаботники.Период = ТЧРаботники.ДатаНачала)
	|ГДЕ
	|	ТЧРаботники.Ссылка = &ДокументСсылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросПоРаботники()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры:
//	ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа.
//	Отказ					- флаг отказа в проведении.
//	Заголовок				- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения реквизитов в строке ТЧ "Работники" документа.
// Если какой-то из реквизитов, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по строке ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определенной строке выборка 
//  							  из результата запроса по работникам. 
//  Отказ        - флаг отказа в проведении.
//	Заголовок	 - Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеСтрокиРаботника(ВыборкаПоСтрокамДокумента, Отказ, Заголовок)

	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
	""" табл. части ""Сотрудники"": ";
	
	Если ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "Работники" Тогда

		// Сотрудник
		НетСотрудника = НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник);
		Если НетСотрудника Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не выбран сотрудник!", Отказ, Заголовок);
		КонецЕсли;
		
		// ДатаНачала
		НетДатыНачала = НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаНачала);
		Если НетДатыНачала Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата начала кадрового перемещения!", Отказ, Заголовок);
		КонецЕсли;

		// Подразделение
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.НовоеПодразделение) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не выбрано подразделение!", Отказ, Заголовок);
		КонецЕсли;

		// Должность
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.НоваяДолжность) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не выбрана должность!", Отказ, Заголовок);
		КонецЕсли;

		// Количество
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ЗанимаемыхСтавок) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указано количество ставок!", Отказ, Заголовок);
		КонецЕсли;

		// ГрафикРаботы
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ГрафикРаботы)  Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указан рабочий график!", Отказ, Заголовок);
		КонецЕсли;

		Если НетСотрудника ИЛИ НетДатыНачала Тогда
			Возврат; // Дальше не проверяем
		КонецЕсли;

		// ДатаОкончания
		Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаОкончания) и ВыборкаПоСтрокамДокумента.ДатаНачала > ВыборкаПоСтрокамДокумента.ДатаОкончания Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "дата начала перемещения не может превышать дату окончания!", Отказ, Заголовок);
		КонецЕсли;

		// Проверка: ранее работник должен быть принят на работу
		Если ВыборкаПоСтрокамДокумента.ПрежняяСтавка = NULL Тогда
			СтрокаПродолжениеСообщенияОбОшибке = "на " + Формат(ВыборкаПоСтрокамДокумента.ДатаНачала, "ДЛФ=DD") + " сотрудник " + ВыборкаПоСтрокамДокумента.СотрудникНаименование + " еще не принят на работу!";
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + СтрокаПродолжениеСообщенияОбОшибке, Отказ, Заголовок);
			
		ИначеЕсли ВыборкаПоСтрокамДокумента.ПрежняяСтавка = 0 Тогда	
			СтрокаПродолжениеСообщенияОбОшибке = "на " + Формат(ВыборкаПоСтрокамДокумента.ДатаНачала, "ДЛФ=DD") + " сотрудник " + ВыборкаПоСтрокамДокумента.СотрудникНаименование + " уже уволен (с " + Формат(ВыборкаПоСтрокамДокумента.ДатаПоследнегоДвиженияПоРаботнику, "ДЛФ=DD") + ")!";
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + СтрокаПродолжениеСообщенияОбОшибке, Отказ, Заголовок);
			
		КонецЕсли;

		// Проверка: противоречие другой строке документа
		Если ВыборкаПоСтрокамДокумента.КонфликтнаяСтрокаНомер <> NULL Тогда
			СтрокаСообщениеОбОшибке = "период действия назначения пересекается с периодом действия строки " + ВыборкаПоСтрокамДокумента.КонфликтнаяСтрокаНомер + "!"; 
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + СтрокаСообщениеОбОшибке, Отказ, Заголовок);
		КонецЕсли;

	ИначеЕсли ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "Начисления" Тогда
		
		СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
		""" табл. части ""Начисления"": ";

		НетСотрудника = НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник);
		Если НетСотрудника Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не выбран сотрудник!", Отказ, Заголовок);
			
		Иначе
			Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.СотрудникНаименование) Тогда
				ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "указан сотрудник, отсутствующий в списке сотрудников!", Отказ, Заголовок);
			КонецЕсли;
			
		КонецЕсли;
		
		// Действие
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Действие) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указано действие!", Отказ, Заголовок);
		КонецЕсли;
		
		// ВидРасчета
		НетВР = НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВидРасчета);
		Если НетВР Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указано начисление!", Отказ, Заголовок);
			
		ИначеЕсли мСписокНедоступныхРасчетов.НайтиПоЗначению(ВыборкаПоСтрокамДокумента.ВидРасчета) <> Неопределено Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "указанный вид расчета нельзя назначать в качестве планового!", Отказ, Заголовок);
			
		ИначеЕсли (ВыборкаПоСтрокамДокумента.Действие = Перечисления.ВидыДействияСНачислением.Начать или ВыборкаПоСтрокамДокумента.Действие = Перечисления.ВидыДействияСНачислением.Изменить) Тогда	
			ПроведениеРасчетовПереопределяемый.ПроверкаПоказателейВПлановыхНачислениях(ВыборкаПоСтрокамДокумента, СтрокаНачалаСообщенияОбОшибке, Истина, Отказ, Заголовок, Истина);

		КонецЕсли;
		
		// Проверка: противоречие другой строке документа
		Если Не НетВР и Не НетСотрудника и ВыборкаПоСтрокамДокумента.КонфликтнаяСтрокаНомер <> NULL Тогда
			Если ВыборкаПоСтрокамДокумента.ОсновноеНачисление Тогда
				СтрокаСообщениеОбОшибке = "основное начисление сотрудника следует редактировать в одной строке (см. строку " + ВыборкаПоСтрокамДокумента.КонфликтнаяСтрокаНомер + ")!"; 
				
			Иначе
				СтрокаСообщениеОбОшибке = "сотруднику не может быть назначено одно и тоже начисление дважды (см. строку " + ВыборкаПоСтрокамДокумента.КонфликтнаяСтрокаНомер + ")!"; 
				
			КонецЕсли;
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + СтрокаСообщениеОбОшибке, Отказ, Заголовок);
		КонецЕсли;
		
	ИначеЕсли ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "Взыскания" Тогда
		
		СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
		""" табл. части ""Взыскания"": ";

		НетФизлица = НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Физлицо);
		Если НетФизлица Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не выбрано физическое лицо!", Отказ, Заголовок);
			
		Иначе
			Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.СотрудникНаименование) Тогда
				ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "указано физическое лицо, отсутствующее в списке сотрудников!", Отказ, Заголовок);
			КонецЕсли;
			
		КонецЕсли;
		
		// Действие
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Действие) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указано действие!", Отказ, Заголовок);
		КонецЕсли;
		
		// ВидРасчета
		НетВР = НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВидРасчета);
		Если НетВР Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указано взыскания!", Отказ, Заголовок);
			
		ИначеЕсли мСписокНедоступныхРасчетов.НайтиПоЗначению(ВыборкаПоСтрокамДокумента.ВидРасчета) <> Неопределено Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "указанный вид расчета нельзя назначать в качестве планового!", Отказ, Заголовок);
			
		ИначеЕсли (ВыборкаПоСтрокамДокумента.Действие = Перечисления.ВидыДействияСНачислением.Начать или ВыборкаПоСтрокамДокумента.Действие = Перечисления.ВидыДействияСНачислением.Изменить) Тогда	
			ПроведениеРасчетовПереопределяемый.ПроверкаПоказателейВПлановыхНачислениях(ВыборкаПоСтрокамДокумента, СтрокаНачалаСообщенияОбОшибке, Ложь, Отказ, Заголовок, Истина);
			
		КонецЕсли;
		
		Если НетВР ИЛИ НетФизлица Тогда
			Возврат;
		КонецЕсли;
		
		// Проверка: противоречие другой строке документа
		Если ВыборкаПоСтрокамДокумента.КонфликтнаяСтрокаНомер <> NULL Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + СтрокаСообщениеОбОшибке, Отказ, Заголовок);
		КонецЕсли;
		
	ИначеЕсли ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "КонфликтныйДокумент" Тогда
		// противоречие другим кадровым приказам
		Расшифровки = Новый Массив;
		Расшифровки.Добавить(Новый Структура("Представление, Расшифровка", ВыборкаПоСтрокамДокумента.КонфликтныйДокумент, ВыборкаПоСтрокамДокумента.КонфликтныйДокумент));
		СтрокаСообщениеОбОшибке = "период действия приказа противоречит кадровому приказу ";
		ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + СтрокаСообщениеОбОшибке, Отказ, Заголовок, , Расшифровки);

	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиРаботника()

// Создает и заполняет структуру, содержащую имена регистров сведений 
//  по которым надо проводить документ
//
// Параметры: 
//  СтруктураПроведенияПоРегистрамСведений - структура, содержащая имена регистров сведений 
//                 по которым надо проводить документ.
//
// Возвращаемое значение:
//  Нет.
//
Процедура ЗаполнитьСтруктуруПроведенияПоРегистрамСведений(СтруктураПроведенияПоРегистрамСведений)

	СтруктураПроведенияПоРегистрамСведений = Новый Структура();
	
	СтруктураПроведенияПоРегистрамСведений.Вставить("Работники");
    СтруктураПроведенияПоРегистрамСведений.Вставить("НамеченныеСобытияПоПерсоналу");
    СтруктураПроведенияПоРегистрамСведений.Вставить("ПлановыеНачисленияРаботников");
	СтруктураПроведенияПоРегистрамСведений.Вставить("ПлановыеУдержанияРаботников");
    СтруктураПроведенияПоРегистрамСведений.Вставить("УчетЗаработкаРаботников");
	
КонецПроцедуры // ЗаполнитьСтруктуруПроведенияПоРегистрамСведений()

// По строке выборки результата запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоШапкеДокумента                - выборка из результата запроса по шапке документа,
//	ВыборкаПоРаботники					   - выборка из результата запроса ТЧ "Работники".									
//  СтруктураПроведенияПоРегистрамСведений - структура, содержащая имена регистров 
//                                           сведений по которым надо проводить документ,
//  СтруктураПараметров                    - структура параметров проведения,
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамСведений(ВыборкаПоШапкеДокумента, ВыборкаПоРаботники, 
	СтруктураПроведенияПоРегистрамСведений, СтруктураПараметров = "")
	
	Если ВыборкаПоРаботники.ВидСтрокиЗапроса = "Работники" Тогда
		
		// Если документ нужно проводить по регистру, то для него есть ключ в структуре
		ИмяРегистра = "Работники";
		Если СтруктураПроведенияПоРегистрамСведений.Свойство(ИмяРегистра) Тогда
			
			// отразим новое место работы
			Движение = Движения[ИмяРегистра].Добавить();
			
			// Свойства
			Движение.Период						= ВыборкаПоРаботники.ДатаНачала;
			
			// Измерения
			Движение.Физлицо					= ВыборкаПоРаботники.Физлицо;
			
			// Ресурсы
			Движение.Подразделение				= ВыборкаПоРаботники.НовоеПодразделение;
			Движение.Должность					= ВыборкаПоРаботники.НоваяДолжность;
			Движение.ЗанимаемыхСтавок			= ВыборкаПоРаботники.ЗанимаемыхСтавок;
			Движение.ГрафикРаботы				= ВыборкаПоРаботники.ГрафикРаботы;
			// Реквизиты
			Движение.ПричинаИзмененияСостояния	= Перечисления.ПричиныИзмененияСостояния.Перемещение;

			
		КонецЕсли;
		
		УчетРасходовНаПерсоналПереопределяемый.ДополнитьДвиженияСведениямиДляУпрУчета(Движения, ВыборкаПоРаботники, ВыборкаПоРаботники.ДатаНачала, , "НовоеПодразделение");
		
		Если ЗначениеЗаполнено(ВыборкаПоРаботники.ДатаОкончания) Тогда
			
			ПрежняяСтавка			= ВыборкаПоРаботники.ПрежняяСтавка;
			ПрежнееПодразделение	= ВыборкаПоРаботники.ПрежнееПодразделение;
			ПрежняяДолжность		= ВыборкаПоРаботники.ПрежняяДолжность;
			
			Если Не ВыборкаПоРаботники.НапомнитьПоЗавершении Тогда
				
				ИмяРегистра = "Работники";
				Если СтруктураПроведенияПоРегистрамСведений.Свойство(ИмяРегистра) Тогда
					
					// вернем прежние данные по прежнему месту работы
					Движение = Движения[ИмяРегистра].Добавить();
					
					// Свойства
					Движение.Период						= ВыборкаПоРаботники.ДатаОкончания + мДлинаСуток;
					
					// Измерения
					Движение.Физлицо					= ВыборкаПоРаботники.Физлицо;
					
					// Ресурсы
					Движение.Подразделение				= ПрежнееПодразделение;
					Движение.Должность					= ПрежняяДолжность;
					Движение.ЗанимаемыхСтавок			= ПрежняяСтавка;
					Движение.ГрафикРаботы				= ВыборкаПоРаботники.ПрежнийГрафикРаботы;
					// реквизиты
					Движение.ПричинаИзмененияСостояния	= Перечисления.ПричиныИзмененияСостояния.Перемещение;
					
				КонецЕсли;
				
				УчетРасходовНаПерсоналПереопределяемый.ДополнитьДвиженияСведениямиДляУпрУчета(Движения, ВыборкаПоРаботники, ВыборкаПоРаботники.ДатаОкончания, , "ПрежнееПодразделение", "Прежний");
				
			Иначе
				
				ИмяРегистра = "НамеченныеСобытияПоПерсоналу";
				Если СтруктураПроведенияПоРегистрамСведений.Свойство(ИмяРегистра) Тогда
					
					Движение = Движения[ИмяРегистра].Добавить();
					
					// Свойства
					Движение.Период					= ВыборкаПоРаботники.ДатаОкончания + мДлинаСуток;
					
					// Измерения
					Движение.Физлицо				= ВыборкаПоРаботники.Физлицо;
					Движение.ДатаИзменения			= ВыборкаПоРаботники.ДатаОкончания + мДлинаСуток;
					Движение.ПланируемоеСобытие		= Перечисления.НамеченныеСобытияПоПерсоналу.Перемещение;
					
					// Реквизиты
					Движение.Подразделение			= ПрежнееПодразделение;
					Движение.Должность				= ПрежняяДолжность;
					Движение.ЗанимаемыхСтавок		= ПрежняяСтавка;
					Движение.ГрафикРаботы			= ВыборкаПоРаботники.ПрежнийГрафикРаботы;

					
				КонецЕсли;
			КонецЕсли;
		КонецЕсли; 
		
	ИначеЕсли ВыборкаПоРаботники.ВидСтрокиЗапроса = "Начисления" Тогда
		
		Если ВыборкаПоРаботники.Действие = Перечисления.ВидыДействияСНачислением.НеИзменять Тогда
			Возврат;
		КонецЕсли;
		
		ИмяРегистра = "ПлановыеНачисленияРаботников";
		Если СтруктураПроведенияПоРегистрамСведений.Свойство(ИмяРегистра) Тогда
			
			Движение = Движения[ИмяРегистра].Добавить();
			
			// Свойства
			Движение.Период						= ВыборкаПоРаботники.ДатаНачала;
			
			// Измерения
			Движение.Физлицо					= ВыборкаПоРаботники.Физлицо;
			Если НЕ ВыборкаПоРаботники.ОсновноеНачисление Тогда
				Движение.ВидРасчетаИзмерение	= ВыборкаПоРаботники.ВидРасчета;
			КонецЕсли;
			
			// Ресурсы
			Движение.Действие					= ВыборкаПоРаботники.Действие;
			Движение.ВидРасчета					= ВыборкаПоРаботники.ВидРасчета;
			Если ВыборкаПоРаботники.Действие <> Перечисления.ВидыДействияСНачислением.Прекратить Тогда
								
				Для Сч = 1 По 6 Цикл
					Если ВыборкаПоРаботники.ПроизвольнаяФормулаРасчета Тогда
						Если Сч <= ВыборкаПоРаботники.КоличествоПоказателей Тогда
							Если ВыборкаПоРаботники["Показатель" + Сч + "ЗапрашиватьПриКадровыхПеремещениях"]
								Или ВыборкаПоРаботники["ОсновноеНачисление"] И ВыборкаПоРаботники["Показатель" + Сч + "ТарифнаяСтавка"] Тогда
								Движение["Показатель"+Сч]			= ВыборкаПоРаботники["Показатель"+Сч];
								Движение["Валюта"+Сч]				= ВыборкаПоРаботники["Валюта"+Сч];
								Движение["ТарифныйРазряд"+Сч]		= ВыборкаПоРаботники["ТарифныйРазряд"+Сч];
							Иначе
								Движение["Показатель"+Сч]			= 0;
								Движение["Валюта"+Сч]				= Справочники.Валюты.ПустаяСсылка();
								Движение["ТарифныйРазряд"+Сч]		= Справочники.ТарифныеРазряды.ПустаяСсылка();
							КонецЕсли;
						КонецЕсли;
					Иначе
						Движение["Показатель"+Сч]			= ВыборкаПоРаботники["Показатель"+Сч];
						Движение["Валюта"+Сч]				= ВыборкаПоРаботники["Валюта"+Сч];
						Движение["ТарифныйРазряд"+Сч]		= ВыборкаПоРаботники["ТарифныйРазряд"+Сч];
					КонецЕсли;
				КонецЦикла;
				
				
			Иначе
				
			КонецЕсли;
		
			// Движения на дату завершения
			Если ЗначениеЗаполнено(ВыборкаПоРаботники.ДатаОкончания) и Не ВыборкаПоРаботники.НапомнитьПоЗавершении Тогда
				
				Если ВыборкаПоРаботники.Действие = Перечисления.ВидыДействияСНачислением.Начать Тогда
					Движение.ДействиеЗавершения				= Перечисления.ВидыДействияСНачислением.Прекратить;
					
				ИначеЕсли ВыборкаПоРаботники.Действие = Перечисления.ВидыДействияСНачислением.Изменить Тогда
					Движение.ДействиеЗавершения				= ВыборкаПоРаботники.Действие;
					
				ИначеЕсли ВыборкаПоРаботники.Действие = Перечисления.ВидыДействияСНачислением.Прекратить Тогда
					Движение.ДействиеЗавершения				= Перечисления.ВидыДействияСНачислением.Начать;
					
				КонецЕсли;
				
				Движение.ПериодЗавершения		= ВыборкаПоРаботники.ДатаОкончания + мДлинаСуток;
				Если НЕ ВыборкаПоРаботники.ОсновноеНачисление Тогда
					Движение.ВидРасчетаЗавершения			= ВыборкаПоРаботники.ВидРасчета;
					
				Иначе
					Движение.ВидРасчетаЗавершения			= ВыборкаПоРаботники.ПрежнийВидРасчета;
					
				КонецЕсли;
				Если ВыборкаПоРаботники.ПрежнийВидРасчета <> Null Тогда
					Для Сч = 1 По 6 Цикл
						Если ВыборкаПоРаботники.ПроизвольнаяФормулаРасчета Тогда
							Если Сч <= ВыборкаПоРаботники.КоличествоПоказателей Тогда
								Если ВыборкаПоРаботники["Показатель" + Сч + "ЗапрашиватьПриКадровыхПеремещениях"]
									Или ВыборкаПоРаботники["ОсновноеНачисление"] И ВыборкаПоРаботники["Показатель" + Сч + "ТарифнаяСтавка"] Тогда
									Движение["Показатель"+Сч+ "Завершения"]			= ВыборкаПоРаботники["ПрежнийПоказатель"+Сч];
									Движение["Валюта"+Сч+ "Завершения"]				= ВыборкаПоРаботники["ПрежняяВалюта"+Сч];
									Движение["ТарифныйРазряд"+Сч+ "Завершения"]		= ВыборкаПоРаботники["ПрежнийТарифныйРазряд"+Сч];
								Иначе
									Движение["Показатель"+Сч+ "Завершения"]			= 0;
									Движение["Валюта"+Сч+ "Завершения"]				= Справочники.Валюты.ПустаяСсылка();
									Движение["ТарифныйРазряд"+Сч+ "Завершения"]		= Справочники.ТарифныеРазряды.ПустаяСсылка();
								КонецЕсли;
							КонецЕсли;
						Иначе
							Движение["Показатель"+Сч+ "Завершения"]			= ВыборкаПоРаботники["ПрежнийПоказатель"+Сч];
							Движение["Валюта"+Сч+ "Завершения"]				= ВыборкаПоРаботники["ПрежняяВалюта"+Сч];
							Движение["ТарифныйРазряд"+Сч+ "Завершения"]		= ВыборкаПоРаботники["ПрежнийТарифныйРазряд"+Сч];
						КонецЕсли;
					КонецЦикла;
					
				
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ВыборкаПоРаботники.ВидСтрокиЗапроса = "Взыскания" Тогда
		
		Если ВыборкаПоРаботники.Действие = Перечисления.ВидыДействияСНачислением.НеИзменять Тогда
			Возврат;
		КонецЕсли;
		
		ИмяРегистра = "ПлановыеУдержанияРаботников";
		Если СтруктураПроведенияПоРегистрамСведений.Свойство(ИмяРегистра) Тогда
			
			Движение = Движения[ИмяРегистра].Добавить();
			
			// Свойства
			Движение.Период						= ВыборкаПоРаботники.ДатаНачала;
			
			// Измерения
			Движение.Физлицо					= ВыборкаПоРаботники.Физлицо;
			Движение.ВидРасчета					= ВыборкаПоРаботники.ВидРасчета;
			
			// Ресурсы
			Движение.Действие					= ВыборкаПоРаботники.Действие;
			Движение.ВидРасчета					= ВыборкаПоРаботники.ВидРасчета;
			Если ВыборкаПоРаботники.Действие <> Перечисления.ВидыДействияСНачислением.Прекратить Тогда
			
				Для Сч = 1 По 6 Цикл
					Если ВыборкаПоРаботники.ПроизвольнаяФормулаРасчета Тогда
						Если Сч <= ВыборкаПоРаботники.КоличествоПоказателей Тогда
							Если ВыборкаПоРаботники["Показатель" + Сч + "ЗапрашиватьПриКадровыхПеремещениях"] Тогда
								Движение["Показатель"+Сч]			= ВыборкаПоРаботники["Показатель"+Сч];
								Движение["Валюта"+Сч]				= ВыборкаПоРаботники["Валюта"+Сч];
							Иначе
								Движение["Показатель"+Сч]			= 0;
								Движение["Валюта"+Сч]				= Справочники.Валюты.ПустаяСсылка();
							КонецЕсли;
						КонецЕсли;
					Иначе
						Движение["Показатель"+Сч]			= ВыборкаПоРаботники["Показатель"+Сч];
						Движение["Валюта"+Сч]				= ВыборкаПоРаботники["Валюта"+Сч];
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
			// Движения на дату завершения
			Если ЗначениеЗаполнено(ВыборкаПоРаботники.ДатаОкончания) и Не ВыборкаПоРаботники.НапомнитьПоЗавершении Тогда
				
				Если ВыборкаПоРаботники.Действие = Перечисления.ВидыДействияСНачислением.Начать Тогда
					Движение.ДействиеЗавершения	= Перечисления.ВидыДействияСНачислением.Прекратить
				ИначеЕсли ВыборкаПоРаботники.Действие = Перечисления.ВидыДействияСНачислением.Изменить Тогда	
					Движение.ДействиеЗавершения			= ВыборкаПоРаботники.Действие;
				ИначеЕсли ВыборкаПоРаботники.Действие = Перечисления.ВидыДействияСНачислением.Прекратить Тогда	
					Движение.ДействиеЗавершения	= Перечисления.ВидыДействияСНачислением.Начать
				КонецЕсли;
				Движение.ПериодЗавершения		= ВыборкаПоРаботники.ДатаОкончания + мДлинаСуток;
				Если ВыборкаПоРаботники.ПрежнийВидРасчета <> Null Тогда
					
					Для Сч = 1 По 6 Цикл
						Если ВыборкаПоРаботники.ПроизвольнаяФормулаРасчета Тогда
							Если Сч <= ВыборкаПоРаботники.КоличествоПоказателей Тогда
								Если ВыборкаПоРаботники["Показатель" + Сч + "ЗапрашиватьПриКадровыхПеремещениях"] Тогда
									Движение["Показатель"+Сч+ "Завершения"]			= ВыборкаПоРаботники["ПрежнийПоказатель"+Сч];
									Движение["Валюта"+Сч+ "Завершения"]				= ВыборкаПоРаботники["ПрежняяВалюта"+Сч];
								Иначе
									Движение["Показатель"+Сч+ "Завершения"]			= 0;
									Движение["Валюта"+Сч+ "Завершения"]				= Справочники.Валюты.ПустаяСсылка();
								КонецЕсли;
							КонецЕсли;
						Иначе
							Движение["Показатель"+Сч+ "Завершения"]			= ВыборкаПоРаботники["ПрежнийПоказатель"+Сч];
							Движение["Валюта"+Сч+ "Завершения"]				= ВыборкаПоРаботники["ПрежняяВалюта"+Сч];
						КонецЕсли;
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамСведений()

// Создает и заполняет структуру, содержащую имена регистров накопления
// документа. В дальнейшем движения заносятся только по тем регистрам накопления, для которых в 
// данной процедуре заданы ключи
//
// Параметры: 
//  СтруктураПроведенияПоРегистрамНакопления - структура, содержащая имена регистров 
//                  накопления по которым надо проводить документ.
//
// Возвращаемое значение:
//  Нет.
//
Процедура ЗаполнитьСтруктуруПроведенияПоРегистрамНакопления(СтруктураПроведенияПоРегистрамНакопления)

	СтруктураПроведенияПоРегистрамНакопления = Новый Структура();
	СтруктураПроведенияПоРегистрамНакопления.Вставить("ЗанятыеРабочиеМеста");

КонецПроцедуры // ЗаполнитьСтруктуруПроведенияПоРегистрамНакопления()

// По строке выборки результата запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоШапкеДокумента                  - выборка из результата запроса по шапке документа.
//	ВыборкаПоРаботники					     - выборка из результата запроса ТЧ "Работники".									
//  СтруктураПроведенияПоРегистрамНакопления - структура, содержащая имена регистров 
//                                             накопления по которым надо проводить документ
//  СтруктураПараметров                      - структура параметров проведения.
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента,ВыборкаПоРаботники,  
	СтруктураПроведенияПоРегистрамНакопления, СтруктураПараметров = "")
	
	Если ВыборкаПоРаботники.ВидСтрокиЗапроса = "Работники" Тогда
		
		// Если документ нужно проводить по регистру, то для него есть ключ в структуре
		ИмяРегистра = "ЗанятыеРабочиеМеста";
		Если СтруктураПроведенияПоРегистрамНакопления.Свойство(ИмяРегистра) Тогда
			
			ПрежняяСтавка        = ВыборкаПоРаботники.ПрежняяСтавка;
			ПрежнееПодразделение = ВыборкаПоРаботники.ПрежнееПодразделение; 
			ПрежняяДолжность     = ВыборкаПоРаботники.ПрежняяДолжность;
			
			// по прежнему месту работы освободим занимаемые ранее ставки
			Движение = Движения[ИмяРегистра].Добавить();
			
			// Свойства
			Движение.Период                 = ВыборкаПоРаботники.ДатаНачала;
			Движение.ВидДвижения			= ВидДвиженияНакопления.Расход;
			
			// Измерения
			Движение.Подразделение	= ПрежнееПодразделение;
			Движение.Должность              = ПрежняяДолжность;
			
			// Ресурсы
			Движение.Количество      = ПрежняяСтавка; 
			
			// по новому месту работы займем указанные ставки
			Движение = Движения[ИмяРегистра].Добавить();
			
			// Свойства
			Движение.Период                = ВыборкаПоРаботники.ДатаНачала;
			Движение.ВидДвижения		   = ВидДвиженияНакопления.Приход;

			
			// Измерения
			Движение.Подразделение		= ВыборкаПоРаботники.НовоеПодразделение;
			Движение.Должность                  = ВыборкаПоРаботники.НоваяДолжность;
			
			// Ресурсы
			Движение.Количество      = ВыборкаПоРаботники.ЗанимаемыхСтавок; 
			
			Если ЗначениеЗаполнено(ВыборкаПоРаботники.ДатаОкончания)
				и Не ВыборкаПоРаботники.НапомнитьПоЗавершении Тогда
				
				// по прежнему месту работы займем временно освобожденные ставки
				Движение = Движения[ИмяРегистра].Добавить();
				
				// Свойства
				Движение.Период                = ВыборкаПоРаботники.ДатаОкончания + мДлинаСуток;
				Движение.ВидДвижения		   = ВидДвиженияНакопления.Приход;
					
				// Измерения
				Движение.Подразделение	= ПрежнееПодразделение;
				Движение.Должность              = ПрежняяДолжность;
				
				// Ресурсы
				Движение.Количество      = ПрежняяСтавка; 
				
				// по новому месту работы освободим временно занимавшиеся ставки
				Движение = Движения[ИмяРегистра].Добавить();
				
				// Свойства
				Движение.Период                = ВыборкаПоРаботники.ДатаОкончания + мДлинаСуток;
				Движение.ВидДвижения		   = ВидДвиженияНакопления.Расход;
				
				// Измерения
				Движение.Подразделение		   = ВыборкаПоРаботники.НовоеПодразделение;
				Движение.Должность             = ВыборкаПоРаботники.НоваяДолжность;
				
				// Ресурсы
				Движение.Количество      = ВыборкаПоРаботники.ЗанимаемыхСтавок; 
				
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли; 	  
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамНакопления()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	//структура, содержащая имена регистров накопления по которым надо проводить документ
	Перем СтруктураПроведенияПоРегистрамНакопления;

	//структура, содержащая имена регистров сведений по которым надо проводить документ
	Перем СтруктураПроведенияПоРегистрамСведений;
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);	

	СоответствиеВалютныеСпособыРасчета = ПроведениеРасчетов.ПолучитьСоответствиеСпособовРасчетаТребующихВалюту();
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Режим);

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();

	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);

		// Движения стоит добавлять, если в проведении еще не отказано (отказ = ложь)
		Если НЕ Отказ Тогда
			
			// Создадим и заполним структуры, содержащие имена регистров, по которым в зависимости от типа учета
			// проводится документ. В дальнейшем будем считать, что если для регистра не создан ключ в структуре,
			// то проводить по нему не надо.
			ЗаполнитьСтруктуруПроведенияПоРегистрамНакопления(СтруктураПроведенияПоРегистрамНакопления);
			ЗаполнитьСтруктуруПроведенияПоРегистрамСведений(СтруктураПроведенияПоРегистрамСведений);
			
			// получим реквизиты табличной части
			РезультатЗапросаПоРаботники = СформироватьЗапросПоРаботники(Режим);
			ВыборкаПоРаботники = РезультатЗапросаПоРаботники.Выбрать();

			Пока ВыборкаПоРаботники.Следующий() Цикл 

				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиРаботника(ВыборкаПоРаботники, Отказ, Заголовок);
				
				Если НЕ Отказ Тогда

					// Заполним записи в наборах записей регистров
					ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента,ВыборкаПоРаботники, СтруктураПроведенияПоРегистрамНакопления);
					ДобавитьСтрокуВДвиженияПоРегистрамСведений(ВыборкаПоШапкеДокумента, ВыборкаПоРаботники, СтруктураПроведенияПоРегистрамСведений);
					
				КонецЕсли;

			КонецЦикла;

		КонецЕсли;

	КонецЕсли;

	КадровоеПеремещениеПереопределяемый.ДобавитьДополнительныеДвижения(ЭтотОбъект, Отказ, Заголовок);

	ОбработкаКомментариев.ПоказатьСообщения();
	
КонецПроцедуры // ОбработкаПроведения()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(Работники);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(Работники);
	
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(Основание)
	
	ТипОснования = ТипЗнч(Основание);
	Если ТипОснования = Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда	
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СотрудникиОрганизаций.Ссылка КАК Сотрудник,
		|	СотрудникиОрганизаций.Физлицо,
		|	&ДатаНачала КАК ДатаНачала,
		|	Работники.Подразделение КАК НовоеПодразделение,
		|	Работники.Должность КАК НоваяДолжность,
		|	Работники.ЗанимаемыхСтавок,
		|	Работники.ГрафикРаботы
		|ИЗ
		|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Работники.СрезПоследних(&ДатаНачала, ) КАК Работники
		|		ПО СотрудникиОрганизаций.Физлицо = Работники.ФизЛицо
		|ГДЕ
		|	СотрудникиОрганизаций.Ссылка = &Сотрудник";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("Сотрудник",	Основание);
		Запрос.УстановитьПараметр("ДатаНачала",	ОбщегоНазначения.ПолучитьРабочуюДату());
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			НоваяСтрока = Работники.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			ДобавитьНачисленияПоСтроке(НоваяСтрока);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

мДлинаСуток = 86400;

мСписокНедоступныхРасчетов = Новый СписокЗначений;
мСписокНедоступныхРасчетов.Добавить(ПланыВидовРасчета.УправленческиеНачисления.НачисленоПоБухгалтерии);
мСписокНедоступныхРасчетов.Добавить(ПланыВидовРасчета.УправленческиеНачисления.НачисленоПоБухгалтерииСдельно);
