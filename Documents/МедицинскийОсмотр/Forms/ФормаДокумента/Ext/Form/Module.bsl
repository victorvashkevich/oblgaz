
///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Формирует структуру параметров для формы подбора
//
// Возвращаемое значение:
// Структура
//
&НаКлиенте 
Функция ПолучитьПараметрыВызоваФормыПодбораСотрудника(ИмяТаблицы, ИмяПоля)
	
	Сотрудники = Новый Соответствие;
	Для Каждого Строка Из Объект[ИмяТаблицы] Цикл
		Сотрудники.Вставить(Строка[ИмяПоля]);
	КонецЦикла;	
	
	Возврат СоздатьПараметрыВызоваФормыПодбораСотрудника(Объект.Организация, Сотрудники)
	
КонецФункции // ПолучитьПараметрыВызоваФормыПодбораСотрудника()

// Формирует структуру параметров для формы подбора
//
// Возвращаемое значение:
// Структура
//
&НаСервереБезКонтекста 
Функция СоздатьПараметрыВызоваФормыПодбораСотрудника(Организация, Сотрудники)
	
	ПараметрыВызова = Новый Структура;
	
	ПараметрыВызова.Вставить("Организация", Организация); 
	ПараметрыВызова.Вставить("АдресВыбранныхСотрудниковВХранилище", ПоместитьВоВременноеХранилище(Сотрудники)); 
	
	Возврат ПараметрыВызова
	
КонецФункции // СоздатьПараметрыВызоваФормыПодбораСотрудника()

&НаСервере
Функция ПолучитьНовыеСотрудники(Сотрудники, ТЧ , имяПоля = "Сотрудник", ПоискПоФизЛицу = Ложь)
	
	НовыеСотрудники = Новый Массив();
	
	Для Каждого Сотрудник Из Сотрудники Цикл
		Если ПоискПоФизЛицу Тогда
			
			Если ТипЗнч(Сотрудник) = ТИП("СправочникСсылка.СотрудникиОрганизаций") И ТЧ.НайтиСтроки(Новый Структура(ИмяПоля, Сотрудник.ФизЛицо)).Количество() = 0 Тогда
				НовыеСотрудники.Добавить(Сотрудник);
			КонецЕсли;	
		Иначе
			Если ТЧ.НайтиСтроки(Новый Структура(ИмяПоля, Сотрудник)).Количество() = 0 Тогда
				НовыеСотрудники.Добавить(Сотрудник);
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	

	Возврат НовыеСотрудники;
	
КонецФункции

// Осуществляет добавление работников и их показателей после завершения подбора
//
&НаСервере
Процедура ЗавершитьПодборСотрудниковДляРаботники(АдресВременногоХранилища)
	
	МассивСотрудников = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	
	НовыеСотрудники = ПолучитьНовыеСотрудники(МассивСотрудников, Объект.Работники);
	
	Если НовыеСотрудники.Количество() > 0 Тогда
		Документ = РеквизитФормыВЗначение("Объект");
		Для Каждого Сотрудник Из НовыеСотрудники Цикл
			НоваяСтрока = Документ.Работники.Добавить();
			НоваяСтрока.Сотрудник = Сотрудник;
			НоваяСтрока.ФизЛицо = Сотрудник.ФизЛицо;
			НоваяСтрока.РезультатОсмотра = Годен;
			НоваяСтрока.ДатаСледующегоОсмотра = ДатаСледующегоОсмотраПоУмолчанию;
			НоваяСтрока.СуммаРасходов = СуммаРасходовПоУмолчанию; 	
		КонецЦикла;
		ЗначениеВРеквизитФормы(Документ, "Объект");
	КонецЕсли;
	
КонецПроцедуры // ЗавершитьПодборСотрудниковДляПострадавшие()

///////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УстановитьЗначенияПеременныхКлиента()
	
	ЗначенияРеквизитов = ОбщегоНазначенияЗК.ПолучитьЗначенияРеквизитов(Объект.ВидМедосмотра, "СрокДействия, Периодичность, СуммаРасходов");
	СуммаРасходовПоУмолчанию = ЗначенияРеквизитов.СуммаРасходов;
	КоличествоСекундВПериоде = 0;
	Если ЗначенияРеквизитов.Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.День") Тогда
		КоличествоСекундВПериоде = 86400;
		ДатаСледующегоОсмотраПоУмолчанию = Объект.Дата + ЗначенияРеквизитов.СрокДействия * КоличествоСекундВПериоде;
	ИначеЕсли ЗначенияРеквизитов.Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Неделя") Тогда
		КоличествоСекундВПериоде = 604800;
		ДатаСледующегоОсмотраПоУмолчанию = Объект.Дата + ЗначенияРеквизитов.СрокДействия * КоличествоСекундВПериоде;
	ИначеЕсли ЗначенияРеквизитов.Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Месяц") Тогда
		ДатаСледующегоОсмотраПоУмолчанию = ДобавитьМесяц(Объект.Дата, ЗначенияРеквизитов.СрокДействия);
	ИначеЕсли ЗначенияРеквизитов.Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал") Тогда
		ДатаСледующегоОсмотраПоУмолчанию = ДобавитьМесяц(Объект.Дата, ЗначенияРеквизитов.СрокДействия*3);
	ИначеЕсли ЗначенияРеквизитов.Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Год") Тогда
		ДатаСледующегоОсмотраПоУмолчанию = ДобавитьМесяц(Объект.Дата, ЗначенияРеквизитов.СрокДействия*12);
	ИначеЕсли ЗначенияРеквизитов.Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Декада") Тогда
		КоличествоСекундВПериоде = 864000;
		ДатаСледующегоОсмотраПоУмолчанию = Объект.Дата + ЗначенияРеквизитов.СрокДействия * КоличествоСекундВПериоде;
	ИначеЕсли ЗначенияРеквизитов.Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Полугодие") Тогда
		ДатаСледующегоОсмотраПоУмолчанию = ДобавитьМесяц(Объект.Дата, ЗначенияРеквизитов.СрокДействия*6);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСотрудниковПоВидуМедосмотраНаСервере()
		
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ЗаполнитьСотрудниковПоВидуМедосмотра();
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
КонецПроцедуры // ЗаполнитьСотрудниковПоВидуМедосмотра

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Если ДокументОбъект.ЭтоНовый() Тогда
		ЗаполнениеДокументовПереопределяемый.ЗаполнитьШапкуДокумента(ДокументОбъект, глЗначениеПеременной("глТекущийПользователь"));
		Если Параметры.ЗначенияЗаполнения.Свойство("Организация") Тогда
			Если ЗначениеЗаполнено(Параметры.ЗначенияЗаполнения.Организация) Тогда
				ДокументОбъект.Организация = Параметры.ЗначенияЗаполнения.Организация;
			КонецЕсли;
		КонецЕсли;
		ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	Иначе
		УстановитьЗначенияПеременныхКлиента();
	КонецЕсли;
	
	// Обработчик подсистемы "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	Годен = Перечисления.ВидыРезультатовМедицинскогоОсмотра.Годен;
	НЕГоден = Перечисления.ВидыРезультатовМедицинскогоОсмотра.НЕГоден;
	
	Элементы.РаботникиСуммаРасходов.Заголовок = Элементы.РаботникиСуммаРасходов.Заголовок + " (" + Константы.ВалютаУправленческогоУчета.Получить().Наименование + ")";
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ИзмененВидМедосмотра" И Источник = Объект.ВидМедосмотра Тогда
		УстановитьЗначенияПеременныхКлиента();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ИзмененыМедосмотры", ВыгрузитьКолонкуРаботникиНаСервере());
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД

&НаКлиенте
Процедура ЗаполнитьПоВидуОсмотра(Команда)
	
	Если Объект.Работники.Количество() > 0 Тогда
		Если Вопрос("Табличная часть будет очищена. Продолжить?", РежимДиалогаВопрос.ОКОтмена,, КодВозвратаДиалога.ОК) = КодВозвратаДиалога.ОК Тогда
			Объект.Работники.Очистить();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьСотрудниковПоВидуМедосмотраНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура РаботникиПодбор(Команда)
	
	Результат = ОткрытьФормуМодально("Справочник.СотрудникиОрганизаций.Форма.ФормаПодбора", ПолучитьПараметрыВызоваФормыПодбораСотрудника("Работники" , "Сотрудник"), ЭтаФорма);
	
	Если Результат <> Неопределено Тогда
		ЗавершитьПодборСотрудниковДляРаботники(Результат);
	КонецЕсли;
 
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура РаботникиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если Объект.Работники.НайтиСтроки(Новый Структура("Сотрудник", ВыбранноеЗначение)).Количество() = 0 Тогда
			НоваяСтрока = Объект.Работники.Добавить();
			НоваяСтрока.Сотрудник = ВыбранноеЗначение;
			НоваяСтрока.ФизЛицо = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РаботникиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Не Копирование Тогда
		ЗаполняемаяСтрока = Элементы.Работники.ТекущиеДанные;
		Если ЗаполняемаяСтрока <> Неопределено Тогда	
			ЗаполняемаяСтрока.РезультатОсмотра = Годен;
			ЗаполняемаяСтрока.ДатаСледующегоОсмотра = ДатаСледующегоОсмотраПоУмолчанию;
			ЗаполняемаяСтрока.СуммаРасходов = СуммаРасходовПоУмолчанию; 	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидМедосмотраПриИзменении(Элемент)
	
	УстановитьЗначенияПеременныхКлиента();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	УстановитьЗначенияПеременныхКлиента();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Функция ВыгрузитьКолонкуРаботникиНаСервере()
	
	Возврат ОбщегоНазначения.ВыгрузитьКолонку(Объект.Работники, "Сотрудник");
	
КонецФункции
