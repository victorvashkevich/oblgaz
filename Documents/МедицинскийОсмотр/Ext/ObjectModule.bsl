
Процедура ПроверитьДублиСотрудников(Отказ)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Медосмотр", Ссылка);
	Запрос.Текст = "ВЫБРАТЬ
	|	КОЛИЧЕСТВО(МедицинскийОсмотрРаботники.Сотрудник) КАК КоличествоСотрудников,
	|	МедицинскийОсмотрРаботники.Сотрудник.Наименование КАК Сотрудник
	|ИЗ
	|	Документ.МедицинскийОсмотр.Работники КАК МедицинскийОсмотрРаботники
	|ГДЕ
	|	МедицинскийОсмотрРаботники.Ссылка = &Медосмотр
	|
	|СГРУППИРОВАТЬ ПО
	|	МедицинскийОсмотрРаботники.Сотрудник";
	Выборка = Запрос.Выполнить().Выбрать();
	СтрокаСообщения = "";
	КоличествоСтрок = 0;
	Пока Выборка.Следующий() Цикл
		Если Выборка.КоличествоСотрудников > 1 Тогда
			  СтрокаСообщения = СтрокаСообщения + Символы.ПС + Выборка.Сотрудник;
			  КоличествоСтрок = КоличествоСтрок + 1;
		КонецЕсли;
	КонецЦикла;
	Если КоличествоСтрок > 1 Тогда
		ОбщегоНазначенияЗК.СообщитьОбОшибке("В документе несколько раз указаны сотрудники: " + СтрокаСообщения, Отказ);
	ИначеЕсли КоличествоСтрок > 0 Тогда
		ОбщегоНазначенияЗК.СообщитьОбОшибке("В документе несколько раз указан сотрудник: " + СтрокаСообщения, Отказ);
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьСотрудниковПоВидуМедосмотра() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РаботникиОрганизаций.Сотрудник,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И РаботникиОрганизаций.ПериодЗавершения < &ДатаСреза
	|			ТОГДА РаботникиОрганизаций.ДолжностьЗавершения
	|		ИНАЧЕ РаботникиОрганизаций.Должность
	|	КОНЕЦ КАК Должность
	|ПОМЕСТИТЬ РаботникиОрганизации
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаСреза, Организация = &Организация) КАК РаботникиОрганизаций
	|ГДЕ
	|	РаботникиОрганизаций.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РаботникиОрганизаций.Сотрудник,
	|	Должность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РезультатыПроведенныхМедосмотров.Регистратор,
	|	РезультатыПроведенныхМедосмотров.Сотрудник,
	|	РезультатыПроведенныхМедосмотров.ВидМедосмотра,
	|	РезультатыПроведенныхМедосмотров.ДатаСледующегоОсмотра
	|ПОМЕСТИТЬ РезультатыПроведенныхМедосмотров
	|ИЗ
	|	РегистрСведений.РезультатыМедицинскихОсмотров.СрезПоследних(
	|			&ДатаСреза,
	|			Организация = &Организация
	|				И ВидМедосмотра = &ВидОсмотра) КАК РезультатыПроведенныхМедосмотров
	|ГДЕ
	|	РезультатыПроведенныхМедосмотров.Регистратор <> &Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РезультатыПроведенныхМедосмотров.Сотрудник,
	|	РезультатыПроведенныхМедосмотров.ВидМедосмотра
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РезультатыОсмотра.Сотрудник,
	|	РезультатыОсмотра.ФизЛицо,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРезультатовМедицинскогоОсмотра.Годен) КАК РезультатОсмотра,
	|	ВЫБОР
	|		КОГДА РезультатыОсмотра.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)
	|			ТОГДА ДОБАВИТЬКДАТЕ(&ДатаСреза, ГОД, РезультатыОсмотра.СрокДействия)
	|		КОГДА РезультатыОсмотра.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Полугодие)
	|			ТОГДА ДОБАВИТЬКДАТЕ(&ДатаСреза, ПОЛУГОДИЕ, РезультатыОсмотра.СрокДействия)
	|		КОГДА РезультатыОсмотра.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал)
	|			ТОГДА ДОБАВИТЬКДАТЕ(&ДатаСреза, КВАРТАЛ, РезультатыОсмотра.СрокДействия)
	|		КОГДА РезультатыОсмотра.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
	|			ТОГДА ДОБАВИТЬКДАТЕ(&ДатаСреза, МЕСЯЦ, РезультатыОсмотра.СрокДействия)
	|		КОГДА РезультатыОсмотра.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Декада)
	|			ТОГДА ДОБАВИТЬКДАТЕ(&ДатаСреза, ДЕКАДА, РезультатыОсмотра.СрокДействия)
	|		КОГДА РезультатыОсмотра.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	|			ТОГДА ДОБАВИТЬКДАТЕ(&ДатаСреза, НЕДЕЛЯ, РезультатыОсмотра.СрокДействия)
	|		КОГДА РезультатыОсмотра.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.День)
	|			ТОГДА ДОБАВИТЬКДАТЕ(&ДатаСреза, ДЕНЬ, РезультатыОсмотра.СрокДействия)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДатаСледующегоОсмотра,
	|	РезультатыОсмотра.СуммаРасходов,
	|	РезультатыОсмотра.СотрудникНаименование
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		РаботникиОрганизации.Сотрудник КАК Сотрудник,
	|		РаботникиОрганизации.Сотрудник.Физлицо КАК ФизЛицо,
	|		ВидыМедосмотров.Ссылка.СуммаРасходов КАК СуммаРасходов,
	|		ВидыМедосмотров.Ссылка.Периодичность КАК Периодичность,
	|		ВидыМедосмотров.Ссылка.СрокДействия КАК СрокДействия,
	|		РаботникиОрганизации.Сотрудник.Наименование КАК СотрудникНаименование
	|	ИЗ
	|		РаботникиОрганизации КАК РаботникиОрганизации
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыМедицинскихОсмотров.КонтролируемыеДолжности КАК ВидыМедосмотров
	|			ПО (ВидыМедосмотров.Ссылка = &ВидОсмотра)
	|				И РаботникиОрганизации.Должность = ВидыМедосмотров.Должность
	|			ЛЕВОЕ СОЕДИНЕНИЕ РезультатыПроведенныхМедосмотров КАК ПроведенныеМедосмотры
	|			ПО РаботникиОрганизации.Сотрудник = ПроведенныеМедосмотры.Сотрудник
	|				И (ПроведенныеМедосмотры.ДатаСледующегоОсмотра > &ДатаСреза)
	|	ГДЕ
	|		ПроведенныеМедосмотры.Сотрудник ЕСТЬ NULL 
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		РезультатыМедосмотров.Сотрудник,
	|		РезультатыМедосмотров.Сотрудник.Физлицо,
	|		РезультатыМедосмотров.ВидМедосмотра.СуммаРасходов,
	|		РезультатыМедосмотров.ВидМедосмотра.Периодичность,
	|		РезультатыМедосмотров.ВидМедосмотра.СрокДействия,
	|		РезультатыМедосмотров.Сотрудник.Наименование
	|	ИЗ
	|		РезультатыПроведенныхМедосмотров КАК РезультатыМедосмотров
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РаботникиОрганизации КАК РаботникиОрганизации
	|			ПО (РаботникиОрганизации.Сотрудник = РезультатыМедосмотров.Сотрудник)
	|				И (РезультатыМедосмотров.ДатаСледующегоОсмотра <= &ДатаСреза)) КАК РезультатыОсмотра
	|
	|УПОРЯДОЧИТЬ ПО
	|	РезультатыОсмотра.СотрудникНаименование";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация",	Организация);
	Запрос.УстановитьПараметр("Регистратор",	Ссылка);
	Запрос.УстановитьПараметр("ДатаСреза",		Дата);
	Запрос.УстановитьПараметр("ВидОсмотра",		ВидМедосмотра);
	
	Работники.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры // ЗаполнитьСотрудниковПоВидуМедосмотра

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Для Каждого ПараметрЗаполнения Из ДанныеЗаполнения Цикл
			Если ЭтотОбъект.Метаданные().Реквизиты.Найти(ПараметрЗаполнения.Ключ) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ЭтотОбъект[ПараметрЗаполнения.Ключ]) Тогда
				ЭтотОбъект[ПараметрЗаполнения.Ключ] = ПараметрЗаполнения.Значение;
			КонецЕсли;
		КонецЦикла;
		Если ДанныеЗаполнения.Свойство("Работники") Тогда
			Для Каждого СтрокаЗначенийЗаполнения Из ДанныеЗаполнения.Работники Цикл
				ЗаполнитьЗначенияСвойств(Работники.Добавить(), СтрокаЗначенийЗаполнения);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	
	ПроверитьДублиСотрудников(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Движения.РасходыНаСотрудниковОрганизации.Записывать = Истина;
	Движения.РасходыНаСотрудниковОрганизации.Очистить();
	
	// регистр РезультатыМедицинскихОсмотров
	Движения.РезультатыМедицинскихОсмотров.Записывать = Истина;
	Движения.РезультатыМедицинскихОсмотров.Очистить();

	Для Каждого ТекСтрокаРаботники Из Работники Цикл
		
		Если ТекСтрокаРаботники.СуммаРасходов > 0 Тогда
			Движение = Движения.РасходыНаСотрудниковОрганизации.Добавить();
			Движение.Период = Дата;
			Движение.Организация = Организация;
			Движение.КатегорияРасходов = Перечисления.КатегорииРасходовНаПерсонал.МедицинскиеОсмотры;
			Движение.Сотрудник = ТекСтрокаРаботники.Сотрудник;
			Движение.ФизЛицо = ТекСтрокаРаботники.ФизЛицо;
			Движение.СуммаРасходов = ТекСтрокаРаботники.СуммаРасходов;
		КонецЕсли;
		
		Движение2 = Движения.РезультатыМедицинскихОсмотров.Добавить();
		Движение2.Период = Дата;
		Движение2.Организация = Организация;
		Движение2.Сотрудник = ТекСтрокаРаботники.Сотрудник;
		Движение2.ВидМедосмотра = ВидМедосмотра;
		Движение2.Результат = ТекСтрокаРаботники.РезультатОсмотра;
		Движение2.Описание = ТекСтрокаРаботники.ОписаниеРезультата;
		Движение2.ДатаСледующегоОсмотра = ТекСтрокаРаботники.ДатаСледующегоОсмотра;
	КонецЦикла;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(Работники);
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналомПереопределяемый.ЗаполнитьКраткийСоставДокумента(МассивТЧ);
	
	ОбщегоНазначенияЗКПереопределяемый.ПроверитьНомерДокументаПередЗаписью(ЭтотОбъект);
	ОбщегоНазначенияЗКПереопределяемый.СброситьНомерДокументаПередЗаписьюПриИзмененииОрганизации(ЭтотОбъект);
	
КонецПроцедуры

