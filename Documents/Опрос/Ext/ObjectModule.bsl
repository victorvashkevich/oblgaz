////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Если ТолстыйКлиентОбычноеПриложение Тогда

Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	
	
	Если ИмяМакета = "Опрос" Тогда
		// Получить экземпляр документа на печать
		ТабДокумент = ПечатьОпрос();
		Возврат РаботаСДиалогами.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, РаботаСДиалогами.СформироватьЗаголовокДокумента(ЭтотОбъект,Метаданные().Синоним));
		
	ИначеЕсли ИмяМакета = "HTML" Тогда
		
		ИмяФайла     = "opros"+Число(Номер)+".xml";
		Если ТиповаяАнкета.Пустая() Тогда
			Сообщить("Не выбрана анкета!");
			Возврат Неопределено;
		КонецЕсли;
		Анкетирование.СформироватьВложение(ТиповаяАнкета, ОпрашиваемоеЛицо, "", , Ссылка, ИмяФайла, Истина);
		ЗапуститьПриложение(КаталогВременныхФайлов() + ИмяФайла);
		
	ИначеЕсли ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = РаботаСДиалогами.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		Возврат РаботаСДиалогами.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, РаботаСДиалогами.СформироватьЗаголовокДокумента(ЭтотОбъект,Метаданные().Синоним));
		
	КонецЕсли;
	
КонецФункции

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//	Структура, каждая строка которой соответствует одному из вариантов печати
//
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураМакетов = Новый Структура;
	СтруктураМакетов.Вставить("Опрос",	"Печать");
	
	Возврат СтруктураМакетов;
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Назначает тип ответа в зависимости от вопроса.
//
// Параметры:
//	Вопрос - Собственно, сам вопрос
//
// Возвращаемое значение:
//	нет
//
Процедура НазначитьТипОтвета(Вопрос) Экспорт
	
	Вопрос.ТиповойОтвет = Вопрос.Вопрос.ТипЗначения.ПривестиЗначение();
	
КонецПроцедуры // НазначитьТипОтвета()

// Загружает вопросы по образцу указанной анкеты.
//
// Параметры: 
//	ОбразецЗаполнения	- анкета-образец
//
// Возвращаемое значение:
//	нет
//
Процедура ЗаполнитьВопросыАнкеты(ОбразецЗаполнения) Экспорт
	
	Вопросы.Загрузить(ОбразецЗаполнения.ВопросыАнкеты.Выгрузить());
	
	Для Каждого Вопрос Из Вопросы Цикл
		
		Если НЕ ЗначениеЗаполнено(Вопрос.ТиповойОтвет) Тогда
			НазначитьТипОтвета(Вопрос);
		Конецесли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПроверитьОбязательноЗаполняемыеОтветы(ВыводитьСообщенияОбОшибках = Истина, Вопрос = Неопределено, НеПроверкаНаУсловноНеЗапольнять = Истина) Экспорт
	
	ЕстьОшибки = Ложь;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Опрос",	Ссылка);
	Запрос.УстановитьПараметр("Анкета",	ТиповаяАнкета);
	Запрос.УстановитьПараметр("Вопрос",	Вопрос);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ТиповыеАнкетыВопросыАнкеты.Раздел, ЗНАЧЕНИЕ(Справочник.РазделыАнкеты.ПустаяСсылка)) КАК Раздел,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос КАК Вопрос,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос.Наименование,
	|	ТиповыеАнкетыВопросыАнкеты.Обязательный КАК Обязательный,
	|	ТиповыеАнкетыВопросыАнкеты.ВопросУсловия КАК ВопросУсловия,
	|	ТиповыеАнкетыВопросыАнкеты.УсловиеОтвета КАК УсловиеОтвета,
	|	ТиповыеАнкетыВопросыАнкеты.ОтветУсловия КАК ОтветУсловия,
	|	ТиповыеАнкетыСписокЗначенийУсловия.ЗначениеСписка КАК ЗначениеСписка
	|ИЗ
	|	Справочник.ТиповыеАнкеты.ВопросыАнкеты КАК ТиповыеАнкетыВопросыАнкеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТиповыеАнкеты.СписокЗначенийУсловия КАК ТиповыеАнкетыСписокЗначенийУсловия
	|		ПО ТиповыеАнкетыВопросыАнкеты.Ссылка = ТиповыеАнкетыСписокЗначенийУсловия.Ссылка
	|			И ТиповыеАнкетыВопросыАнкеты.Вопрос = ТиповыеАнкетыСписокЗначенийУсловия.ВопросВладелец
	|ГДЕ
	|	ТиповыеАнкетыВопросыАнкеты.Ссылка = &Анкета
	|	И (ТиповыеАнкетыВопросыАнкеты.Обязательный = ЗНАЧЕНИЕ(Перечисление.ОбязательностьЗаполненияОтветаНаВопрос.ОбязателенКЗаполнению)
	|			ИЛИ ТиповыеАнкетыВопросыАнкеты.Обязательный = ЗНАЧЕНИЕ(Перечисление.ОбязательностьЗаполненияОтветаНаВопрос.УсловноОбязателенКЗаполнению)
	|			ИЛИ ТиповыеАнкетыВопросыАнкеты.Обязательный = ЗНАЧЕНИЕ(Перечисление.ОбязательностьЗаполненияОтветаНаВопрос.УсловноНеЗаполнять))
	|	" + ?(Вопрос = Неопределено, "", "И ТиповыеАнкетыВопросыАнкеты.Вопрос = &Вопрос");
	ОбязательныеВопросы = Запрос.Выполнить().Выгрузить();
	
	Если ВыводитьСообщенияОбОшибках Тогда
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.УдалитьСообщения();
	КонецЕсли;
	
	Для Каждого ОтветНаВопрос Из Вопросы Цикл
		ТиповойОтвет	= ОтветНаВопрос.ТиповойОтвет;
		
		// если обработка персональных данных не разрешена, нельзя сохранять результаты опроса
		Если ОтветНаВопрос.Вопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.РазрешитьОбработкуПерсональныхДанных И ТиповойОтвет = Ложь Тогда
			Если ВыводитьСообщенияОбОшибках Тогда
				ОбработкаКомментариев.ДобавитьСообщение("Разрешение на обработку персональных данных не получено, результаты опроса не будут сохранены", Перечисления.ВидыСообщений.Ошибка);
			КонецЕсли;
			ЕстьОшибки = Истина;
			Прервать;
		КонецЕсли;
		
		МассивВопросов = ОбязательныеВопросы.НайтиСтроки(Новый Структура("Раздел, Вопрос",	ОтветНаВопрос.Раздел, ОтветНаВопрос.Вопрос));
		Если МассивВопросов.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		Вопрос = МассивВопросов[0];
		
		Если Не Вопрос.ВопросУсловия.Пустая() Тогда
			ТиповойОтветУсловияВопроса	= Вопросы.НайтиСтроки(Новый Структура("Раздел, Вопрос",	ОтветНаВопрос.Раздел, Вопрос.ВопросУсловия))[0].ТиповойОтвет;
		Иначе
			ТиповойОтветУсловияВопроса	= Неопределено;
		КонецЕсли;
		
		Если Вопрос.Обязательный = Перечисления.ОбязательностьЗаполненияОтветаНаВопрос.ОбязателенКЗаполнению Тогда
			Если УдовлетворяетУсловию(Вопрос.Вопрос, ТиповойОтвет, Вопрос.Обязательный, НеПроверкаНаУсловноНеЗапольнять) Тогда
				Если ВыводитьСообщенияОбОшибках Тогда
					ОбработкаКомментариев.ДобавитьСообщение("Ответ на вопрос """ + Вопрос.ВопросНаименование + """ должен быть обязательно заполнен", Перечисления.ВидыСообщений.Ошибка);
				КонецЕсли;
				ЕстьОшибки = Истина;
			КонецЕсли;
			
		Иначе
			Если Вопрос.Обязательный = Перечисления.ОбязательностьЗаполненияОтветаНаВопрос.ОбязателенКЗаполнению
				ИЛИ Вопрос.Обязательный = Перечисления.ОбязательностьЗаполненияОтветаНаВопрос.УсловноОбязателенКЗаполнению Тогда
				ТекстОбязательности =  """ должен быть обязательно заполнен, если ";
				
			Иначе
				ТекстОбязательности =  """ не должен заполнятся, если ";
				
			КонецЕсли;
			
			// тут условно-обязательные вопросы
			Если Вопрос.УсловиеОтвета = Перечисления.ВидыУсловийОбязательныхОтветов.ПустоеЗначение Тогда
				Если УдовлетворяетУсловию(Вопрос.Вопрос, ТиповойОтвет, Вопрос.Обязательный, НеПроверкаНаУсловноНеЗапольнять) Тогда
					Если НЕ ЗначениеЗаполнено(ТиповойОтветУсловияВопроса) Тогда
						Если ВыводитьСообщенияОбОшибках Тогда
							ОбработкаКомментариев.ДобавитьСообщение("Ответ на вопрос """ + Вопрос.ВопросНаименование + ТекстОбязательности + "не указан ответ на вопрос """+ Вопрос.ВопросУсловия + """", Перечисления.ВидыСообщений.Ошибка);
						КонецЕсли;
						ЕстьОшибки = Истина;
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли Вопрос.УсловиеОтвета = Перечисления.ВидыУсловийОбязательныхОтветов.ЛюбоеЗначение Тогда
				Если УдовлетворяетУсловию(Вопрос.Вопрос, ТиповойОтвет, Вопрос.Обязательный, НеПроверкаНаУсловноНеЗапольнять) Тогда
					Если ЗначениеЗаполнено(ТиповойОтветУсловияВопроса) Тогда
						Если ВыводитьСообщенияОбОшибках Тогда
							ОбработкаКомментариев.ДобавитьСообщение("Ответ на вопрос """+Вопрос.ВопросНаименование + ТекстОбязательности + "указан любой ответ на вопрос """+ Вопрос.ВопросУсловия + """", Перечисления.ВидыСообщений.Ошибка);
						КонецЕсли;
						ЕстьОшибки = Истина;
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли Вопрос.УсловиеОтвета = Перечисления.ВидыУсловийОбязательныхОтветов.Равно Тогда
				Если УдовлетворяетУсловию(Вопрос.Вопрос, ТиповойОтвет, Вопрос.Обязательный, НеПроверкаНаУсловноНеЗапольнять) Тогда
					Если ТиповойОтветУсловияВопроса = Вопрос.ОтветУсловия Тогда
						Если ВыводитьСообщенияОбОшибках Тогда
							ОбработкаКомментариев.ДобавитьСообщение("Ответ на вопрос """+Вопрос.Вопрос + ТекстОбязательности +"указан ответ " + Вопрос.ОтветУсловия + " на вопрос """+ Вопрос.ВопросУсловия + """", Перечисления.ВидыСообщений.Ошибка);
						КонецЕсли;
						ЕстьОшибки = Истина;
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли Вопрос.УсловиеОтвета = Перечисления.ВидыУсловийОбязательныхОтветов.НеРавно Тогда
				Если УдовлетворяетУсловию(Вопрос.Вопрос, ТиповойОтвет, Вопрос.Обязательный, НеПроверкаНаУсловноНеЗапольнять) Тогда
					Если ТиповойОтветУсловияВопроса <> Вопрос.ОтветУсловия Тогда
						Если ВыводитьСообщенияОбОшибках Тогда
							ОбработкаКомментариев.ДобавитьСообщение("Ответ на вопрос """+Вопрос.Вопрос + ТекстОбязательности +"указан любой ответ, кроме " + Вопрос.ОтветУсловия + " на вопрос """+ Вопрос.ВопросУсловия + """", Перечисления.ВидыСообщений.Ошибка);
						КонецЕсли;
						ЕстьОшибки = Истина;
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли Вопрос.УсловиеОтвета = Перечисления.ВидыУсловийОбязательныхОтветов.Больше Тогда
				Если УдовлетворяетУсловию(Вопрос.Вопрос, ТиповойОтвет, Вопрос.Обязательный, НеПроверкаНаУсловноНеЗапольнять) Тогда
					Если ТиповойОтветУсловияВопроса > Вопрос.ОтветУсловия Тогда
						Если ВыводитьСообщенияОбОшибках Тогда
							ОбработкаКомментариев.ДобавитьСообщение("Ответ на вопрос """+Вопрос.Вопрос + ТекстОбязательности + "в качестве ответа указано значение больше, чем " + Вопрос.ОтветУсловия + " на вопрос """+ Вопрос.ВопросУсловия + """", Перечисления.ВидыСообщений.Ошибка);
						КонецЕсли;
						ЕстьОшибки = Истина;
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли Вопрос.УсловиеОтвета = Перечисления.ВидыУсловийОбязательныхОтветов.БольшеИлиРавно Тогда
				Если УдовлетворяетУсловию(Вопрос.Вопрос, ТиповойОтвет, Вопрос.Обязательный, НеПроверкаНаУсловноНеЗапольнять) Тогда
					Если ТиповойОтветУсловияВопроса >= Вопрос.ОтветУсловия Тогда
						Если ВыводитьСообщенияОбОшибках Тогда
							ОбработкаКомментариев.ДобавитьСообщение("Ответ на вопрос """+Вопрос.Вопрос + ТекстОбязательности + "в качестве ответа указано значение больше либо равное " + Вопрос.ОтветУсловия + " на вопрос """+ Вопрос.ВопросУсловия + """", Перечисления.ВидыСообщений.Ошибка);
						КонецЕсли;
						ЕстьОшибки = Истина;
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли Вопрос.УсловиеОтвета = Перечисления.ВидыУсловийОбязательныхОтветов.Меньше Тогда
				Если УдовлетворяетУсловию(Вопрос.Вопрос, ТиповойОтвет, Вопрос.Обязательный, НеПроверкаНаУсловноНеЗапольнять) Тогда
					Если ТиповойОтветУсловияВопроса < Вопрос.ОтветУсловия Тогда
						Если ВыводитьСообщенияОбОшибках Тогда
							ОбработкаКомментариев.ДобавитьСообщение("Ответ на вопрос """+Вопрос.Вопрос + ТекстОбязательности + "в качестве ответа указано значение меньше, чем " + Вопрос.ОтветУсловия + " на вопрос """+ Вопрос.ВопросУсловия + """", Перечисления.ВидыСообщений.Ошибка);
						КонецЕсли;
						ЕстьОшибки = Истина;
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли Вопрос.УсловиеОтвета = Перечисления.ВидыУсловийОбязательныхОтветов.МеньшеИлиРавно Тогда
				Если УдовлетворяетУсловию(Вопрос.Вопрос, ТиповойОтвет, Вопрос.Обязательный, НеПроверкаНаУсловноНеЗапольнять) Тогда
					Если ТиповойОтветУсловияВопроса <= Вопрос.ОтветУсловия Тогда
						Если ВыводитьСообщенияОбОшибках Тогда
							ОбработкаКомментариев.ДобавитьСообщение("Ответ на вопрос """ + Вопрос.Вопрос + ТекстОбязательности + "в качестве ответа указано значение меньше либо равное " + Вопрос.ОтветУсловия + " на вопрос """+ Вопрос.ВопросУсловия + """", Перечисления.ВидыСообщений.Ошибка);
						КонецЕсли;
						ЕстьОшибки = Истина;
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли Вопрос.УсловиеОтвета = Перечисления.ВидыУсловийОбязательныхОтветов.ВСписке Тогда
				ЕстьВСписке = Ложь;
				СтрокаЗначенийСписка = "(";
				Если УдовлетворяетУсловию(Вопрос.Вопрос, ТиповойОтвет, Вопрос.Обязательный, НеПроверкаНаУсловноНеЗапольнять) Тогда
					// подготовим список значений
					Для Каждого ВыборкаЗначенийСписка Из МассивВопросов Цикл
						СтрокаЗначенийСписка = "" + СтрокаЗначенийСписка + ВыборкаЗначенийСписка.ЗначениеСписка + " ";
						Если ВыборкаЗначенийСписка.ТиповойОтветУсловияВопроса = ВыборкаЗначенийСписка.ЗначениеСписка Тогда
							ЕстьВСписке = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
					СтрокаЗначенийСписка = СтрокаЗначенийСписка + ")";
					Если ЕстьВСписке Тогда
						Если ВыводитьСообщенияОбОшибках Тогда
							ОбработкаКомментариев.ДобавитьСообщение("Ответ на вопрос """ + Вопрос.Вопрос + ТекстОбязательности +"в качестве ответа указан один из вариантов ответа " + СтрокаЗначенийСписка + " на вопрос """+ Вопрос.ВопросУсловия + """", Перечисления.ВидыСообщений.Ошибка);
						КонецЕсли;
						ЕстьОшибки = Истина;
					Иначе
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли Вопрос.УсловиеОтвета = Перечисления.ВидыУсловийОбязательныхОтветов.НеВСписке Тогда
				ЕстьВСписке = Ложь;
				СтрокаЗначенийСписка = "(";
				Если УдовлетворяетУсловию(Вопрос.Вопрос, ТиповойОтвет, Вопрос.Обязательный, НеПроверкаНаУсловноНеЗапольнять) Тогда
					// подготовим список значений
					Для Каждого ВыборкаЗначенийСписка Из МассивВопросов Цикл
						СтрокаЗначенийСписка = "" + СтрокаЗначенийСписка + ВыборкаЗначенийСписка.ЗначениеСписка + " ";
						Если ВыборкаЗначенийСписка.ТиповойОтветУсловияВопроса = ВыборкаЗначенийСписка.ЗначениеСписка Тогда
							ЕстьВСписке = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
					СтрокаЗначенийСписка = СтрокаЗначенийСписка + ")";
					Если ЕстьВСписке Тогда
						Продолжить;
					Иначе
						Если ВыводитьСообщенияОбОшибках Тогда
							ОбработкаКомментариев.ДобавитьСообщение("Ответ на вопрос """ + Вопрос.Вопрос + """ должен быть обязательно заполнен, если в качестве ответа не указан ни один из вариантов ответа " + СтрокаЗначенийСписка + " на вопрос """+ Вопрос.ВопросУсловия + """", Перечисления.ВидыСообщений.Ошибка);
						КонецЕсли;
						ЕстьОшибки = Истина;
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ВыводитьСообщенияОбОшибках И ЕстьОшибки Тогда
		ОбработкаКомментариев.ПоказатьСообщения();
	КонецЕсли;
	
	Возврат ЕстьОшибки;
	
КонецФункции // ПроверитьОбязательноЗаполняемыеОтветы()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

#Если ТолстыйКлиентОбычноеПриложение Тогда

Функция ПечатьОпрос()

	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("ТиповаяАнкета",	ТиповаяАнкета);
	Запрос.УстановитьПараметр("Опрос",			Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТиповыеАнкетыВопросыАнкеты.Ссылка,
	|	ОпросВопросы.Ответ,
	|	ОпросВопросы.ТиповойОтвет,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос КАК Вопрос,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос.ТипЗначения,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос.ТипОтветаНаВопрос,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос.КоличествоСтрокТаблицы,
	|	ТиповыеАнкетыВопросыАнкеты.НомерСтроки КАК НомерСтрокиВАнкете,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос.Код КАК КодВопроса,
	|	ОпросСоставнойОтвет.НомерСтрокиВТаблице,
	|	ОпросСоставнойОтвет.Ответ КАК ОтветВТаблицу,
	|	ОпросСоставнойОтвет.ТиповойОтвет КАК ТиповойОтветВТаблицу,
	|	ВопросыДляАнкетированияКолонкиТаблицы.НомерСтроки КАК НомерКолонки,
	|	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы,
	|	ОпросВопросы.ТиповойОтвет.Код КАК КодВариантаОтвета,
	|	ОпросСоставнойОтвет.ТиповойОтвет.Код КАК КодВариантаОтветаНесколько,
	|	ВариантыОтветовОпросов.Код
	|ИЗ
	|	Справочник.ТиповыеАнкеты.ВопросыАнкеты КАК ТиповыеАнкетыВопросыАнкеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Опрос.Вопросы КАК ОпросВопросы
	|		ПО ТиповыеАнкетыВопросыАнкеты.Вопрос = ОпросВопросы.Вопрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Опрос.СоставнойОтвет КАК ОпросСоставнойОтвет
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОтветовОпросов КАК ВариантыОтветовОпросов
	|			ПО ОпросСоставнойОтвет.ТиповойОтвет = ВариантыОтветовОпросов.Ссылка
	|				И (ОпросСоставнойОтвет.Ссылка = &Опрос)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ВопросыДляАнкетирования.КолонкиТаблицы КАК ВопросыДляАнкетированияКолонкиТаблицы
	|			ПО ОпросСоставнойОтвет.Вопрос = ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы
	|				И ОпросСоставнойОтвет.ВопросВладелец = ВопросыДляАнкетированияКолонкиТаблицы.Ссылка
	|		ПО ТиповыеАнкетыВопросыАнкеты.Вопрос = ОпросСоставнойОтвет.ВопросВладелец
	|			И (ОпросСоставнойОтвет.Ссылка = &Опрос)
	|ГДЕ
	|	ОпросВопросы.Ссылка = &Опрос
	|	И ТиповыеАнкетыВопросыАнкеты.Ссылка = &ТиповаяАнкета
	|ИТОГИ ПО
	|	НомерСтрокиВАнкете,
	|	Вопрос";
	
	МакетАнкеты = ТиповаяАнкета.МакетАнкеты.Получить();
	Если МакетАнкеты = Неопределено Тогда
		МакетАнкеты = Новый ТабличныйДокумент();
		
		Если НЕ ЗначениеЗаполнено(ТиповаяАнкета) Тогда
			Сообщить("Документ не может быть распечатан. Выберите типовую анкету.");
			Возврат Неопределено;
		КонецЕсли;
		
		МакетАнкеты = ТиповаяАнкета.ПолучитьОбъект().СформироватьМакет(МакетАнкеты);
		
	ИначеЕсли ТипЗнч(МакетАнкеты) = Тип("ТабличныйДокумент") Тогда
		Если МакетАнкеты.ВысотаТаблицы = 0 Тогда
			МакетАнкеты = Новый ТабличныйДокумент();
			МакетАнкеты = ТиповаяАнкета.ПолучитьОбъект().СформироватьМакет(МакетАнкеты);
		КонецЕсли;
		
	КонецЕсли;

	ОбластьНомераДокумента			= МакетАнкеты.Области["ОбластьНомераДокумента"];
	ОбластьНомераДокумента.Текст	= "Документ Опрос №"+Номер;

	ВыборкаЗапросаПоНомерамСтрок 	= Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "НомерСтрокиВАнкете");
	Пока ВыборкаЗапросаПоНомерамСтрок.Следующий() Цикл
		ВыборкаЗапросаПоВопросам = ВыборкаЗапросаПоНомерамСтрок.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "Вопрос");
		Пока ВыборкаЗапросаПоВопросам.Следующий() Цикл
			Если ВыборкаЗапросаПоВопросам.ВопросТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.ОдинИзВариантовОтвета или 
				 ВыборкаЗапросаПоВопросам.ВопросТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.НесколькоВариантовОтвета Тогда
				ВыборкаЗапросаПоВариантамОтвета = ВыборкаЗапросаПоВопросам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "");
				Пока ВыборкаЗапросаПоВариантамОтвета.Следующий() Цикл
					Если ВыборкаЗапросаПоВопросам.ВопросТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.НесколькоВариантовОтвета Тогда
						ИмяОбласти = "Вопрос" + ВыборкаЗапросаПоВариантамОтвета.КодВопроса + "ВариантОтвета" + ВыборкаЗапросаПоВариантамОтвета.КодВариантаОтветаНесколько;
					Иначе
						ИмяОбласти = "Вопрос" + ВыборкаЗапросаПоВариантамОтвета.КодВопроса + "ВариантОтвета" + ВыборкаЗапросаПоВариантамОтвета.КодВариантаОтвета;
					КонецЕсли;
					Попытка
					ОбластьОтвета=МакетАнкеты.Области[ИмяОбласти];
					ОбластьЧекБокса = МакетАнкеты.Область("R"+ОбластьОтвета.Верх+"C"+(ОбластьОтвета.Лево));
					ОбластьЧекБокса.Текст = "R";
					ОбластьРазвернутогоОтвета = МакетАнкеты.Область("R"+ОбластьОтвета.Верх+"C"+(ОбластьОтвета.Право+1));
					ОбластьРазвернутогоОтвета.Текст = ОбластьРазвернутогоОтвета.Текст +"   "+ ВыборкаЗапросаПоВариантамОтвета.Ответ + ВыборкаЗапросаПоВариантамОтвета.ОтветВТаблицу;
					Исключение
					КонецПопытки;
				КонецЦикла;
				
			ИначеЕсли ВыборкаЗапросаПоВопросам.ВопросТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Табличный Тогда
				ВыборкаЗапросаПоОтветам = ВыборкаЗапросаПоВопросам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "");
				Пока ВыборкаЗапросаПоОтветам.Следующий() Цикл
					Если ВыборкаЗапросаПоОтветам.НомерКолонки = NULL Тогда
						Продолжить;
					КонецЕсли;
					ИмяОбласти = "Вопрос" + ВыборкаЗапросаПоОтветам.КодВопроса+"ОтветТаблицы"+ВыборкаЗапросаПоОтветам.НомерКолонки+"Строка"+ВыборкаЗапросаПоОтветам.НомерСтрокиВТаблице;
					Попытка
						//МакетАнкеты.Области[ИмяОбласти].Текст = ВыборкаЗапросаПоОтветам.ТиповойОтветВТаблицу;
						МакетАнкеты.Параметры[ИмяОбласти] = ВыборкаЗапросаПоОтветам.ТиповойОтветВТаблицу;;
					Исключение
						ОбщегоНазначения.СообщитьОбОшибке("Набор вопросов в анкете и в документе ""Опрос"" различны! Не найден вопрос с кодом " + ВыборкаЗапросаПоОтветам.КодВопроса);
					КонецПопытки;
				КонецЦикла;
				
			Иначе
				ВыборкаЗапросаПоОтветам = ВыборкаЗапросаПоВопросам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "");
				Пока ВыборкаЗапросаПоОтветам.Следующий() Цикл
					ИмяОбласти = "ТиповойОтвет" + ВыборкаЗапросаПоОтветам.КодВопроса;
					Попытка
						ТиповойОтвет = ?(ВыборкаЗапросаПоОтветам.ТиповойОтвет = Истина, "Да", ВыборкаЗапросаПоОтветам.ТиповойОтвет);
						ТиповойОтвет = ?(ВыборкаЗапросаПоОтветам.ТиповойОтвет = Ложь, "Нет", ВыборкаЗапросаПоОтветам.ТиповойОтвет);
						Если ТипЗнч(ТиповойОтвет) = Тип("Дата") Тогда
							ТиповойОтвет = Формат(ТиповойОтвет, "ДЛФ=D");
						Иначе
							ТиповойОтвет = СтрЗаменить(""+ТиповойОтвет, "¤", ",");
						КонецЕсли;
						МакетАнкеты.Параметры[ИмяОбласти] = ТиповойОтвет;
					Исключение
						ОбщегоНазначения.СообщитьОбОшибке("Набор вопросов в анкете и в документе ""Опрос"" различны! Не найден вопрос с кодом " + ВыборкаЗапросаПоОтветам.КодВопроса);
					КонецПопытки;
				КонецЦикла;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	МакетПечати = Новый ТабличныйДокумент();
	Если МакетАнкеты = Неопределено Тогда
		МакетАнкеты = Новый ТабличныйДокумент();
		Если НЕ ЗначениеЗаполнено(ТиповаяАнкета) Тогда
			Сообщить("Документ не может быть распечатан. Выберите типовую анкету.");
			Возврат Неопределено;
		КонецЕсли;
		МакетАнкеты = ТиповаяАнкета.ПолучитьОбъект().СформироватьМакет(МакетАнкеты);
	КонецЕсли;
	МакетПечати.Вывести(МакетАнкеты);
	
	Возврат МакетПечати;

КонецФункции // ПечатьОпрос()

#КонецЕсли

Функция УдовлетворяетУсловию(Вопрос, Параметр, Обязательный = Неопределено, НеПроверкаНаУсловноНеЗапольнять = Ложь)
	
	Если НЕ НеПроверкаНаУсловноНеЗапольнять Тогда
		Возврат Обязательный = Перечисления.ОбязательностьЗаполненияОтветаНаВопрос.УсловноНеЗаполнять;
	КонецЕсли;
	
	Если Обязательный = Перечисления.ОбязательностьЗаполненияОтветаНаВопрос.УсловноНеЗаполнять Тогда
		Если Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Табличный Тогда
			СтрокиПоиска = СоставнойОтвет.НайтиСтроки(Новый Структура("ВопросВладелец", Вопрос));
			
			Для Каждого СтрокаСоставногоОтвета Из СтрокиПоиска Цикл
				Если ЗначениеЗаполнено(СтрокаСоставногоОтвета.ТиповойОтвет) Тогда
					Возврат Истина;
				КонецЕсли;
			КонецЦикла;
			Возврат Ложь;
			
		Иначе
			Возврат ЗначениеЗаполнено(Параметр);
			
		КонецЕсли;
		
	Иначе
		Если Вопрос.ТипОтветаНаВопрос = Перечисления.ТипыОтветаНаВопросАнкеты.Табличный Тогда
			СтрокиПоиска = СоставнойОтвет.НайтиСтроки(Новый Структура("ВопросВладелец", Вопрос));
			
			Для Каждого СтрокаСоставногоОтвета Из СтрокиПоиска Цикл
				Если ЗначениеЗаполнено(СтрокаСоставногоОтвета.ТиповойОтвет) Тогда
					Возврат Ложь;
				КонецЕсли;
			КонецЦикла;
			
			Возврат Истина;
			
		Иначе
			Возврат НЕ ЗначениеЗаполнено(Параметр);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции // УдовлетворяетУсловию()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(Основание)
	
	Если ТипЗнч(Основание) = Тип("СправочникСсылка.ТиповыеАнкеты") Тогда
		ТиповаяАнкета = Основание;
		ЗаполнитьВопросыАнкеты(Основание);
	КонецЕсли;
	
КонецПроцедуры // ОбработкаЗаполнения()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
