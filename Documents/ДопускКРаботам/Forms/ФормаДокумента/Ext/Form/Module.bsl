
///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Осуществляет добавление работников и их показателей после завершения подбора
//
&НаСервере
Процедура ЗавершитьПодборСотрудниковДляРаботники(АдресВременногоХранилища)
	
	МассивСотрудников = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	
	НовыеСотрудники = ПолучитьНовыеСотрудники(МассивСотрудников, Объект.Работники);
	
	Если НовыеСотрудники.Количество() > 0 Тогда
		Документ = РеквизитФормыВЗначение("Объект");
		Для Каждого Сотрудник Из НовыеСотрудники Цикл
			НоваяСтрока = Документ.Работники.Добавить();
			НоваяСтрока.Сотрудник = Сотрудник;
			НоваяСтрока.ФизЛицо = Сотрудник.ФизЛицо;
		КонецЦикла;
		ЗначениеВРеквизитФормы(Документ, "Объект");
	КонецЕсли;
	
КонецПроцедуры // ЗавершитьПодборСотрудниковДляПострадавшие

// Формирует структуру параметров для формы подбора
//
// Возвращаемое значение:
// Структура
//
&НаКлиенте 
Функция ПолучитьПараметрыВызоваФормыПодбораСотрудника(ИмяТаблицы, ИмяПоля)
	
	Сотрудники = Новый Соответствие;
	Для Каждого Строка Из Объект[ИмяТаблицы] Цикл
		Сотрудники.Вставить(Строка[ИмяПоля]);
	КонецЦикла;	
	
	Возврат СоздатьПараметрыВызоваФормыПодбораСотрудника(Объект.Организация, Сотрудники)
	
КонецФункции // ПолучитьПараметрыВызоваФормыПодбораСотрудника()

// Формирует структуру параметров для формы подбора
//
// Возвращаемое значение:
// Структура
//
&НаСервереБезКонтекста 
Функция СоздатьПараметрыВызоваФормыПодбораСотрудника(Организация, Сотрудники)
	
	ПараметрыВызова = Новый Структура;
	
	ПараметрыВызова.Вставить("Организация", Организация); 
	ПараметрыВызова.Вставить("АдресВыбранныхСотрудниковВХранилище", ПоместитьВоВременноеХранилище(Сотрудники)); 
	
	Возврат ПараметрыВызова
	
КонецФункции // СоздатьПараметрыВызоваФормыПодбораСотрудника()

&НаСервере
Функция ПолучитьНовыеСотрудники(Сотрудники, ТЧ , имяПоля = "Сотрудник", ПоискПоФизЛицу = Ложь)
	
	НовыеСотрудники = Новый Массив();
	
	Для Каждого Сотрудник Из Сотрудники Цикл
		Если ПоискПоФизЛицу Тогда
			
			Если ТипЗнч(Сотрудник) = ТИП("СправочникСсылка.СотрудникиОрганизаций") И ТЧ.НайтиСтроки(Новый Структура(ИмяПоля, Сотрудник.ФизЛицо)).Количество() = 0 Тогда
				НовыеСотрудники.Добавить(Сотрудник);
			КонецЕсли;	
		Иначе
			Если ТЧ.НайтиСтроки(Новый Структура(ИмяПоля, Сотрудник)).Количество() = 0 Тогда
				НовыеСотрудники.Добавить(Сотрудник);
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	

	Возврат НовыеСотрудники;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ПрочитатьПериодичностьИСрокДопуска()
	
	Если Объект.ВидДопуска.СпособОпределенияСрокаДействия = Перечисления.СпособыОпределенияСрокаДействия.РассчитываетсяАвтоматически Тогда
		ПериодичностьДопуска = Объект.ВидДопуска.Периодичность;
		СрокДопуска = Объект.ВидДопуска.СрокДействия;
	Иначе
		ПериодичностьДопуска = Перечисления.Периодичность.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры // ПрочитатьПериодичностьИСрокДопуска

&НаСервере
Процедура ЗаполнитьРаботниковПоВидуДопускаНаСервере()
		
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ЗаполнитьРаботниковПоВидуДопуска();
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");

КонецПроцедуры // ЗаполнитьРаботниковПоВидуДопускаНаСервере

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПериодичностьГод = Перечисления.Периодичность.Год;
	ПериодичностьДень = Перечисления.Периодичность.День;
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Если ДокументОбъект.ЭтоНовый() Тогда
		ЗаполнениеДокументовПереопределяемый.ЗаполнитьШапкуДокумента(ДокументОбъект, глЗначениеПеременной("глТекущийПользователь"));
		Если Параметры.ЗначенияЗаполнения.Свойство("Организация") Тогда
			Если ЗначениеЗаполнено(Параметры.ЗначенияЗаполнения.Организация) Тогда
				ДокументОбъект.Организация = Параметры.ЗначенияЗаполнения.Организация;
			КонецЕсли;
		КонецЕсли;
		ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	Иначе
		ПрочитатьПериодичностьИСрокДопуска();
	КонецЕсли;
	
	// Обработчик подсистемы "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	ВалютаУпрУчета  = Константы.ВалютаУправленческогоУчета.Получить();
	Элементы.РаботникиСтоимостьДопуска.Заголовок =  "Сумма расходов (" + ВалютаУпрУчета.Наименование + ")";
	
КонецПроцедуры // ПриСозданииНаСервере

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ИзмененыДопускиКРаботам", ВыгрузитьКолонкуРаботникиНаСервере());

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД

&НаКлиенте
Процедура ПодборСотрудников(Команда)
	
	Результат = ОткрытьФормуМодально("Справочник.СотрудникиОрганизаций.Форма.ФормаПодбора", ПолучитьПараметрыВызоваФормыПодбораСотрудника("Работники" , "Сотрудник"), ЭтаФорма);
	
	Если Результат <> Неопределено Тогда
		ЗавершитьПодборСотрудниковДляРаботники(Результат);
	КонецЕсли;
	
КонецПроцедуры // ПодборСотрудников

&НаКлиенте
Процедура ЗаполнитьПоВидуДопуска(Команда)
	
	Если Объект.Работники.Количество() > 0 Тогда
		Если Вопрос("Табличная часть будет очищена, продолжить?", РежимДиалогаВопрос.ОКОтмена,, КодВозвратаДиалога.ОК) = КодВозвратаДиалога.ОК Тогда
			Объект.Работники.Очистить();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьРаботниковПоВидуДопускаНаСервере();
	
КонецПроцедуры // ЗаполнитьПоВидуДопуска

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура РаботникиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда
				
		СтандартнаяОбработка = Ложь;
	
		Если Объект.Работники.НайтиСтроки(Новый Структура("Сотрудник", ВыбранноеЗначение)).Количество() = 0 Тогда
			НоваяСтрока = Объект.Работники.Добавить();
			НоваяСтрока.Сотрудник = ВыбранноеЗначение;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // РаботникиОбработкаВыбора

&НаКлиенте
Процедура РаботникиДатаПолученияПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Работники.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		Если ПериодичностьДопуска = ПериодичностьГод Тогда
			ТекущиеДанные.СрокДействия = ДобавитьМесяц(ТекущиеДанные.ДатаПолучения, СрокДопуска * 12);
		ИначеЕсли ПериодичностьДопуска = ПериодичностьДень Тогда
			ТекущиеДанные.СрокДействия = ДобавитьМесяц(ТекущиеДанные.ДатаПолучения, СрокДопуска);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // РаботникиДатаПолученияПриИзменении

&НаКлиенте
Процедура ВидДопускаПриИзменении(Элемент)
	
	ПрочитатьПериодичностьИСрокДопуска();
	
КонецПроцедуры // ВидДопускаПриИзменении

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Функция ВыгрузитьКолонкуРаботникиНаСервере()
	
	Возврат ОбщегоНазначения.ВыгрузитьКолонку(Объект.Работники, "Сотрудник");
	
КонецФункции
