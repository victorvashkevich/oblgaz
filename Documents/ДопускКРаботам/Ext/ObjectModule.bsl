
Процедура ЗаполнитьРаботниковПоВидуДопуска() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидДопуска", 	ВидДопуска);
	Запрос.УстановитьПараметр("Организация", 	Организация);
	Запрос.УстановитьПараметр("ДатаСреза", 		Дата);
	Запрос.УстановитьПараметр("Регистратор", 	ЭтотОбъект.Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РаботникиОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
	|	РаботникиОрганизацийСрезПоследних.Сотрудник.Наименование,
	|	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо КАК ФизЛицо,
	|	&ДатаСреза КАК ДатаПолучения,
	|	ВЫБОР
	|		КОГДА ВидыДопусковКРаботам.СпособОпределенияСрокаДействия = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСрокаДействия.РассчитываетсяАвтоматически)
	|			ТОГДА ВЫБОР
	|					КОГДА ВидыДопусковКРаботам.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)
	|						ТОГДА ДОБАВИТЬКДАТЕ(&ДатаСреза, ГОД, ВидыДопусковКРаботам.СрокДействия)
	|					КОГДА ВидыДопусковКРаботам.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
	|						ТОГДА ДОБАВИТЬКДАТЕ(&ДатаСреза, МЕСЯЦ, ВидыДопусковКРаботам.СрокДействия)
	|					ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|				КОНЕЦ
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК СрокДействия,
	|	ВидыДопусковКРаботам.СуммаРасходов
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаСреза, Организация = &Организация) КАК РаботникиОрганизацийСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыДопусковКРаботам КАК ВидыДопусковКРаботам
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыДопусковКРаботам.КонтролируемыеДолжности КАК ВидыДопусковКРаботамКонтролируемыеДолжности
	|			ПО (ВидыДопусковКРаботамКонтролируемыеДолжности.Ссылка = ВидыДопусковКРаботам.Ссылка)
	|		ПО (ВидыДопусковКРаботам.Ссылка = &ВидДопуска)
	|			И (ВидыДопусковКРаботамКонтролируемыеДолжности.Должность = ВЫБОР
	|				КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|						И РаботникиОрганизацийСрезПоследних.ПериодЗавершения < &ДатаСреза
	|					ТОГДА РаботникиОрганизацийСрезПоследних.ДолжностьЗавершения
	|				ИНАЧЕ РаботникиОрганизацийСрезПоследних.Должность
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДопускиКРаботам.СрезПоследних(
	|				&ДатаСреза,
	|				Организация = &Организация
	|					И ВидДопуска = &ВидДопуска
	|					И СрокДействия > &ДатаСреза
	|					И Регистратор  <> &Регистратор) КАК ДопускиКРаботамСрезПоследних
	|		ПО РаботникиОрганизацийСрезПоследних.Сотрудник = ДопускиКРаботамСрезПоследних.Сотрудник
	|ГДЕ
	|	РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|	И ДопускиКРаботамСрезПоследних.Сотрудник ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	РаботникиОрганизацийСрезПоследних.Сотрудник.Наименование";
	
	Работники.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры // ЗаполнитьРаботниковПоВидуДопуска

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Для Каждого ПараметрЗаполнения Из ДанныеЗаполнения Цикл
			Если ЭтотОбъект.Метаданные().Реквизиты.Найти(ПараметрЗаполнения.Ключ) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ЭтотОбъект[ПараметрЗаполнения.Ключ]) Тогда
				ЭтотОбъект[ПараметрЗаполнения.Ключ] = ПараметрЗаполнения.Значение;
			КонецЕсли;
		КонецЦикла;
		Если ДанныеЗаполнения.Свойство("Работники") Тогда
			Для Каждого СтрокаЗначенийЗаполнения Из ДанныеЗаполнения.Работники Цикл
				ЗаполнитьЗначенияСвойств(Работники.Добавить(), СтрокаЗначенийЗаполнения);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	
	Движения.ДопускиКРаботам.Записывать = Истина;
	Движения.РасходыНаСотрудниковОрганизации.Записывать = Истина;
	
	Для Каждого ТекСтрокаРаботники Из Работники  Цикл
		
		Движение = Движения.ДопускиКРаботам.Добавить();
		Движение.Период = ТекСтрокаРаботники.ДатаПолучения;
		Движение.Сотрудник = ТекСтрокаРаботники.Сотрудник;
		Движение.Организация = Организация;
		Движение.ВидДопуска = ВидДопуска;
		Движение.СрокДействия = ТекСтрокаРаботники.СрокДействия;
		
		Если ТекСтрокаРаботники.СуммаРасходов > 0 Тогда
			Движение = Движения.РасходыНаСотрудниковОрганизации.Добавить();
			Движение.Период = ТекСтрокаРаботники.ДатаПолучения;
			Движение.Сотрудник = ТекСтрокаРаботники.Сотрудник;
			Движение.Организация = Организация;
			Движение.ФизЛицо = ТекСтрокаРаботники.ФизЛицо;
			Движение.КатегорияРасходов = Перечисления.КатегорииРасходовНаПерсонал.ДопускиКРаботам;
			Движение.СуммаРасходов = ТекСтрокаРаботники.СуммаРасходов;
		КонецЕсли;
		
	КонецЦикла;

	
КонецПроцедуры

Процедура ПроверитьЗаполнениеСтроки(СтрокаДокумента, Отказ, Заголовок)
	
	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(СтрокаДокумента.НомерСтроки) + """ табличной части: ";

	// Сотрудник
	Если СтрокаДокумента.ДатаПолучения > СтрокаДокумента.СрокДействия Тогда
		ОбщегоНазначенияЗК.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "срок действия допуска меньше даты его получения.", Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(Работники);
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналомПереопределяемый.ЗаполнитьКраткийСоставДокумента(МассивТЧ);
	
	ОбщегоНазначенияЗКПереопределяемый.ПроверитьНомерДокументаПередЗаписью(ЭтотОбъект);
	ОбщегоНазначенияЗКПереопределяемый.СброситьНомерДокументаПередЗаписьюПриИзмененииОрганизации(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(Ссылка);
	
	Для Каждого ТекСтрокаРаботники Из Работники  Цикл
		ПроверитьЗаполнениеСтроки(ТекСтрокаРаботники, Отказ, Заголовок);
		
	КонецЦикла;	
КонецПроцедуры
