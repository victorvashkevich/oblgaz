////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры, функции

////////////////////////////////////////////////////////////////////////////////
// Процедуры, функции объекта

Функция СформироватьЗапросПоНезаполненнымСотрудникам(ЗапросАвтоЗаполнения) Экспорт
	
	// Запрос для вывода сообщения о незаполненных сотрудниках
	ЗапросАвтоЗаполнения.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	ПРЕДСТАВЛЕНИЕ(РегистрТабеля.Сотрудник) КАК ПредставлениеСотрудника,
	|	РегистрТабеля.Регистратор КАК ДокументОснование,
	|	ПРЕДСТАВЛЕНИЕ(РегистрТабеля.Регистратор) КАК ПредставлениеДокумента,
	|	РегистрТабеля.Сотрудник,
	|	РегистрТабеля.Регистратор КАК ВведенныйДокумент
	|ИЗ
	|	РегистрНакопления.РабочееВремяРаботниковОрганизаций КАК РегистрТабеля
	|ГДЕ
	|	РегистрТабеля.Сотрудник В
	|			(ВЫБРАТЬ
	|				ВТСписокРаботников.Ссылка
	|			ИЗ
	|				ВТСписокРаботников)
	|	И РегистрТабеля.Регистратор <> &ДокументСсылка
	|	И (РегистрТабеля.Регистратор ССЫЛКА Документ.ТабельУчетаРабочегоВремениОрганизации
	//vvv
	|	ИЛИ РегистрТабеля.Регистратор ССЫЛКА Документ.ТабельУчетаРабочегоВремениВодителейОрганизации
	//
	|			ИЛИ РегистрТабеля.Регистратор ССЫЛКА Документ.СдельныйНаряд)
	|	И ВЫБОР
	|			КОГДА РегистрТабеля.Регистратор ССЫЛКА Документ.СдельныйНаряд
	|				ТОГДА РегистрТабеля.Регистратор.ОтражатьВБухгалтерскомУчете
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И (РегистрТабеля.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|			ИЛИ РегистрТабеля.ВЦеломЗаПериод
	|				И РегистрТабеля.Период = &Месяц)";
	
	Возврат ЗапросАвтоЗаполнения.Выполнить();
	
КонецФункции

//vvv
Функция СформироватьЗапросПоНезаполненнымСотрудникамВредность(ЗапросАвтоЗаполнения) Экспорт
	
	// Запрос для вывода сообщения о незаполненных сотрудниках
	ЗапросАвтоЗаполнения.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПРЕДСТАВЛЕНИЕ(РегистрТабеля.Сотрудник) КАК ПредставлениеСотрудника,
	|	РегистрТабеля.Регистратор КАК ДокументОснование,
	|	ПРЕДСТАВЛЕНИЕ(РегистрТабеля.Регистратор) КАК ПредставлениеДокумента,
	|	РегистрТабеля.Сотрудник,
	|	РегистрТабеля.Регистратор КАК ВведенныйДокумент
	|ИЗ
	|	РегистрНакопления.РабочееВремяРаботниковОрганизацийВоВредныхУсловиях КАК РегистрТабеля
	|ГДЕ
	|	РегистрТабеля.Сотрудник В
	|			(ВЫБРАТЬ
	|				ВТСписокРаботников.Ссылка
	|			ИЗ
	|				ВТСписокРаботников)
	|	И РегистрТабеля.Регистратор <> &ДокументСсылка
	|	И РегистрТабеля.Регистратор ССЫЛКА Документ.ТабельУчетаРабочегоВремениВредность
	|	И (РегистрТабеля.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|			ИЛИ РегистрТабеля.ВЦеломЗаПериод
	|				И РегистрТабеля.Период = &Месяц)";
	
	Возврат ЗапросАвтоЗаполнения.Выполнить();
	
КонецФункции
//

#Если Клиент Тогда

Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, ЭтотОбъект) Экспорт
	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "Т13" Тогда
		
		Если Не ЭтотОбъект.Проведен Тогда
			РаботаСДиалогами.ВывестиПредупреждение("Документ можно распечатать только после его проведения!");
			Возврат Неопределено;
		КонецЕсли;
		
		Если ЭтотОбъект.СпособВводаДанных = Перечисления.СпособыВводаДанныхОВремени.ВЦеломЗаПериод  Тогда
			ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
			ОбработкаКомментариев.УдалитьСообщения();
			ОбработкаКомментариев.ДобавитьСообщение("Предупреждение", Перечисления.ВидыСообщений.Информация);
			ОбработкаКомментариев.ДобавитьСообщение("Отчет Т-13 формируется на основе данных введенных подневно, и не использует данные, введенные сводно за месяц.", Перечисления.ВидыСообщений.ВажнаяИнформация);
			ОбработкаКомментариев.ПоказатьСообщения();
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДокументСсылка", ЭтотОбъект.Ссылка);
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОтработанноеВремя.Сотрудник
		|ИЗ
		|	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремя КАК ОтработанноеВремя
		|ГДЕ
		|	ОтработанноеВремя.Ссылка = &ДокументСсылка
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОтработанноеВремяВЦеломЗаПериод.Сотрудник
		|ИЗ
		|	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ОтработанноеВремяВЦеломЗаПериод
		|ГДЕ
		|	ОтработанноеВремяВЦеломЗаПериод.Ссылка = &ДокументСсылка";
		
		СписокСотрудников = Новый СписокЗначений;
		СписокСотрудников.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник"));
		
		ФильтрСоответствия = Новый Соответствие;
		
		ФильтрСоответствия.Вставить("Организация", ЭтотОбъект.Организация);
		ФильтрСоответствия.Вставить("Подразделение", ЭтотОбъект.ПодразделениеОрганизации);
		
		ФильтрСоответствия.Вставить("ОтборОрганизации", ЗначениеЗаполнено(ЭтотОбъект.Организация));
		ФильтрСоответствия.Вставить("ОтборПодразделения", ЗначениеЗаполнено(ЭтотОбъект.ПодразделениеОрганизации));
		
		ФильтрСоответствия.Вставить("ВидСравненияОрганизации", ВидСравнения.Равно);
		ФильтрСоответствия.Вставить("ВидСравненияПодразделения", ВидСравнения.ВИерархии);
		
		ФильтрСоответствия.Вставить("ДатаНачала", ЭтотОбъект.ДатаНачалаПериода);
		ФильтрСоответствия.Вставить("ДатаОкончания", ЭтотОбъект.ДатаОкончанияПериода);
		ФильтрСоответствия.Вставить("ДатаЗаполнения",    ЭтотОбъект.Дата);
		ФильтрСоответствия.Вставить("НомерДокумента",    ЭтотОбъект.Номер);
		ФильтрСоответствия.Вставить("ОтветственноеЛицо", ЭтотОбъект.Ответственный);
		
		Если СписокСотрудников.Количество() = 1 Тогда
			ФильтрСоответствия.Вставить("Работник", СписокСотрудников[0].Значение);
			ФильтрСоответствия.Вставить("ВидСравненияРаботника", ВидСравнения.Равно);
			ФильтрСоответствия.Вставить("ОтборРаботника", Истина);
		ИначеЕсли СписокСотрудников.Количество() > 1 Тогда
			ФильтрСоответствия.Вставить("Работник", СписокСотрудников);
			ФильтрСоответствия.Вставить("ВидСравненияРаботника", ВидСравнения.ВСписке);
			ФильтрСоответствия.Вставить("ОтборРаботника", Истина);
		КонецЕсли;
		
		ТабДокумент = Новый ТабличныйДокумент;	
		ТабДокумент.ОтображатьСетку     = ложь;
		ТабДокумент.ОтображатьЗаголовки = ложь;
		ТабДокумент.АвтоМасштаб         = Истина;
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабДокумент.Очистить();
		
		Отчет = Отчеты.УнифицированнаяФормаТ13.Создать();
		Отчет.УстановитьФильтр(ФильтрСоответствия);
		ТекстОшибки = "";
		Отчет.СформироватьОтчет(ТабДокумент, "Табель", ТекстОшибки);
		Если ТекстОшибки <> "" Тогда
			РаботаСДиалогами.ВывестиПредупреждение(ТекстОшибки);
			Возврат Неопределено;
		Иначе
			Форма = РаботаСДиалогами.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, РаботаСДиалогами.СформироватьЗаголовокДокумента(ЭтотОбъект,ЭтотОбъект.Метаданные().Синоним + " (форма Т-13)"));
			Возврат Форма;
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции // Печать()

#КонецЕсли
 
Процедура ДополнитьСтруктуруПечатныхФорм(СтруктураМакетов) Экспорт
	
	СтруктураМакетов.Вставить("Т13",	"Форма Т-13");

КонецПроцедуры

Процедура ДополнитьЗапросПоУникальностиЗаписи(Запрос) Экспорт
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РабочееВремяРаботниковОрганизаций.Сотрудник КАК Сотрудник,
	|	РабочееВремяРаботниковОрганизаций.Регистратор КАК Регистратор,
	|	РабочееВремяРаботниковОрганизаций.НомерСтроки КАК НомерСтроки,
	|	ДЕНЬ(РабочееВремяРаботниковОрганизаций.Период) КАК ИндексДня,
	|	ВЫБОР
	|		КОГДА РабочееВремяРаботниковОрганизаций.Регистратор ССЫЛКА Документ.СдельныйНаряд
	|			ТОГДА РабочееВремяРаботниковОрганизаций.Регистратор.ОтражатьВБухгалтерскомУчете
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Соединяться
	|ПОМЕСТИТЬ ВТРабочееВремяРаботниковОрганизаций
	|ИЗ
	|	РегистрНакопления.РабочееВремяРаботниковОрганизаций КАК РабочееВремяРаботниковОрганизаций
	|ГДЕ
	|	РабочееВремяРаботниковОрганизаций.Регистратор <> &ДокументСсылка
	|	И (РабочееВремяРаботниковОрганизаций.ВЦеломЗаПериод
	|				И РабочееВремяРаботниковОрганизаций.Период = &Месяц
	|			ИЛИ (НЕ РабочееВремяРаботниковОрганизаций.ВЦеломЗаПериод)
	|				И (РабочееВремяРаботниковОрганизаций.Период МЕЖДУ &НачалоМесяца И &КонецМесяца))
	|	И РабочееВремяРаботниковОрганизаций.Сотрудник В(&СписокСотрудников)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ИндексДня,
	|	НомерСтроки,
	|	Регистратор,
	|	Соединяться
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы КАК ГрафикРаботы,
	|	ДЕНЬ(ГрафикиРаботыПоВидамВремени.Дата) КАК ИндексДня,
	|	ГрафикиРаботыПоВидамВремени.Документ КАК Документ
	|ПОМЕСТИТЬ ВТГрафикиРаботыПоВидамВремени
	|ИЗ
	|	РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|ГДЕ
	|	ГрафикиРаботыПоВидамВремени.Месяц = &Месяц
	|	И ГрафикиРаботыПоВидамВремени.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ГрафикиРаботыПоВидамВремени.Документ <> &ДокументСсылка
	|	И (НЕ ГрафикиРаботыПоВидамВремени.План)
	//vvv комментируем, добавляем ниже
	//|	И (НЕ ГрафикиРаботыПоВидамВремени.Документ В (ЗНАЧЕНИЕ(Документ.ТабельУчетаРабочегоВремениОрганизации.ПустаяСсылка), ЗНАЧЕНИЕ(Документ.СдельныйНаряд.ПустаяСсылка)))
	|	И (НЕ ГрафикиРаботыПоВидамВремени.Документ В (ЗНАЧЕНИЕ(Документ.ТабельУчетаРабочегоВремениОрганизации.ПустаяСсылка),ЗНАЧЕНИЕ(Документ.ТабельУчетаРабочегоВремениВодителейОрганизации.ПустаяСсылка), ЗНАЧЕНИЕ(Документ.СдельныйНаряд.ПустаяСсылка)))
	//
	|	И ГрафикиРаботыПоВидамВремени.ГрафикРаботы В(&СписокСотрудников)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ГрафикРаботы,
	|	ИндексДня,
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПРЕДСТАВЛЕНИЕ(ЕСТЬNULL(РабочееВремяРаботниковОрганизаций.Регистратор, ГрафикиРаботыПоВидамВремени.Документ)) КАК ДокументПредставление,
	|	ЕСТЬNULL(СотрудникиТабеля.СотрудникНаименование, ГрафикиРаботыПоВидамВремени.ГрафикРаботы.Наименование) КАК СотрудникНаименование
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		СотрудникиТабеля.ИндексДня КАК ИндексДня,
	|		СотрудникиТабеля.Сотрудник.Наименование КАК СотрудникНаименование,
	|		СотрудникиТабеля.Сотрудник КАК Сотрудник
	|	ИЗ
	|		ВТДанныеТабеляПоДням КАК СотрудникиТабеля) КАК СотрудникиТабеля
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРабочееВремяРаботниковОрганизаций КАК РабочееВремяРаботниковОрганизаций
	|		ПО СотрудникиТабеля.Сотрудник = РабочееВремяРаботниковОрганизаций.Сотрудник
	|			И (РабочееВремяРаботниковОрганизаций.Соединяться)
	|			И СотрудникиТабеля.ИндексДня = РабочееВремяРаботниковОрганизаций.ИндексДня
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|		ПО СотрудникиТабеля.Сотрудник = ГрафикиРаботыПоВидамВремени.ГрафикРаботы
	|			И СотрудникиТабеля.ИндексДня = ГрафикиРаботыПоВидамВремени.ИндексДня
	|ГДЕ
	|	(РабочееВремяРаботниковОрганизаций.НомерСтроки ЕСТЬ НЕ NULL 
	|			ИЛИ ГрафикиРаботыПоВидамВремени.ГрафикРаботы ЕСТЬ НЕ NULL )
	|	И (РабочееВремяРаботниковОрганизаций.Регистратор ЕСТЬ НЕ NULL 
	|			ИЛИ ГрафикиРаботыПоВидамВремени.Документ ЕСТЬ НЕ NULL )";

	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры, функции для работы формы документа

#Если Клиент Тогда

Функция РежимПодбораСотрудников() Экспорт
	
	//	Режим 		- 0-всех, 1 - только по трудовым договорам, 2 - только договора ГПХ
	//				- 3 - военнослужащих, 4 - госслужащих
	
	Режим = 1;
	
	Возврат Режим;
	
КонецФункции

#КонецЕсли