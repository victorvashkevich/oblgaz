////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// МОДУЛЬ СОДЕРЖИТ СЕРВЕРНЫЕ ПРОЦЕДУРЫ ПОДСИСТЕМЫ «ВАРИАНТЫ ОТЧЕТОВ»

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБНОВЛЕНИЯ ИНФОРМАЦИОННОЙ БАЗЫ

// Процедура обновляет вариантов отчетов при обновление ИБ или заполнение пустой ИБ
// Параметры:
//		ИзмененныеОбъектыДанных - соответствие ключ - старое имя отчета, значение - новое имя отчета
//
// Пример кода создания параметра процедуры:
//		СоответствиеИзмененияОбъектов = Новый Соответствие;
//		СоответствиеИзмененияОбъектов.Вставить("ВедомостьПоТоварамНаСкладах", "ВедомостьПоТоварамНаСкладахВЦенахНоменклатуры");
Функция ОбработкаПредопределенныхВариантов(ИзмененныеОбъектыДанных = Неопределено) Экспорт
	
	// обновить название отчетов и ключи объектов
	
	НачатьТранзакцию();
	Попытка
		БылиОшибки = ложь;
		
		ТЗ = "ВЫБРАТЬ
		|	ВариантыОтчетов.Ссылка,
		|	ВариантыОтчетов.КлючОбъекта,
		|	ВариантыОтчетов.ПредставлениеОбъекта
		|ИЗ
		|	Справочник.ВариантыОтчетов КАК ВариантыОтчетов";
		
		Запрос = Новый Запрос(ТЗ);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			ИмяОтчета   = Выборка.КлючОбъекта;
			
			Если ИзмененныеОбъектыДанных <> Неопределено тогда
				ИзменИмяОтчета = ИзмененныеОбъектыДанных[ИмяОтчета];
				Если ИзменИмяОтчета <> Неопределено тогда
					ИмяОтчета = ИзменИмяОтчета;
				КонецЕсли;
			КонецЕсли;
			
			ИмяОтчета   = СтрЗаменить(ИмяОтчета, "Отчет.", "");
			ОтчетМетаданные = Метаданные.Отчеты.Найти(ИмяОтчета);
			Если ОтчетМетаданные = Неопределено тогда
				ОбъектВариантаОтчета = Выборка.Ссылка.ПолучитьОбъект();
				ОбъектВариантаОтчета.ПометкаУдаления = истина;
				ОбъектВариантаОтчета.Записать();
			Иначе
				Если Выборка.ПредставлениеОбъекта <> ОтчетМетаданные.Синоним или Выборка.КлючОбъекта <> "Отчет." + ОтчетМетаданные.Имя тогда
					ОбъектВариантаОтчета = Выборка.Ссылка.ПолучитьОбъект();
					ОбъектВариантаОтчета.КлючОбъекта          = "Отчет." + ОтчетМетаданные.Имя;
					ОбъектВариантаОтчета.ПредставлениеОбъекта = ОтчетМетаданные.Синоним;
					ОбъектВариантаОтчета.ПометкаУдаления = ложь;
					ОбъектВариантаОтчета.Записать();
				КонецЕсли;
			КонецЕсли;
		КонецЦИкла;
		
		//Обновим варианты
		
		СписокОшибокПриОбновлении = Новый Массив;
		
		СписокКлючейПредопределенныхВариантов = Новый СписокЗначений;
		ОтчетыБезСКД = Новый Массив;
		                                         
		СписокОтчетов = ВариантыОтчетовПереопределяемый.СписокОтчетовПоддерживаемыхПодсистемой();
		СоответсвиеОтчетаПодсистемам = ПолучитьСписокПодсистемОтчетов();
		
		ДанныеОПодсистемахВариантов = Новый Структура("СоответствиеПодсистемИВариантов, НеИспользоватьПодсистемуОтчета");
		ДанныеОПодсистемахВариантов.СоответствиеПодсистемИВариантов = Новый ТаблицаЗначений;
		ДанныеОПодсистемахВариантов.СоответствиеПодсистемИВариантов.Колонки.Добавить("Ключ");
		ДанныеОПодсистемахВариантов.СоответствиеПодсистемИВариантов.Колонки.Добавить("ПутьКПодсистеме");
		
		ДанныеОПодсистемахВариантов.НеИспользоватьПодсистемуОтчета = Новый ТаблицаЗначений;
		ДанныеОПодсистемахВариантов.НеИспользоватьПодсистемуОтчета.Колонки.Добавить("Ключ");
		ДанныеОПодсистемахВариантов.НеИспользоватьПодсистемуОтчета.Колонки.Добавить("ПутьКПодсистеме");
		
		ОписаниеВариантов = Новый Соответствие;
		ЗначениеНастроекДопВариантов = Новый Соответствие;
		СписокДопВариантов = Новый СписокЗначений;
		
		Для каждого Отчет из Метаданные.Отчеты Цикл
			
			ПолноеИмяОтчета = Отчет.ПолноеИмя(); 
			
			Если СписокОтчетов.НайтиПоЗначению(ПолноеИмяОтчета) = Неопределено тогда
				Продолжить;
			КонецЕсли;
			
			Если Отчет.ОсновнаяСхемаКомпоновкиДанных <> Неопределено тогда
				Макет = Отчет.ОсновнаяСхемаКомпоновкиДанных.Имя;
				СКД = Отчеты[Отчет.Имя].ПолучитьМакет(Макет);
				Для каждого Вариант из СКД.ВариантыНастроек Цикл
					СписокКлючейПредопределенныхВариантов.Добавить(Отчет.ПолноеИмя() + "\" + Вариант.Имя, Вариант.Представление);
				КонецЦикла;
			Иначе
				СписокКлючейПредопределенныхВариантов.Добавить(ПолноеИмяОтчета + "\_СсылкаНаОтчет", Отчет.Синоним);
				ОтчетыБезСКД.Добавить(ПолноеИмяОтчета);
			КонецЕсли;
			
			ДобавитьВДопНастройки(ПолноеИмяОтчета, ОписаниеВариантов, ДанныеОПодсистемахВариантов, СписокДопВариантов, ЗначениеНастроекДопВариантов);
			
		КонецЦикла;
		
		Для каждого Вариант из СписокДопВариантов Цикл
			
			НомерСимвола = Найти(Вариант.Значение, "\");
			ПолноеИмяОтчета = Лев(Вариант.Значение, НомерСимвола-1);
			
			СписокКлючейПредопределенныхВариантов.Добавить(Вариант.Значение, Вариант.Представление);
			
		КонецЦикла;
		
		// получил три списка вариантов в справочнике отчетов.
		
		ВариантыДляОбновления      = Новый СписокЗначений;
		НовыеВариантыДляДобавления = Новый СписокЗначений;
		ВариантыНеИспользуемые     = Новый Массив;
		
		Для каждого Вариант из СписокКлючейПредопределенныхВариантов Цикл
			НовыеВариантыДляДобавления.Добавить(Вариант.Значение, Вариант.Представление);
		КонецЦикла;
		
		ТЗ = "ВЫБРАТЬ
		     |	ВариантыОтчетов.Ссылка,
		     |	ВариантыОтчетов.КлючОбъекта + ""\"" + ВариантыОтчетов.КлючВарианта КАК КлючОбъекта,
		     |	ВариантыОтчетов.ТипВариантаОтчета
		     |ИЗ
		     |	Справочник.ВариантыОтчетов КАК ВариантыОтчетов
		     |ГДЕ
		     |	(ВариантыОтчетов.ТипВариантаОтчета = ЗНАЧЕНИЕ(Перечисление.ТипыВариантовОтчетов.Предопределенный)
		     |			ИЛИ ВариантыОтчетов.ТипВариантаОтчета = ЗНАЧЕНИЕ(Перечисление.ТипыВариантовОтчетов.Отчет))";
			 
		Запрос = Новый Запрос(ТЗ);
	 	УстановитьПривилегированныйРежим(истина);
		Выборка = Запрос.Выполнить().Выбрать();
	 	УстановитьПривилегированныйРежим(ложь);
		
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.ТипВариантаОтчета = Перечисления.ТипыВариантовОтчетов.Предопределенный тогда
				ЭлементСписка = СписокКлючейПредопределенныхВариантов.НайтиПоЗначению(Выборка.КлючОбъекта);
			Иначе
				ЭлементСписка = СписокКлючейПредопределенныхВариантов.НайтиПоЗначению(Выборка.КлючОбъекта+"_СсылкаНаОтчет");
			КонецЕсли;
			
			Если ЭлементСписка = Неопределено тогда
				ВариантыНеИспользуемые.Добавить(Выборка.Ссылка);
			Иначе
				ВариантыДляОбновления.Добавить(Выборка.Ссылка, ЭлементСписка.Представление);
				Если Выборка.ТипВариантаОтчета = Перечисления.ТипыВариантовОтчетов.Предопределенный тогда
					ИсключаемыйВариант = НовыеВариантыДляДобавления.НайтиПоЗначению(Выборка.КлючОбъекта);
				Иначе
					ИсключаемыйВариант = НовыеВариантыДляДобавления.НайтиПоЗначению(Выборка.КлючОбъекта+"_СсылкаНаОтчет");
				КонецЕсли;
				
				НовыеВариантыДляДобавления.Удалить(ИсключаемыйВариант);
			КонецЕсли;
		КонецЦикла;
		
		// обновляем существующие варианты
		
		Для каждого Вариант из ВариантыДляОбновления Цикл
			
			ВариантОбъект = Вариант.Значение.Ссылка.Получитьобъект();
			
			ВариантОбъект.Наименование    = Вариант.Представление;
			ВариантОбъект.Описание        = ОписаниеВариантов[ВариантОбъект.КлючОбъекта + "\" + ВариантОбъект.КлючВарианта];
			ВариантОбъект.Видимость       = истина;
			ВариантОбъект.ПометкаУдаления = ложь;
			
			//удалим ссылки на подсистемы
			МассивПредопределенныхПодсистем = ВариантОбъект.Подсистемы.НайтиСтроки(Новый Структура("Предопределенная", истина));
			Для каждого Подсистема из МассивПредопределенныхПодсистем Цикл
				ВариантОбъект.Подсистемы.Удалить(Подсистема);
			КонецЦикла;
			
			// добавим подсистемы отчета
			МассивПодсистем = СоответсвиеОтчетаПодсистемам.НайтиСтроки(Новый Структура("Отчет", ВариантОбъект.КлючОбъекта));
			
			Для каждого Подсистема из МассивПодсистем Цикл
				
				СтруктураПоиска = Новый Структура("Ключ, ПутьКПодсистеме", ВариантОбъект.КлючОбъекта + "\" + ВариантОбъект.КлючВарианта, Подсистема.ПутьКПодсистеме);
				НеИспользоватьПодсистемуОтчета = ДанныеОПодсистемахВариантов.НеИспользоватьПодсистемуОтчета.НайтиСтроки(СтруктураПоиска);
				
				Если НеИспользоватьПодсистемуОтчета.Количество() = 0 тогда 
					СтрокаПодсистемы            = ВариантОбъект.Подсистемы.Добавить(); 
					СтрокаПодсистемы.Подсистема = Подсистема.ПутьКПодсистеме;
					СтрокаПодсистемы.Название   = Подсистема.НазваниеПодсистемы;
					СтрокаПодсистемы.Предопределенная = Истина;
				КонецЕсли;
			КонецЦикла;
			
			// добавим подсистемы варианта	
			МассивПодсистем = ДанныеОПодсистемахВариантов.СоответствиеПодсистемИВариантов.НайтиСтроки(Новый Структура("Ключ", ВариантОбъект.КлючОбъекта + "\" + ВариантОбъект.КлючВарианта));
		
			Для каждого Подсистема из МассивПодсистем Цикл
				
				ПодсистемаМетаДанные = Метаданные.НайтиПоПолномуИмени("Подсистема." + СтрЗаменить(Подсистема.ПутьКПодсистеме, "\", ".Подсистема."));
				НазваниеПодсистемы = "";
				Если ПодсистемаМетаДанные <> Неопределено тогда
					НазваниеПодсистемы = ПодсистемаМетаДанные.Представление();
				КонецЕсли;
				СтрокаПодсистемы            = ВариантОбъект.Подсистемы.Добавить(); 
				СтрокаПодсистемы.Подсистема = Подсистема.ПутьКПодсистеме;
				СтрокаПодсистемы.Название   = НазваниеПодсистемы;
				
				//Метаданные.Подсистемы.Маркетинг.Подсистемы.КонкурентнаяРазведка.ПолноеИмя()
				СтрокаПодсистемы.Предопределенная = Истина;
			КонецЦикла;
			
			ВариантОбъект.ПометкаУдаления = Ложь;

			Если СписокДопВариантов.НайтиПоЗначению(ВариантОбъект.КлючОбъекта) <> Неопределено тогда
				ВариантОбъект.ХранилищеЗначений = ЗначениеНастроекДопВариантов[ВариантОбъект.КлючОбъекта];
			КонецЕсли;
			
			ВариантОбъект.Записать();          
			
		КонецЦикла;
		
		Администратор = ТекущийПользователь();
		
		// добавить новые варианты
		Для каждого Вариант из НовыеВариантыДляДобавления Цикл
			
			ВариантОбъект              = Справочники.ВариантыОтчетов.СоздатьЭлемент();
			
			Если Найти(Вариант.Значение, "_СсылкаНаОтчет") = 0 тогда
				ВариантОбъект.ТипВариантаОтчета  = Перечисления.ТипыВариантовОтчетов.Предопределенный;
				НомерПозиции = Найти(Вариант.Значение, "\");
				КлючОбъекта  = Лев(Вариант.Значение, НомерПозиции-1);
				КлючВарианта = СтрЗаменить(Вариант.Значение, КлючОбъекта + "\" , "");
			Иначе
				ВариантОбъект.ТипВариантаОтчета  = Перечисления.ТипыВариантовОтчетов.Отчет;
				КлючОбъекта = СтрЗаменить(Вариант.Значение, "\_СсылкаНаОтчет", "");
				КлючВарианта = "";
			КонецЕсли;
			
			ИмяОтчета   = КлючОбъекта;
			
			Если ИзмененныеОбъектыДанных <> Неопределено тогда
				ИзменИмяОтчета = ИзмененныеОбъектыДанных[ИмяОтчета];
				Если ИзменИмяОтчета <> Неопределено тогда
					ИмяОтчета = ИзменИмяОтчета;
				КонецЕсли;
			КонецЕсли;
			
			ИмяОтчета       = СтрЗаменить(ИмяОтчета, "Отчет.", "");
			ОтчетМетаданные = Метаданные.Отчеты.Найти(ИмяОтчета);
			Если ОтчетМетаданные <> Неопределено тогда
				ВариантОбъект.ПредставлениеОбъекта = ОтчетМетаданные.Синоним;
			КонецЕсли;
			
			ВариантОбъект.КлючОбъекта   = КлючОбъекта;
			ВариантОбъект.КлючВарианта  = КлючВарианта;
			ВариантОбъект.Наименование  = Вариант.Представление;
			ВариантОбъект.Описание      = ОписаниеВариантов[Вариант.Значение];
			ВариантОбъект.Видимость     = истина;
			
			МассивПодсистем = СоответсвиеОтчетаПодсистемам.НайтиСтроки(Новый Структура("Отчет", ВариантОбъект.КлючОбъекта));
			
			Для каждого Подсистема из МассивПодсистем Цикл
				
				СтруктураПоиска = Новый Структура("Ключ, ПутьКПодсистеме", ВариантОбъект.КлючОбъекта + "\" + ВариантОбъект.КлючВарианта, Подсистема.ПутьКПодсистеме);
				НеИспользоватьПодсистемуОтчета = ДанныеОПодсистемахВариантов.НеИспользоватьПодсистемуОтчета.НайтиСтроки(СтруктураПоиска);
				
				Если НеИспользоватьПодсистемуОтчета.Количество() = 0 тогда 
					СтрокаПодсистемы            = ВариантОбъект.Подсистемы.Добавить(); 
					СтрокаПодсистемы.Подсистема = Подсистема.ПутьКПодсистеме;
					СтрокаПодсистемы.Название   = Подсистема.НазваниеПодсистемы;
					СтрокаПодсистемы.Предопределенная = Истина;
				КонецЕсли;
			КонецЦикла;
				
			// добавим подсистемы варианта	
			МассивПодсистем =  ДанныеОПодсистемахВариантов.СоответствиеПодсистемИВариантов.НайтиСтроки(Новый Структура("Ключ", ВариантОбъект.КлючОбъекта + "\" + ВариантОбъект.КлючВарианта));
		
			Для каждого Подсистема из МассивПодсистем Цикл
				ПодсистемаМетаДанные = Метаданные.НайтиПоПолномуИмени("Подсистема." + СтрЗаменить(Подсистема.ПутьКПодсистеме, "\", ".Подсистема."));
				НазваниеПодсистемы = "";
				Если ПодсистемаМетаДанные <> Неопределено тогда
					НазваниеПодсистемы = ПодсистемаМетаДанные.Представление();
				КонецЕсли;
				
				СтрокаПодсистемы            = ВариантОбъект.Подсистемы.Добавить(); 
				СтрокаПодсистемы.Подсистема = Подсистема.ПутьКПодсистеме;
				СтрокаПодсистемы.Название   = НазваниеПодсистемы;
				СтрокаПодсистемы.Предопределенная = Истина;
			КонецЦикла;
			
			ВариантОбъект.Администратор = Администратор;

			Если СписокДопВариантов.НайтиПоЗначению(ВариантОбъект.КлючОбъекта) <> Неопределено тогда
				ВариантОбъект.ХранилищеЗначений = ЗначениеНастроекДопВариантов.Получить(ВариантОбъект.КлючОбъекта + "\" + ВариантОбъект.КлючВарианта);
			КонецЕсли;
			
			ВариантОбъект.Записать();
			
		КонецЦикла;
		
		// добавить новые варианты
		Для каждого Вариант из ВариантыНеИспользуемые Цикл
			ВариантОбъект = Вариант.Получитьобъект();
			ВариантОбъект.УстановитьПометкуУдаления(истина);
		КонецЦикла;
		ЗафиксироватьТранзакцию();
	Исключение	
		ОписаниеОшибки = ИнформацияОбОшибке();
		ЗаписьЖурналаРегистрации(НСТр("ru = 'Обновление вариантов отчетов'"), УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки.Описание);
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	Возврат истина;
КонецФункции

//////////////////////////////////////////////////////////////////
// РАБОТА С ДОПОЛНИТЕЛЬНЫМИ НАСТРОЙКАМИ

Процедура ДобавитьПодсистемуВариантаВДопНастройках(ДопНастройки, Ключ, ПутьКПодсистеме) Экспорт
	
	Если ДопНастройки = Неопределено или Ключ = "" или ПутьКПодсистеме = "" тогда
		Возврат;   
	КонецЕсли;
	
	СтрокаПодсистемы      = ДопНастройки.СоответствиеПодсистемИВариантов.Добавить();
	СтрокаПодсистемы.Ключ = Ключ;
	СтрокаПодсистемы.ПутьКПодсистеме = ПутьКПодсистеме;
	
Конецпроцедуры
	
Процедура УдалитьПодсистемуВариантаВДопНастройках(ДопНастройки, Ключ, ПутьКПодсистеме) Экспорт
	
	Если ДопНастройки = Неопределено или Ключ = "" или ПутьКПодсистеме = "" тогда
		Возврат;   
	КонецЕсли;
	
	СтрокаНеИспПодсистем      = ДопНастройки.НеИспользоватьПодсистемыОтчета.Добавить();
	СтрокаНеИспПодсистем.Ключ = Ключ;
	СтрокаНеИспПодсистем.ПутьКПодсистеме = ПутьКПодсистеме;
	
КонецПроцедуры
	
Процедура ДобавитьПредопределенныйВариантВДопНастройках(ДопНастройки, Ключ, Представление, ЗначениеНастройки) Экспорт
	
	Если ДопНастройки = Неопределено или Ключ = "" или Представление = "" тогда
		Возврат;   
	КонецЕсли;
	
	ДопНастройки.ПредопределенныеВариантыБезСКД.Добавить(Ключ, Представление);
	ДопНастройки.ЗначенияНастроекОтчетовБезСКД.Вставить(Ключ, ЗначениеНастройки);
	
КонецПроцедуры

Процедура УстановитьОписаниеВариантаВДопНастройках(ДопНастройки, Ключ, Описание) Экспорт
	
	ДопНастройки.ОписаниеВариантов.Вставить(Ключ, Описание);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ВНУТРЕННИЕ ПРОЦЕДУРЫ ПОДСИСТЕМЫ

Функция ПолучитьСписокПодсистемОтчетов() Экспорт
	
	СоответствиеПодсистемОтчетам = Новый ТаблицаЗначений;
	СоответствиеПодсистемОтчетам.Колонки.Добавить("Отчет");
	СоответствиеПодсистемОтчетам.Колонки.Добавить("ПутьКПодсистеме");
	СоответствиеПодсистемОтчетам.Колонки.Добавить("НазваниеПодсистемы");
	СоответствиеПодсистемОтчетам.Колонки.Добавить("Пояснение");
	
	Для каждого Подсистема из Метаданные.Подсистемы Цикл
		Если Не Подсистема.ВключатьВКомандныйИнтерфейс тогда
			Продолжить;
		КонецЕсли;
		Путь = Подсистема.Имя;
		ДобавитьОтчетыПодсистемы(Подсистема, СоответствиеПодсистемОтчетам, Путь);
	КонецЦикла;
	
	Возврат СоответствиеПодсистемОтчетам;
	
КонецФункции

Процедура ДобавитьОтчетыПодсистемы(Подсистема, СоответствиеПодсистемОтчетам, Знач Путь)

	Для каждого ОбъектМетаданных из Подсистема.Состав Цикл
		
		Если ОбъектМетаданных = Неопределено тогда
			Продолжить;
		КонецЕсли;
		
		ПолноеИмя = ОбъектМетаданных.ПолноеИмя();
		
		Если Найти(ПолноеИмя, "Отчет.") <> 0 Тогда
			
			СтрокаДанных = СоответствиеПодсистемОтчетам.Добавить();
			СтрокаДанных.Отчет              = ПолноеИмя;
			СтрокаДанных.ПутьКПодсистеме    = Путь;
			СтрокаДанных.НазваниеПодсистемы = Подсистема.Синоним; 
			СтрокаДанных.Пояснение          = Подсистема.Пояснение; 
			
		КонецЕсли;	
	КонецЦикла;
	
	Для каждого Подсистема из Подсистема.Подсистемы Цикл
		Если Не Подсистема.ВключатьВКомандныйИнтерфейс тогда
			Продолжить;
		КонецЕсли;
		ДобавитьОтчетыПодсистемы(Подсистема, СоответствиеПодсистемОтчетам, Путь + "\" + Подсистема.Имя);
	КонецЦикла;

КонецПроцедуры

Функция ПолучитьВиртуальныеПодсистемы(ПутьПодсистемы) Экспорт
	
	ПодсистемыВиртуальные = Новый СписокЗначений;
	
	ПутиИПодсистем = ПолучитьПутьВиртуальныхПодсистем();
	
	Для каждого ЗначениеПути из ПутиИПодсистем Цикл
		
		Если ЗначениеПути.Значение.ПутьПодсистемы = ПутьПодсистемы тогда
			ПодсистемыВиртуальные.Добавить(ЗначениеПути.Значение.ПутьПодсистемы+"\"+ ЗначениеПути.Значение.ИмяПодсистемы, ЗначениеПути.Представление);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ПодсистемыВиртуальные;
	
КонецФункции

Функция ПолучитьПутьВиртуальныхПодсистем()
	
	СписокЗначений = Новый СписокЗначений;
	
	СписокВиртуальныхПодсистем = ВариантыОтчетовПереопределяемый.ОписаниеВиртуальныхПодсистем();
	
	Для каждого Подсистема из СписокВиртуальныхПодсистем Цикл
		
		НомерПозицииПоследнегоРазделителя = 0;
		
		ДлинаПути = СтрДлина(Подсистема.Значение);
		
		Для Сч = 1 по ДлинаПути Цикл
			
			Если КодСимвола(Подсистема.Значение, Сч) = КодСимвола("\") тогда
				
				НомерПозицииПоследнегоРазделителя = Сч;
				
			КонецЕсли;
		КонецЦикла;
		
		ПутьПодсистемы     = Лев(Подсистема.Значение, НомерПозицииПоследнегоРазделителя-1);
		ИмяПодсистемы      = Прав(Подсистема.Значение, ДлинаПути -НомерПозицииПоследнегоРазделителя);
		НазваниеПодсистемы = Подсистема.Представление;
		
		СписокЗначений.Добавить(Новый Структура("ПутьПодсистемы, ИмяПодсистемы", ПутьПодсистемы, ИмяПодсистемы), НазваниеПодсистемы);
		
	КонецЦикла;
	
	Возврат СписокЗначений;
КонецФункции

Функция ПолучитьСписокПодсистем(ПутиПодсистемы, ДеревоПодсистем) Экспорт
	
	СписокПодсистем =  Новый СписокЗначений;
	
	Для каждого Подсистема из Метаданные.Подсистемы Цикл
		
		Если Не Подсистема.ВключатьВКомандныйИнтерфейс тогда
			Продолжить;
		КонецЕсли;
		
		ПутьКПодсистеме = Подсистема.Имя;
		
		ПодсистемаПрисутствует = ложь;
		
		Для каждого ЭлементПодсистемы из ПутиПодсистемы Цикл
			ПутьПодсистемы = ЭлементПодсистемы.Значение;
			Если Найти(ПутьКПодсистеме, ПутьПодсистемы) > 0 тогда
				ПодсистемаПрисутствует = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ПодсистемаПрисутствует тогда
			СтрокаДереваПодсистем            = ДеревоПодсистем.Строки.Добавить();
			СтрокаДереваПодсистем.Подсистема = ПутьКПодсистеме;
			СтрокаДереваПодсистем.Название   = Подсистема.Синоним;
			
			ЕстьПравоПросмотра  = ПравоДоступа("Просмотр", Подсистема);
			Если НЕ ЕстьПравоПросмотра тогда
				Продолжить;
			КонецЕсли;
			
			ПараметрыФО = Новый Структура("");
			
			ДоступенПоФоОпциям = ложь;
			СодержитсяВФО = ложь;
			Для каждого ФО из Метаданные.ФункциональныеОпции Цикл
				
				Если ФО.Состав.Найти(Подсистема) = Неопределено тогда
					Продолжить;
				КонецЕсли;
				
				СодержитсяВФО = Истина;
				
				ЗначениеФО = ПолучитьФункциональнуюОпцию(ФО.Имя, ПараметрыФО);
				Если ТипЗнч(ЗначениеФО) = Тип("Булево") тогда
					Если ЗначениеФО тогда
						ДоступенПоФоОпциям = истина;
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Если СодержитсяВФО И НЕ ДоступенПоФоОпциям тогда
				Продолжить;
			КонецЕсли;
			
			
			СтрокаПодсистемы = СписокПодсистем.Добавить();
			СтрокаПодсистемы.Значение      = ПутьКПодсистеме;
			СтрокаПодсистемы.Представление = Подсистема.Синоним;
			ДобавитьДеревоПодсистем(СписокПодсистем, Подсистема, ПутьКПодсистеме, СтрокаДереваПодсистем);
		КонецЕсли;
		
	КонецЦикла;
	
	ВиртуальныеПодсистемы = ПолучитьВиртуальныеПодсистемы(Подсистема);
	
	Для каждого Подсистема из ВиртуальныеПодсистемы Цикл
		
		ПутьКПодсистеме = Подсистема.Значение;
		
		ПодсистемаПрисутствует = ложь;
		
		Для каждого ЭлементПодсистемы из ПутиПодсистемы Цикл
			ПутьПодсистемы = ЭлементПодсистемы.Значение;
			Если Найти(ПутьКПодсистеме, ПутьПодсистемы) > 0 тогда
				ПодсистемаПрисутствует = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ПодсистемаПрисутствует тогда
			
			СтрокаДереваПодсистем            = ДеревоПодсистем.Строки.Добавить();
			СтрокаДереваПодсистем.Подсистема = ПутьКПодсистеме;
			СтрокаДереваПодсистем.Название   = Подсистема.Представление;

			СтрокаПодсистемы = СписокПодсистем.Добавить();
			СтрокаПодсистемы.Значение = Подсистема.Значение;
			СтрокаПодсистемы.Представление = Подсистема.Представление;
			ДобавитьДеревоВиртуальныхПодсистем(СписокПодсистем, Подсистема.Значение, СтрокаДереваПодсистем);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СписокПодсистем;
	
КонецФункции

 Процедура ДобавитьДеревоПодсистем(СписокПодсистем, Подсистема, Знач ПутьПодсистемы, СтрокаДереваПодсистем)
	
	Для каждого ПодсистемаПодчиненная из Подсистема.Подсистемы Цикл
		
		Если Не ПодсистемаПодчиненная.ВключатьВКомандныйИнтерфейс тогда
			Продолжить;
		КонецЕсли;
		
		ЕстьПравоПросмотра  = ПравоДоступа("Просмотр", ПодсистемаПодчиненная);
		Если НЕ ЕстьПравоПросмотра тогда
			Продолжить;
		КонецЕсли;
		
		ПараметрыФО = Новый Структура("");
		
		ДоступенПоФоОпциям = ложь;
		СодержитсяВФО = ложь;
		Для каждого ФО из Метаданные.ФункциональныеОпции Цикл
			
			Если ФО.Состав.Найти(ПодсистемаПодчиненная.Имя) = Неопределено тогда
				Продолжить;
			КонецЕсли;
			
			СодержитсяВФО = Истина;
			
			ЗначениеФО = ПолучитьФункциональнуюОпцию(ФО.Имя, ПараметрыФО);
			Если ТипЗнч(ЗначениеФО) = Тип("Булево") тогда
				Если ЗначениеФО тогда
					ДоступенПоФоОпциям = истина;
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если СодержитсяВФО И НЕ ДоступенПоФоОпциям тогда
			Продолжить;
		КонецЕсли;
		
		ПутьКПодсистеме = ПутьПодсистемы + "\" + ПодсистемаПодчиненная.Имя;
		
		Если Найти(ПутьКПодсистеме, ПутьПодсистемы) > 0 тогда
			СтрокаДереваПодсистемПодчиненная            = СтрокаДереваПодсистем.Строки.Добавить();
			СтрокаДереваПодсистемПодчиненная.Подсистема = ПутьКПодсистеме;
			СтрокаДереваПодсистемПодчиненная.Название   = ПодсистемаПодчиненная.Синоним;
			
			СтрокаПодсистемы = СписокПодсистем.Добавить();
			СтрокаПодсистемы.Значение = ПутьКПодсистеме;
			СтрокаПодсистемы.Представление = ПодсистемаПодчиненная.Синоним;
			ДобавитьДеревоПодсистем(СписокПодсистем, ПодсистемаПодчиненная, ПутьКПодсистеме, СтрокаДереваПодсистемПодчиненная);
		КонецЕсли;
	КонецЦикла;
	
	ВиртуальныеПодсистемы = ПолучитьВиртуальныеПодсистемы(ПутьПодсистемы);
	
	Для каждого ПодсистемаПодчиненная из ВиртуальныеПодсистемы Цикл
		
		ПутьКПодсистеме = ПодсистемаПодчиненная.Значение;
		
		Если Найти(ПутьКПодсистеме, ПутьПодсистемы) > 0 тогда
			СтрокаДереваПодсистемПодчиненная            = СтрокаДереваПодсистем.Строки.Добавить();
			СтрокаДереваПодсистемПодчиненная.Подсистема = ПутьКПодсистеме;
			СтрокаДереваПодсистемПодчиненная.Название   = ПодсистемаПодчиненная.Представление;
			
			СтрокаПодсистемы               = СписокПодсистем.Добавить();
			СтрокаПодсистемы.Значение      = ПодсистемаПодчиненная.Значение;
			СтрокаПодсистемы.Представление = ПодсистемаПодчиненная.Представление;
			ДобавитьДеревоВиртуальныхПодсистем(СписокПодсистем, ПодсистемаПодчиненная.Значение, СтрокаДереваПодсистемПодчиненная);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьДеревоВиртуальныхПодсистем(СписокПодсистем, Знач Подсистема, СтрокаДереваПодсистем)
	
	ВиртуальныеПодсистемы = ПолучитьВиртуальныеПодсистемы(Подсистема);
	
	Для каждого ПодсистемаПодчиненная из ВиртуальныеПодсистемы Цикл
		
		ПутьКПодсистеме = ПодсистемаПодчиненная.Значение;
		Если Найти(ПутьКПодсистеме, Подсистема) > 0 тогда
			СтрокаДереваПодсистемПодчиненная            = СтрокаДереваПодсистем.Строки.Добавить();
			СтрокаДереваПодсистемПодчиненная.Подсистема = ПутьКПодсистеме;
			СтрокаДереваПодсистемПодчиненная.Название   = Подсистема.Представление;
			
			СтрокаПодсистемы = СписокПодсистем.Добавить();
			СтрокаПодсистемы.Значение = ПодсистемаПодчиненная.Значение;
			СтрокаПодсистемы.Представление = ПодсистемаПодчиненная.Представление;
			ДобавитьДеревоВиртуальныхПодсистем(СписокПодсистем, ПодсистемаПодчиненная.Значение, СтрокаДереваПодсистемПодчиненная);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ТекущийПользователь() Экспорт
	
	Возврат ОбщегоНазначения.ПолучитьЗначениеПеременной("глТекущийПользователь");
	
КонецФункции

Функция ПолучитьСтруктуруДополнительныхНастроек() Экспорт
	
	ДополнительныеНастройки = Новый Структура("ПредопределенныеВариантыБезСКД,
								 |ЗначенияНастроекОтчетовБезСКД,
								 |ОписаниеВариантов");
	
	ДополнительныеНастройки.ПредопределенныеВариантыБезСКД = Новый СписокЗначений;
	ДополнительныеНастройки.ЗначенияНастроекОтчетовБезСКД = Новый Соответствие;
	
	ДополнительныеНастройки.ОписаниеВариантов = Новый Соответствие;

	Возврат ДополнительныеНастройки;
	
КонецФункции

Процедура ДобавитьВДопНастройки(ИмяОтчета, ОписаниеВариантов, ДанныеОПодсистемахВариантов, СписокДопВариантов, ЗначениеНастроекДопВариантов)
	
	ДанныеДополнительныхНастроек = ПолучитьСтруктуруДополнительныхНастроек();
	
	Отчеты[СтрЗаменить(ИмяОтчета, "Отчет.", "")].НастройкиОтчета(ДанныеДополнительныхНастроек);
	
	//ОписаниеВариантов
	Для каждого ОписаниеВарианта из ДанныеДополнительныхНастроек.ОписаниеВариантов Цикл
		ОписаниеВариантов.Вставить(ИмяОтчета + "\" + ОписаниеВарианта.Ключ, ОписаниеВарианта.Значение);
	КонецЦикла;
	
	//ПредопределенныеВариантыБезСКД
	Для каждого ВариантБезСКД из ДанныеДополнительныхНастроек.ПредопределенныеВариантыБезСКД Цикл
		СписокДопВариантов.Добавить(ИмяОтчета + "\" + ВариантБезСКД.Значение, ВариантБезСКД.Представление);
	КонецЦикла;
	
	//ПредопределенныеВариантыБезСКД
	Для каждого ЗначениеВариантаБезСКД из ДанныеДополнительныхНастроек.ЗначенияНастроекОтчетовБезСКД Цикл
		ЗначениеНастроекДопВариантов.Вставить(ИмяОтчета + "\" + ВариантБезСКД.Ключ, ВариантБезСКД.Значение);
	КонецЦикла;
	
	ДанныеДополнительныхНастроек = ВариантыОтчетовПереопределяемый.КомандныйИнтерфейс();
	
	//СоответствиеПодсистемИВариантов
	Для каждого ДанныеОПодсистеме из ДанныеДополнительныхНастроек.СоответствиеПодсистемИВариантов Цикл
		СтрокаПодсистемы = ДанныеОПодсистемахВариантов.СоответствиеПодсистемИВариантов.Добавить();
		СтрокаПодсистемы.Ключ = ИмяОтчета + "\" + ДанныеОПодсистеме.Ключ;
		СтрокаПодсистемы.ПутьКПодсистеме = ДанныеОПодсистеме.ПутьКПодсистеме;
	КонецЦикла;
	
	//СоответствиеПодсистемИВариантов
	Для каждого ДанныеОПодсистеме из ДанныеДополнительныхНастроек.НеИспользоватьПодсистемыОтчета Цикл
		СтрокаПодсистемы = ДанныеОПодсистемахВариантов.НеИспользоватьПодсистемуОтчета.Добавить();
		СтрокаПодсистемы.Ключ = ИмяОтчета + "\" + ДанныеОПодсистеме.Ключ;
		СтрокаПодсистемы.ПутьКПодсистеме = ДанныеОПодсистеме.ПутьКПодсистеме;
	КонецЦикла;
	
КонецПроцедуры



