////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры, функции

Функция ПолучитьНаправлениеУпорядочивания(ИмяПоля) Экспорт
	
	Если ИмяПоля = "ДатаПолучения" ИЛИ ИмяПоля = "ДатаСобытия" ИЛИ ИмяПоля = "Состояние" Тогда
		Возврат "УБЫВ";
	Иначе
		Возврат "ВОЗР";
	КонецЕсли;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Процедуры, функции объекта

Функция ПолучитьСписокЗаявок(ПолеДляУпорядочивания, ДоступныеУчетныеЗаписиДляЧтения, СтруктураОтбора = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ТекущаяДата",	НачалоДня(ОбщегоНазначения.ПолучитьРабочуюДату()));
	
	РежимНабораПерсонала = ПроцедурыУправленияПерсоналомДополнительный.ПолучитьРежимНабораПерсонала();
	
	ТекстУсловияОтбора = НаборПерсоналаДополнительный.ТекстУсловияЗапросаПоСтруктуреОтбора(СтруктураОтбора);
	НаборПерсоналаДополнительный.ЗаполнитьПараметрыЗапросаПоСтруктуреОтбора(Запрос, СтруктураОтбора);
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.ЭлектронноеПисьмо) Тогда
		Запрос.УстановитьПараметр("СписокУчетныхЗаписей",	ДоступныеУчетныеЗаписиДляЧтения);
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЗаявкиКандидатов.Наименование КАК Наименование,
		|	ЗаявкиКандидатов.Ссылка КАК Ссылка,
		|	ЗаявкиКандидатов.Важность КАК Важность,
		|	ЕСТЬNULL(НеразобранныеПисьма.КоличествоНеразобранныхПисем, 0) КАК Количество";
		Если ПолеДляУпорядочивания = "ДатаСобытия" Тогда
		Запрос.Текст = Запрос.Текст + ",
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(События.ДатаСобытия, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) < ДОБАВИТЬКДАТЕ(&ТекущаяДата, НЕДЕЛЯ, -4)
		|			ТОГДА ДОБАВИТЬКДАТЕ(&ТекущаяДата, НЕДЕЛЯ, -5)
		|		КОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(События.ДатаСобытия, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) < ДОБАВИТЬКДАТЕ(&ТекущаяДата, НЕДЕЛЯ, -3)
		|			ТОГДА ДОБАВИТЬКДАТЕ(&ТекущаяДата, НЕДЕЛЯ, -4)
		|		КОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(События.ДатаСобытия, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) < ДОБАВИТЬКДАТЕ(&ТекущаяДата, НЕДЕЛЯ, -2)
		|			ТОГДА ДОБАВИТЬКДАТЕ(&ТекущаяДата, НЕДЕЛЯ, -3)
		|		КОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(События.ДатаСобытия, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) < ДОБАВИТЬКДАТЕ(&ТекущаяДата, НЕДЕЛЯ, -1)
		|			ТОГДА ДОБАВИТЬКДАТЕ(&ТекущаяДата, НЕДЕЛЯ, -2)
		|		КОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(События.ДатаСобытия, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) > ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 1)
		|			ТОГДА ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 1)
		|		ИНАЧЕ ЕСТЬNULL(НАЧАЛОПЕРИОДА(События.ДатаСобытия, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1))
		|	КОНЕЦ КАК УпорядочиваниеДляДатыСобытия,
		|	ЕСТЬNULL(НАЧАЛОПЕРИОДА(События.ДатаСобытия, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаСобытия,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(События.ДатаСобытия, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ КАК ДополнительноеУпорядочивание";
		ИначеЕсли ПолеДляУпорядочивания = "Ответственный" Тогда
		Запрос.Текст = Запрос.Текст + ",
		|	ВЫБОР
		|		КОГДА ЗаявкиКандидатов.Ответственный = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(ЗаявкиКандидатов.Вакансия.Ответственный,ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка))
		|		ИНАЧЕ ЗаявкиКандидатов.Ответственный
		|	КОНЕЦ КАК Ответственный";
		ИначеЕсли ПолеДляУпорядочивания = "Подразделение" Тогда
			Если РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		Запрос.Текст = Запрос.Текст + ",
		|	ВЫБОР
		|		КОГДА ЗаявкиКандидатов.Вакансия = ЗНАЧЕНИЕ(Справочник.Вакансии.ПустаяСсылка)
		|			ТОГДА ВЫБОР КОГДА ЗаявкиКандидатов.Подразделение ССЫЛКА Справочник.ПодразделенияОрганизаций ТОГДА ЗаявкиКандидатов.Подразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КОНЕЦ
		|		ИНАЧЕ ВЫБОР КОГДА ЗаявкиКандидатов.Вакансия.Подразделение ССЫЛКА Справочник.ПодразделенияОрганизаций ТОГДА ЗаявкиКандидатов.Вакансия.Подразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КОНЕЦ
		|	КОНЕЦ КАК Подразделение";
			Иначе
		Запрос.Текст = Запрос.Текст + ",
		|	ВЫБОР
		|		КОГДА ЗаявкиКандидатов.Вакансия = ЗНАЧЕНИЕ(Справочник.Вакансии.ПустаяСсылка)
		|			ТОГДА ВЫБОР КОГДА ЗаявкиКандидатов.Подразделение ССЫЛКА Справочник.Подразделения ТОГДА ЗаявкиКандидатов.Подразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка) КОНЕЦ
		|		ИНАЧЕ ВЫБОР КОГДА ЗаявкиКандидатов.Вакансия.Подразделение ССЫЛКА Справочник.Подразделения ТОГДА ЗаявкиКандидатов.Вакансия.Подразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка) КОНЕЦ
		|	КОНЕЦ КАК Подразделение";
			КонецЕсли;
		ИначеЕсли ПолеДляУпорядочивания = "Должность" Тогда
		Запрос.Текст = Запрос.Текст + ",
		|	ВЫБОР
		|		КОГДА ЗаявкиКандидатов.Вакансия = ЗНАЧЕНИЕ(Справочник.Вакансии.ПустаяСсылка)
		|			ТОГДА ЗаявкиКандидатов.Должность
		|		ИНАЧЕ ЗаявкиКандидатов.Вакансия.Должность
		|	КОНЕЦ КАК Должность";
		Иначе
		Запрос.Текст = Запрос.Текст + ",
		|	ЗаявкиКандидатов."+ПолеДляУпорядочивания;
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ИЗ
		|	Справочник.ЗаявкиКандидатов КАК ЗаявкиКандидатов
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ЭлектронноеПисьмо.ЗаявкаКандидата КАК ЗаявкаКандидата,
		|			СУММА(1) КАК КоличествоНеразобранныхПисем
		|		ИЗ
		|			Документ.ЭлектронноеПисьмо КАК ЭлектронноеПисьмо
		|		ГДЕ
		|			ЭлектронноеПисьмо.ЗаявкаКандидата <> ЗНАЧЕНИЕ(Справочник.ЗаявкиКандидатов.ПустаяСсылка)
		|			И ЭлектронноеПисьмо.НеРассмотрено
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ЭлектронноеПисьмо.ЗаявкаКандидата) КАК НеразобранныеПисьма
		|		ПО ЗаявкиКандидатов.Ссылка = НеразобранныеПисьма.ЗаявкаКандидата";
		Если (ПолеДляУпорядочивания = "Состояние") ИЛИ (ПолеДляУпорядочивания = "ДатаСобытия") Тогда
		Запрос.Текст = Запрос.Текст + "
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВложенныйЗапрос.ЗаявкаКандидата КАК ЗаявкаКандидата,
		|			МАКСИМУМ(ВложенныйЗапрос.Дата) КАК ДатаСобытия
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ЭлектронноеПисьмо.ЗаявкаКандидата КАК ЗаявкаКандидата,
		|				МАКСИМУМ(ВЫБОР
		|						КОГДА НАЧАЛОПЕРИОДА(ЭлектронноеПисьмо.РассмотретьПосле, ДЕНЬ) <= &ТекущаяДата И ЭлектронноеПисьмо.РассмотретьПосле > ЭлектронноеПисьмо.ДатаТранспорта
		|							ТОГДА ЭлектронноеПисьмо.РассмотретьПосле
		|						ИНАЧЕ ЭлектронноеПисьмо.ДатаТранспорта
		|					КОНЕЦ) КАК Дата
		|			ИЗ
		|				Документ.ЭлектронноеПисьмо КАК ЭлектронноеПисьмо
		|			ГДЕ
		|				ЭлектронноеПисьмо.НеРассмотрено
		|				И (НЕ ЭлектронноеПисьмо.ПометкаУдаления)
		|				И ЭлектронноеПисьмо.ЗаявкаКандидата <> ЗНАЧЕНИЕ(Справочник.ЗаявкиКандидатов.ПустаяСсылка)
		|				И ЭлектронноеПисьмо.УчетнаяЗапись В (&СписокУчетныхЗаписей)
		|	
		|			СГРУППИРОВАТЬ ПО
		|				ЭлектронноеПисьмо.ЗаявкаКандидата
		|	
		|			ОБЪЕДИНИТЬ
		|	
		|			ВЫБРАТЬ
		|				Встречи.ЗаявкаКандидата,
		|				МАКСИМУМ(ВЫБОР
		|						КОГДА НАЧАЛОПЕРИОДА(Встречи.ДатаНачала, ДЕНЬ) > &ТекущаяДата
		|							ТОГДА Встречи.Дата
		|						ИНАЧЕ Встречи.ДатаНачала
		|					КОНЕЦ)
		|			ИЗ
		|				Документ.Встречи КАК Встречи
		|			ГДЕ
		|				Встречи.Проведен
		|				И Встречи.ЗаявкаКандидата <> ЗНАЧЕНИЕ(Справочник.ЗаявкиКандидатов.ПустаяСсылка)
		|	
		|			СГРУППИРОВАТЬ ПО
		|				Встречи.ЗаявкаКандидата
		|	
		|			ОБЪЕДИНИТЬ
		|	
		|			ВЫБРАТЬ
		|				ЗаявкиКандидатов.Ссылка,
		|				ЗаявкиКандидатов.ДатаОткрытия
		|			ИЗ
		|				Справочник.ЗаявкиКандидатов КАК ЗаявкиКандидатов
		|	
		|			ОБЪЕДИНИТЬ
		|	
		|			ВЫБРАТЬ
		|				ТекущаяРаботаПоЗаявкамКандидатов.ЗаявкаКандидата,
		|				МАКСИМУМ(ТекущаяРаботаПоЗаявкамКандидатов.Период)
		|			ИЗ
		|				РегистрСведений.ТекущаяРаботаПоЗаявкамКандидатов КАК ТекущаяРаботаПоЗаявкамКандидатов
		|		
		|			СГРУППИРОВАТЬ ПО
		|				ТекущаяРаботаПоЗаявкамКандидатов.ЗаявкаКандидата) КАК ВложенныйЗапрос
		|		
		|				СГРУППИРОВАТЬ ПО
		|					ВложенныйЗапрос.ЗаявкаКандидата) КАК События
		|		ПО ЗаявкиКандидатов.Ссылка = События.ЗаявкаКандидата";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ГДЕ
		|	(НЕ ЗаявкиКандидатов.Закрыта)
		|	И (НЕ ЗаявкиКандидатов.ПометкаУдаления)" 
		+ ТекстУсловияОтбора;
		Запрос.Текст = Запрос.Текст + "
		|УПОРЯДОЧИТЬ ПО";
		Если ПолеДляУпорядочивания = "ДатаСобытия" Тогда
		Запрос.Текст = Запрос.Текст + "
		|	УпорядочиваниеДляДатыСобытия УБЫВ,
		|	ЗаявкиКандидатов.Важность,
		|	ДатаСобытия "+ПолучитьНаправлениеУпорядочивания(ПолеДляУпорядочивания) + ",
		|	ДополнительноеУпорядочивание,";
		ИначеЕсли ПолеДляУпорядочивания = "Состояние" Тогда
		Запрос.Текст = Запрос.Текст + "
		|	ЕСТЬNULL(Состояние.КодУпорядочивания, -1) "+ПолучитьНаправлениеУпорядочивания(ПолеДляУпорядочивания) + ",
		|	ЗаявкиКандидатов.Важность,";
		ИначеЕсли ПолеДляУпорядочивания = "Наименование" Тогда
		Запрос.Текст = Запрос.Текст + "
		|	ЗаявкиКандидатов.Важность,
		|	"+ПолеДляУпорядочивания+" "+ПолучитьНаправлениеУпорядочивания(ПолеДляУпорядочивания) + ",";
		Иначе
		Запрос.Текст = Запрос.Текст + "
		|	"+ПолеДляУпорядочивания+" "+ПолучитьНаправлениеУпорядочивания(ПолеДляУпорядочивания) + ",
		|	ЗаявкиКандидатов.Важность,";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|	Наименование
		|АВТОУПОРЯДОЧИВАНИЕ";
		
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЗаявкиКандидатов.Наименование КАК Наименование,
		|	ЗаявкиКандидатов.Ссылка КАК Ссылка,
		|	ЗаявкиКандидатов.Важность КАК Важность,
		|	0 КАК Количество";
		Если ПолеДляУпорядочивания = "ДатаСобытия" Тогда
		Запрос.Текст = Запрос.Текст + ",
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(События.ДатаСобытия, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) < ДОБАВИТЬКДАТЕ(&ТекущаяДата, НЕДЕЛЯ, -4)
		|			ТОГДА ДОБАВИТЬКДАТЕ(&ТекущаяДата, НЕДЕЛЯ, -5)
		|		КОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(События.ДатаСобытия, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) < ДОБАВИТЬКДАТЕ(&ТекущаяДата, НЕДЕЛЯ, -3)
		|			ТОГДА ДОБАВИТЬКДАТЕ(&ТекущаяДата, НЕДЕЛЯ, -4)
		|		КОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(События.ДатаСобытия, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) < ДОБАВИТЬКДАТЕ(&ТекущаяДата, НЕДЕЛЯ, -2)
		|			ТОГДА ДОБАВИТЬКДАТЕ(&ТекущаяДата, НЕДЕЛЯ, -3)
		|		КОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(События.ДатаСобытия, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) < ДОБАВИТЬКДАТЕ(&ТекущаяДата, НЕДЕЛЯ, -1)
		|			ТОГДА ДОБАВИТЬКДАТЕ(&ТекущаяДата, НЕДЕЛЯ, -2)
		|		КОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(События.ДатаСобытия, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) > ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 1)
		|			ТОГДА ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 1)
		|		ИНАЧЕ ЕСТЬNULL(НАЧАЛОПЕРИОДА(События.ДатаСобытия, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1))
		|	КОНЕЦ КАК УпорядочиваниеДляДатыСобытия,
		|	ЕСТЬNULL(НАЧАЛОПЕРИОДА(События.ДатаСобытия, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаСобытия,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(События.ДатаСобытия, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ КАК ДополнительноеУпорядочивание";
		ИначеЕсли ПолеДляУпорядочивания = "Ответственный" Тогда
		Запрос.Текст = Запрос.Текст + ",
		|	ВЫБОР
		|		КОГДА ЗаявкиКандидатов.Ответственный = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(ЗаявкиКандидатов.Вакансия.Ответственный,ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка))
		|		ИНАЧЕ ЗаявкиКандидатов.Ответственный
		|	КОНЕЦ КАК Ответственный";
		ИначеЕсли ПолеДляУпорядочивания = "Подразделение" Тогда
			Если РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		Запрос.Текст = Запрос.Текст + ",
		|	ВЫБОР
		|		КОГДА ЗаявкиКандидатов.Вакансия = ЗНАЧЕНИЕ(Справочник.Вакансии.ПустаяСсылка)
		|			ТОГДА ВЫБОР КОГДА ЗаявкиКандидатов.Подразделение ССЫЛКА Справочник.ПодразделенияОрганизаций ТОГДА ЗаявкиКандидатов.Подразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КОНЕЦ
		|		ИНАЧЕ ВЫБОР КОГДА ЗаявкиКандидатов.Вакансия.Подразделение ССЫЛКА Справочник.ПодразделенияОрганизаций ТОГДА ЗаявкиКандидатов.Вакансия.Подразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КОНЕЦ
		|	КОНЕЦ КАК Подразделение";
			Иначе
		Запрос.Текст = Запрос.Текст + ",
		|	ВЫБОР
		|		КОГДА ЗаявкиКандидатов.Вакансия = ЗНАЧЕНИЕ(Справочник.Вакансии.ПустаяСсылка)
		|			ТОГДА ВЫБОР КОГДА ЗаявкиКандидатов.Подразделение ССЫЛКА Справочник.Подразделения ТОГДА ЗаявкиКандидатов.Подразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка) КОНЕЦ
		|		ИНАЧЕ ВЫБОР КОГДА ЗаявкиКандидатов.Вакансия.Подразделение ССЫЛКА Справочник.Подразделения ТОГДА ЗаявкиКандидатов.Вакансия.Подразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка) КОНЕЦ
		|	КОНЕЦ КАК Подразделение";
			КонецЕсли;
		ИначеЕсли ПолеДляУпорядочивания = "Должность" Тогда
		Запрос.Текст = Запрос.Текст + ",
		|	ВЫБОР
		|		КОГДА ЗаявкиКандидатов.Вакансия = ЗНАЧЕНИЕ(Справочник.Вакансии.ПустаяСсылка)
		|			ТОГДА ЗаявкиКандидатов.Должность
		|		ИНАЧЕ ЗаявкиКандидатов.Вакансия.Должность
		|	КОНЕЦ КАК Должность";
		Иначе
		Запрос.Текст = Запрос.Текст + ",
		|	ЗаявкиКандидатов."+ПолеДляУпорядочивания;
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ИЗ
		|	Справочник.ЗаявкиКандидатов КАК ЗаявкиКандидатов";
		Если (ПолеДляУпорядочивания = "Состояние") ИЛИ (ПолеДляУпорядочивания = "ДатаСобытия") Тогда
		Запрос.Текст = Запрос.Текст + "
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВложенныйЗапрос.ЗаявкаКандидата КАК ЗаявкаКандидата,
		|			МАКСИМУМ(ВложенныйЗапрос.ДатаСобытия) КАК ДатаСобытия
		|		ИЗ
		|			(ВЫБРАТЬ
		|				Встречи.ЗаявкаКандидата КАК ЗаявкаКандидата,
		|				МАКСИМУМ(ВЫБОР
		|						КОГДА НАЧАЛОПЕРИОДА(Встречи.ДатаНачала, ДЕНЬ) > &ТекущаяДата
		|							ТОГДА Встречи.Дата
		|						ИНАЧЕ Встречи.ДатаНачала
		|					КОНЕЦ) КАК ДатаСобытия
		|			ИЗ
		|				Документ.Встречи КАК Встречи
		|			ГДЕ
		|				Встречи.Проведен
		|				И Встречи.ЗаявкаКандидата <> ЗНАЧЕНИЕ(Справочник.ЗаявкиКандидатов.ПустаяСсылка)
		|	
		|			СГРУППИРОВАТЬ ПО
		|				Встречи.ЗаявкаКандидата
		|	
		|			ОБЪЕДИНИТЬ
		|	
		|			ВЫБРАТЬ
		|				ЗаявкиКандидатов.Ссылка,
		|				ЗаявкиКандидатов.ДатаОткрытия
		|			ИЗ
		|				Справочник.ЗаявкиКандидатов КАК ЗаявкиКандидатов
		|	
		|			ОБЪЕДИНИТЬ
		|	
		|			ВЫБРАТЬ
		|				ТекущаяРаботаПоЗаявкамКандидатов.ЗаявкаКандидата,
		|				МАКСИМУМ(ТекущаяРаботаПоЗаявкамКандидатов.Период)
		|			ИЗ
		|				РегистрСведений.ТекущаяРаботаПоЗаявкамКандидатов КАК ТекущаяРаботаПоЗаявкамКандидатов
		|		
		|			СГРУППИРОВАТЬ ПО
		|				ТекущаяРаботаПоЗаявкамКандидатов.ЗаявкаКандидата) КАК ВложенныйЗапрос
		|		
		|				СГРУППИРОВАТЬ ПО
		|					ВложенныйЗапрос.ЗаявкаКандидата) КАК События
		|		ПО ЗаявкиКандидатов.Ссылка = События.ЗаявкаКандидата";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ГДЕ
		|	(НЕ ЗаявкиКандидатов.Закрыта)
		|	И (НЕ ЗаявкиКандидатов.ПометкаУдаления)" 
		+ ТекстУсловияОтбора;
		Запрос.Текст = Запрос.Текст + "
		|УПОРЯДОЧИТЬ ПО";
		Если ПолеДляУпорядочивания = "ДатаСобытия" Тогда
		Запрос.Текст = Запрос.Текст + "
		|	УпорядочиваниеДляДатыСобытия УБЫВ,
		|	ЗаявкиКандидатов.Важность,
		|	"+ПолеДляУпорядочивания+" "+ПолучитьНаправлениеУпорядочивания(ПолеДляУпорядочивания) + ",
		|	ДополнительноеУпорядочивание,";
		ИначеЕсли ПолеДляУпорядочивания = "Состояние" Тогда
		Запрос.Текст = Запрос.Текст + "
		|	ЕСТЬNULL(Состояние.КодУпорядочивания, -1) "+ПолучитьНаправлениеУпорядочивания(ПолеДляУпорядочивания) + ",
		|	ЗаявкиКандидатов.Важность,";
		ИначеЕсли ПолеДляУпорядочивания = "Наименование" Тогда
		Запрос.Текст = Запрос.Текст + "
		|	ЗаявкиКандидатов.Важность,
		|	"+ПолеДляУпорядочивания+" "+ПолучитьНаправлениеУпорядочивания(ПолеДляУпорядочивания) + ",";
		Иначе
		Запрос.Текст = Запрос.Текст + "
		|	"+ПолеДляУпорядочивания+" "+ПолучитьНаправлениеУпорядочивания(ПолеДляУпорядочивания) + ",
		|	ЗаявкиКандидатов.Важность,";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|	Наименование
		|АВТОУПОРЯДОЧИВАНИЕ";
		
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Процедуры, функции для работы формы документа

Функция ПолучитьТекстЗапросаПоЗаявкам() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗаявкиКандидатов.Состояние,
	|	ЗаявкиКандидатов.ИсточникИнформации,
	|	ЗаявкиКандидатов.Вакансия,
	|	ЗаявкиКандидатов.Подразделение,
	|	ЗаявкиКандидатов.Должность,
	|	ЗаявкиКандидатов.ГруппаЗаявок,
	|	ВЫБОР
	|		КОГДА ЗаявкиКандидатов.Состояние = ЗНАЧЕНИЕ(Справочник.СостоянияЗаявокКандидатов.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СостояниеНеЗаполнено,
	|	ВЫБОР
	|		КОГДА ЗаявкиКандидатов.ИсточникИнформации = ЗНАЧЕНИЕ(Справочник.ИсточникиИнформации.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИсточникИнформацииНеЗаполнен,
	|	ВЫБОР
	|		КОГДА ЗаявкиКандидатов.Вакансия = ЗНАЧЕНИЕ(Справочник.Вакансии.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВакансияНеЗаполнена,
	|	ВЫБОР
	|		КОГДА ЗаявкиКандидатов.Подразделение = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЗаявкиКандидатов.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|				ИЛИ ЗаявкиКандидатов.Подразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПодразделениеНеЗаполнено,
	|	ВЫБОР
	|		КОГДА ЗаявкиКандидатов.Должность = ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДолжностьНеЗаполнена,
	|	ВЫБОР
	|		КОГДА (ЗаявкиКандидатов.Подразделение = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЗаявкиКандидатов.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|				ИЛИ ЗаявкиКандидатов.Подразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
	|				И ЗаявкиКандидатов.Должность = ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РабочееМестоНеЗаполнено,
	|	ВЫБОР
	|		КОГДА ЗаявкиКандидатов.ГруппаЗаявок = ЗНАЧЕНИЕ(Справочник.ГруппыЗаявокКандидатов.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ГруппаЗаявокНеЗаполнена,
	|	ЗаявкиКандидатов.ДатаОткрытия,
	|	ВЫБОР
	|		КОГДА ЗаявкиКандидатов.ДатаОткрытия = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДатаОткрытияНеУказана,
	|	ЗаявкиКандидатов.Комментарий,
	|	ВЫБОР
	|		КОГДА ЗаявкиКандидатов.Комментарий ПОДОБНО """"
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК КомментарийНеЗаполнен
	|ИЗ
	|	Справочник.ЗаявкиКандидатов КАК ЗаявкиКандидатов
	|ГДЕ
	|	ЗаявкиКандидатов.Ссылка = &ЗаявкаКандидата";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьНаименованиеСправочникаПодразделения() Экспорт
	
	РежимНабораПерсонала = ПроцедурыУправленияПерсоналомДополнительный.ПолучитьРежимНабораПерсонала();
	
	Если РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		НаименованиеСправочника = "ПодразделенияОрганизаций";	
	Иначе
		НаименованиеСправочника = "Подразделения";
	КонецЕсли;
	
	Возврат НаименованиеСправочника;
	
КонецФункции

Функция ПолучитьНаименованиеСправочникаДолжности() Экспорт
	
	НаименованиеСправочника = "Должности";	
	
	Возврат НаименованиеСправочника;
	
КонецФункции

Процедура ПроверитьДополнительныеУсловияКомандыФормы(Команда, ЭлементыФормы, Значение, ЭтаФорма, ЭтотОбъект) Экспорт
	
	Если Команда = "OpenMeeting" Тогда
		ДанныеСтроки = ЭлементыФормы.ТабличноеПолеЗаявкиКандидатов.ТекущиеДанные;
		Если ДанныеСтроки = Неопределено ИЛИ ДанныеСтроки.Ссылка.Пустая() Тогда
			Возврат;
		КонецЕсли;
	
		Если Не ПустаяСтрока(Значение) Тогда
			ВыбранныйДокумент	= XMLЗначение(Тип("ДокументСсылка.Встречи"), Значение);
			ВыбранныйДокумент.ПолучитьФорму(, ЭтаФорма, ЭтотОбъект).Открыть()
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПроверитьДополнительныеУсловияЗначенияГруппировки(ЗначениеГруппировки, Объект) Экспорт
	
	Если ТипЗнч(ЗначениеГруппировки) = Тип("СправочникСсылка.СостоянияЗаявокКандидатов") Тогда
		Если Не ЗначениеГруппировки.Пустая() И ТипЗнч(Объект) = Тип("Форма") Тогда
			// Реквизит заполняем только, если в процедуру передана форма
			// Иначе необходимо записывать состояние непосредственно в регистр
			Строка = Объект.ТекущаяРабота.Добавить();
			Строка.Период		= ОбщегоНазначенияЗК.ПолучитьРабочуюДату();
			Строка.Состояние	= ЗначениеГруппировки;
			Объект.Состояние	= ЗначениеГруппировки;
		КонецЕсли;
	ИначеЕсли	ТипЗнч(ЗначениеГруппировки) = Тип("СправочникСсылка.Подразделения") ИЛИ
				ТипЗнч(ЗначениеГруппировки) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
		Объект.Подразделение	= ЗначениеГруппировки;
		
	ИначеЕсли	ТипЗнч(ЗначениеГруппировки) = Тип("СправочникСсылка.Должности") Тогда
		Объект.Должность		= ЗначениеГруппировки;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьДополнительныеУсловияИмяГруппировки(ИмяГруппировки) Экспорт
	
	Если ТипЗнч(ИмяГруппировки) = Тип("СправочникСсылка.Подразделения") И ИмяГруппировки.Пустая() Тогда
		ИмяГруппировки = "Подразделение не назначено";
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнитьМакет(Форма, Выборка, ТекстМакетаОписанияЗаявки, КандидатСсылка) Экспорт
	
	НаборПерсоналаДополнительный.ДополнитьМакетОписанияЗаявки(Форма, Выборка, ТекстМакетаОписанияЗаявки, КандидатСсылка);
	
	ВыборкаВстреч = НаборПерсоналаДополнительный.ПолучитьСписокВстречПоЗаявке(КандидатСсылка);
	Если ВыборкаВстреч.Количество() > 0 Тогда
		ЕстьЗапланированныеВстречи	= "inline";
		СписокЗапланированныхВстреч	= "";
		Пока ВыборкаВстреч.Следующий() Цикл
			Если НачалоДня(ВыборкаВстреч.ДатаНачала) = НачалоДня(ВыборкаВстреч.ДатаОкончания) Тогда
				ПериодВстречи = " " + Формат(ВыборкаВстреч.ДатаНачала, "ДФ='d MMMM'") + " с " + Формат(ВыборкаВстреч.ДатаНачала, "ДФ=H:mm") + " до " + Формат(ВыборкаВстреч.ДатаОкончания, "ДФ=H:mm");
			Иначе
				ПериодВстречи = " с " + Формат(ВыборкаВстреч.ДатаНачала, "ДФ='d MMMM H:mm'") + " до " + Формат(ВыборкаВстреч.ДатаОкончания, "ДФ='d MMMM H:mm'");
			КонецЕсли;
			НаименованиеВстречи = ВыборкаВстреч.Комментарий + ПериодВстречи;
			
			ИдВстречи = Строка(ВыборкаВстреч.Ссылка.УникальныйИдентификатор());
			СписокЗапланированныхВстреч = СписокЗапланированныхВстреч + "<A class=""1C"" id=Команда href=""V8:OpenMeeting"" target="""+ИдВстречи+""">" + НаименованиеВстречи + "</A>&#160;&#160;";
		КонецЦикла;
	Иначе
		ЕстьЗапланированныеВстречи	= "none";
	КонецЕсли;
	
	ТекстМакетаОписанияЗаявки = ТекстМакетаОписанияЗаявки + "
	|			<P id=ЕстьЗапланированныеВстречи style=""DISPLAY:"+ЕстьЗапланированныеВстречи+""">С кандидатом запланированы встречи: </P>
	|			<P id=СписокЗапланированныхВстреч style=""DISPLAY:"+ЕстьЗапланированныеВстречи+""">"+СписокЗапланированныхВстреч+". </P>";

КонецПроцедуры

Функция ЯвляетсяОбъектомДополнительногоТипа(Объект) Экспорт
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.Встречи")
		Или ТипЗнч(Объект) = Тип("ДокументСсылка.Встречи") Тогда
		Возврат Истина;
		
	Иначе
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

Функция ОбновитьСписокЗаявокПоДополнительномуСобытию(ИмяСобытия, ПолеДляУпорядочиванияЗаявок) Экспорт
	
	Если ИмяСобытия = "ЗаписанаВстреча" Тогда
		Если ПолеДляУпорядочиванияЗаявок = "ДатаСобытия" Тогда
			Возврат	Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "ИзмененРежимНабораПерсонала" Тогда
		Возврат	Истина;
	Иначе
		Возврат	Ложь;
	КонецЕсли;
	
КонецФункции

Функция ОбновитьОписаниеЗаявкиПоДополнительномуСобытию(ИмяСобытия) Экспорт
	
	Если ИмяСобытия = "ЗаписанаВстреча" Тогда
		Возврат	Истина;
	Иначе
		Возврат	Ложь;
	КонецЕсли;
	
КонецФункции

Функция ИзмененСоставГруппировкиПоДополнительномуУсловию(НужнаяСтрока, ОбъектПеретаскивания) Экспорт
	
	Если ТипЗнч(НужнаяСтрока.ЗначениеГруппировки) = Тип("СправочникСсылка.СостоянияЗаявокКандидатов") Тогда
		НаборПерсоналаДополнительный.ИзменитьСостояниеЗаявкиКандидата(ОбъектПеретаскивания, НужнаяСтрока.ЗначениеГруппировки);
				
		Возврат	Истина;
	Иначе
		Возврат	Ложь;
	КонецЕсли;
	
КонецФункции

Функция СтандартнаяОбработкаПоДополнительномуУсловию(Строка, ПолеДляУпорядочиванияЗаявок, Ссылка) Экспорт
	
	СтандартнаяОбработка =  Строка = Неопределено
						ИЛИ ПолеДляУпорядочиванияЗаявок = "ДатаСобытия"
						ИЛИ ПолеДляУпорядочиванияЗаявок = "Наименование";
		
	Если Не СтандартнаяОбработка Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ЗаявкаКандидата",	Ссылка);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ЗаявкиКандидатов.Вакансия = ЗНАЧЕНИЕ(Справочник.Вакансии.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ВакансияЗаполнена,
		|	ВЫБОР
		|		КОГДА ЗаявкиКандидатов.Состояние = ЗНАЧЕНИЕ(Справочник.СостоянияЗаявокКандидатов.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК СостояниеЗаполнено
		|ИЗ
		|	Справочник.ЗаявкиКандидатов КАК ЗаявкиКандидатов
		|ГДЕ
		|	ЗаявкиКандидатов.Ссылка = &ЗаявкаКандидата";
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		Если Строка.Родитель = Неопределено Тогда
			ЗначениеГруппировки = Строка.ЗначениеГруппировки;
		Иначе
			ЗначениеГруппировки = Строка.Родитель.ЗначениеГруппировки;
		КонецЕсли;
		
		СтандартнаяОбработка =  ((ПолеДляУпорядочиванияЗаявок = "Подразделение" ИЛИ ПолеДляУпорядочиванияЗаявок = "Должность") И Выборка.ВакансияЗаполнена)
							ИЛИ (ТипЗнч(ЗначениеГруппировки) = Тип("СправочникСсылка.СостоянияЗаявокКандидатов") И ЗначениеГруппировки.Пустая() И Выборка.СостояниеЗаполнено);
	КонецЕсли;
						
	Возврат СтандартнаяОбработка;					
	
КонецФункции

Процедура ИзменитьСостояниеЗаявкиКандидата(ЗаявкаКандидата, СостояниеЗаявки) Экспорт
	
	НаборПерсоналаДополнительный.ИзменитьСостояниеЗаявкиКандидата(ЗаявкаКандидата, СостояниеЗаявки);

КонецПроцедуры

#Если ТолстыйКлиентОбычноеПриложение Тогда

Процедура УстановитьДоступностьДополнительныхКнопок(КнопкиПодменю, КомандыЗаявкиДоступны, НеДоступнаГрупповаяОбработка, ДанныеСтроки) Экспорт
	
	Если КнопкиПодменю.Найти("НазначитьВстречу") <> Неопределено Тогда
		КнопкиПодменю.НазначитьВстречу.Доступность = КомандыЗаявкиДоступны И НеДоступнаГрупповаяОбработка;
	КонецЕсли;
	
	НаборПерсоналаДополнительный.УстановитьДоступностьДополнительныхКнопок(КнопкиПодменю, КомандыЗаявкиДоступны, НеДоступнаГрупповаяОбработка, ДанныеСтроки);
	
КонецПроцедуры

Процедура ВыполнитьДополнительныеДействия(Кнопка, ЭлементыФормы, ЭтаФорма, ЭтотОбъект, ВыделенныеСтроки) Экспорт
	
	Если Кнопка.Имя = "НазначитьВстречу" Тогда
		
		НаборПерсоналаДополнительный.НазначитьВстречу(ЭлементыФормы, ЭтаФорма, ЭтотОбъект);
		
	ИначеЕсли Кнопка.Имя = "СписокНамеченныхВстречСКандидатами" Тогда		
	
		Отчет = Отчеты.СписокНамеченныхВстреч.Создать();
		Форма = Отчет.ПолучитьФорму();
		Форма.Открыть();
		Форма.ОбновитьОтчет();
		
	КонецЕсли;
	
	НаборПерсоналаДополнительный.ВыполнитьДополнительныеДействия(Кнопка, ЭлементыФормы, ЭтаФорма, ЭтотОбъект, ВыделенныеСтроки);
	
КонецПроцедуры

Процедура ДополнитьКонтекстныеМеню(ЭлементыФормы, ДополнительныеДействия) Экспорт
	
	// Кнопка НазначитьВстречу
	ЭлементыФормы.КоманднаяПанельЗаявкиКандидатов.Кнопки.ПодменюЗаявки.Кнопки.Вставить(3, "РазделительДляВстреч", ТипКнопкиКоманднойПанели.Разделитель);
	КнопкаНазначитьВстречу = ЭлементыФормы.КоманднаяПанельЗаявкиКандидатов.Кнопки.ПодменюЗаявки.Кнопки.Вставить(4, "НазначитьВстречу", ТипКнопкиКоманднойПанели.Действие, "Назначить встречу", ДополнительныеДействия);
	КнопкаНазначитьВстречу.Картинка = БиблиотекаКартинок.НазначитьСобеседование;
	
	// Кнопка СписокНамеченныхВстреч
	ЭлементыФормы.ДействияФормы.Кнопки.ПодменюОтчеты.Кнопки.Вставить(1, "СписокНамеченныхВстречСКандидатами", ТипКнопкиКоманднойПанели.Действие, "Список намеченных встреч с кандидатами", ДополнительныеДействия);
	
	НаборПерсоналаДополнительный.ДополнитьКонтекстныеМеню(ЭлементыФормы, ДополнительныеДействия);
	
КонецПроцедуры

Процедура ДополнитьДокHTML(ДокHTML, ДанныеСтроки, Выборка, Форма) Экспорт

	НаборПерсоналаДополнительный.ОбновитьМакетОписанияЗаявки(ДокHTML, Выборка, Форма, ДанныеСтроки.Ссылка);

	ВыборкаВстреч = НаборПерсоналаДополнительный.ПолучитьСписокВстречПоЗаявке(ДанныеСтроки.Ссылка);
	Если ВыборкаВстреч.Количество() > 0 Тогда
		РаботаСДиалогами.УстановитьВидимостьТекста(ДокHTML, "ЕстьЗапланированныеВстречи", Истина);
		РаботаСДиалогами.УстановитьВидимостьТекста(ДокHTML, "СписокЗапланированныхВстреч", Истина);
		СписокЗапланированныхВстреч	= "";
		Пока ВыборкаВстреч.Следующий() Цикл
			Если НачалоДня(ВыборкаВстреч.ДатаНачала) = НачалоДня(ВыборкаВстреч.ДатаОкончания) Тогда
				ПериодВстречи = " " + Формат(ВыборкаВстреч.ДатаНачала, "ДФ='d MMMM'") + " с " + Формат(ВыборкаВстреч.ДатаНачала, "ДФ=H:mm") + " до " + Формат(ВыборкаВстреч.ДатаОкончания, "ДФ=H:mm");
			Иначе
				ПериодВстречи = " с " + Формат(ВыборкаВстреч.ДатаНачала, "ДФ='d MMMM H:mm'") + " до " + Формат(ВыборкаВстреч.ДатаОкончания, "ДФ='d MMMM H:mm'");
			КонецЕсли;
			НаименованиеВстречи = ВыборкаВстреч.Комментарий + ПериодВстречи;
			
			ИдВстречи = Строка(ВыборкаВстреч.Ссылка.УникальныйИдентификатор());
			СписокЗапланированныхВстреч = СписокЗапланированныхВстреч + "<A id=Команда href=""V8:OpenMeeting"" target="""+ИдВстречи+""">" + НаименованиеВстречи + "</A>&#160;&#160;";
		КонецЦикла;
	Иначе
		РаботаСДиалогами.УстановитьВидимостьТекста(ДокHTML, "ЕстьЗапланированныеВстречи", Ложь);
		РаботаСДиалогами.УстановитьВидимостьТекста(ДокHTML, "СписокЗапланированныхВстреч", Ложь);
	КонецЕсли;

	ДокHTML.getElementById("СписокЗапланированныхВстреч").innerHTML	= СписокЗапланированныхВстреч;
	
КонецПроцедуры

Процедура ФормаПередОткрытиемДополнительно(Форма, ДополнительныеДействия = Неопределено) Экспорт
	
	НаборПерсоналаДополнительный.ФормаПередОткрытиемДополнительно(Форма, ДополнительныеДействия);
	
КонецПроцедуры // ФормаПередОткрытиемДополнительно

Процедура ФормаПередЗакрытиемДополнительно(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	НаборПерсоналаДополнительный.ФормаПередЗакрытиемДополнительно(Форма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ФормаОбработкаОповещенияДополнительно(Форма, ИмяСобытия, Параметр, Источник) Экспорт
	
	НаборПерсоналаДополнительный.ФормаОбработкаОповещенияДополнительно(Форма, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры // ФормаОбработкаОповещенияДополнительно

Процедура СписокКандидатовПриПолученииДанныхДополнительно(Форма, Элемент, ОформленияСтрок) Экспорт
	
	НаборПерсоналаДополнительный.СписокКандидатовПриПолученииДанныхДополнительно(Форма, Элемент, ОформленияСтрок);
	
КонецПроцедуры // СписокКандидатовПриПолученииДанныхДополнительно

Процедура СписокКандидатовПриАктивизацииСтрокиДополнительно(Форма, Элемент) Экспорт
	
	НаборПерсоналаДополнительный.СписокКандидатовПриАктивизацииСтрокиДополнительно(Форма, Элемент);
	
КонецПроцедуры // СписокКандидатовПриАктивизацииСтрокиДополнительно

#КонецЕсли