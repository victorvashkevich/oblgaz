////////////////////////////////////////////////////////////////////////////////
// Процедуры, функции объекта

// Заполняет табличную часть документа отпусками на основании утвержденного документа 
// планирования отпусков управленческого учета
//
// Параметры
//  Объект - ДокументОбъект.ГрафикОтпусковОрганизаций, заполняемый документ
//	Основание - ДокументСсылка.ПланированиеОтпуска, документ-основание
//
Процедура ОбработкаЗаполнения(Объект, Основание) Экспорт
	
	ТипОснования = ТипЗнч(Основание);
	Если ТипОснования = Тип("ДокументСсылка.ПланированиеОтпуска") Тогда
		
		// Заполним реквизиты из стандартного набора.
		ОбщегоНазначения.ЗаполнитьШапкуДокументаПоОснованию(Объект, Основание);
		
		Если Основание.Проведен
			И (Основание.СостояниеУтвержденияДокумента = Перечисления.СостоянияУтвержденияДокумента.УтвержденПолностьюПроведен
			ИЛИ Основание.СостояниеУтвержденияДокумента = Перечисления.СостоянияУтвержденияДокумента.УтвержденЧастичноПроведен) Тогда
			
			Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
				Объект.Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация")
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
				Возврат
			КонецЕсли;
			
			Запрос = Новый Запрос;  
			Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
			
			Запрос.УстановитьПараметр("ГоловнаяОрганизация",	ОбщегоНазначения.ГоловнаяОрганизация(Объект.Организация));
			Запрос.УстановитьПараметр("Организация",			Объект.Организация);
			Запрос.УстановитьПараметр("ДатаАктуальности",		Объект.Дата);
			Запрос.УстановитьПараметр("Регистратор",			Основание);

			Запрос.Текст =
			"ВЫБРАТЬ
			|	СобытийныйПланЗанятостиФизлиц.Период,
			|	СобытийныйПланЗанятостиФизлиц.ПериодЗавершения,
			|	СобытийныйПланЗанятостиФизлиц.ФизЛицо КАК ФизЛицо
			|ПОМЕСТИТЬ ВТФизЛица
			|ИЗ
			|	РегистрСведений.СобытийныйПланЗанятостиФизлиц КАК СобытийныйПланЗанятостиФизлиц
			|ГДЕ
			|	СобытийныйПланЗанятостиФизлиц.Регистратор = &Регистратор
			|	И СобытийныйПланЗанятостиФизлиц.Состояние = ЗНАЧЕНИЕ(Перечисление.ТипыПериодическихЗадачРаботника.ОтпускЕжегодный)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ФизЛицо";
			Результат = Запрос.Выполнить().Выгрузить(); 
			
			Если Результат[0].Количество = 0 Тогда // нет данных
				Возврат		
			КонецЕсли;
			
			Запрос.Текст = ГрафикОтпусковОрганизацийДополнительный.ПолучитьТекстЗапросаАвтозаполнения();
			Объект.РаботникиОрганизации.Загрузить(Запрос.Выполнить().Выгрузить());
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаЗаполнения()

////////////////////////////////////////////////////////////////////////////////
// Процедуры, функции для работы формы документа

#Если Клиент Тогда

Процедура ДополнитьПодменюЗаполненияТЧ(ПодменюЗаполнить, Действие) Экспорт
	
	Кнопки = ПодменюЗаполнить.Кнопки;
	Кнопки.Вставить(0,"РазделительУпр",ТипКнопкиКоманднойПанели.Разделитель);
	Кнопка = Кнопки.Вставить(0,"ЗаполнитьПоУпрУчету",ТипКнопкиКоманднойПанели.Действие,"По управленческому графику отпусков",Действие);
    Кнопка.Подсказка = "Заполнить утвержденными отпусками управленческого учета";
    Кнопка.Пояснение = "Заполнить утвержденными отпусками управленческого учета";
	
КонецПроцедуры
	
Процедура ОбработатьНажатиеНаКнопкуЗаполнения(Кнопка, Объект, НастройкаПериода) Экспорт

	Если Кнопка.Имя = "ЗаполнитьПоУпрУчету" Тогда
		
		Если Объект.Организация.Пустая() Тогда
			Предупреждение("Укажите организацию!");
			Возврат;
		КонецЕсли;
		
		Если Объект.РаботникиОрганизации.Количество() > 0 Тогда
			ТекстВопроса = "Перед заполнением табличная часть будет очищена. Заполнить?";
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
			Если Ответ <> КодВозвратаДиалога.Да Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		Если НастройкаПериода.Редактировать() Тогда
			
			ДатаНачала		= НастройкаПериода.ПолучитьДатуНачала();
			ДатаОкончания	= НастройкаПериода.ПолучитьДатуОкончания();
			
			Если НЕ ЗначениеЗаполнено(ДатаНачала) или НЕ ЗначениеЗаполнено(ДатаОкончания) Тогда
				Предупреждение("Укажите границы периода просмотра графика отпусков!");
				Возврат;
			КонецЕсли;
			
			Объект.РаботникиОрганизации.Очистить();
			ГрафикОтпусковОрганизацийДополнительный.Автозаполнение(Объект, ДатаНачала, ДатаОкончания);
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры
	
#КонецЕсли
