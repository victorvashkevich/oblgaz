Функция ПолучитьДанныеРасчетаЕСН(ГоловнаяОрганизация, ФизЛицо,ПериодРегистрации,Организация,Регистратор) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
    Запрос.УстановитьПараметр("парамКонецМесяцаПериодаРегистрации", КонецМесяца(ПериодРегистрации));
    Запрос.УстановитьПараметр("парамНачалоМесяцаПериодаРегистрации", НачалоГода(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("парамПодлежитОбложению", Перечисления.ДоходыФСС_НС.Облагается);
	//vvv комментируем, доступ к реквизитам через точку при RLS невозможен. Только через запрос
	//Запрос.УстановитьПараметр("парамВидСтавокЕСНиПФР", ГоловнаяОрганизация.ВидСтавокЕСНиПФР);
	Запрос.УстановитьПараметр("парамВидСтавокЕСНиПФР",Перечисления.ВидыСтавокЕСНиПФР.ПустаяСсылка());
	//
    Запрос.УстановитьПараметр("парамНачалоГода", НачалоГода(ПериодРегистрации));
    Запрос.УстановитьПараметр("парамГруппа1", "I");
    Запрос.УстановитьПараметр("парамГруппа2", "II");
    Запрос.УстановитьПараметр("парамГодРасчета", Год(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
    Запрос.УстановитьПараметр("парамМуж", Перечисления.ПолФизическихЛиц.Мужской);
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	Запрос.УстановитьПараметр("ПустаяДата",Дата('00010101'));
	
	//vvv
	ДатаКонтроля=НачалоГода(ПериодРегистрации); //по умолчанию с начала года
	ЗапросПн=Новый Запрос;
	ЗапросПн.УстановитьПараметр("Организация",Организация);
	ЗапросПн.Текст=
	"ВЫБРАТЬ
	|	ДатыПересчетаПенсионного.ДатаПересчета
	|ИЗ
	|	РегистрСведений.ДатыПересчетаПенсионного КАК ДатыПересчетаПенсионного
	|ГДЕ
	|	ДатыПересчетаПенсионного.Организация = &Организация";
	
	ВыборкаПН=ЗапросПн.Выполнить().Выбрать();
	Если ВыборкаПН.Следующий() Тогда
		Если ВыборкаПН.ДатаПересчета<>Дата(1,1,1) ТОгда
			ДатаКонтроля=ВыборкаПН.ДатаПересчета
		КонецЕсли;		
	КонецЕсли;		
	Запрос.УстановитьПараметр("парамНачалоМесяцаВнедрения",ДатаКонтроля);
	//
	//
	ЛьготаИнвалидов = "100000";
	
	СписокВсехПодразделенийОрганизации = ПроцедурыУправленияПерсоналом.ПолучитьСписокОбособленныхПодразделенийОрганизации(ГоловнаяОрганизация);
	СписокВсехПодразделенийОрганизации.Добавить(ГоловнаяОрганизация);
    Запрос.УстановитьПараметр("СписокВсехПодразделенийОрганизации", СписокВсехПодразделенийОрганизации);
	// ---------------------------------------------------------------------------
	// тексты запросов
	//

	// Периоды
	// Таблица список периодов
	// Поля:
	//		Период
	// Описание:
	//  список периодов - первые даты месяцеы с начала года по "текущий" для запроса период
	//
	МесяцыДляРасчетаТекст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МАКСИМУМ(ЕСНСведенияОДоходах.ПериодВзаиморасчетов) КАК ПериодВзаиморасчетов
	|ИЗ
	|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	|ГДЕ
	|	ЕСНСведенияОДоходах.Период = &парамПериодРегистрации
	|	И ЕСНСведенияОДоходах.ОбособленноеПодразделение = &парамОбособленноеПодразделение";
	Запрос.Текст = МесяцыДляРасчетаТекст;
	ВыборкаПоследнегоМесяца  = Запрос.Выполнить().Выбрать();

	Если ВыборкаПоследнегоМесяца.Следующий() Тогда
		ПоследнийМесяц = ВыборкаПоследнегоМесяца.ПериодВзаиморасчетов
	КонецЕсли;
	
	Если  НЕ ЗначениеЗаполнено(ПоследнийМесяц) тогда
		ПоследнийМесяц = ПериодРегистрации;
	КонецЕсли;
		// конец месяца налогового периода
	КонецМесяца = КонецМесяца(НачалоГода(ПериодРегистрации));
	// первый месяц
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТПериоды";
	// прибавим остальные месяцы
	Для Сч = 2 По Месяц(ПоследнийМесяц) Цикл
		КонецМесяца = КонецМесяца(КонецМесяца+1);
    	ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	
	// ФизлицаДляРасчета
	//
	//ФизлицаДляРасчетаТекст = 
	//"ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	ЕСНСведенияОДоходах.ФизЛицо КАК ФизЛицо
	//|ИЗ
	//|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	//|ГДЕ
	//|	ЕСНСведенияОДоходах.Период = &парамПериодРегистрации
	//|	И ЕСНСведенияОДоходах.ОбособленноеПодразделение = &парамОбособленноеПодразделение";

	// Составим текст запроса для выбора списка физлиц, по которым надо считать НДФЛ
	Если НЕ (ФизЛицо = Неопределено) Тогда
		ФизлицаДляРасчетаТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		//vvv
		|	ДатыПересчетаПенсионного.ДатаПересчета,	
		//
		|	Работники.ФизЛицо КАК ФизЛицо
		|ПОМЕСТИТЬ ВТФизЛица
		|ИЗ
		|	Документ.НачислениеЗарплатыРаботникамОрганизаций.ПенсионныйФонд КАК Работники
		//vvv
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПересчетаПенсионного КАК ДатыПересчетаПенсионного
		|		ПО	ДатыПересчетаПенсионного.Организация=Работники.ФизЛицо 
		//
		|ГДЕ
		|	Работники.Ссылка = &Регистратор
		|	И Работники.ФизЛицо В( &парамФизЛицо)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
		
		ДополнительныеПараметрыЗапроса  = Новый Структура;
		ДополнительныеПараметрыЗапроса.Вставить("парамФизЛицо", ФизЛицо);
	КонецЕсли;

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	Запрос.Текст = ФизлицаДляРасчетаТекст;
	Запрос.Выполнить();
	// ДанныеОПравеНаПенсию
	// Таблица Таблица Данные о праве на пенсию: - таблица это список иностранцев и периодов
	// Поля:
	//		Физлицо, 
	//		Месяц - месяц налогового периода
	// 
	// Описание:
	//	Выбираем Из Списка периодов
	//	Внутреннее соединение с ГражданствоФизЛиц.СрезПоследних
	//  по равенству периодов
	//  условие: что физлицо - не имеет права на пенсию
	//
	
	
	ДанныеОМЗПТекст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Месяц,
	|	ЕСТЬNULL(РазмерыПараметровДляРасчетаРБ.Размер, 0) КАК Размер
	|ПОМЕСТИТЬ ВТДанныеОМЗП
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		МАКСИМУМ(РазмерыПараметровДляРасчетаРБ.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазмерыПараметровДляРасчетаРБ КАК РазмерыПараметровДляРасчетаРБ
	|			ПО Периоды.Период >= РазмерыПараметровДляРасчетаРБ.Период
	|				И (РазмерыПараметровДляРасчетаРБ.ВидПараметра = ЗНАЧЕНИЕ(Перечисление.ВидыПараметровДляРасчетаЗарплаты.МинимальнаяЗарплатаРБ))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазмерыПараметровДляРасчетаРБ КАК РазмерыПараметровДляРасчетаРБ
	|		ПО (РазмерыПараметровДляРасчетаРБ.Период = Периоды.ПериодРегистра)
	|			И (РазмерыПараметровДляРасчетаРБ.ВидПараметра = ЗНАЧЕНИЕ(Перечисление.ВидыПараметровДляРасчетаЗарплаты.МинимальнаяЗарплатаРБ))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц";

    Запрос.Текст = ДанныеОМЗПТекст;
	Запрос.Выполнить();

    // ДоходыПоФизлицамМесяцамКодамТекст
	// Таблица ЕСН-доходы по ФЛ и Периодам:
    // Поля:
	// Описание:
	// Выбираем из ЕСНОсновныеНачисления ,ЕСНДополнительныеНачисления и ЕСНСведенияОДоходах и суммируем результат
	// с начала года по текущий период
	
	ДоходыПоФизлицамМесяцамКодамТекст = 
	"ВЫБРАТЬ
	|	ЕСНСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ЕСНСведенияОДоходах.ПериодВзаиморасчетов, МЕСЯЦ) КАК Месяц,
	|	НАЧАЛОПЕРИОДА(ЕСНСведенияОДоходах.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	ЕСНСведенияОДоходах.ДоходФСЗН,
	|	ЕСНСведенияОДоходах.ДоходСтрах,
	|	ЕСНСведенияОДоходах.доходЕдиныйПлатеж,
	|	ЕСНСведенияОДоходах.Результат КАК ОблагаемыйДоход,
	|	ЕСНСведенияОДоходах.БазаФСЗН,
	|	ЕСНСведенияОДоходах.КодДоходаЕСН
	|ПОМЕСТИТЬ ВТСведенияОДоходах
	|ИЗ
	|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизЛица КАК Физлица
	|		ПО ЕСНСведенияОДоходах.ФизЛицо = Физлица.ФизЛицо
	|ГДЕ
	|	ЕСНСведенияОДоходах.ОбособленноеПодразделение В(&СписокВсехПодразделенийОрганизации)
	//vvv добавляем условие - пересчет только с месяца внедрения.
	//|	И (ЕСНСведенияОДоходах.Период МЕЖДУ &парамНачалоМесяцаПериодаРегистрации И &парамКонецМесяцаПериодаРегистрации
	//|			ИЛИ ЕСНСведенияОДоходах.ПериодВзаиморасчетов МЕЖДУ &парамНачалоМесяцаПериодаРегистрации И &парамКонецМесяцаПериодаРегистрации)
	|	И (((ЕСНСведенияОДоходах.Период МЕЖДУ &парамНачалоМесяцаПериодаРегистрации И &парамКонецМесяцаПериодаРегистрации) И (ЕСНСведенияОДоходах.ПериодВзаиморасчетов>= ВЫБОР КОГДА Физлица.ДатаПересчета ЕСТЬ NULL ТОГДА &парамНачалоМесяцаВнедрения ИНАЧЕ Физлица.ДатаПересчета КОНЕЦ))
	|			ИЛИ ((ЕСНСведенияОДоходах.ПериодВзаиморасчетов МЕЖДУ &парамНачалоМесяцаПериодаРегистрации И &парамКонецМесяцаПериодаРегистрации) И (ЕСНСведенияОДоходах.Период>= ВЫБОР КОГДА Физлица.ДатаПересчета ЕСТЬ NULL ТОГДА &парамНачалоМесяцаВнедрения ИНАЧЕ Физлица.ДатаПересчета КОНЕЦ)))
	//
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Месяц";

	
	Запрос.Текст = ДоходыПоФизлицамМесяцамКодамТекст;
	Запрос.Выполнить();

    // ДанныеОбИнвалидности
	// Таблица Данных об Инвалидности: - таблица это список инвалидов и периодов инвалидности
	// поля:
	//		Физлицо, 
	//		Месяц - месяц налогового периода
	// Описание:	
	//	Выбираем Из Список периодов (таблица - список периодов с начала года по текущий период
	//	Внутреннее соединение с СведенияОбИнвалидностиФизлиц.СрезПоследних
	//	по равенству периодов
	//  условие: что физлицо - Инвалид
	// 
				
	ДанныеОбИнвалидностиТекст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СведенияОбИнвалидностиФизлиц.ГруппаИнвалидности = &парамГруппа1
	|				ИЛИ СведенияОбИнвалидностиФизлиц.ГруппаИнвалидности = &парамГруппа2
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Группа,
	|	СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
	|	НАЧАЛОПЕРИОДА(Периоды.Период,МЕСЯЦ) КАК Месяц
	|ПОМЕСТИТЬ ВТДанныеИбИнвалидности
	|ИЗ
	|	(ВЫБРАТЬ
	|		СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
	|		Периоды.Период КАК Период,
	|		МАКСИМУМ(СведенияОбИнвалидностиФизлиц.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|			ПО Периоды.Период >= СведенияОбИнвалидностиФизлиц.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СведенияОбИнвалидностиФизлиц.Физлицо,
	|		Периоды.Период) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|		ПО (СведенияОбИнвалидностиФизлиц.Период = Периоды.ПериодРегистра)
	|			И (СведенияОбИнвалидностиФизлиц.Физлицо = Периоды.Физлицо)
	|			И (СведенияОбИнвалидностиФизлиц.Инвалидность)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо";
	
	Запрос.Текст = ДанныеОбИнвалидностиТекст;
	Запрос.Выполнить();
	
	
	// ОблагаемаяБазаПоМесяцам
	// Таблица Баз для исчисления ЕСН по месяцам налогового периода:
	// Поля:
	//		ФизЛицо
	//		Месяц - месяц налогового периода
	//		БазаФедеральныйБюджет         - база для налогообложения ЕСН в части налога в федеральный бюджет
	//		ЛьготаИнвалидуФБ   			  - сумма льготы инвалиду по ЕСН в части налога в федеральный бюджет
	//		БазаФСС                       - база для налогообложения ЕСН в части налога в ФСС
	//		ЛьготаИнвалидуФСС  			  - сумма льготы инвалиду по ЕСН в части налога в ФСС
	//		БазаФОМС					  - база для налогообложения ЕСН в части налогов в ФОМС
	//		ЛьготаИнвалидуФОМС 			  - сумма льготы инвалиду по ЕСН в части налога в ФОМС
	//		БазаПФР			   			  - база для взносов в ПФР (включая доходы, облагаемые ЕНВД)
	//		БазаПФР_ЕНВД			   	  - сумма облагаемых ПФР доходов, подподающих под ЕНВД
	//
	// Описание:
	//	
	// 	1) выбираем из ДоходыПоФизлицамМесяцамКодамТекст
	// 		и суммируем ОблагаемыйДоход для всех составных частей ЕСН. При этом учитывается входимость в базу
	// 		по флажку в справочнике - это База.
	//		Доход, облагаемый ЕНВД, не включаем в базу ЕСН. 
	//		Доход иностранца не включаем в базу ПФР.
	//		Для инвалидов считается база отдельно, но из неё исключаем договора подряда.
	//  2) суммировать ОблагаемыйДоход для всех составных частей ЕСН при входимости в базу и признака инвалидности - это ЛьготаИнвалиду по всем частям ЕСН

	
	ДанныеОПравеНаПенсиюТекст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Месяц,
	|	ГражданствоФизЛиц.ФизЛицо КАК Физлицо,
	|	ГражданствоФизЛиц.ВидЗастрахованногоЛица,
	|	ВЫБОР
	|		КОГДА ГражданствоФизЛиц.ВидЗастрахованногоЛица <> ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ИностранцыНеУплачивающие)
	|				ИЛИ ГражданствоФизЛиц.ВидЗастрахованногоЛица <> ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ГражданеРб)
	|				ИЛИ ГражданствоФизЛиц.ВидЗастрахованногоЛица <> ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ИностраныеГражданеСтранЕАЭС)
	|				ИЛИ ГражданствоФизЛиц.ВидЗастрахованногоЛица <> ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ИностранцыУплачивающиеСтраховыеВзносы)
	|				ИЛИ ГражданствоФизЛиц.ВидЗастрахованногоЛица <> ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ИностранцыУплачивающиеБелгосстрах)
	|			ТОГДА ГражданствоФизЛиц.НеИмеетПравоНаПенсию
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеЕмеетПравоНаПенсию
	|ПОМЕСТИТЬ ВТДанныеОПравеНаПенсию
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Месяц КАК Период,
	|		ГражданствоФизЛиц.ФизЛицо КАК Физлицо,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТСведенияОДоходах КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО Периоды.Месяц >= ГражданствоФизЛиц.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ГражданствоФизЛиц.ФизЛицо,
	|		Периоды.Месяц) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО (ГражданствоФизЛиц.Период = Периоды.ПериодРегистра)
	|			И (ГражданствоФизЛиц.ФизЛицо = Периоды.Физлицо)
	|			И (ГражданствоФизЛиц.НеИмеетПравоНаПенсию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Месяц";
	
	Запрос.Текст = ДанныеОПравеНаПенсиюТекст;
	Запрос.Выполнить();

	ОблагаемаяБазаПоМесяцам = 
	"ВЫБРАТЬ
	|	Основная.ФизЛицо КАК ФизЛицо,
	|	Основная.Месяц КАК Месяц,
	|	Основная.ПериодРегистрации,
	|	ВЫБОР
	|		КОГДА НЕ Инвалид.Физлицо ЕСТЬ NULL
	|			ТОГДА Инвалид.Группа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Группа,
	|	ВЫБОР
	|		КОГДА ДанныеОПравеНаПенсию.НеЕмеетПравоНаПенсию ЕСТЬ NULL 
	|				И Основная.ДоходФСЗН = &парамПодлежитОбложению
	|				И Основная.КодДоходаЕСН <> ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДоговорГПХ)
	|			ТОГДА Основная.БазаФСЗН
	|		КОГДА Основная.ДоходФСЗН = &парамПодлежитОбложению
	|				И Основная.КодДоходаЕСН <> ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДоговорГПХ)
	|				И НЕ ДанныеОПравеНаПенсию.НеЕмеетПравоНаПенсию 
	|			ТОГДА Основная.БазаФСЗН
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК БазаДоходФСЗНБезГПХ,
	|	ВЫБОР
	|		КОГДА Основная.ДоходФСЗН = &парамПодлежитОбложению
	|				И Основная.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДоговорГПХ)
	|				И НЕ ДанныеОПравеНаПенсию.НеЕмеетПравоНаПенсию
	|			ТОГДА Основная.БазаФСЗН
	|		КОГДА Основная.ДоходФСЗН = &парамПодлежитОбложению
	|				И Основная.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДоговорГПХ)
	|				И ДанныеОПравеНаПенсию.НеЕмеетПравоНаПенсию ЕСТЬ NULL 
	|			ТОГДА Основная.БазаФСЗН
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК БазаДоходФСЗНПоГПХ,
	|	ВЫБОР
	|		КОГДА Основная.ДоходСтрах = &парамПодлежитОбложению
	|				И Основная.КодДоходаЕСН <> ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДоговорГПХ)
	|			ТОГДА Основная.ОблагаемыйДоход
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК БазаДоходСтрахБезГПХ,
	|	ВЫБОР
	|		КОГДА Основная.ДоходСтрах = &парамПодлежитОбложению
	|				И Основная.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДоговорГПХ)
	|			ТОГДА Основная.ОблагаемыйДоход
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК БазаДоходСтрахПоГПХ,
	|	ВЫБОР
	|		КОГДА Основная.ДоходЕдиныйПлатеж = &парамПодлежитОбложению
	|				И НЕ ДанныеОПравеНаПенсию.НеЕмеетПравоНаПенсию
	|			ТОГДА Основная.ОблагаемыйДоход
	|		КОГДА Основная.ДоходЕдиныйПлатеж = &парамПодлежитОбложению
	|				И ДанныеОПравеНаПенсию.НеЕмеетПравоНаПенсию ЕСТЬ NULL 
	|			ТОГДА Основная.ОблагаемыйДоход
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК БазаДоходЕдиныйПлатеж,
	|	ДанныеОПравеНаПенсию.ВидЗастрахованногоЛица
	|ПОМЕСТИТЬ ВТОблагаемаяБаза
	|ИЗ
	|	ВТСведенияОДоходах КАК Основная
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеИбИнвалидности КАК Инвалид
	|		ПО (Инвалид.Физлицо = Основная.ФизЛицо)
	|			 И (Инвалид.Месяц =  Основная.Месяц)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОПравеНаПенсию КАК ДанныеОПравеНаПенсию
	|		ПО Основная.Месяц = ДанныеОПравеНаПенсию.Месяц
	|			И Основная.ФизЛицо = ДанныеОПравеНаПенсию.ФизЛицо
	| 
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Месяц";
	
	Запрос.Текст = ОблагаемаяБазаПоМесяцам;
	Запрос.Выполнить();


	ИсчисленныйЕСНТекст = 
	"ВЫБРАТЬ
	|	ЕСНИсчисленный.ФизЛицо КАК ФизЛицо,
	|	ВЫБОР
	|		КОГДА (НЕ Инвалид.Физлицо ЕСТЬ NULL )
	|			ТОГДА Инвалид.Группа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Группа,
	|	ВЫБОР
	|		КОГДА ЕСНИсчисленный.ПроцентФСЗН ЕСТЬ NULL 
	|			ТОГДА 35
	|		ИНАЧЕ ЕСНИсчисленный.ПроцентФСЗН
	|	КОНЕЦ КАК ПроцентФСЗН,
	|	НАЧАЛОПЕРИОДА(ЕСНИсчисленный.ПериодВзаиморасчетов, МЕСЯЦ) КАК Месяц,
	|	ЕСНИсчисленный.ВидДеятельности,
	|	ЕСНИсчисленный.ППС КАК ППС,
	|	ЕСНИсчисленный.ПенсионныйФонд КАК ПенсионныйФонд,
	|	ЕСНИсчисленный.ФСЗН КАК ФСЗН,
	|	ЕСНИсчисленный.ЕдиныйПлатеж КАК ЕдиныйПлатеж,
	|	ЕСНИсчисленный.ОбязательноеСтрахование КАК ОбязательноеСтрахование
	|ПОМЕСТИТЬ ВТЕСНИсчисленный
	|ИЗ
	|	РегистрНакопления.ЕСНИсчисленный КАК ЕСНИсчисленный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизЛица КАК Физлица
	|		ПО ЕСНИсчисленный.ФизЛицо = Физлица.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеИбИнвалидности КАК Инвалид
	|		ПО (Инвалид.Физлицо = ЕСНИсчисленный.ФизЛицо)
	|			И (Инвалид.Месяц = ЕСНИсчисленный.ПериодВзаиморасчетов)
	|ГДЕ
	|	ЕСНИсчисленный.Организация = &парамГоловнаяОрганизация
	//vvv комментируем, добавляем условие, т.к. не нужно видеть исчисленный пенс.фонд в месяце где был переходящий отпуск на месяц внедрения
	//|	И (ЕСНИсчисленный.Период МЕЖДУ &парамНачалоМесяцаПериодаРегистрации И &парамКонецМесяцаПериодаРегистрации
	//|			ИЛИ ЕСНИсчисленный.ПериодВзаиморасчетов МЕЖДУ &парамНачалоМесяцаПериодаРегистрации И &парамКонецМесяцаПериодаРегистрации)
	|	И (((ЕСНИсчисленный.Период МЕЖДУ &парамНачалоМесяцаПериодаРегистрации И &парамКонецМесяцаПериодаРегистрации) И (ЕСНИсчисленный.ПериодВзаиморасчетов>=ВЫБОР КОГДА ФизЛица.ДатаПересчета ЕСТЬ NULL ТОГДА &парамНачалоМесяцаВнедрения ИНАЧЕ ФизЛица.ДатаПересчета КОНЕЦ))
	|			ИЛИ ((ЕСНИсчисленный.ПериодВзаиморасчетов МЕЖДУ &парамНачалоМесяцаПериодаРегистрации И &парамКонецМесяцаПериодаРегистрации) И (ЕСНИсчисленный.Период>=ВЫБОР КОГДА ФизЛица.ДатаПересчета ЕСТЬ NULL ТОГДА &парамНачалоМесяцаВнедрения ИНАЧЕ ФизЛица.ДатаПересчета КОНЕЦ)))
	//
	//vvv не будем брать в расчет 2013 год т.к. там не считалсиь налоги, при проведени которых формируются дохода для Фонда
	|	И (ГОД(ЕСНИсчисленный.Период)>2013)
	//
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц,
	|	ФизЛицо";
	
	Запрос.Текст = ИсчисленныйЕСНТекст;
	Запрос.Выполнить();
	
	ДатыПриемаИУвольненияТекст = 
	//vvv иначе падает, если сотрудник перемещался между организациями
	//"ВЫБРАТЬ
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Физлица.ФизЛицо КАК ФизЛицо,
	|	МАКСИМУМ(РаботникиПрием.Период) КАК ДатаПриема,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА РаботникиУвольнение.Период < РаботникиПрием.Период
	|				ТОГДА &ПустаяДата
	|			ИНАЧЕ РаботникиУвольнение.Период
	|		КОНЕЦ) КАК ДатаУвольнения
	|ПОМЕСТИТЬ ВТДатыПриемаИУвольнения
	|ИЗ
	|	ВТФизЛица КАК Физлица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&парамКонецМесяцаПериодаРегистрации, ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)) КАК РаботникиУвольнение
	|		ПО Физлица.ФизЛицо = РаботникиУвольнение.Сотрудник.Физлицо
	|			И (РаботникиУвольнение.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&парамКонецМесяцаПериодаРегистрации, ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)) КАК РаботникиПрием
	|		ПО Физлица.ФизЛицо = РаботникиПрием.Сотрудник.Физлицо
	|			И (РаботникиПрием.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
	|
	|СГРУППИРОВАТЬ ПО
	|	Физлица.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ДатыПриемаИУвольненияТекст;
	Запрос.Выполнить();
	

	СтрокиНачисленийТекст =
	"ВЫБРАТЬ
	|	СтрокиДокумента.Сотрудник КАК Сотрудник,
	|	СтрокиДокумента.Физлицо,
	|	СтрокиДокумента.ДатаНачалаСобытия,
	|	СтрокиДокумента.НомерСтроки
	|ПОМЕСТИТЬ ВТСтрокиНачислений
	|ИЗ
	|	Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК СтрокиДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизЛица КАК Физлица
	|		ПО СтрокиДокумента.Физлицо = Физлица.ФизЛицо
	|ГДЕ
	|	СтрокиДокумента.Ссылка = &Регистратор
	|	И СтрокиДокумента.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник";
	
	Запрос.Текст = СтрокиНачисленийТекст;
	Запрос.Выполнить();

	
    ГрафикиСотрудниковТекст =
	"ВЫБРАТЬ
	|	ПоследниеДаты.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизации.ПериодЗавершения <= ПоследниеДаты.ДатаНачалаСобытия
	|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизации.ГрафикРаботыЗавершения
	|		ИНАЧЕ РаботникиОрганизации.ГрафикРаботы
	|	КОНЕЦ КАК ГрафикРаботы
	|ПОМЕСТИТЬ ВТГрафикиСотрудников
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(РаботникиОрганизации.Период) КАК МаксПериод,
	|		СтрокиНачисления.НомерСтроки КАК НомерСтроки,
	|		СтрокиНачисления.Сотрудник КАК Сотрудник,
	|		СтрокиНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия
	|	ИЗ
	|		ВТСтрокиНачислений КАК СтрокиНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|			ПО СтрокиНачисления.ДатаНачалаСобытия >= РаботникиОрганизации.Период
	|				И СтрокиНачисления.Сотрудник = РаботникиОрганизации.Сотрудник
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СтрокиНачисления.НомерСтроки,
	|		СтрокиНачисления.Сотрудник,
	|		СтрокиНачисления.ДатаНачалаСобытия) КАК ПоследниеДаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|		ПО ПоследниеДаты.МаксПериод = РаботникиОрганизации.Период
	|			И ПоследниеДаты.Сотрудник = РаботникиОрганизации.Сотрудник
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки";
	
	Запрос.Текст = ГрафикиСотрудниковТекст;
	Запрос.Выполнить();
	
	ДанныеИндивидуальныхГрафиковИТабелейТекст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтрокиНачисления.НомерСтроки КАК НомерСтроки,
	|	ГрафикиРаботыПоВидамВремени.План КАК План
	|ПОМЕСТИТЬ ВТДанныеИндивидуальныхГрафиковИТабелей
	|ИЗ
	|	ВТСтрокиНачислений КАК СтрокиНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|		ПО СтрокиНачисления.Сотрудник = ГрафикиРаботыПоВидамВремени.ГрафикРаботы
	|			И НАЧАЛОПЕРИОДА(СтрокиНачисления.ДатаНачалаСобытия,МЕСЯЦ) = ГрафикиРаботыПоВидамВремени.Месяц
	|ГДЕ
	|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы ЕСТЬ НЕ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	План";
	
	Запрос.Текст = ДанныеИндивидуальныхГрафиковИТабелейТекст;
	Запрос.Выполнить();

	
	// СводныеИндивидуальныеГрафикиРаботы
	//		таблица содержит номера строк документа с сотрудниками, для которых введены сводные 
	//		данные об их графике
	// 
	//	Поля:
	//		НомерСтроки
	// 
	
	СводныеИндивидуальныеГрафикиРаботыТекст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокРаботников.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТСводныеИндивидуальныеГрафикиРаботы
	|ИЗ
	|	ВТСтрокиНачислений КАК СписокРаботников
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СводныеИндивидуальныеГрафики КАК СводныеИндивидуальныеГрафики
	|		ПО СписокРаботников.Сотрудник = СводныеИндивидуальныеГрафики.Сотрудник
	|			И НАЧАЛОПЕРИОДА(СписокРаботников.ДатаНачалаСобытия,МЕСЯЦ) = СводныеИндивидуальныеГрафики.Месяц
	|ГДЕ
	|	СводныеИндивидуальныеГрафики.Сотрудник ЕСТЬ НЕ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки";
	
	Запрос.Текст = СводныеИндивидуальныеГрафикиРаботыТекст;
	Запрос.Выполнить();
	

 	
	ГрафикиРаботыТекст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Основные.ФизЛицо КАК ФизЛицо,
	|	Основные.ПериодДействия,
	|	Основные.ГрафикРаботы КАК ГрафикРаботы
	|ПОМЕСТИТЬ ВТГрафикиРаботы
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Основной.ФизЛицо КАК ФизЛицо,
	|		Основной.ПериодДействия КАК ПериодДействия,
	|		Основной.ГрафикРаботы КАК ГрафикРаботы
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Основной
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизЛица КАК Физлица
	|			ПО Основной.ФизЛицо = Физлица.ФизЛицо
	|	ГДЕ
	|		Основной.ГрафикРаботы <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|		И Основной.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|		И Основной.ПериодРегистрации МЕЖДУ &парамНачалоМесяцаПериодаРегистрации И &парамКонецМесяцаПериодаРегистрации
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		СтрокиНачисления.ФизЛицо,
	|		НАЧАЛОПЕРИОДА(СтрокиНачисления.ДатаНачалаСобытия,МЕСЯЦ),
	|		ВЫБОР
	|			КОГДА ГрафикРаботыПоСотруднику.НомерСтроки ЕСТЬ NULL 
	|				ТОГДА РаботникиОрганизации.ГрафикРаботы
	|			ИНАЧЕ СтрокиНачисления.Сотрудник
	|		КОНЕЦ
	|	ИЗ
	|		ВТСтрокиНачислений КАК СтрокиНачисления
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизЛица КАК Физлица
	|			ПО СтрокиНачисления.ФизЛицо = Физлица.ФизЛицо
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТГрафикиСотрудников КАК РаботникиОрганизации
	|			ПО СтрокиНачисления.НомерСтроки = РаботникиОрганизации.НомерСтроки
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				СтрокиНачисления.НомерСтроки КАК НомерСтроки
	|			ИЗ
	|				ВТДанныеИндивидуальныхГрафиковИТабелей КАК СтрокиНачисления) КАК ГрафикРаботыПоСотруднику
	|			ПО СтрокиНачисления.НомерСтроки = ГрафикРаботыПоСотруднику.НомерСтроки) КАК Основные
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ГрафикРаботы";
	
	Запрос.Текст = ГрафикиРаботыТекст;
	Запрос.Выполнить();
	    	
	НормаВремениПоОбщемуГрафикуТекст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СУММА(ГрафикиРаботыПоВидамВремени.ОсновноеЗначениеНорма) КАК НормаДней,
	|	СУММА(ГрафикиРаботыПоВидамВремени.ДополнительноеЗначениеНорма) КАК НормаЧасов,
	|	ГрафикиРаботы.ФизЛицо КАК ФизЛицо,
	|	ГрафикиРаботы.ПериодДействия КАК ПериодДействия
	|ПОМЕСТИТЬ ВТНормаЗаМесяц
	|ИЗ
	|	ВТГрафикиРаботы КАК ГрафикиРаботы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|		ПО ГрафикиРаботы.ГрафикРаботы = ГрафикиРаботыПоВидамВремени.ГрафикРаботы
	|			И ГрафикиРаботы.ПериодДействия = ГрафикиРаботыПоВидамВремени.Месяц
	|			И (ГрафикиРаботыПоВидамВремени.План)
	|			И (ГрафикиРаботыПоВидамВремени.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням))
	|
	|СГРУППИРОВАТЬ ПО
	|	ГрафикиРаботы.ФизЛицо,
	|	ГрафикиРаботы.ПериодДействия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ПериодДействия";
	
	
	Запрос.Текст = НормаВремениПоОбщемуГрафикуТекст;
	Запрос.Выполнить();
	
	ОтработанноеВремя =
	"ВЫБРАТЬ
	|	ОтработанноеВремя.ФизЛицо,
	|	СУММА(ВЫБОР
	|			КОГДА ОтработанноеВремя.ВидВремени = ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ОтработанноеВПределахНормы)
	|				ТОГДА ОтработанноеВремя.ОтработаноЧасов
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОтработаноЧасов,
	|	ВЫБОР
	|		КОГДА ДатыПриемаИУвольнения.ДатаПриема > ОтработанноеВремя.Месяц
	|				ИЛИ ДатыПриемаИУвольнения.ДатаУвольнения < ОтработанноеВремя.Месяц
	|			ТОГДА НормаЗаМесяц.НормаЧасов
	|		ИНАЧЕ СУММА(ОтработанноеВремя.НормаЧасов)
	|	КОНЕЦ КАК НормаЧасов,
	|	ОтработанноеВремя.Месяц КАК Месяц
	|ПОМЕСТИТЬ ВТОтработанноеВремя
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо КАК ФизЛицо,
	|		СУММА(ВЫБОР
	|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.ВидВремени = ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ОтработанноеВПределахНормы)
	|					ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ОтработаноЧасов
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ОтработаноЧасов,
	|		СУММА(ОсновныеНачисленияРаботниковОрганизаций.НормаЧасов) КАК НормаЧасов,
	|		НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало, МЕСЯЦ) КАК Месяц,
	|		ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.ВидВремени КАК ВидВремени
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизЛица КАК Физлица
	|			ПО ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо = Физлица.ФизЛицо
	|	ГДЕ
	|		ОсновныеНачисленияРаботниковОрганизаций.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|		И ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &парамНачалоМесяцаПериодаРегистрации И &парамКонецМесяцаПериодаРегистрации
	|		И ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение В(&СписокВсехПодразделенийОрганизации)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо,
	|		НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало, МЕСЯЦ),
	|		ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.ВидВремени
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОсновныеНачисленияРаботниковОрганизаций.Физлицо,
	|		СУММА(ВЫБОР
	|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.ВидВремени = ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ОтработанноеВПределахНормы)
	|					ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ОтработаноЧасов
	|				ИНАЧЕ 0
	|			КОНЕЦ),
	|		СУММА(ОсновныеНачисленияРаботниковОрганизаций.НормаЧасов),
	|		НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ДатаНачала, МЕСЯЦ),
	|		ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.ВидВремени
	|	ИЗ
	|		Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК ОсновныеНачисленияРаботниковОрганизаций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизЛица КАК Физлица
	|			ПО ОсновныеНачисленияРаботниковОрганизаций.Физлицо = Физлица.ФизЛицо
	|	ГДЕ
	|		ОсновныеНачисленияРаботниковОрганизаций.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|		И ОсновныеНачисленияРаботниковОрганизаций.Ссылка = &Регистратор
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ОсновныеНачисленияРаботниковОрганизаций.Физлицо,
	|		НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ДатаНачала, МЕСЯЦ),
	|		ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.ВидВремени) КАК ОтработанноеВремя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДатыПриемаИУвольнения КАК ДатыПриемаИУвольнения
	|		ПО ОтработанноеВремя.ФизЛицо = ДатыПриемаИУвольнения.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНормаЗаМесяц КАК НормаЗаМесяц
	|		ПО ОтработанноеВремя.ФизЛицо = НормаЗаМесяц.ФизЛицо
	|			И (ОтработанноеВремя.Месяц = НАЧАЛОПЕРИОДА(НормаЗаМесяц.ПериодДействия, МЕСЯЦ))
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтработанноеВремя.ФизЛицо,
	|	ОтработанноеВремя.Месяц,
	|	ДатыПриемаИУвольнения.ДатаПриема,
	|	ДатыПриемаИУвольнения.ДатаУвольнения,
	|	НормаЗаМесяц.НормаЧасов";
	
	Запрос.Текст = ОтработанноеВремя;
	Запрос.Выполнить();


	ДляИсчисленияЕСНТекст = 
	"ВЫБРАТЬ
	|	ДанныеФСЗН.ФизЛицо КАК ФизЛицо,
	|	ДанныеФСЗН.Месяц КАК Месяц,
	|	ДанныеФСЗН.Группа,
	|	ЕСТЬNULL(ДанныеОМЗП.Размер, 0) КАК РазмерМЗП,
	|	ЕСТЬNULL(ОтработанноеВремя.ОтработаноЧасов, 0) КАК ОтработаноЧасов,
	|	ЕСТЬNULL(ОтработанноеВремя.НормаЧасов, 0) КАК НормаЧасов,
	|	СУММА(ДанныеФСЗН.БазаДоходФСЗНБезГПХ) КАК БазаДоходФСЗНБезГПХ,
	|	СУММА(ДанныеФСЗН.БазаДоходФСЗНПоГПХ) КАК БазаДоходФСЗНПоГПХ,
	|	СУММА(ДанныеФСЗН.БазаДоходСтрахБезГПХ) КАК БазаДоходСтрахБезГПХ,
	|	СУММА(ДанныеФСЗН.БазаДоходСтрахПоГПХ) КАК БазаДоходСтрахПоГПХ,
	|	СУММА(ДанныеФСЗН.БазаДоходЕдиныйПлатеж) КАК БазаДоходЕдиныйПлатеж,
	|	СУММА(ДанныеФСЗН.ПенсионныйФонд) КАК ПенсионныйФонд,
	|	СУММА(ДанныеФСЗН.НачисленныйФСЗН) КАК НачисленныйФСЗН,
	|	СУММА(ДанныеФСЗН.НачисленныйСтрах) КАК НачисленныйСтрах,
	|	СУММА(ДанныеФСЗН.НачисленныйЕдиныйПлатеж) КАК НачисленныйЕдиныйПлатеж,
	|	ВТДанныеОПравеНаПенсию.ВидЗастрахованногоЛица
	|ИЗ
	|	(ВЫБРАТЬ
	|		БазаДляНачислений.ФизЛицо КАК ФизЛицо,
	|		БазаДляНачислений.Месяц КАК Месяц,
	|		БазаДляНачислений.Группа КАК Группа,
	|		БазаДляНачислений.БазаДоходФСЗНБезГПХ КАК БазаДоходФСЗНБезГПХ,
	|		БазаДляНачислений.БазаДоходФСЗНПоГПХ КАК БазаДоходФСЗНПоГПХ,
	|		БазаДляНачислений.БазаДоходСтрахБезГПХ КАК БазаДоходСтрахБезГПХ,
	|		БазаДляНачислений.БазаДоходСтрахПоГПХ КАК БазаДоходСтрахПоГПХ,
	|		БазаДляНачислений.БазаДоходЕдиныйПлатеж КАК БазаДоходЕдиныйПлатеж,
	|		0 КАК ПенсионныйФонд,
	|		0 КАК НачисленныйФСЗН,
	|		0 КАК НачисленныйСтрах,
	|		0 КАК НачисленныйЕдиныйПлатеж
	|	ИЗ
	|		ВТОблагаемаяБаза КАК БазаДляНачислений
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Отчсиления.ФизЛицо,
	|		Отчсиления.Месяц,
	|		Отчсиления.Группа,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		Отчсиления.ПенсионныйФонд,
	|		Отчсиления.ФСЗН,
	|		Отчсиления.ОбязательноеСтрахование,
	|		Отчсиления.ЕдиныйПлатеж
	|	ИЗ
	|		ВТЕСНИсчисленный КАК Отчсиления) КАК ДанныеФСЗН
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОМЗП КАК ДанныеОМЗП
	|		ПО ДанныеФСЗН.Месяц = ДанныеОМЗП.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОтработанноеВремя КАК ОтработанноеВремя
	|		ПО ДанныеФСЗН.ФизЛицо = ОтработанноеВремя.ФизЛицо
	|			И ДанныеФСЗН.Месяц = ОтработанноеВремя.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОПравеНаПенсию КАК ВТДанныеОПравеНаПенсию
	|		ПО ДанныеФСЗН.ФизЛицо = ВТДанныеОПравеНаПенсию.ФизЛицо
	|			И ДанныеФСЗН.Месяц = ВТДанныеОПравеНаПенсию.Месяц
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеФСЗН.ФизЛицо,
	|	ДанныеФСЗН.Месяц,
	|	ДанныеФСЗН.Группа,
	|	ДанныеОМЗП.Размер,
	|	ОтработанноеВремя.ОтработаноЧасов,
	|	ОтработанноеВремя.НормаЧасов,
	|	ВТДанныеОПравеНаПенсию.ВидЗастрахованногоЛица
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицо,
	|	Месяц";
	
	Запрос.Текст = ДляИсчисленияЕСНТекст;

	
	ВременнаяТаблица =  Запрос.Выполнить().Выгрузить();
	
	Возврат ВременнаяТаблица;

КонецФункции  // ПолучитьДанныеРасчетаЕСН

Процедура СформироватьДоходыПоПенсионномуФонду(НаборЗаписей, ФизЛицо,ПериодРегистрации,Организация,Регистратор) Экспорт
	
	
	// Составим текст запроса для выбора списка физлиц, по которым надо считать песионный фонд
	Если НЕ (Физлицо = Неопределено) Тогда
		СписокФизлицТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Работники.ФизЛицо КАК ФизЛицо
		|ПОМЕСТИТЬ ВТФизЛица
		|ИЗ
		|	Документ.НачислениеЗарплатыРаботникамОрганизаций.ПенсионныйФонд КАК Работники
		|ГДЕ
		|	Работники.Ссылка = &парамРегистратор
		|	И Работники.Физлицо В( &парамФизлицо)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
		
		ДополнительныеПараметрыЗапроса  = Новый Структура;
		ДополнительныеПараметрыЗапроса.Вставить("парамФизлицо", Физлицо);
	КонецЕсли;
	
	
	
	Запрос = Новый Запрос;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	// Установим параметры запроса
	Запрос.УстановитьПараметр("парамСсылка" , Регистратор);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюКодДоходаЕСН", Перечисления.ДоходыФСС_НС.Облагается);
	Запрос.УстановитьПараметр("парамСпособНеОблагаетсяКодДоходаЕСН", Перечисления.ДоходыФСС_НС.НеОблагается);
    Запрос.УстановитьПараметр("парамПустойКодЕСНУ", Справочники.ДоходыЕСН.ПустаяСсылка());
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюКодЕСН", Справочники.ДоходыЕСН.ОблагаетсяПолностью);
 	Запрос.УстановитьПараметр("парамПериодРегистрации",			ПериодРегистрации);
	//vvv меняем на головную, т.к. в противном случае при перемещении сотрудника в другое обособл. подразделение, снималась сумма пенсионного, начисленного в прошлом обособл. подр.
	//Запрос.УстановитьПараметр("парамОрганизация",				Организация);
	Запрос.УстановитьПараметр("парамОрганизация",				ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	//
	Запрос.УстановитьПараметр("парамРегистратор",				Регистратор);
	Запрос.УстановитьПараметр("парамПустойВидДеятельности",		Справочники.ОсобыеУсловияТруда.ПустаяСсылка());
	Запрос.УстановитьПараметр("парамРасчетОтпуска",				Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням);
	Запрос.УстановитьПараметр("парамУчетОтпусковДляФСЗНвМесяцеНачисления",глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации")[Организация].УчетОтпусковДляФСЗНвМесяцеНачисления);
	
	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	              
	Запрос.Текст = СписокФизлицТекст;
	Запрос.Выполнить();
	
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеУчета.Сотрудник.Физлицо КАК ФизЛицо,
		|	ДанныеУчета.Сотрудник КАК Сотрудник,
		|	ДанныеУчета.КодДоходаЕСН,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.КодДоходаЕСН.ВходитВБазуФСЗН
		|			ТОГДА &парамСпособПоУмолчаниюКодДоходаЕСН
		|		ИНАЧЕ &парамСпособНеОблагаетсяКодДоходаЕСН
		|	КОНЕЦ КАК ДоходФСЗН,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.КодДоходаЕСН.ВходитВБазуСтрах
		|			ТОГДА &парамСпособПоУмолчаниюКодДоходаЕСН
		|		ИНАЧЕ &парамСпособНеОблагаетсяКодДоходаЕСН
		|	КОНЕЦ КАК ДоходСтрах,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.КодДоходаЕСН.ВходитВБазуЕдиныйПлатеж
		|			ТОГДА &парамСпособПоУмолчаниюКодДоходаЕСН
		|		ИНАЧЕ &парамСпособНеОблагаетсяКодДоходаЕСН
		|	КОНЕЦ КАК ДоходЕдиныйПлатеж,
		|	ДанныеУчета.Результат,
		|	ДанныеУчета.Организация,
		|	ДанныеУчета.Регистратор,
		|	ДанныеУчета.ВидРасчета КАК ВидРасчета,
		|	ДанныеУчета.НомерСтроки КАК НомерСтроки,
		|	ДанныеУчета.ПериодВзаимоРасчетов,
		|	ДанныеУчета.ДокументОснование
		|ПОМЕСТИТЬ ВТДанныеУчета
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|		ВЫБОР
		|			КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.КодДоходаЕСН <> &парамПустойКодЕСНУ
		|				ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.КодДоходаЕСН
		|			КОГДА ОсновныеНачисления.ВидРасчета.КодДоходаЕСН <> &парамПустойКодЕСНУ
		|				ТОГДА ОсновныеНачисления.ВидРасчета.КодДоходаЕСН
		|			ИНАЧЕ &парамСпособПоУмолчаниюКодЕСН
		|		КОНЕЦ КАК КодДоходаЕСН,
		|		ОсновныеНачисления.Организация КАК Организация,
		|		ОсновныеНачисления.Регистратор КАК Регистратор,
		|		ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|		ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|		ОсновныеНачисления.Результат КАК Результат,
		|		ОсновныеНачисления.ПериодДействияНачало КАК ПериодВзаимоРасчетов,
		|		NULL КАК ДокументОснование
		|	ИЗ
		|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|					ОсновныеНачисления.Сотрудник.Физлицо КАК ФизЛицо,
		|					ОсновныеНачисления.Организация КАК Организация,
		|					ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|					МАКСИМУМ(РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период) КАК Период
		|				ИЗ
		|					РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|						ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|						ПО ОсновныеНачисления.Сотрудник = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник
		|							И ОсновныеНачисления.Организация = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Организация
		|							И ОсновныеНачисления.ВидРасчета = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета
		|							И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период <= ОсновныеНачисления.ПериодДействияНачало)
		|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизЛица КАК ФизЛица
		|						ПО ОсновныеНачисления.Сотрудник.Физлицо = ФизЛица.ФизЛицо
		|				ГДЕ
		|					ВЫБОР
		//vvv
		//|							КОГДА ОсновныеНачисления.ПодразделениеОрганизации.Владелец ЕСТЬ NULL 
		|							КОГДА ОсновныеНачисления.ПодразделениеОрганизации.Владелец.ГоловнаяОрганизация<>ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		//
		|								ТОГДА ОсновныеНачисления.Организация
		|							ИНАЧЕ ОсновныеНачисления.ПодразделениеОрганизации.Владелец
		|						КОНЕЦ = &парамОрганизация		
		|					И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|					И ОсновныеНачисления.ВидРасчета.СпособРасчета <> &парамРасчетОтпуска
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ОсновныеНачисления.Сотрудник,
		|					ОсновныеНачисления.Сотрудник.Физлицо,
		|					ОсновныеНачисления.Организация,
		|					ОсновныеНачисления.ВидРасчета) КАК СведенияОНачисленияхСрез
		|				ПО (СведенияОНачисленияхСрез.Сотрудник = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник)
		|					И (СведенияОНачисленияхСрез.Организация = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Организация)
		|					И (СведенияОНачисленияхСрез.ВидРасчета = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета)
		|					И (СведенияОНачисленияхСрез.Период = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период)
		|			ПО (РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник = ОсновныеНачисления.Сотрудник)
		|				И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.Организация = ОсновныеНачисления.Организация)
		|				И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета = ОсновныеНачисления.ВидРасчета)
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизЛица КАК ФизЛица
		|			ПО ОсновныеНачисления.Сотрудник.Физлицо = ФизЛица.ФизЛицо
		|	ГДЕ
		|		ВЫБОР
		//vvv
		//|				КОГДА ОсновныеНачисления.ПодразделениеОрганизации.Владелец ЕСТЬ NULL 
		|				КОГДА ОсновныеНачисления.ПодразделениеОрганизации.Владелец.ГоловнаяОрганизация<>ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) 
		//
		|					ТОГДА ОсновныеНачисления.Организация
		|				ИНАЧЕ ОсновныеНачисления.ПодразделениеОрганизации.Владелец
		|			КОНЕЦ = &парамОрганизация		
		|		И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|		И ОсновныеНачисления.ВидРасчета.СпособРасчета <> &парамРасчетОтпуска
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОсновныеНачисления.Сотрудник,
		|		ВЫБОР
		|			КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.КодДоходаЕСН <> &парамПустойКодЕСНУ
		|				ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.КодДоходаЕСН
		|			КОГДА ОсновныеНачисления.ВидРасчета.КодДоходаЕСН <> &парамПустойКодЕСНУ
		|				ТОГДА ОсновныеНачисления.ВидРасчета.КодДоходаЕСН
		|			ИНАЧЕ &парамСпособПоУмолчаниюКодЕСН
		|		КОНЕЦ,
		|		ОсновныеНачисления.Организация,
		|		ОсновныеНачисления.Регистратор,
		|		ОсновныеНачисления.ВидРасчета,
		|		ОсновныеНачисления.НомерСтроки,
		|		ОсновныеНачисления.Результат,
		|		ОсновныеНачисления.ПериодДействияНачало,
		|		NULL
		|	ИЗ
		|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|					ОсновныеНачисления.Сотрудник.Физлицо КАК ФизЛицо,
		|					ОсновныеНачисления.Организация КАК Организация,
		|					ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|					МАКСИМУМ(РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период) КАК Период
		|				ИЗ
		|					РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|						ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|						ПО ОсновныеНачисления.Сотрудник = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник
		|							И ОсновныеНачисления.Организация = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Организация
		|							И ОсновныеНачисления.ВидРасчета = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета
		|							И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период <= ОсновныеНачисления.ПериодДействияНачало)
		|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизЛица КАК ФизЛица
		|						ПО ОсновныеНачисления.Сотрудник.Физлицо = ФизЛица.ФизЛицо
		|				ГДЕ
		|					ВЫБОР
		//vvv
		//|							КОГДА ОсновныеНачисления.ПодразделениеОрганизации.Владелец ЕСТЬ NULL 
		|							КОГДА ОсновныеНачисления.ПодразделениеОрганизации.Владелец.ГоловнаяОрганизация<>ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) 
		//
		|								ТОГДА ОсновныеНачисления.Организация
		|							ИНАЧЕ ОсновныеНачисления.ПодразделениеОрганизации.Владелец
		|						КОНЕЦ = &парамОрганизация
		|					И ОсновныеНачисления.ВидРасчета.СпособРасчета = &парамРасчетОтпуска
		|					И ВЫБОР
		|							КОГДА &парамУчетОтпусковДляФСЗНвМесяцеНачисления		
		|								ТОГДА ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|							ИНАЧЕ НАЧАЛОПЕРИОДА(ОсновныеНачисления.ПериодДействияНачало, МЕСЯЦ) = &парамПериодРегистрации
		|						КОНЕЦ
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ОсновныеНачисления.Сотрудник,
		|					ОсновныеНачисления.Сотрудник.Физлицо,
		|					ОсновныеНачисления.Организация,
		|					ОсновныеНачисления.ВидРасчета) КАК СведенияОНачисленияхСрез
		|				ПО (СведенияОНачисленияхСрез.Сотрудник = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник)
		|					И (СведенияОНачисленияхСрез.Организация = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Организация)
		|					И (СведенияОНачисленияхСрез.ВидРасчета = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета)
		|					И (СведенияОНачисленияхСрез.Период = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период)
		|			ПО (РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник = ОсновныеНачисления.Сотрудник)
		|				И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.Организация = ОсновныеНачисления.Организация)
		|				И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета = ОсновныеНачисления.ВидРасчета)
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизЛица КАК ФизЛица
		|			ПО ОсновныеНачисления.Сотрудник.Физлицо = ФизЛица.ФизЛицо
		|	ГДЕ
		|		ВЫБОР
		//vvv
		//|				КОГДА ОсновныеНачисления.ПодразделениеОрганизации.Владелец ЕСТЬ NULL 
		|				КОГДА ОсновныеНачисления.ПодразделениеОрганизации.Владелец.ГоловнаяОрганизация<>ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) 
		//
		|					ТОГДА ОсновныеНачисления.Организация
		|				ИНАЧЕ ОсновныеНачисления.ПодразделениеОрганизации.Владелец
		|			КОНЕЦ = &парамОрганизация
		|		И ОсновныеНачисления.ВидРасчета.СпособРасчета = &парамРасчетОтпуска
		|		И ВЫБОР
		|				КОГДА &парамУчетОтпусковДляФСЗНвМесяцеНачисления
		|					ТОГДА ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|				ИНАЧЕ НАЧАЛОПЕРИОДА(ОсновныеНачисления.ПериодДействияНачало, МЕСЯЦ) = &парамПериодРегистрации
		|			КОНЕЦ
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДополнительныеНачисления.Сотрудник,
		|		ВЫБОР
		|			КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.КодДоходаЕСН <> &парамПустойКодЕСНУ
		|				ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.КодДоходаЕСН
		|			КОГДА ДополнительныеНачисления.ВидРасчета.КодДоходаЕСН <> &парамПустойКодЕСНУ
		|				ТОГДА ДополнительныеНачисления.ВидРасчета.КодДоходаЕСН
		|			ИНАЧЕ &парамСпособПоУмолчаниюКодЕСН
		|		КОНЕЦ,
		|		ДополнительныеНачисления.Организация,
		|		ДополнительныеНачисления.Регистратор,
		|		ДополнительныеНачисления.ВидРасчета,
		|		ДополнительныеНачисления.НомерСтроки,
		|		ДополнительныеНачисления.Результат,
		//vvv комментируем
		//|		НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ),
		|		ВЫБОР КОГДА (ДополнительныеНачисления.БазовыйПериодНачало<>ДАТАВРЕМЯ(1,1,1)) И (НЕ ДополнительныеНачисления.Регистратор ССЫЛКА Документ.ПремииРаботниковОрганизаций) ТОГДА НАЧАЛОПЕРИОДА(ДополнительныеНачисления.БазовыйПериодНачало, МЕСЯЦ) ИНАЧЕ НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) КОНЕЦ,
		//
		|		ДополнительныеНачисления.ДокументОснование
		|	ИЗ
		|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|					ДополнительныеНачисления.Сотрудник.Физлицо КАК ФизЛицо,
		|					ДополнительныеНачисления.Организация КАК Организация,
		|					ДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
		|					МАКСИМУМ(РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период) КАК Период
		|				ИЗ
		|					РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
		|						ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|						ПО ДополнительныеНачисления.Сотрудник = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник
		|							И ДополнительныеНачисления.Организация = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Организация
		|							И ДополнительныеНачисления.ВидРасчета = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета
		|							И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период <= ДополнительныеНачисления.ПериодРегистрации)
		|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизЛица КАК ФизЛица
		|						ПО ДополнительныеНачисления.Сотрудник.Физлицо = ФизЛица.ФизЛицо
		|				ГДЕ
		|					ВЫБОР
		//vvv
		//|							КОГДА ДополнительныеНачисления.ПодразделениеОрганизации.Владелец ЕСТЬ NULL 
		|							КОГДА ДополнительныеНачисления.ПодразделениеОрганизации.Владелец.ГоловнаяОрганизация<>ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) 
		//
		|								ТОГДА ДополнительныеНачисления.Организация
		|							ИНАЧЕ ДополнительныеНачисления.ПодразделениеОрганизации.Владелец
		|						КОНЕЦ = &парамОрганизация		
		|					И НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ДополнительныеНачисления.Сотрудник,
		|					ДополнительныеНачисления.Сотрудник.Физлицо,
		|					ДополнительныеНачисления.Организация,
		|					ДополнительныеНачисления.ВидРасчета) КАК СведенияОНачисленияхСрез
		|				ПО (СведенияОНачисленияхСрез.Сотрудник = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник)
		|					И (СведенияОНачисленияхСрез.Организация = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Организация)
		|					И (СведенияОНачисленияхСрез.ВидРасчета = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета)
		|					И (СведенияОНачисленияхСрез.Период = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период)
		|			ПО (РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник = ДополнительныеНачисления.Сотрудник)
		|				И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.Организация = ДополнительныеНачисления.Организация)
		|				И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета = ДополнительныеНачисления.ВидРасчета)
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФизЛица КАК ФизЛица
		|			ПО ДополнительныеНачисления.Сотрудник.Физлицо = ФизЛица.ФизЛицо
		|	ГДЕ
		|		ВЫБОР
		//|				КОГДА ДополнительныеНачисления.ПодразделениеОрганизации.Владелец ЕСТЬ NULL 
		|				КОГДА ДополнительныеНачисления.ПодразделениеОрганизации.Владелец.ГоловнаяОрганизация<>ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) 
		//
		|					ТОГДА ДополнительныеНачисления.Организация
		|				ИНАЧЕ ДополнительныеНачисления.ПодразделениеОрганизации.Владелец
		|			КОНЕЦ = &парамОрганизация		
		|		И НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
		|	
		|) КАК ДанныеУчета
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо,
		|	ДанныеУчета.КодДоходаЕСН,
		|	ДоходФСЗН,
		|	ДоходСтрах,
		|	ДоходЕдиныйПлатеж,
		|	ДанныеУчета.Организация,
		|	ДанныеУчета.ПериодВзаимоРасчетов";
		
		
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();	
	
		
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОблогаемыеДоходы.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОблогаемыеДоходы.ПериодВзаимоРасчетов, МЕСЯЦ) КАК ПериодДействия,
	|	СУММА(ВЫБОР
	|			КОГДА ОблогаемыеДоходы.КодДоходаЕСН.ВходитВБазуФСЗН
	|				ТОГДА ОблогаемыеДоходы.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДоходаФСЗН
	|ПОМЕСТИТЬ ВТДоходыФСЗН
	|ИЗ
	|	ВТДанныеУчета КАК ОблогаемыеДоходы
	|
	|СГРУППИРОВАТЬ ПО
	|	ОблогаемыеДоходы.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОблогаемыеДоходы.ПериодВзаимоРасчетов, МЕСЯЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ПериодДействия";
	Запрос.Выполнить();	
	
		
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ЕСНСведенияОДоходах.БазаФСЗН) КАК БазаФСЗН,
	|	СУММА(ЕСНСведенияОДоходах.БазаППС) КАК БазаППС,
	|	ДоходыФСЗН.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ДоходыФСЗН.ПериодДействия, МЕСЯЦ) КАК ПериодВзаиморасчетов
	|ПОМЕСТИТЬ ВТДоходыПрошлыхПериодов
	|ИЗ
	|	ВТДоходыФСЗН КАК ДоходыФСЗН
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	|		ПО (ЕСНСведенияОДоходах.ФизЛицо = ДоходыФСЗН.ФизЛицо)
	|			И (НАЧАЛОПЕРИОДА(ЕСНСведенияОДоходах.ПериодВзаиморасчетов, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ДоходыФСЗН.ПериодДействия, МЕСЯЦ))
	|			И НАЧАЛОПЕРИОДА(ЕСНСведенияОДоходах.Период, МЕСЯЦ) < &парамПериодРегистрации
	|СГРУППИРОВАТЬ ПО
	|	ДоходыФСЗН.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ДоходыФСЗН.ПериодДействия, МЕСЯЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Выполнить();

	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаботникиОрганизаций.Период КАК ПериодППС,
	|	СведенияОРаботникеСрез.ФизЛицо КАК ФизЛицо,
	|	СведенияОРаботникеСрез.КодДоходаЕСН,
	|	СведенияОРаботникеСрез.ДоходФСЗН,
	|	СведенияОРаботникеСрез.ДоходСтрах,
	|	СведенияОРаботникеСрез.ДоходЕдиныйПлатеж,
	|	СведенияОРаботникеСрез.Результат,
	|	СведенияОРаботникеСрез.ПериодВзаимоРасчетов,
	|	ТарифыВзносовНаППССрезПоследних.ВидДеятельности КАК ВидДеятельности,
	|	ДоходыФСЗН.СуммаДоходаФСЗН КАК СуммаДоходФСЗН,
	|	ЕСТЬNULL(ДоходыПрошлыхПериодов.БазаФСЗН, 0) КАК ДоходыПрошлыхФСЗН,
	|	СведенияОРаботникеСрез.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеУчета.Сотрудник КАК Сотрудник,
	|		ДанныеУчета.ФизЛицо КАК ФизЛицо,
	|		ДанныеУчета.ПериодВзаимоРасчетов КАК ПериодВзаимоРасчетов,
	|		МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период,
	|		ДанныеУчета.Регистратор КАК Регистратор,
	|		ДанныеУчета.КодДоходаЕСН КАК КодДоходаЕСН,
	|		ДанныеУчета.ДоходФСЗН КАК ДоходФСЗН,
	|		ДанныеУчета.ДоходСтрах КАК ДоходСтрах,
	|		ДанныеУчета.ДоходЕдиныйПлатеж КАК ДоходЕдиныйПлатеж,
	|		ДанныеУчета.ВидРасчета КАК ВидРасчета,
	|		ДанныеУчета.НомерСтроки КАК НомерСтроки,
	|		ДанныеУчета.Результат КАК Результат,
	|		ДанныеУчета.ДокументОснование КАК ДокументОснование
	|	ИЗ
	|		ВТДанныеУчета КАК ДанныеУчета
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|			ПО ДанныеУчета.Сотрудник = РаботникиОрганизаций.Сотрудник
	|				И (РаботникиОрганизаций.Период <= ДанныеУчета.ПериодВзаимоРасчетов)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеУчета.Сотрудник,
	|		ДанныеУчета.ФизЛицо,
	|		ДанныеУчета.ПериодВзаимоРасчетов,
	|		ДанныеУчета.Регистратор,
	|		ДанныеУчета.КодДоходаЕСН,
	|		ДанныеУчета.ДоходФСЗН,
	|		ДанныеУчета.ДоходСтрах,
	|		ДанныеУчета.ДоходЕдиныйПлатеж,
	|		ДанныеУчета.ВидРасчета,
	|		ДанныеУчета.НомерСтроки,
	|		ДанныеУчета.Результат,
	|		ДанныеУчета.ДокументОснование) КАК СведенияОРаботникеСрез
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|			ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.ТарифыВзносовНаППС.СрезПоследних КАК ТарифыВзносовНаППССрезПоследних
	|			ПО РаботникиОрганизаций.ВидДеятельностиИзмерение = ТарифыВзносовНаППССрезПоследних.ВидДеятельности
	|		ПО (РаботникиОрганизаций.Сотрудник = СведенияОРаботникеСрез.Сотрудник)
	|			И (РаботникиОрганизаций.Период = СведенияОРаботникеСрез.Период)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыФСЗН КАК ДоходыФСЗН
	|		ПО (ДоходыФСЗН.ФизЛицо = СведенияОРаботникеСрез.ФизЛицо)
	|			И (НАЧАЛОПЕРИОДА(ДоходыФСЗН.ПериодДействия, МЕСЯЦ) = НАЧАЛОПЕРИОДА(СведенияОРаботникеСрез.ПериодВзаимоРасчетов, МЕСЯЦ))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПрошлыхПериодов КАК ДоходыПрошлыхПериодов
	|		ПО (ДоходыПрошлыхПериодов.ФизЛицо = СведенияОРаботникеСрез.ФизЛицо)
	|			И (НАЧАЛОПЕРИОДА(ДоходыПрошлыхПериодов.ПериодВзаиморасчетов, МЕСЯЦ) = НАЧАЛОПЕРИОДА(СведенияОРаботникеСрез.ПериодВзаимоРасчетов, МЕСЯЦ))";


	Доходы = Запрос.Выполнить().Выбрать();	                         
		//сформируем движения ЕСНСведенияОДоходах
	Пока Доходы.Следующий() Цикл
			
		
	    Движение = НаборЗаписей.Добавить();
	    // измерения
	    Движение.Период						= ПериодРегистрации;
	    Движение.ПериодВзаимоРасчетов       = Доходы.ПериодВзаимоРасчетов;
	 	Движение.Физлицо					= Доходы.Физлицо;
		//Движение.Сотрудник					= Доходы.Сотрудник;

	    Движение.Организация				= Организация;
		                      
		МесяцУчета = Доходы.ПериодВзаимоРасчетов;
        РазмерСреднейЗарплаты = РегистрыСведений.РазмерыПараметровДляРасчетаРБ.ПолучитьПоследнее(НачалоМесяца(МесяцУчета)-1,Новый Структура("ВидПараметра",Перечисления.ВидыПараметровДляРасчетаЗарплаты.СредняяЗПРаботников)).Размер;
    	СтруктураФСЗН = РегистрыСведений.СтавкиОтчисленийСФОТиЗП.ПолучитьПоследнее(КонецМесяца(ПериодРегистрации),Новый Структура("ВидОтчисления",Перечисления.ВидыОтчисленийСФОТиЗП.ПенсионныйФонд));
       	РазмерОграничения = (РазмерСреднейЗарплаты* СтруктураФСЗН.ОграничениеПоДоходам) - Доходы.ДоходыПрошлыхФСЗН;

	     //ресурсы
	    Движение.Результат					= Доходы.Результат;
		
		Если Доходы.ДоходФСЗН = Перечисления.ДоходыФСС_НС.Облагается тогда
			Если  Доходы.СуммаДоходФСЗН > РазмерОграничения тогда
				Движение.БазаФСЗН = Доходы.Результат/Доходы.СуммаДоходФСЗН * РазмерОграничения;
			Иначе
				Движение.БазаФСЗН = Доходы.Результат;
			КонецЕсли;
		КонецЕсли;

		//Движение.БазаФСЗН					= Доходы.Результат;

	     //реквизиты
	    Движение.КодДоходаЕСН				= Доходы.КодДоходаЕСН;
	    Движение.ДоходФСЗН 					= Доходы.ДоходФСЗН;
	    Движение.ДоходСтрах 				= Доходы.ДоходСтрах;
	    Движение.ДоходЕдиныйПлатеж 			= Доходы.ДоходЕдиныйПлатеж;
		Движение.ВидДеятельности            = Доходы.ВидДеятельности;
	    Движение.ОбособленноеПодразделение	= Организация;
		Движение.ДокументОснование          = Доходы.ДокументОснование;

		
	КонецЦикла;
	
КонецПроцедуры // СформироватьДоходыПоКодамНДФЛ()

Функция ПолучитьТаблицуПенсионногоФонда(ДанныеДляРасчетаЕСНТаблица,ПериодРегистрации,расчетФСЗНотБПМ,Регистратор) Экспорт
	
	ВременнаяТаблица = Регистратор.ПенсионныйФонд.Выгрузить();
	ВременнаяТаблица.Очистить();
	
	Для Каждого ДанныеДляРасчетаЕСН из ДанныеДляРасчетаЕСНТаблица Цикл
		
	Если  не ЗначениеЗаполнено(ДанныеДляРасчетаЕСН.ВидЗастрахованногоЛица) Тогда
		
		СтруктураПенс = РегистрыСведений.СтавкиОтчисленийСФОТиЗП.ПолучитьПоследнее(КонецМесяца(ПериодРегистрации),Новый Структура("ВидОтчисления",Перечисления.ВидыОтчисленийСФОТиЗП.ПенсионныйФонд));
		СтруктураФСЗН = РегистрыСведений.СтавкиОтчисленийСФОТиЗП.ПолучитьПоследнее(КонецМесяца(ПериодРегистрации),Новый Структура("ВидОтчисления",Перечисления.ВидыОтчисленийСФОТиЗП.ФСЗН));
		СтруктураФСЗНИнвалиды = РегистрыСведений.СтавкиОтчисленийСФОТиЗП.ПолучитьПоследнее(КонецМесяца(ПериодРегистрации),Новый Структура("ВидОтчисления",Перечисления.ВидыОтчисленийСФОТиЗП.ФСЗНИнвалиды)); 
		
	Иначе	
		
		СтруктураПенс = Новый Структура;
		СтруктураПенс.Вставить("Размер",0);
		
		СтруктураФСЗН = Новый Структура;
		СтруктураФСЗН.Вставить("Размер",0);
		
		СтруктураФСЗНИнвалиды = РегистрыСведений.СтавкиОтчисленийСФОТиЗП.ПолучитьПоследнее(КонецМесяца(ПериодРегистрации),Новый Структура("ВидОтчисления",Перечисления.ВидыОтчисленийСФОТиЗП.ФСЗНИнвалиды)); 
		
		Если ДанныеДляРасчетаЕСН.ВидЗастрахованногоЛица = Перечисления.ВидыЗастрахованныхЛицОбязательногоСтрахования.ГражданеРБ или не ЗначениеЗаполнено(ДанныеДляРасчетаЕСН.ВидЗастрахованногоЛица) Тогда
			СтруктураФСЗН = РегистрыСведений.СтавкиОтчисленийСФОТиЗП.ПолучитьПоследнее(КонецМесяца(ПериодРегистрации),Новый Структура("ВидОтчисления",Перечисления.ВидыОтчисленийСФОТиЗП.ФСЗН));
			СтруктураПенс = РегистрыСведений.СтавкиОтчисленийСФОТиЗП.ПолучитьПоследнее(КонецМесяца(ПериодРегистрации),Новый Структура("ВидОтчисления",Перечисления.ВидыОтчисленийСФОТиЗП.ПенсионныйФонд));
			
		ИначеЕсли ДанныеДляРасчетаЕСН.ВидЗастрахованногоЛица = Перечисления.ВидыЗастрахованныхЛицОбязательногоСтрахования.ИностраныеГражданеСтранЕАЭС Тогда
			СтруктураФСЗН = РегистрыСведений.СтавкиОтчисленийСФОТиЗП.ПолучитьПоследнее(КонецМесяца(ПериодРегистрации),Новый Структура("ВидОтчисления",Перечисления.ВидыОтчисленийСФОТиЗП.ФСЗНИнГрЕАЭС));
			
		ИначеЕсли ДанныеДляРасчетаЕСН.ВидЗастрахованногоЛица = Перечисления.ВидыЗастрахованныхЛицОбязательногоСтрахования.ИностранцыУплачивающиеСтраховыеВзносы Тогда
			СтруктураФСЗН = РегистрыСведений.СтавкиОтчисленийСФОТиЗП.ПолучитьПоследнее(КонецМесяца(ПериодРегистрации),Новый Структура("ВидОтчисления",Перечисления.ВидыОтчисленийСФОТиЗП.ФСЗН));
			СтруктураПенс = РегистрыСведений.СтавкиОтчисленийСФОТиЗП.ПолучитьПоследнее(КонецМесяца(ПериодРегистрации),Новый Структура("ВидОтчисления",Перечисления.ВидыОтчисленийСФОТиЗП.ПенсионныйФонд));
			
		КонецЕсли;
	КонецЕсли;	
	
	
	
	Если СтруктураПенс.Количество()<>0 тогда
		СтавкаПенсионныйФонд = СтруктураПенс.Размер;
	Иначе
		Сообщить("Не заполнена ставка пенсионного фонда");
		СтавкаПенсионныйФонд = 0;
	КонецЕсли;
			Если СтруктураФСЗН.Количество()<>0 тогда
		СтавкаФСЗН = СтруктураФСЗН.Размер;
	Иначе
		Сообщить("Не заполнена ставка отчислений в ФСЗН");
		СтавкаФСЗН = 0;
	КонецЕсли;
	
	Если СтруктураФСЗНИнвалиды.Количество()<>0 тогда
		СтавкаФСЗНИнвалиды = СтруктураФСЗНИнвалиды.Размер;
	Иначе
		Сообщить("Не заполнена ставка отчислений в ФСЗН по инвалидам");
		СтавкаФСЗНИнвалиды = 0;
	КонецЕсли;		
	 		
	НоваяСтрока = ВременнаяТаблица.Добавить();
	НоваяСтрока.ФизЛицо = ДанныеДляРасчетаЕСН.ФизЛицо;
		
	НоваяСтрока.ПроцентФСЗН = ?(ДанныеДляРасчетаЕСН.Группа = 0, СтавкаФСЗН, СтавкаФСЗНИнвалиды);
	
    
	ПериодРасчета = ?(не ЗначениеЗаполнено(ДанныеДляРасчетаЕСН.Месяц), ПериодРегистрации, ДанныеДляРасчетаЕСН.Месяц);
	НоваяСтрока.МесяцНалоговогоПериода = ПериодРасчета;
	
				
	Если  ДанныеДляРасчетаЕСН.Месяц <= ПериодРегистрации И ДанныеДляРасчетаЕСН.ОтработаноЧасов <> 0 И ДанныеДляРасчетаЕСН.НормаЧасов <> 0  Тогда
		Если  расчетФСЗНотБПМ Тогда
       		РазмерМЗП = ОбщегоНазначения.ОкруглитьПоВалюте(ДанныеДляРасчетаЕСН.РазмерМЗП *ДанныеДляРасчетаЕСН.ОтработаноЧасов/ДанныеДляРасчетаЕСН.НормаЧасов	,Константы.ВалютаРегламентированногоУчета.Получить());
			БазаДоходПенсионныйФонд= ?(ДанныеДляРасчетаЕСН.БазаДоходФСЗНБезГПХ <> 0,Макс(ДанныеДляРасчетаЕСН.БазаДоходФСЗНБезГПХ, РазмерМЗП), ДанныеДляРасчетаЕСН.БазаДоходФСЗНБезГПХ) + ДанныеДляРасчетаЕСН.БазаДоходФСЗНПоГПХ;
		Иначе
			БазаДоходПенсионныйФонд = ДанныеДляРасчетаЕСН.БазаДоходФСЗНБезГПХ + ДанныеДляРасчетаЕСН.БазаДоходФСЗНПоГПХ;
           КонецЕсли;
	Иначе
		БазаДоходПенсионныйФонд = ДанныеДляРасчетаЕСН.БазаДоходФСЗНБезГПХ + ДанныеДляРасчетаЕСН.БазаДоходФСЗНПоГПХ;
  	КонецЕсли; 
		
	НоваяСтрока.Налог = ОбщегоНазначения.ОкруглитьПоВалюте(БазаДоходПенсионныйФонд * СтавкаПенсионныйФонд/100, Константы.ВалютаРегламентированногоУчета.Получить()) - данныеДляРасчетаЕСН.ПенсионныйФонд;
			
	КонецЦикла;

	ВременнаяТаблица.Свернуть("ФизЛицо, МесяцНалоговогоПериода, ПроцентФСЗН","Налог");
	
	Возврат ВременнаяТаблица;

КонецФункции

Процедура ДобавитьСтрокуПенсионныйФонд(Строка, Организация, НаборЗаписей,НаборЗаписейСтраховыеВзносы,ПериодРегистрации) Экспорт
	
	Если  Строка.Налог <> 0 тогда
		Движение = НаборЗаписей.Добавить();

		// Свойства
		Движение.Период						= НачалоМесяца(ПериодРегистрации);
		
		// Измерения
		Движение.ФизЛицо                    	= Строка.ФизЛицо;
	   	Движение.Организация					= ОбщегоНазначения.ГоловнаяОрганизация(Организация);
		Движение.ПериодВзаиморасчетов    		= Строка.МесяцНалоговогоПериода;
		Движение.ПроцентФСЗН                    = Строка.ПроцентФСЗН;
		// Ресурсы
		Движение.ПенсионныйФонд					= Строка.Налог;
			
		// Реквизиты 
		Движение.ОбособленноеПодразделение	= Организация;
		
		//Расчеты по страховым взносам
	    Движение = НаборЗаписейСтраховыеВзносы.ДобавитьПриход();
		// Свойства
		Движение.Период						= КонецМесяца(ПериодРегистрации);
		// Измерения
		Движение.ФизЛицо                    	= Строка.ФизЛицо;
		Движение.Организация					= ОбщегоНазначения.ГоловнаяОрганизация(Организация);;
		Движение.МесяцРасчетногоПериода    		= Строка.МесяцНалоговогоПериода;
		Движение.ВидПлатежа                     = Перечисления.ВидыПлатежейВГосБюджет.Налог;
		// Ресурсы
		Движение.ФСЗН							= Строка.Налог;
					
	КонецЕсли;
		                          
КонецПроцедуры // ДобавитьСтрокуДобавитьСтрокуПенсионныйФонд
