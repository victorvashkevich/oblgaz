////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры, функции

////////////////////////////////////////////////////////////////////////////////
// Процедуры, функции объекта

Процедура ПроверитьЗначенияРеквизитов(ЭтотОбъект, Отказ, ТекстСообщенияОбОшибке) Экспорт
	
	РежимНабораПерсонала = ПроцедурыУправленияПерсоналомДополнительный.ПолучитьРежимНабораПерсонала();
	
	Подразделение 	= ЭтотОбъект.Подразделение;
	Организация 	= ЭтотОбъект.Организация;
	
	Если РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		Если Организация.Пустая() Тогда
			Отказ = Истина;
			ТекстСообщенияОбОшибке = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Не указана организация!");
		КонецЕсли;
		Если Подразделение = Неопределено ИЛИ Подразделение.Пустая() Тогда
			Отказ = Истина;
			ТекстСообщенияОбОшибке = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Не указано подразделение организации!");
		КонецЕсли;
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		Если Организация <> Подразделение.Владелец Тогда
			Отказ = Истина;
			ТекстСообщенияОбОшибке = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Указано подразделение, принадлежащее другой организации!");
		КонецЕсли;
	Иначе
		Если Подразделение = Неопределено ИЛИ Подразделение.Пустая() Тогда
			Отказ = Истина;
			ТекстСообщенияОбОшибке = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Не указано подразделение!");
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры, функции для работы формы документа

Функция РегистрСведенийОРабочихМестах() Экспорт 
	
	Возврат Метаданные.РегистрыСведений.СведенияОРабочихМестах;
	
КонецФункции

Функция СформироватьЗапросПоОписаниюВакансии(ЭтотОбъект) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Должность",		ЭтотОбъект.Должность);
	
	РежимНабораПерсонала = ПроцедурыУправленияПерсоналомДополнительный.ПолучитьРежимНабораПерсонала();

	Если РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		Запрос.УстановитьПараметр("ПодразделениеОрганизации",	ЭтотОбъект.Подразделение);
		
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВложенныйЗапрос.УточнитьОписаниеВакансии КАК УточнитьОписаниеВакансии,
		|	ВложенныйЗапрос.Требования КАК ВакансияТребования,
		|	ВложенныйЗапрос.Обязанности КАК ВакансияОбязанности,
		|	ВложенныйЗапрос.Условия КАК ВакансияУсловия
		|ИЗ
		|	(ВЫБРАТЬ
		|		Должности.Требования КАК Требования,
		|		Должности.Обязанности КАК Обязанности,
		|		Должности.Условия КАК Условия,
		|		ЛОЖЬ КАК УточнитьОписаниеВакансии,
		|		1 КАК Порядок
		|	ИЗ
		|		Справочник.Должности КАК Должности
		|	ГДЕ
		|		Должности.Ссылка = &Должность
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СведенияОРабочихМестах.Требования,
		|		СведенияОРабочихМестах.Обязанности,
		|		СведенияОРабочихМестах.Условия,
		|		ЛОЖЬ,
		|		2
		|	ИЗ
		|		РегистрСведений.СведенияОРабочихМестах КАК СведенияОРабочихМестах
		|	ГДЕ
		|		СведенияОРабочихМестах.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
		|		И СведенияОРабочихМестах.ПодразделениеОрганизации = &ПодразделениеОрганизации
		|		И СведенияОРабочихМестах.Должность = &Должность
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Вакансии.Требования,
		|		Вакансии.Обязанности,
		|		Вакансии.Условия,
		|		ИСТИНА,
		|		3
		|	ИЗ
		|		Справочник.Вакансии КАК Вакансии
		|	ГДЕ
		|		Вакансии.Подразделение = &ПодразделениеОрганизации
		|		И Вакансии.Должность = &Должность
		|		И ((НЕ Вакансии.Требования ПОДОБНО """")
		|				ИЛИ (НЕ Вакансии.Обязанности ПОДОБНО """")
		|				ИЛИ (НЕ Вакансии.Условия ПОДОБНО """"))) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВложенныйЗапрос.Порядок УБЫВ";
		
	Иначе
		Запрос.УстановитьПараметр("Подразделение",	ЭтотОбъект.Подразделение);
		
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВложенныйЗапрос.УточнитьОписаниеВакансии КАК УточнитьОписаниеВакансии,
		|	ВложенныйЗапрос.Требования КАК ВакансияТребования,
		|	ВложенныйЗапрос.Обязанности КАК ВакансияОбязанности,
		|	ВложенныйЗапрос.Условия КАК ВакансияУсловия
		|ИЗ
		|	(ВЫБРАТЬ
		|		Должности.Требования КАК Требования,
		|		Должности.Обязанности КАК Обязанности,
		|		Должности.Условия КАК Условия,
		|		ЛОЖЬ КАК УточнитьОписаниеВакансии,
		|		1 КАК Порядок
		|	ИЗ
		|		Справочник.Должности КАК Должности
		|	ГДЕ
		|		Должности.Ссылка = &Должность
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СведенияОРабочихМестах.Требования,
		|		СведенияОРабочихМестах.Обязанности,
		|		СведенияОРабочихМестах.Условия,
		|		ЛОЖЬ,
		|		2
		|	ИЗ
		|		РегистрСведений.СведенияОРабочихМестах КАК СведенияОРабочихМестах
		|	ГДЕ
		|		СведенияОРабочихМестах.Подразделение = &Подразделение
		|		И СведенияОРабочихМестах.ПодразделениеОрганизации = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|		И СведенияОРабочихМестах.Должность = &Должность
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Вакансии.Требования,
		|		Вакансии.Обязанности,
		|		Вакансии.Условия,
		|		ИСТИНА,
		|		3
		|	ИЗ
		|		Справочник.Вакансии КАК Вакансии
		|	ГДЕ
		|		Вакансии.Подразделение = &Подразделение
		|		И Вакансии.Должность = &Должность
		|		И ((НЕ Вакансии.Требования ПОДОБНО """")
		|				ИЛИ (НЕ Вакансии.Обязанности ПОДОБНО """")
		|				ИЛИ (НЕ Вакансии.Условия ПОДОБНО """"))) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВложенныйЗапрос.Порядок УБЫВ";
		
	КонецЕсли;

	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СформироватьЗапросПоОписаниюДолжности(ЭтотОбъект) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Должность",		ЭтотОбъект.Должность);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Должности.Требования,
	|	Должности.Обязанности,
	|	Должности.Условия
	|ИЗ
	|	Справочник.Должности КАК Должности
	|ГДЕ
	|	Должности.Ссылка = &Должность";
	
	Возврат Запрос.Выполнить();

КонецФункции

Процедура ПодразделениеОчисткаДополнительно(ЭтотОбъект) Экспорт
	
	РежимНабораПерсонала = ПроцедурыУправленияПерсоналомДополнительный.ПолучитьРежимНабораПерсонала();
	
	Подразделение = ЭтотОбъект.Подразделение;

	Если РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		Если ТипЗнч(Подразделение) <> Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
			ЭтотОбъект.Подразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
		КонецЕсли;
	Иначе
		Если ТипЗнч(Подразделение) <> Тип("СправочникСсылка.Подразделения") Тогда
			ЭтотОбъект.Подразделение = Справочники.Подразделения.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#Если ТолстыйКлиентОбычноеПриложение Тогда
	
Процедура ПриОткрытииДополнительно(ЭтаФорма, ЭтотОбъект) Экспорт
	
	РежимНабораПерсонала = ПроцедурыУправленияПерсоналомДополнительный.ПолучитьРежимНабораПерсонала();
	
	Подразделение = ЭтотОбъект.Подразделение;
	Организация = ЭтотОбъект.Организация;
	
	Если ЭтотОбъект.ЭтоНовый() Тогда
		Если РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
			Если Организация.Пустая() Тогда
				ЭтотОбъект.Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
			КонецЕсли;
			Если Подразделение = Неопределено ИЛИ Подразделение.Пустая() Тогда
				ЭтотОбъект.Подразделение = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновноеПодразделениеОрганизации");
			КонецЕсли;
		Иначе
			Если Подразделение = Неопределено ИЛИ Подразделение.Пустая() Тогда
				ЭтотОбъект.Подразделение = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновноеПодразделение");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
	Если РежимНабораПерсонала <> Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		ЭтаФорма.ЭлементыФормы.ПанельОрганизация.Свертка = РежимСверткиЭлементаУправления.Верх;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытииФормыСпискаДополнительно(ЭтаФорма) Экспорт
	
	РежимНабораПерсонала = ПроцедурыУправленияПерсоналомДополнительный.ПолучитьРежимНабораПерсонала();
	
	ПоказыватьОрганизацию = РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц;
	
	ЭлементыФормы = ЭтаФорма.ЭлементыФормы;
	
	ЭлементыФормы.СправочникСписок.Колонки.Организация.Видимость			= ПоказыватьОрганизацию;
	ЭлементыФормы.СправочникСписок.Колонки.Организация.ИзменятьНастройку	= ПоказыватьОрганизацию;
	ЭлементыФормы.ОрганизацияФлаг.Видимость									= ПоказыватьОрганизацию;
	ЭлементыФормы.Организация.Видимость										= ПоказыватьОрганизацию;
	
КонецПроцедуры

#КонецЕсли
