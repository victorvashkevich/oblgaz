
////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция определяет доступность (на просмотр) плановых начислений сотрудника,
//  принимая во внимание не только доступность самого регистра плановых начислений, 
//  но и доступность начислений конкретного сотрудника пользователю с правами кадровика
//
Функция ДоступныПлановыеНачисленияСотрудника(ВидОрганизационнойСтруктуры, СотрудникСсылка) Экспорт
	
	Сотрудники = Новый Массив;
	Сотрудники.Добавить(СотрудникСсылка);
	ПросмотрПлановыхНачисленийКадровиками = ЗаполнениеНачислениямиДополнительный.ДоступныНачисленияСотрудников(Сотрудники, "РуководительПодразделения," + ?(ВидОрганизационнойСтруктуры = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц, "РасчетчикРегламентированнойЗарплаты", "РасчетчикУправленческойЗарплаты"));

	Возврат ПравоДоступа("Чтение", Метаданные.РегистрыСведений[?(ВидОрганизационнойСтруктуры = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц, "ПлановыеНачисленияРаботниковОрганизаций", "ПлановыеНачисленияРаботников")]) И ПросмотрПлановыхНачисленийКадровиками;
	
КонецФункции // ДоступныПлановыеНачисленияСотрудника

Процедура ОпределитьДоступностьДанных(ДоступностьПросмотр, ДоступностьИзменение, ПривилегированныйРежимЧтения, СотрудникСсылка) Экспорт
	
	// сведения о доступности просмотра областей данных
	ДоступностьПросмотр = Новый Соответствие;
	ДоступностьПросмотр.Вставить("ЗарплатаОрганизации", ПравоДоступа("Просмотр", Метаданные.РегистрыРасчета.ОсновныеНачисленияРаботниковОрганизаций) И ПравоДоступа("Просмотр", Метаданные.РегистрыНакопления.ВзаиморасчетыСРаботникамиОрганизаций));
	ДоступностьПросмотр.Вставить("ЗарплатаКомпании", ПравоДоступа("Просмотр", Метаданные.РегистрыРасчета.УправленческиеНачисления) И ПравоДоступа("Просмотр", Метаданные.РегистрыНакопления.ВзаиморасчетыСРаботниками));
	ДоступностьПросмотр.Вставить("ПлановыеНачисленияОрганизации", ДоступныПлановыеНачисленияСотрудника(Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц, СотрудникСсылка));
	ДоступностьПросмотр.Вставить("ПлановыеНачисленияКомпании", ДоступныПлановыеНачисленияСотрудника(Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности, СотрудникСсылка));
	ДоступностьПросмотр.Вставить("КадрыОрганизации", ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.РаботникиОрганизаций));
	ДоступностьПросмотр.Вставить("КадрыКомпании", ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.Работники));
	ДоступностьПросмотр.Вставить("ОтсутствияОрганизации", ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.СостояниеРаботниковОрганизаций) И ПравоДоступа("Просмотр", Метаданные.Справочники.ВидыЕжегодныхОтпусков));
	ДоступностьПросмотр.Вставить("ОтсутствияКомпании", ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.СостояниеРаботников));
	ДоступностьПросмотр.Вставить("АвансОрганизации", ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.АвансыРаботникамОрганизаций));
	ДоступностьПросмотр.Вставить("АвансКомпании", ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.АвансыРаботникам));
	ДоступностьПросмотр.Вставить("ЛицевыеСчета", ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.ЛицевыеСчетаРаботниковОрганизации));
	ДоступностьПросмотр.Вставить("СЗВК", ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.ЗаписиОСтажеДляСЗВК));
	ДоступностьПросмотр.Вставить("СеверныйСтаж", ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.СведенияОСтажеРаботыНаСевере));
	//ДоступностьПросмотр.Вставить("Льготы", ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.ЛьготыРаботников));
	//ДоступностьПросмотр.Вставить("ОбучениеРазвитие", ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.РезультатыМероприятийОбученияРазвития));
	//ДоступностьПросмотр.Вставить("УченическийДоговор", ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.ОбязательстваРаботниковПоУченическимДоговорам));
	//ДоступностьПросмотр.Вставить("ОценкаПоВопросам", ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.РезультатыОценкиСотрудников));
	//ДоступностьПросмотр.Вставить("ОтчетОбучениеРазвитие", ПравоДоступа("Просмотр", Метаданные.Отчеты.ОбучениеРазвитие));
	//ДоступностьПросмотр.Вставить("ОтчетРезультатыОбученияРазвития", ПравоДоступа("Просмотр", Метаданные.Отчеты.РезультатыОбученияРазвития));
	//ДоступностьПросмотр.Вставить("ОхранаТруда", ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.ДопускиКРаботам));
	//ДоступностьПросмотр.Вставить("РаспределениеРасходов", ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.УчетЗаработкаРаботников));
	//ДоступностьПросмотр.Вставить("СуммыРасходов", ПравоДоступа("Просмотр", Метаданные.РегистрыНакопления.РасходыНаПерсонал));
	//ДоступностьПросмотр.Вставить("Кандидаты", ПравоДоступа("Просмотр", Метаданные.Справочники.ЗаявкиКандидатов));
	//ДоступностьПросмотр.Вставить("ШтатноеРасписание", ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ШтатноеРасписаниеОрганизаций));
	//ДоступностьПросмотр.Вставить("ДоговорыГПХ", ПравоДоступа("Просмотр", Метаданные.Документы.ДоговорНаВыполнениеРаботСФизЛицом));
	//ДоступностьПросмотр.Вставить("АктыГПХ", ПравоДоступа("Просмотр", Метаданные.Документы.АктыПриемкиВыполненныхРабот));
	
	// сведения о доступности изменения объектов, заполняется во время выполнения по мере необходимости
	ДоступностьИзменение = Новый Соответствие;
	
	// для некоторых ролей включаем привилегированный режим чтения, 
	ПривилегированныйРежимЧтения = РольДоступна("РуководительПодразделения");
	// если прив. режим включен - то используем для чтения пока только регл плановых начислений
	Если ПривилегированныйРежимЧтения Тогда
		ДоступностьПросмотр.Вставить("ПлановыеНачисленияОрганизации", Истина);
	КонецЕсли;
	
КонецПроцедуры // ОпределитьДоступностьДанных

Функция ВыполнитьЗапрос(ТекстЗапроса, Параметры, ВыполнятьВПривилегированномРежиме, ВыполнятьПакет = Ложь)
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Для Каждого Параметр Из Параметры Цикл
		Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
	КонецЦикла;
	
	Если ВыполнятьВПривилегированномРежиме Тогда
		УстановитьПривилегированныйРежим(Истина);
		РезультатЗапроса = ?(ВыполнятьПакет, Запрос.ВыполнитьПакет(), Запрос.Выполнить());
		УстановитьПривилегированныйРежим(Ложь);
		Возврат РезультатЗапроса;
	Иначе
		Возврат ?(ВыполнятьПакет, Запрос.ВыполнитьПакет(), Запрос.Выполнить());
	КонецЕсли;
	
КонецФункции // ВыполнитьЗапрос

Функция ОстатокОтпускаКомпании(Физлицо, ДатаУвольненияИзКомпании, ДатаАктуальности) Экспорт
	
	// Подготовить таблицу периодов для расчета остатков
	ТаблицаПериодов = Новый ТаблицаЗначений;
	ТаблицаПериодов.Колонки.Добавить("НомерСтроки",				Новый ОписаниеТипов("Число"));
	ТаблицаПериодов.Колонки.Добавить("Сотрудник",				Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ТаблицаПериодов.Колонки.Добавить("ДатаНачала",				Новый ОписаниеТипов("Дата"));
	ТаблицаПериодов.Колонки.Добавить("ДатаОкончания",			Новый ОписаниеТипов("Дата"));
	
	Строка = ТаблицаПериодов.Добавить();
	Строка.НомерСтроки			= 0;
	Строка.Сотрудник			= Физлицо;
	Строка.ДатаНачала			= ?(ЗначениеЗаполнено(ДатаУвольненияИзКомпании), ДатаУвольненияИзКомпании, ДатаАктуальности) + 86400;
	Строка.ДатаОкончания		= Строка.ДатаНачала;
	
	Выборка = ПроцедурыУправленияПерсоналомДополнительный.ПодготовитьДанныеПоУправленческимОтпускам(ТаблицаПериодов, Истина);
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Количество + Выборка.ОстатокДополнительногоОтпуска;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции // ОстатокОтпускаКомпании

Функция ПредставлениеДолжности(ДолжностьСсылка) Экспорт
	
	Представление = Строка(ДолжностьСсылка);
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГрейды") Тогда
		ГрейдДолжности = ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(ДолжностьСсылка, "Грейд");
		Если ЗначениеЗаполнено(ГрейдДолжности) Тогда
			Представление = Представление + " (грейд " + Строка(ГрейдДолжности) + ")";
		КонецЕсли;
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции // ПредставлениеДолжности

Процедура ИзменитьНаименованияДругихСотрудниковКандидатов(ФизлицоСсылка, ФизлицоНаименование, ТекущийОбъектСсылка) Экспорт
	
	Если Не ЗначениеЗаполнено(ФизлицоСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ПредставленияТипаОбъекта = Новый Соответствие;
	ПредставленияТипаОбъекта.Вставить(Тип("СправочникСсылка.ЗаявкиКандидатов"), "кандидата");
	ПредставленияТипаОбъекта.Вставить(Тип("СправочникСсылка.СотрудникиОрганизаций"), "сотрудника");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Сотрудники.Ссылка,
	|	Сотрудники.ПостфиксНаименования
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК Сотрудники
	|ГДЕ
	|	Сотрудники.Физлицо = &ФизЛицо
	|	И Сотрудники.Актуальность
	|	И Сотрудники.Наименование <> &ФИО + "" "" + Сотрудники.ПостфиксНаименования
	|	И Сотрудники.Ссылка <> &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Кандидаты.Ссылка,
	|	Кандидаты.ПостфиксНаименования
	|ИЗ
	|	Справочник.ЗаявкиКандидатов КАК Кандидаты
	|ГДЕ
	|	Кандидаты.ФизЛицо = &ФизЛицо
	|	И Кандидаты.Наименование <> &ФИО + Кандидаты.ПостфиксНаименования
	|	И Кандидаты.Ссылка <> &Ссылка";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ФизЛицо", 	ФизлицоСсылка);
	Запрос.УстановитьПараметр("ФИО", 		ФизлицоНаименование);
	Запрос.УстановитьПараметр("Ссылка",		ТекущийОбъектСсылка);
	
	УстановитьПривилегированныйРежим(Истина);
	
	РезультатСписокСотрудников = Запрос.Выполнить();
	
	Если НЕ РезультатСписокСотрудников.Пустой() тогда
		
		Выборка = РезультатСписокСотрудников.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Попытка 
				СправочникОбъект.Заблокировать();
			Исключение
				Отказ = Истина;
				ТекстИсключенияЗаписи = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось изменить имя %1 %2.
				|Возможно, его данные редактируются другим пользователем'"),
				ПредставленияТипаОбъекта[ТипЗнч(Выборка.Ссылка)],
				СправочникОбъект.Наименование);			
				ВызватьИсключение ТекстИсключенияЗаписи;
			КонецПопытки;
			СправочникОбъект.Наименование = ФизлицоНаименование + " " + Выборка.ПостфиксНаименования;
			СправочникОбъект.Записать();
		КонецЦикла;
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьРазмерыВычетовНДФЛ(НДФЛРазмерыВычетов, ДатаАктуальности) Экспорт
	
	НДФЛРазмерыВычетов = Новый Соответствие;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	НДФЛРазмерВычетовСрезПоследних.КодВычета,
	|	НДФЛРазмерВычетовСрезПоследних.Размер
	|ИЗ
	|	РегистрСведений.НДФЛРазмерВычетов.СрезПоследних(&ДатаАктуальности, ) КАК НДФЛРазмерВычетовСрезПоследних");
	
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НДФЛРазмерыВычетов.Вставить(Выборка.КодВычета, Выборка.Размер);
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьРазмерыВычетовНДФЛ

// тексты запросов

Функция ТекстЗапросаОкладОрганизации(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["ПлановыеНачисленияОрганизации"] Тогда
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ПлановыеНачисления.Период,
		|	ПлановыеНачисления.ВидРасчета,
		|	ПлановыеНачисления.Показатель1,
		|	ПлановыеНачисления.Показатель2,
		|	ПлановыеНачисления.Показатель3,
		|	ПлановыеНачисления.Показатель4,
		|	ПлановыеНачисления.Показатель5,
		|	ПлановыеНачисления.Показатель6,
		|	ПлановыеНачисления.ТарифныйРазряд1,
		|	ПлановыеНачисления.ТарифныйРазряд2,
		|	ПлановыеНачисления.ТарифныйРазряд3,
		|	ПлановыеНачисления.ТарифныйРазряд4,
		|	ПлановыеНачисления.ТарифныйРазряд5,
		|	ПлановыеНачисления.ТарифныйРазряд6,
		|	ПлановыеНачисления.ПериодЗавершения,
		|	ПлановыеНачисления.ВидРасчетаЗавершения,
		|	ПлановыеНачисления.Показатель1Завершения,
		|	ПлановыеНачисления.Показатель2Завершения,
		|	ПлановыеНачисления.Показатель3Завершения,
		|	ПлановыеНачисления.Показатель4Завершения,
		|	ПлановыеНачисления.Показатель5Завершения,
		|	ПлановыеНачисления.Показатель6Завершения,
		|	ПлановыеНачисления.ТарифныйРазряд1Завершения,
		|	ПлановыеНачисления.ТарифныйРазряд2Завершения,
		|	ПлановыеНачисления.ТарифныйРазряд3Завершения,
		|	ПлановыеНачисления.ТарифныйРазряд4Завершения,
		|	ПлановыеНачисления.ТарифныйРазряд5Завершения,
		|	ПлановыеНачисления.ТарифныйРазряд6Завершения
		|ПОМЕСТИТЬ ИзмененияОсновногоНачисления
		|ИЗ
		|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления
		|ГДЕ
		|	ПлановыеНачисления.Сотрудник = &Ссылка
		|	И ПлановыеНачисления.Организация = &Организация
		|	И ПлановыеНачисления.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО
		|	И ПлановыеНачисления.Период <= &Период
		|	И ПлановыеНачисления.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ИзмененияОсновногоНачисления.Период) КАК Период
		|ПОМЕСТИТЬ ПериодКрайнейЗаписиОсновногоНачисления
		|ИЗ
		|	ИзмененияОсновногоНачисления КАК ИзмененияОсновногоНачисления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ИзмененияОсновногоНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|				И ИзмененияОсновногоНачисления.ПериодЗавершения <= &Период
		|			ТОГДА ИзмененияОсновногоНачисления.ПериодЗавершения
		|		ИНАЧЕ ИзмененияОсновногоНачисления.Период
		|	КОНЕЦ КАК Период,
		|	ВЫБОР
		|		КОГДА ИзмененияОсновногоНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|				И ИзмененияОсновногоНачисления.ПериодЗавершения <= &Период
		|			ТОГДА ВЫБОР
		|					КОГДА ИзмененияОсновногоНачисления.ВидРасчетаЗавершения.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПроизвольнаяФормула)
		|						ТОГДА ВЫБОР
		|								КОГДА ПоказателиВидовРасчета.Показатель.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
		|									ТОГДА ВЫБОР
		|											КОГДА ПоказателиВидовРасчета.НомерСтроки = 1
		|												ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд1Завершения
		|											КОГДА ПоказателиВидовРасчета.НомерСтроки = 2
		|												ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд2Завершения
		|											КОГДА ПоказателиВидовРасчета.НомерСтроки = 3
		|												ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд3Завершения
		|											КОГДА ПоказателиВидовРасчета.НомерСтроки = 4
		|												ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд4Завершения
		|											КОГДА ПоказателиВидовРасчета.НомерСтроки = 5
		|												ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд5Завершения
		|											КОГДА ПоказателиВидовРасчета.НомерСтроки = 6
		|												ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд6Завершения
		|											ИНАЧЕ NULL
		|										КОНЕЦ
		|								ИНАЧЕ ВЫБОР
		|										КОГДА ПоказателиВидовРасчета.НомерСтроки = 1
		|											ТОГДА ИзмененияОсновногоНачисления.Показатель1Завершения
		|										КОГДА ПоказателиВидовРасчета.НомерСтроки = 2
		|											ТОГДА ИзмененияОсновногоНачисления.Показатель2Завершения
		|										КОГДА ПоказателиВидовРасчета.НомерСтроки = 3
		|											ТОГДА ИзмененияОсновногоНачисления.Показатель3Завершения
		|										КОГДА ПоказателиВидовРасчета.НомерСтроки = 4
		|											ТОГДА ИзмененияОсновногоНачисления.Показатель4Завершения
		|										КОГДА ПоказателиВидовРасчета.НомерСтроки = 5
		|											ТОГДА ИзмененияОсновногоНачисления.Показатель5Завершения
		|										КОГДА ПоказателиВидовРасчета.НомерСтроки = 6
		|											ТОГДА ИзмененияОсновногоНачисления.Показатель6Завершения
		|										ИНАЧЕ NULL
		|									КОНЕЦ
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА ИзмененияОсновногоНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда
		|								ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд1Завершения
		|							ИНАЧЕ ИзмененияОсновногоНачисления.Показатель1Завершения
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ИзмененияОсновногоНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПроизвольнаяФормула)
		|					ТОГДА ВЫБОР
		|							КОГДА ПоказателиВидовРасчета.Показатель.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
		|								ТОГДА ВЫБОР
		|										КОГДА ПоказателиВидовРасчета.НомерСтроки = 1
		|											ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд1
		|										КОГДА ПоказателиВидовРасчета.НомерСтроки = 2
		|											ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд2
		|										КОГДА ПоказателиВидовРасчета.НомерСтроки = 3
		|											ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд3
		|										КОГДА ПоказателиВидовРасчета.НомерСтроки = 4
		|											ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд4
		|										КОГДА ПоказателиВидовРасчета.НомерСтроки = 5
		|											ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд5
		|										КОГДА ПоказателиВидовРасчета.НомерСтроки = 6
		|											ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд6
		|										ИНАЧЕ NULL
		|									КОНЕЦ
		|							ИНАЧЕ ВЫБОР
		|									КОГДА ПоказателиВидовРасчета.НомерСтроки = 1
		|										ТОГДА ИзмененияОсновногоНачисления.Показатель1
		|									КОГДА ПоказателиВидовРасчета.НомерСтроки = 2
		|										ТОГДА ИзмененияОсновногоНачисления.Показатель2
		|									КОГДА ПоказателиВидовРасчета.НомерСтроки = 3
		|										ТОГДА ИзмененияОсновногоНачисления.Показатель3
		|									КОГДА ПоказателиВидовРасчета.НомерСтроки = 4
		|										ТОГДА ИзмененияОсновногоНачисления.Показатель4
		|									КОГДА ПоказателиВидовРасчета.НомерСтроки = 5
		|										ТОГДА ИзмененияОсновногоНачисления.Показатель5
		|									КОГДА ПоказателиВидовРасчета.НомерСтроки = 6
		|										ТОГДА ИзмененияОсновногоНачисления.Показатель6
		|									ИНАЧЕ NULL
		|								КОНЕЦ
		|						КОНЕЦ
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ИзмененияОсновногоНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда
		|							ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд1
		|						ИНАЧЕ ИзмененияОсновногоНачисления.Показатель1
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Оклад,
		|	ВЫБОР
		|		КОГДА ВЫБОР
		|				КОГДА ИзмененияОсновногоНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|						И ИзмененияОсновногоНачисления.ПериодЗавершения <= &Период
		|					ТОГДА ИзмененияОсновногоНачисления.ВидРасчетаЗавершения.СпособРасчета
		|				ИНАЧЕ ИзмененияОсновногоНачисления.ВидРасчета.СпособРасчета
		|			КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПроизвольнаяФормула)
		|			ТОГДА ПоказателиВидовРасчета.Показатель.Валюта
		|		ИНАЧЕ Константы.ВалютаРегламентированногоУчета
		|	КОНЕЦ КАК Валюта,
		|	ВЫБОР
		|		КОГДА ВЫБОР
		|				КОГДА ИзмененияОсновногоНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|						И ИзмененияОсновногоНачисления.ПериодЗавершения <= &Период
		|					ТОГДА ИзмененияОсновногоНачисления.ВидРасчетаЗавершения.СпособРасчета
		|				ИНАЧЕ ИзмененияОсновногоНачисления.ВидРасчета.СпособРасчета
		|			КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПроизвольнаяФормула)
		|			ТОГДА ПоказателиВидовРасчета.Показатель.ТочностьПредставления
		|		ИНАЧЕ 2
		|	КОНЕЦ КАК Точность
		|ИЗ
		|	ИзмененияОсновногоНачисления КАК ИзмененияОсновногоНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ПоказателиВидовРасчета
		|		ПО ИзмененияОсновногоНачисления.ВидРасчета = ПоказателиВидовРасчета.Ссылка
		|			И (ПоказателиВидовРасчета.Показатель.ТарифнаяСтавка
		|				ИЛИ ПоказателиВидовРасчета.Показатель В (ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная), ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная), ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)))
		|			И (ПоказателиВидовРасчета.ЗапрашиватьПриКадровыхПеремещениях)
		|			И (ПоказателиВидовРасчета.Ссылка.ЗачетОтработанногоВремени)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ИзмененияОсновногоНачисления.Период В
		|			(ВЫБРАТЬ
		|				ПериодКрайнейЗаписиОсновногоНачисления.Период
		|			ИЗ
		|				ПериодКрайнейЗаписиОсновногоНачисления)
		|";
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 3;
		
		НомераРезультатов.Вставить("ОкладОрганизации", ОчереднойНомерЗапроса);
		
	КонецЕсли;
		
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаОкладОрганизации

Функция ТекстЗапросаОкладКомпании(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["ПлановыеНачисленияКомпании"] Тогда
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ПлановыеНачисления.Период,
		|	ПлановыеНачисления.ВидРасчета,
		|	ПлановыеНачисления.Показатель1,
		|	ПлановыеНачисления.Показатель2,
		|	ПлановыеНачисления.Показатель3,
		|	ПлановыеНачисления.Показатель4,
		|	ПлановыеНачисления.Показатель5,
		|	ПлановыеНачисления.Показатель6,
		|	ПлановыеНачисления.ТарифныйРазряд1,
		|	ПлановыеНачисления.ТарифныйРазряд2,
		|	ПлановыеНачисления.ТарифныйРазряд3,
		|	ПлановыеНачисления.ТарифныйРазряд4,
		|	ПлановыеНачисления.ТарифныйРазряд5,
		|	ПлановыеНачисления.ТарифныйРазряд6,
		|	ПлановыеНачисления.ПериодЗавершения,
		|	ПлановыеНачисления.ВидРасчетаЗавершения,
		|	ПлановыеНачисления.Показатель1Завершения,
		|	ПлановыеНачисления.Показатель2Завершения,
		|	ПлановыеНачисления.Показатель3Завершения,
		|	ПлановыеНачисления.Показатель4Завершения,
		|	ПлановыеНачисления.Показатель5Завершения,
		|	ПлановыеНачисления.Показатель6Завершения,
		|	ПлановыеНачисления.ТарифныйРазряд1Завершения,
		|	ПлановыеНачисления.ТарифныйРазряд2Завершения,
		|	ПлановыеНачисления.ТарифныйРазряд3Завершения,
		|	ПлановыеНачисления.ТарифныйРазряд4Завершения,
		|	ПлановыеНачисления.ТарифныйРазряд5Завершения,
		|	ПлановыеНачисления.ТарифныйРазряд6Завершения
		|ПОМЕСТИТЬ ИзмененияОсновногоНачисленияКомпании
		|ИЗ
		|	РегистрСведений.ПлановыеНачисленияРаботников КАК ПлановыеНачисления
		|ГДЕ
		|	ПлановыеНачисления.ФизЛицо = &Физлицо
		|	И ПлановыеНачисления.Период <= &Период
		|	И ПлановыеНачисления.ВидРасчетаИзмерение = ЗНАЧЕНИЕ(ПланВидовРасчета.УправленческиеНачисления.ПустаяСсылка)
		|	И ПлановыеНачисления.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ИзмененияОсновногоНачисления.Период) КАК Период
		|ПОМЕСТИТЬ ПериодКрайнейЗаписиОсновногоНачисленияКомпании
		|ИЗ
		|	ИзмененияОсновногоНачисленияКомпании КАК ИзмененияОсновногоНачисления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ИзмененияОсновногоНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|				И ИзмененияОсновногоНачисления.ПериодЗавершения <= &Период
		|			ТОГДА ИзмененияОсновногоНачисления.ПериодЗавершения
		|		ИНАЧЕ ИзмененияОсновногоНачисления.Период
		|	КОНЕЦ КАК Период,
		|	ВЫБОР
		|		КОГДА ИзмененияОсновногоНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|				И ИзмененияОсновногоНачисления.ПериодЗавершения <= &Период
		|			ТОГДА ВЫБОР
		|					КОГДА ПоказателиВидовРасчета.Показатель.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
		|						ТОГДА ВЫБОР
		|								КОГДА ПоказателиВидовРасчета.НомерСтроки = 1
		|									ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд1Завершения
		|								КОГДА ПоказателиВидовРасчета.НомерСтроки = 2
		|									ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд2Завершения
		|								КОГДА ПоказателиВидовРасчета.НомерСтроки = 3
		|									ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд3Завершения
		|								КОГДА ПоказателиВидовРасчета.НомерСтроки = 4
		|									ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд4Завершения
		|								КОГДА ПоказателиВидовРасчета.НомерСтроки = 5
		|									ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд5Завершения
		|								КОГДА ПоказателиВидовРасчета.НомерСтроки = 6
		|									ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд6Завершения
		|								ИНАЧЕ NULL
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА ПоказателиВидовРасчета.НомерСтроки = 1
		|								ТОГДА ИзмененияОсновногоНачисления.Показатель1Завершения
		|							КОГДА ПоказателиВидовРасчета.НомерСтроки = 2
		|								ТОГДА ИзмененияОсновногоНачисления.Показатель2Завершения
		|							КОГДА ПоказателиВидовРасчета.НомерСтроки = 3
		|								ТОГДА ИзмененияОсновногоНачисления.Показатель3Завершения
		|							КОГДА ПоказателиВидовРасчета.НомерСтроки = 4
		|								ТОГДА ИзмененияОсновногоНачисления.Показатель4Завершения
		|							КОГДА ПоказателиВидовРасчета.НомерСтроки = 5
		|								ТОГДА ИзмененияОсновногоНачисления.Показатель5Завершения
		|							КОГДА ПоказателиВидовРасчета.НомерСтроки = 6
		|								ТОГДА ИзмененияОсновногоНачисления.Показатель6Завершения
		|							ИНАЧЕ NULL
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ПоказателиВидовРасчета.Показатель.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
		|					ТОГДА ВЫБОР
		|							КОГДА ПоказателиВидовРасчета.НомерСтроки = 1
		|								ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд1
		|							КОГДА ПоказателиВидовРасчета.НомерСтроки = 2
		|								ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд2
		|							КОГДА ПоказателиВидовРасчета.НомерСтроки = 3
		|								ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд3
		|							КОГДА ПоказателиВидовРасчета.НомерСтроки = 4
		|								ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд4
		|							КОГДА ПоказателиВидовРасчета.НомерСтроки = 5
		|								ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд5
		|							КОГДА ПоказателиВидовРасчета.НомерСтроки = 6
		|								ТОГДА ИзмененияОсновногоНачисления.ТарифныйРазряд6
		|							ИНАЧЕ NULL
		|						КОНЕЦ
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ПоказателиВидовРасчета.НомерСтроки = 1
		|							ТОГДА ИзмененияОсновногоНачисления.Показатель1
		|						КОГДА ПоказателиВидовРасчета.НомерСтроки = 2
		|							ТОГДА ИзмененияОсновногоНачисления.Показатель2
		|						КОГДА ПоказателиВидовРасчета.НомерСтроки = 3
		|							ТОГДА ИзмененияОсновногоНачисления.Показатель3
		|						КОГДА ПоказателиВидовРасчета.НомерСтроки = 4
		|							ТОГДА ИзмененияОсновногоНачисления.Показатель4
		|						КОГДА ПоказателиВидовРасчета.НомерСтроки = 5
		|							ТОГДА ИзмененияОсновногоНачисления.Показатель5
		|						КОГДА ПоказателиВидовРасчета.НомерСтроки = 6
		|							ТОГДА ИзмененияОсновногоНачисления.Показатель6
		|						ИНАЧЕ NULL
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Оклад,
		|	ПоказателиВидовРасчета.Показатель.Валюта КАК Валюта,
		|	ПоказателиВидовРасчета.Показатель.ТочностьПредставления КАК Точность
		|ИЗ
		|	ИзмененияОсновногоНачисленияКомпании КАК ИзмененияОсновногоНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК ПоказателиВидовРасчета
		|		ПО ИзмененияОсновногоНачисления.ВидРасчета = ПоказателиВидовРасчета.Ссылка
		|			И (ПоказателиВидовРасчета.Показатель.ТарифнаяСтавка
		|				ИЛИ ПоказателиВидовРасчета.Показатель В (ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная), ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная), ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)))
		|			И (ПоказателиВидовРасчета.ЗапрашиватьПриКадровыхПеремещениях)
		|			И (ПоказателиВидовРасчета.Ссылка.ЗачетОтработанногоВремени)
		|ГДЕ
		|	ИзмененияОсновногоНачисления.Период В
		|			(ВЫБРАТЬ
		|				ПериодКрайнейЗаписиОсновногоНачисленияКомпании.Период
		|			ИЗ
		|				ПериодКрайнейЗаписиОсновногоНачисленияКомпании)
		|";
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 3;
		
		НомераРезультатов.Вставить("ОкладКомпании", ОчереднойНомерЗапроса);
		
	КонецЕсли;
		
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаОкладКомпании

Функция ТекстЗапросаДатаДействияМестоРаботыОрганизации(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 1;
	
	НомераРезультатов.Вставить("ДатаДействияМестоРаботыОрганизации", ОчереднойНомерЗапроса);
	
	ТекстЗапроса = "";
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ
	|	МАКСИМУМ(ДатыДействияИзменений.Период) КАК Период
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА КадровыеСведения.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|					И КадровыеСведения.ПериодЗавершения <= &Период
	|				ТОГДА КадровыеСведения.ПериодЗавершения
	|			ИНАЧЕ КадровыеСведения.Период
	|		КОНЕЦ КАК Период
	|	ИЗ
	|		РегистрСведений.РаботникиОрганизаций КАК КадровыеСведения
	|	ГДЕ
	|		КадровыеСведения.Период <= &Период
	|		И КадровыеСведения.Организация = &Организация
	|		И КадровыеСведения.Сотрудник = &Ссылка
	|		И КадровыеСведения.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)) КАК ДатыДействияИзменений
	|";

	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаДатаДействияМестоРаботыОрганизации

Функция ТекстЗапросаДатаДействияМестоРаботыКомпании(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["КадрыКомпании"] Тогда
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 1;
		
		НомераРезультатов.Вставить("ДатаДействияМестоРаботыКомпании", ОчереднойНомерЗапроса);
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	МАКСИМУМ(ДатыДействияИзменений.Период) КАК Период
		|ИЗ
		|	(ВЫБРАТЬ
		|		КадровыеСведения.Период КАК Период
		|	ИЗ
		|		РегистрСведений.Работники КАК КадровыеСведения
		|	ГДЕ
		|		КадровыеСведения.Период <= &Период
		|		И КадровыеСведения.ФизЛицо = &Физлицо
		|		И КадровыеСведения.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)) КАК ДатыДействияИзменений
		|";
		
	КонецЕсли;

	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаДатаДействияМестоРаботыКомпании

Функция ТекстЗапросаДГПХ(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	Если ПравоДоступа("Просмотр", Метаданные.Документы.ДоговорНаВыполнениеРаботСФизЛицом) Тогда
	
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МАКСИМУМ(ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала) КАК ДатаНачала,
		|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник
		|ПОМЕСТИТЬ КрайнийДГПХ
		|ИЗ
		|	Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
		|ГДЕ
		|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник = &Ссылка
		|	И ДоговорНаВыполнениеРаботСФизЛицом.Проведен
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДГПХ.ДатаНачала КАК ДатаНачала,
		|	ДГПХ.ДатаОкончания,
		|	ДГПХ.Ссылка КАК ДоговорГПХ,
		|	ДГПХ.Номер КАК НомерДоговора,
		|	ДГПХ.Дата КАК ДатаДоговора,
		|	ДГПХ.Сотрудник,
		|	ДГПХ.ПодразделениеОрганизации,
		|	ДГПХ.СуммаЗаРаботу,
		|	ДГПХ.ВалютаДокумента,
		|	ДГПХ.ХарактерОплаты,
		|	ДГПХ.ВидАвторскогоДоговора
		|ИЗ
		|	Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДГПХ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КрайнийДГПХ КАК КрайнийДГПХ
		|		ПО ДГПХ.ДатаНачала = КрайнийДГПХ.ДатаНачала
		|			И ДГПХ.Сотрудник = КрайнийДГПХ.Сотрудник
		|";
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 2;
	
		НомераРезультатов.Вставить("ДГПХ", ОчереднойНомерЗапроса);
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаДГПХ

Функция ТекстЗапросаТекущееСостояниеОрганизации(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["КадрыОрганизации"] Тогда
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 1;
		НомераРезультатов.Вставить("ТекущееСостояниеОрганизации", ОчереднойНомерЗапроса);
		
		ТекстЗапроса = ТекстЗапроса +  
		"ВЫБРАТЬ
		|	1 КАК Приоритет,
		|	Увольнение.Период КАК Период,
		|	""Не работает (уволен)"" КАК Состояние,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ПериодЗавершения,
		|	Увольнение.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|			ДОБАВИТЬКДАТЕ(&Период, МЕСЯЦ, 1),
		|			Сотрудник = &Ссылка
		|				И Организация = &Организация) КАК Увольнение
		|ГДЕ
		|	Увольнение.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	2,
		|	Отсутствие.Период,
		|	Отсутствие.Состояние,
		|	ВЫБОР
		|		КОГДА Отсутствие.ПериодЗавершения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА Отсутствие.ПериодЗавершения
		|		ИНАЧЕ ДОБАВИТЬКДАТЕ(Отсутствие.ПериодЗавершения, СЕКУНДА, -1)
		|	КОНЕЦ,
		|	Отсутствие.Регистратор
		|ИЗ
		|	РегистрСведений.СостояниеРаботниковОрганизаций.СрезПоследних(
		|			ДОБАВИТЬКДАТЕ(&Период, МЕСЯЦ, 1),
		|			Сотрудник = &Ссылка
		|				И Организация = &Организация) КАК Отсутствие
		|ГДЕ
		|	Отсутствие.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.Работает)
		|	И ВЫБОР
		|			КОГДА Отсутствие.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|				ТОГДА Отсутствие.Период >= &Период
		|						ИЛИ Отсутствие.ПериодЗавершения >= &Период
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Приоритет";
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТекущееСостояниеОрганизации

Функция ТекстЗапросаТекущееСостояниеКомпании(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["КадрыКомпании"] Тогда
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 1;
		НомераРезультатов.Вставить("ТекущееСостояниеКомпании", ОчереднойНомерЗапроса);
		
		ТекстЗапроса = ТекстЗапроса +  
		"ВЫБРАТЬ
		|	1 КАК Приоритет,
		|	Увольнение.Период КАК Период,
		|	""Не работает (уволен)"" КАК Состояние,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ПериодЗавершения,
		|	Увольнение.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрСведений.Работники.СрезПоследних(ДОБАВИТЬКДАТЕ(&Период, МЕСЯЦ, 1), Физлицо = &Физлицо) КАК Увольнение
		|ГДЕ
		|	Увольнение.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	2,
		|	Отсутствие.Период,
		|	Отсутствие.Состояние,
		|	ВЫБОР
		|		КОГДА Отсутствие.ПериодЗавершения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА Отсутствие.ПериодЗавершения
		|		ИНАЧЕ ДОБАВИТЬКДАТЕ(Отсутствие.ПериодЗавершения, СЕКУНДА, -1)
		|	КОНЕЦ,
		|	Отсутствие.Регистратор
		|ИЗ
		|	РегистрСведений.СостояниеРаботников.СрезПоследних(ДОБАВИТЬКДАТЕ(&Период, МЕСЯЦ, 1), Физлицо = &Физлицо) КАК Отсутствие
		|ГДЕ
		|	Отсутствие.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияРаботника.Работает)
		|	И ВЫБОР
		|			КОГДА Отсутствие.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|				ТОГДА Отсутствие.Период >= &Период
		|						ИЛИ Отсутствие.ПериодЗавершения >= &Период
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Приоритет";
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции 

Функция ТекстЗапросаИспытательныйСрок() Экспорт
	
	Возврат	
	"ВЫБРАТЬ
	|	ОкончаниеИспытательногоСрока.Физлицо,
	|	ОкончаниеИспытательногоСрока.ДатаОкончания
	|ИЗ
	|	(ВЫБРАТЬ
	|		СостояниеНаИспытательномСроке.Физлицо КАК Физлицо,
	|		ВЫБОР
	|			КОГДА МИНИМУМ(ДосрочноеОкончание.Период) < СостояниеНаИспытательномСроке.ПериодЗавершения
	|				ТОГДА МИНИМУМ(ДосрочноеОкончание.Период)
	|			ИНАЧЕ СостояниеНаИспытательномСроке.ПериодЗавершения
	|		КОНЕЦ КАК ДатаОкончания
	|	ИЗ
	|		РегистрСведений.СостояниеРаботниковНаИспытательномСроке.СрезПоследних(&Период, Физлицо В (&Физлицо)) КАК СостояниеНаИспытательномСроке
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДосрочноеОкончаниеИспытательногоСрока КАК ДосрочноеОкончание
	|			ПО (ДосрочноеОкончание.ФизЛицо = СостояниеНаИспытательномСроке.Физлицо)
	|				И (ДосрочноеОкончание.Период >= СостояниеНаИспытательномСроке.Период)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СостояниеНаИспытательномСроке.Физлицо,
	|		СостояниеНаИспытательномСроке.ПериодЗавершения) КАК ОкончаниеИспытательногоСрока
	|ГДЕ
	|	ОкончаниеИспытательногоСрока.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1)
	|	И ОкончаниеИспытательногоСрока.ДатаОкончания > &Период";
	
КонецФункции

Функция ТекстЗапросаИспытательныйСрокОрганизации(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ПолучитьФункциональнуюОпцию("ВестиНаборПерсоналаПоСтруктуреЮридическихЛиц") 
		И ДоступностьПросмотр["КадрыОрганизации"] Тогда
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 1;
		НомераРезультатов.Вставить("ИспытательныйСрокОрганизации", ОчереднойНомерЗапроса);
		
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаИспытательныйСрок(); 
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаИспытательныйСрокКомпании(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ПолучитьФункциональнуюОпцию("ВестиНаборПерсоналаПоЦентрамОтветственности") 
		И ДоступностьПросмотр["КадрыКомпании"] Тогда
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 1;
		НомераРезультатов.Вставить("ИспытательныйСрокКомпании", ОчереднойНомерЗапроса);
		
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаИспытательныйСрок(); 
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДругиеМестаРаботы(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 1;
	
	НомераРезультатов.Вставить("ДругиеМестаРаботы", ОчереднойНомерЗапроса);
	
	Возврат 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА СотрудникиОрганизаций.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСфизлицами.ТрудовойДоговор)
	|			ТОГДА СотрудникиОрганизаций.ВидЗанятости
	|		ИНАЧЕ СотрудникиОрганизаций.ВидДоговора
	|	КОНЕЦ КАК ВидДоговораВидЗанятости,
	|	СотрудникиОрганизаций.Актуальность,
	|	СотрудникиОрганизаций.ВидДоговора,
	|	СотрудникиОрганизаций.ВидЗанятости,
	|	СотрудникиОрганизаций.Организация,
	|	СотрудникиОрганизаций.ТекущееОбособленноеПодразделение,
	|	СотрудникиОрганизаций.ДатаПриемаНаРаботу,
	|	СотрудникиОрганизаций.ДатаУвольнения,
	|	ВЫБОР
	|		КОГДА СотрудникиОрганизаций.ТекущееОбособленноеПодразделение = &ТекущееОбособленноеПодразделение
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НашаОрганизация,
	|	СотрудникиОрганизаций.Ссылка
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|ГДЕ
	|	СотрудникиОрганизаций.Физлицо = &Физлицо
	|	И СотрудникиОрганизаций.Ссылка <> &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	СотрудникиОрганизаций.Актуальность УБЫВ,
	|	НашаОрганизация УБЫВ,
	|	СотрудникиОрганизаций.ДатаУвольнения
	|";
	
КонецФункции // ТекстЗапросаДругиеМестаРаботы

Функция ТекстЗапросаСеверныйСтаж(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["СеверныйСтаж"] Тогда
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 1;
		НомераРезультатов.Вставить("СеверныйСтаж", ОчереднойНомерЗапроса);
	 
		ТекстЗапроса =  
		"ВЫБРАТЬ
		|	СведенияОСтажеРаботыНаСевереСрезПоследних.Период,
		|	СведенияОСтажеРаботыНаСевереСрезПоследних.ФизЛицо,
		|	СведенияОСтажеРаботыНаСевереСрезПоследних.ПорядокНачисленияСеверныхНадбавок,
		|	СведенияОСтажеРаботыНаСевереСрезПоследних.НачальныйПроцентСевернойНадбавки,
		|	СведенияОСтажеРаботыНаСевереСрезПоследних.СеверныйСтажМесяцев,
		|	СведенияОСтажеРаботыНаСевереСрезПоследних.СеверныйСтажДней
		|ИЗ
		|	РегистрСведений.СведенияОСтажеРаботыНаСевере.СрезПоследних(&Период, Физлицо = &Физлицо) КАК СведенияОСтажеРаботыНаСевереСрезПоследних";
	
	КонецЕсли;
		
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаСеверныйСтаж

Функция ТекстЗапросаОтсутствияОрганизации(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["КадрыОрганизации"] Тогда
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	СостояниеРаботниковОрганизаций.Период,
		|	СостояниеРаботниковОрганизаций.Состояние,
		|	СостояниеРаботниковОрганизаций.Регистратор
		|ПОМЕСТИТЬ ИзмененияСостояния
		|ИЗ
		|	РегистрСведений.СостояниеРаботниковОрганизаций КАК СостояниеРаботниковОрганизаций
		|ГДЕ
		|	СостояниеРаботниковОрганизаций.Сотрудник = &Ссылка
		|	И СостояниеРаботниковОрганизаций.Организация = &Организация
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	СостояниеРаботниковОрганизаций.ПериодЗавершения,
		|	СостояниеРаботниковОрганизаций.СостояниеЗавершения,
		|	СостояниеРаботниковОрганизаций.Регистратор
		|ИЗ
		|	РегистрСведений.СостояниеРаботниковОрганизаций КАК СостояниеРаботниковОрганизаций
		|ГДЕ
		|	СостояниеРаботниковОрганизаций.Сотрудник = &Ссылка
		|	И СостояниеРаботниковОрганизаций.Организация = &Организация
		|	И СостояниеРаботниковОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтсутствияСотрудника.ДатаНачала,
		|	ОтсутствияСотрудника.ДатаОкончания,
		|	ОтсутствияСотрудника.Состояние КАК ВидОтсутствия,
		|	РАЗНОСТЬДАТ(ОтсутствияСотрудника.ДатаНачала, ОтсутствияСотрудника.ДатаОкончания, ДЕНЬ) КАК Дней,
		|	ОтсутствияСотрудника.Регистратор КАК Основание
		|ПОМЕСТИТЬ ОтсутствияОрганизаций
		|ИЗ
		|	(ВЫБРАТЬ
		|		НачалоСостояния.Период КАК ДатаНачала,
		|		НачалоСостояния.Состояние КАК Состояние,
		|		НачалоСостояния.Регистратор КАК Регистратор,
		|		МИНИМУМ(ОкончаниеСостояния.Период) КАК ДатаОкончания
		|	ИЗ
		|		ИзмененияСостояния КАК НачалоСостояния
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИзмененияСостояния КАК ОкончаниеСостояния
		|			ПО НачалоСостояния.Период < ОкончаниеСостояния.Период
		|	ГДЕ
		|		НачалоСостояния.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.Работает)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НачалоСостояния.Период,
		|		НачалоСостояния.Состояние,
		|		НачалоСостояния.Регистратор) КАК ОтсутствияСотрудника
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Отсутствия.ДатаНачала,
		|	ВЫБОР
		|		КОГДА Отсутствия.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА Отсутствия.ДатаОкончания
		|		ИНАЧЕ ДОБАВИТЬКДАТЕ(Отсутствия.ДатаОкончания, СЕКУНДА, -1)
		|	КОНЕЦ КАК ДатаОкончания,
		|	Отсутствия.ВидОтсутствия,
		|	ВЫБОР
		|		КОГДА Отсутствия.ВидОтсутствия В (ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.Заболевание), ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.Командировка), ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускБезСохраненияЗарплаты), ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком))
		|			ТОГДА РАЗНОСТЬДАТ(Отсутствия.ДатаНачала, Отсутствия.ДатаОкончания, ДЕНЬ)
		|		ИНАЧЕ СУММА(Календарь.КалендарныеДни)
		|	КОНЕЦ КАК Дней,
		|	Отсутствия.Основание
		|ИЗ
		|	ОтсутствияОрганизаций КАК Отсутствия
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК Календарь
		|		ПО (Календарь.ДатаКалендаря >= Отсутствия.ДатаНачала)
		|			И (Календарь.ДатаКалендаря < Отсутствия.ДатаОкончания)
		|
		|СГРУППИРОВАТЬ ПО
		|	Отсутствия.ДатаНачала,
		|	Отсутствия.ДатаОкончания,
		|	Отсутствия.ВидОтсутствия,
		|	Отсутствия.Основание
		|
		|УПОРЯДОЧИТЬ ПО
		|	Отсутствия.ДатаНачала УБЫВ";
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 3;
		
		НомераРезультатов.Вставить("ОтсутствияОрганизации", ОчереднойНомерЗапроса);

	КонецЕсли;
		
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаОтсутствияОрганизации

Функция ТекстЗапросаОтсутствияКомпании(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["КадрыКомпании"] Тогда
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	СостояниеРаботников.Период,
		|	СостояниеРаботников.Состояние,
		|	СостояниеРаботников.Регистратор,
		|	СостояниеРаботников.ПричинаОтсутствия
		|ПОМЕСТИТЬ ИзмененияСостоянияПоКомпании
		|ИЗ
		|	РегистрСведений.СостояниеРаботников КАК СостояниеРаботников
		|ГДЕ
		|	СостояниеРаботников.ФизЛицо = &Физлицо
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	СостояниеРаботников.ПериодЗавершения,
		|	СостояниеРаботников.СостояниеЗавершения,
		|	СостояниеРаботников.Регистратор,
		|	СостояниеРаботников.ПричинаОтсутствия
		|ИЗ
		|	РегистрСведений.СостояниеРаботников КАК СостояниеРаботников
		|ГДЕ
		|	СостояниеРаботников.ФизЛицо = &Физлицо
		|	И СостояниеРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтсутствияСотрудника.ДатаНачала,
		|	ВЫБОР
		|		КОГДА ОтсутствияСотрудника.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА ОтсутствияСотрудника.ДатаОкончания
		|		ИНАЧЕ ДОБАВИТЬКДАТЕ(ОтсутствияСотрудника.ДатаОкончания, СЕКУНДА, -1)
		|	КОНЕЦ КАК ДатаОкончания,
		|	ОтсутствияСотрудника.Состояние КАК ВидОтсутствия,
		|	РАЗНОСТЬДАТ(ОтсутствияСотрудника.ДатаНачала, ОтсутствияСотрудника.ДатаОкончания, ДЕНЬ) КАК Дней,
		|	ОтсутствияСотрудника.Регистратор КАК Основание
		|ПОМЕСТИТЬ ОтсутствияКомпании
		|ИЗ
		|	(ВЫБРАТЬ
		|		НачалоСостояния.Период КАК ДатаНачала,
		|		НачалоСостояния.Состояние КАК Состояние,
		|		НачалоСостояния.ПричинаОтсутствия КАК ПричинаОтсутствия,
		|		НачалоСостояния.Регистратор КАК Регистратор,
		|		МИНИМУМ(ОкончаниеСостояния.Период) КАК ДатаОкончания
		|	ИЗ
		|		ИзмененияСостоянияПоКомпании КАК НачалоСостояния
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИзмененияСостоянияПоКомпании КАК ОкончаниеСостояния
		|			ПО НачалоСостояния.Период < ОкончаниеСостояния.Период
		|	ГДЕ
		|		НачалоСостояния.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияРаботника.Работает)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НачалоСостояния.Период,
		|		НачалоСостояния.ПричинаОтсутствия,
		|		НачалоСостояния.Состояние,
		|		НачалоСостояния.Регистратор) КАК ОтсутствияСотрудника
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Отсутствия.ДатаНачала,
		|	Отсутствия.ДатаОкончания,
		|	Отсутствия.ВидОтсутствия,
		|	Отсутствия.Основание,
		|	СУММА(Календарь.Пятидневка) КАК Дней
		|ИЗ
		|	ОтсутствияКомпании КАК Отсутствия
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК Календарь
		|		ПО (Календарь.ДатаКалендаря >= Отсутствия.ДатаНачала)
		|			И (Календарь.ДатаКалендаря <= Отсутствия.ДатаОкончания)
		|
		|СГРУППИРОВАТЬ ПО
		|	Отсутствия.ДатаНачала,
		|	Отсутствия.ДатаОкончания,
		|	Отсутствия.ВидОтсутствия,
		|	Отсутствия.Основание
		|
		|УПОРЯДОЧИТЬ ПО
		|	Отсутствия.ДатаНачала УБЫВ";
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 3;
		
		НомераРезультатов.Вставить("ОтсутствияКомпании", ОчереднойНомерЗапроса);
		
	КонецЕсли;
		
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаОтсутствияКомпании

Функция ТекстЗапросаДокументыГПХ(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["ДоговорыГПХ"] Тогда
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ДокументыГПХ.ПометкаУдаления
		|			ТОГДА 1
		|		КОГДА ДокументыГПХ.Проведен
		|			ТОГДА 2
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Картинка,
		|	ТИПЗНАЧЕНИЯ(ДокументыГПХ.Ссылка) КАК ВидДокумента,
		|	ДокументыГПХ.Ссылка,
		|	ДокументыГПХ.ПометкаУдаления,
		|	ДокументыГПХ.Проведен,
		|	ДокументыГПХ.Номер,
		|	ДокументыГПХ.Дата,
		|	ДокументыГПХ.Организация,
		|	ДокументыГПХ.ДатаНачала,
		|	ДокументыГПХ.ДатаОкончания,
		|	ДокументыГПХ.СуммаЗаРаботу,
		|	ДокументыГПХ.ВалютаДокумента,
		|	ДокументыГПХ.ХарактерОплаты,
		|	ДокументыГПХ.Ответственный,
		|	ДокументыГПХ.Комментарий
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДоговорНаВыполнениеРаботСФизлицом.Ссылка КАК Ссылка,
		|		ДоговорНаВыполнениеРаботСФизлицом.ПометкаУдаления КАК ПометкаУдаления,
		|		ДоговорНаВыполнениеРаботСФизлицом.Проведен КАК Проведен,
		|		ДоговорНаВыполнениеРаботСФизлицом.Номер КАК Номер,
		|		ДоговорНаВыполнениеРаботСФизлицом.Дата КАК Дата,
		|		ДоговорНаВыполнениеРаботСФизлицом.Организация КАК Организация,
		|		ДоговорНаВыполнениеРаботСФизлицом.ДатаНачала КАК ДатаНачала,
		|		ДоговорНаВыполнениеРаботСФизлицом.ДатаОкончания КАК ДатаОкончания,
		|		ДоговорНаВыполнениеРаботСФизлицом.СуммаЗаРаботу КАК СуммаЗаРаботу,
		|		ДоговорНаВыполнениеРаботСФизлицом.ВалютаДокумента КАК ВалютаДокумента,
		|		ДоговорНаВыполнениеРаботСФизлицом.ХарактерОплаты КАК ХарактерОплаты,
		|		ДоговорНаВыполнениеРаботСФизлицом.Ответственный КАК Ответственный,
		|		ДоговорНаВыполнениеРаботСФизлицом.Комментарий КАК Комментарий
		|	ИЗ
		|		Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизлицом
		|	ГДЕ
		|		ДоговорНаВыполнениеРаботСФизлицом.Сотрудник = &Ссылка";
		
		Если ДоступностьПросмотр["АктыГПХ"] Тогда
			
			ТекстЗапроса = ТекстЗапроса +  "
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		АктыПриемкиВыполненныхРаботНачисления.Ссылка,
			|		АктыПриемкиВыполненныхРаботНачисления.Ссылка.ПометкаУдаления,
			|		АктыПриемкиВыполненныхРаботНачисления.Ссылка.Проведен,
			|		АктыПриемкиВыполненныхРаботНачисления.Ссылка.Номер,
			|		АктыПриемкиВыполненныхРаботНачисления.Ссылка.Дата,
			|		АктыПриемкиВыполненныхРаботНачисления.Ссылка.Организация,
			|		АктыПриемкиВыполненныхРаботНачисления.Ссылка.ПериодРегистрации,
			|		КОНЕЦПЕРИОДА(АктыПриемкиВыполненныхРаботНачисления.Ссылка.ПериодРегистрации, МЕСЯЦ),
			|		АктыПриемкиВыполненныхРаботНачисления.СуммаЗаРаботу,
			|		АктыПриемкиВыполненныхРаботНачисления.ВалютаДокумента,
			|		NULL,
			|		АктыПриемкиВыполненныхРаботНачисления.Ссылка.Ответственный,
			|		АктыПриемкиВыполненныхРаботНачисления.Ссылка.Комментарий
			|	ИЗ
			|		Документ.АктыПриемкиВыполненныхРабот.Начисления КАК АктыПриемкиВыполненныхРаботНачисления
			|	ГДЕ
			|		АктыПриемкиВыполненныхРаботНачисления.Сотрудник = &Ссылка";
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "
		|) КАК ДокументыГПХ
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДокументыГПХ.Дата";
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 1;
		
		НомераРезультатов.Вставить("ДокументыГПХ", ОчереднойНомерЗапроса);
		
	КонецЕсли;
		
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаДокументыГПХ

Функция ТекстЗапросаЗарплатаОрганизации(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["ЗарплатаОрганизации"] Тогда
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ВзаиморасчетыСРаботникамиОстаткиИОбороты.Период,
		|	ВзаиморасчетыСРаботникамиОстаткиИОбороты.СуммаВзаиморасчетовНачальныйОстаток,
		|	ВзаиморасчетыСРаботникамиОстаткиИОбороты.СуммаВзаиморасчетовКонечныйОстаток
		|ПОМЕСТИТЬ ВзаиморасчетыСРаботникамиОрганизаций
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций.ОстаткиИОбороты(
		|			ДОБАВИТЬКДАТЕ(&МесяцЗарплаты, МЕСЯЦ, -&ГлубинаИстории),
		|			КОНЕЦПЕРИОДА(&МесяцЗарплаты, МЕСЯЦ),
		|			Месяц,
		|			,
		|			Физлицо = &Физлицо
		|				И Организация = &Организация) КАК ВзаиморасчетыСРаботникамиОстаткиИОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗарплатаОрганизации.Период,
		|	ЗарплатаОрганизации.ВидЗаписи,
		|	ЗарплатаОрганизации.Сумма,
		|	ЗарплатаОрганизации.ТипЗаписи,
		|	ЗарплатаОрганизации.Регистратор,
		|	ЗарплатаОрганизации.ДатаЗаписи
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВзаиморасчетыСРаботниками.Период КАК Период,
		|		""Сальдо начальное"" КАК ВидЗаписи,
		|		ВзаиморасчетыСРаботниками.СуммаВзаиморасчетовНачальныйОстаток КАК Сумма,
		|		0 КАК ТипЗаписи,
		|		NULL КАК Регистратор,
		|		ВзаиморасчетыСРаботниками.Период КАК ДатаЗаписи
		|	ИЗ
		|		ВзаиморасчетыСРаботникамиОрганизаций КАК ВзаиморасчетыСРаботниками
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации,
		|		ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета,
		|		ОсновныеНачисленияРаботниковОрганизаций.Результат,
		|		1,
		|		ОсновныеНачисленияРаботниковОрганизаций.Регистратор,
		|		ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации
		|	ИЗ
		|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
		|	ГДЕ
		|		ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = &Ссылка
		|		И ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации >= ДОБАВИТЬКДАТЕ(&МесяцЗарплаты, МЕСЯЦ, -&ГлубинаИстории)
		|		И ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации <= &МесяцЗарплаты
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ),
		|		ДополнительныеНачисленияРаботниковОрганизаций.ВидРасчета,
		|		ДополнительныеНачисленияРаботниковОрганизаций.Результат,
		|		2,
		|		ДополнительныеНачисленияРаботниковОрганизаций.Регистратор,
		|		ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации
		|	ИЗ
		|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисленияРаботниковОрганизаций
		|	ГДЕ
		|		ДополнительныеНачисленияРаботниковОрганизаций.Сотрудник = &Ссылка
		|		И ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации >= ДОБАВИТЬКДАТЕ(&МесяцЗарплаты, МЕСЯЦ, -&ГлубинаИстории)
		|		И ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации <= &МесяцЗарплаты
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		УдержанияРаботниковОрганизаций.ПериодРегистрации,
		|		УдержанияРаботниковОрганизаций.ВидРасчета,
		|		УдержанияРаботниковОрганизаций.Результат,
		|		3,
		|		УдержанияРаботниковОрганизаций.Регистратор,
		|		УдержанияРаботниковОрганизаций.ПериодРегистрации
		|	ИЗ
		|		РегистрРасчета.УдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизаций
		|	ГДЕ
		|		УдержанияРаботниковОрганизаций.ФизЛицо = &Физлицо
		|		И УдержанияРаботниковОрганизаций.Организация = &Организация
		|		И УдержанияРаботниковОрганизаций.ПериодРегистрации >= ДОБАВИТЬКДАТЕ(&МесяцЗарплаты, МЕСЯЦ, -&ГлубинаИстории)
		|		И УдержанияРаботниковОрганизаций.ПериодРегистрации <= &МесяцЗарплаты
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
		|		""НДФЛ"",
		|		НДФЛРасчетыСБюджетом.Налог,
		|		4,
		|		НДФЛРасчетыСБюджетом.Регистратор,
		|		НДФЛРасчетыСБюджетом.Период
		|	ИЗ
		|		РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
		|	ГДЕ
		|		НДФЛРасчетыСБюджетом.ФизЛицо = &Физлицо
		|		И НДФЛРасчетыСБюджетом.Организация = &Организация
		|		И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода >= ДОБАВИТЬКДАТЕ(&МесяцЗарплаты, МЕСЯЦ, -&ГлубинаИстории)
		|		И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода <= &МесяцЗарплаты
		|		И НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВзаиморасчетыСРаботниками.ПериодВзаиморасчетов,
		|		""Выплата"",
		|		ВзаиморасчетыСРаботниками.СуммаВзаиморасчетов,
		|		5,
		|		ВзаиморасчетыСРаботниками.Регистратор,
		|		ВзаиморасчетыСРаботниками.Период
		|	ИЗ
		|		РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций КАК ВзаиморасчетыСРаботниками
		|	ГДЕ
		|		ВзаиморасчетыСРаботниками.Физлицо = &Физлицо
		|		И ВзаиморасчетыСРаботниками.Организация = &Организация
		|		И ВзаиморасчетыСРаботниками.ПериодВзаиморасчетов >= ДОБАВИТЬКДАТЕ(&МесяцЗарплаты, МЕСЯЦ, -&ГлубинаИстории)
		|		И ВзаиморасчетыСРаботниками.ПериодВзаиморасчетов <= &МесяцЗарплаты
		|		И ВзаиморасчетыСРаботниками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВзаиморасчетыСРаботниками.Период,
		|		""Сальдо конечное"",
		|		ВзаиморасчетыСРаботниками.СуммаВзаиморасчетовКонечныйОстаток,
		|		6,
		|		NULL,
		|		КОНЕЦПЕРИОДА(ВзаиморасчетыСРаботниками.Период, МЕСЯЦ)
		|	ИЗ
		|		ВзаиморасчетыСРаботникамиОрганизаций КАК ВзаиморасчетыСРаботниками) КАК ЗарплатаОрганизации
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗарплатаОрганизации.ДатаЗаписи,
		|	ЗарплатаОрганизации.ТипЗаписи";
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 2;
		
		НомераРезультатов.Вставить("ЗарплатаОрганизации", ОчереднойНомерЗапроса);
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаЗарплатаОрганизации

Функция ТекстЗапросаЗарплатаКомпании(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["ЗарплатаКомпании"] Тогда
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботникамиОстаткиИОбороты.Период, МЕСЯЦ) КАК Период,
		|	ВзаиморасчетыСРаботникамиОстаткиИОбороты.СуммаУпрНачальныйОстаток,
		|	ВзаиморасчетыСРаботникамиОстаткиИОбороты.СуммаУпрКонечныйОстаток
		|ПОМЕСТИТЬ ВзаиморасчетыСРаботниками
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыСРаботниками.ОстаткиИОбороты(ДОБАВИТЬКДАТЕ(&МесяцЗарплаты, МЕСЯЦ, -&ГлубинаИстории), КОНЕЦПЕРИОДА(&МесяцЗарплаты, МЕСЯЦ), Месяц, , Физлицо = &Физлицо) КАК ВзаиморасчетыСРаботникамиОстаткиИОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаписиЗарплатыКомпании.Период,
		|	ЗаписиЗарплатыКомпании.ВидЗаписи,
		|	ЗаписиЗарплатыКомпании.Сумма,
		|	ЗаписиЗарплатыКомпании.ТипЗаписи,
		|	ЗаписиЗарплатыКомпании.Регистратор,
		|	ЗаписиЗарплатыКомпании.ДатаЗаписи
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВзаиморасчетыСРаботниками.Период КАК Период,
		|		""Сальдо начальное"" КАК ВидЗаписи,
		|		ВзаиморасчетыСРаботниками.СуммаУпрНачальныйОстаток КАК Сумма,
		|		0 КАК ТипЗаписи,
		|		NULL КАК Регистратор,
		|		ВзаиморасчетыСРаботниками.Период КАК ДатаЗаписи
		|	ИЗ
		|		ВзаиморасчетыСРаботниками КАК ВзаиморасчетыСРаботниками
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		УправленческиеНачисления.ПериодРегистрации,
		|		УправленческиеНачисления.ВидРасчета,
		|		УправленческиеНачисления.Результат,
		|		1,
		|		УправленческиеНачисления.Регистратор,
		|		УправленческиеНачисления.ПериодРегистрации
		|	ИЗ
		|		РегистрРасчета.УправленческиеНачисления КАК УправленческиеНачисления
		|	ГДЕ
		|		УправленческиеНачисления.ФизЛицо = &Физлицо
		|		И УправленческиеНачисления.ПериодРегистрации >= ДОБАВИТЬКДАТЕ(&МесяцЗарплаты, МЕСЯЦ, -&ГлубинаИстории)
		|		И УправленческиеНачисления.ПериодРегистрации <= &МесяцЗарплаты
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		УправленческиеУдержания.ПериодРегистрации,
		|		УправленческиеУдержания.ВидРасчета,
		|		УправленческиеУдержания.Результат,
		|		3,
		|		УправленческиеУдержания.Регистратор,
		|		УправленческиеУдержания.ПериодРегистрации
		|	ИЗ
		|		РегистрРасчета.УправленческиеУдержания КАК УправленческиеУдержания
		|	ГДЕ
		|		УправленческиеУдержания.ФизЛицо = &Физлицо
		|		И УправленческиеУдержания.ПериодРегистрации >= ДОБАВИТЬКДАТЕ(&МесяцЗарплаты, МЕСЯЦ, -&ГлубинаИстории)
		|		И УправленческиеУдержания.ПериодРегистрации <= &МесяцЗарплаты
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботниками.Период, МЕСЯЦ),
		|		""Выплата"",
		|		ВзаиморасчетыСРаботниками.СуммаУпр,
		|		5,
		|		ВзаиморасчетыСРаботниками.Регистратор,
		|		ВзаиморасчетыСРаботниками.Период
		|	ИЗ
		|		РегистрНакопления.ВзаиморасчетыСРаботниками КАК ВзаиморасчетыСРаботниками
		|	ГДЕ
		|		ВзаиморасчетыСРаботниками.Физлицо = &Физлицо
		|		И ВзаиморасчетыСРаботниками.Период >= ДОБАВИТЬКДАТЕ(&МесяцЗарплаты, МЕСЯЦ, -&ГлубинаИстории)
		|		И ВзаиморасчетыСРаботниками.Период <= КОНЕЦПЕРИОДА(&МесяцЗарплаты, МЕСЯЦ)
		|		И ВзаиморасчетыСРаботниками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВзаиморасчетыСРаботниками.Период,
		|		""Сальдо конечное"",
		|		ВзаиморасчетыСРаботниками.СуммаУпрКонечныйОстаток,
		|		6,
		|		NULL,
		|		КОНЕЦПЕРИОДА(ВзаиморасчетыСРаботниками.Период, МЕСЯЦ)
		|	ИЗ
		|		ВзаиморасчетыСРаботниками КАК ВзаиморасчетыСРаботниками) КАК ЗаписиЗарплатыКомпании
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗаписиЗарплатыКомпании.ДатаЗаписи,
		|	ЗаписиЗарплатыКомпании.ТипЗаписи";
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 2;
		
		НомераРезультатов.Вставить("ЗарплатаКомпании", ОчереднойНомерЗапроса);
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаЗарплатаКомпании

Функция ТекстЗапросаЛьготы(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["Льготы"] Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЛьготыДолжности.Ссылка,
		|	ЛьготыДолжности.Ссылка.СпособПрименения,
		|	ЛьготыДолжности.Должность,
		|	NULL КАК Грейд
		|ПОМЕСТИТЬ Льготы
		|ИЗ
		|	Справочник.Льготы.Должности КАК ЛьготыДолжности
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЛьготыГрейды.Ссылка,
		|	ЛьготыГрейды.Ссылка.СпособПрименения,
		|	NULL,
		|	ЛьготыГрейды.Грейд
		|ИЗ
		|	Справочник.Льготы.Грейды КАК ЛьготыГрейды
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Льготы.Ссылка,
		|	Льготы.Ссылка.СпособПрименения,
		|	NULL,
		|	NULL
		|ИЗ
		|	Справочник.Льготы КАК Льготы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Льготы.Ссылка КАК Льгота,
		|	ВЫБОР
		|		КОГДА ДействующиеЛьготы.Льгота ЕСТЬ НЕ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА ДействующиеЛьготы.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|							И ДействующиеЛьготы.ПериодЗавершения <= &Период
		|						ТОГДА ДействующиеЛьготы.ДействуетПоЗавершении
		|					ИНАЧЕ ДействующиеЛьготы.Действует
		|				КОНЕЦ
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Действует,
		|	ВЫБОР
		|		КОГДА ДействующиеЛьготы.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|				И ДействующиеЛьготы.ПериодЗавершения <= &Период
		|			ТОГДА ДействующиеЛьготы.ПериодЗавершения
		|		ИНАЧЕ ДействующиеЛьготы.Период
		|	КОНЕЦ КАК Период,
		|	ВЫБОР
		|		КОГДА ВЫБОР
		|				КОГДА ДействующиеЛьготы.Льгота ЕСТЬ НЕ NULL 
		|					ТОГДА ВЫБОР
		|							КОГДА ДействующиеЛьготы.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|									И ДействующиеЛьготы.ПериодЗавершения <= &Период
		|								ТОГДА ДействующиеЛьготы.ДействуетПоЗавершении
		|							ИНАЧЕ ДействующиеЛьготы.Действует
		|						КОНЕЦ
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДействияСЛьготой.Прекратить)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДействияСЛьготой.Назначить)
		|	КОНЕЦ КАК Действие,
		|	ДействующиеЛьготы.Регистратор
		|ИЗ
		|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Льготы КАК Льготы
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
		|			ПО (ИСТИНА)
		|		ПО (ВЫБОР
		|				КОГДА Льготы.СпособПрименения = ЗНАЧЕНИЕ(Перечисление.СпособыПримененияЛьгот.ДляГрейдовДолжностей)
		|					ТОГДА ВЫБОР
		|							КОГДА Константы.ИспользоватьГрейды
		|								ТОГДА ВЫБОР
		|										КОГДА Константы.СпособВводаСведенийОДействующихЛьготах = ЗНАЧЕНИЕ(Перечисление.СпособыВводаСведенийОДействующихЛьготах.КадровымиДокументамиУправленческогоУчета)
		|											ТОГДА СотрудникиОрганизаций.ТекущаяДолжностьКомпании.Грейд
		|										ИНАЧЕ СотрудникиОрганизаций.ТекущаяДолжностьОрганизации.Грейд
		|									КОНЕЦ = Льготы.Грейд
		|							ИНАЧЕ ВЫБОР
		|									КОГДА Константы.СпособВводаСведенийОДействующихЛьготах = ЗНАЧЕНИЕ(Перечисление.СпособыВводаСведенийОДействующихЛьготах.КадровымиДокументамиУправленческогоУчета)
		|										ТОГДА СотрудникиОрганизаций.ТекущаяДолжностьКомпании
		|									ИНАЧЕ СотрудникиОрганизаций.ТекущаяДолжностьОрганизации
		|								КОНЕЦ = Льготы.Должность
		|						КОНЕЦ
		|				ИНАЧЕ ИСТИНА
		|			КОНЕЦ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЛьготыРаботников.СрезПоследних(&Период, Физлицо = &Физлицо) КАК ДействующиеЛьготы
		|		ПО (Льготы.Ссылка = ДействующиеЛьготы.Льгота)
		|ГДЕ
		|	СотрудникиОрганизаций.Ссылка = &Ссылка
		|";
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 2;
		
		НомераРезультатов.Вставить("Льготы", ОчереднойНомерЗапроса);
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаЛьготы

Функция ТекстЗапросаРазмерЛимита(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["Льготы"] Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Лимиты.РазмерЛимита,
		|	Константы.ИспользоватьИндивидуальныеПакетыЛьгот,
		|	Константы.ВалютаУправленческогоУчета КАК Валюта
		|ИЗ
		|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЛимитыИндивидуальногоПакетаЛьгот КАК Лимиты
		|		ПО (ВЫБОР
		|				КОГДА Константы.ИспользоватьГрейды
		|					ТОГДА ВЫБОР
		|							КОГДА Константы.СпособВводаСведенийОДействующихЛьготах = ЗНАЧЕНИЕ(Перечисление.СпособыВводаСведенийОДействующихЛьготах.КадровымиДокументамиУправленческогоУчета)
		|								ТОГДА СотрудникиОрганизаций.ТекущаяДолжностьКомпании.Грейд
		|							ИНАЧЕ СотрудникиОрганизаций.ТекущаяДолжностьОрганизации.Грейд
		|						КОНЕЦ = Лимиты.Грейд
		|				ИНАЧЕ ВЫБОР
		|						КОГДА Константы.СпособВводаСведенийОДействующихЛьготах = ЗНАЧЕНИЕ(Перечисление.СпособыВводаСведенийОДействующихЛьготах.КадровымиДокументамиУправленческогоУчета)
		|							ТОГДА СотрудникиОрганизаций.ТекущаяДолжностьКомпании
		|						ИНАЧЕ СотрудникиОрганизаций.ТекущаяДолжностьОрганизации
		|					КОНЕЦ = Лимиты.Должность
		|			КОНЕЦ)
		|ГДЕ
		|	СотрудникиОрганизаций.Ссылка = &Ссылка
		|";
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 1;
		
		НомераРезультатов.Вставить("РазмерЛимита", ОчереднойНомерЗапроса);
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаРазмерЛимита

Функция ТекстЗапросаПлановыеНачисленияОрганизаций(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["ПлановыеНачисленияОрганизации"] Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ПлановыеНачисления.Период,
		|	ПлановыеНачисления.Действие,
		|	ПлановыеНачисления.ВидРасчетаИзмерение,
		|	ПлановыеНачисления.ВидРасчета,
		|	ВЫБОР
		|		КОГДА ПлановыеНачисления.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоОсновноеНачисление,
		|	НЕОПРЕДЕЛЕНО КАК ДокументОснование,
		|	ПлановыеНачисления.Регистратор,
		|	ПлановыеНачисления.Показатель1,
		|	ПлановыеНачисления.Показатель2,
		|	ПлановыеНачисления.Показатель3,
		|	ПлановыеНачисления.Показатель4,
		|	ПлановыеНачисления.Показатель5,
		|	ПлановыеНачисления.Показатель6,
		|	ПлановыеНачисления.ТарифныйРазряд1,
		|	ПлановыеНачисления.ТарифныйРазряд2,
		|	ПлановыеНачисления.ТарифныйРазряд3,
		|	ПлановыеНачисления.ТарифныйРазряд4,
		|	ПлановыеНачисления.ТарифныйРазряд5,
		|	ПлановыеНачисления.ТарифныйРазряд6,
		|	ИСТИНА КАК ЭтоНачисление,
		|	ПлановыеНачисления.ПериодЗавершения КАК ПериодЗавершения
		|ПОМЕСТИТЬ ЗаписиПлановыхОрганизации
		|ИЗ
		|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления
		|ГДЕ
		|	ПлановыеНачисления.Сотрудник = &Ссылка
		|	И ПлановыеНачисления.Организация = &Организация
		|	И ПлановыеНачисления.Период <= &Период
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПлановыеНачисления.ПериодЗавершения,
		|	ПлановыеНачисления.ДействиеЗавершения,
		|	ПлановыеНачисления.ВидРасчетаИзмерение,
		|	ВЫБОР
		|		КОГДА ПлановыеНачисления.ВидРасчетаЗавершения = НЕОПРЕДЕЛЕНО
		|			ТОГДА ПлановыеНачисления.ВидРасчета
		|		ИНАЧЕ ПлановыеНачисления.ВидРасчетаЗавершения
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ПлановыеНачисления.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	НЕОПРЕДЕЛЕНО,
		|	ПлановыеНачисления.Регистратор,
		|	ПлановыеНачисления.Показатель1Завершения,
		|	ПлановыеНачисления.Показатель2Завершения,
		|	ПлановыеНачисления.Показатель3Завершения,
		|	ПлановыеНачисления.Показатель4Завершения,
		|	ПлановыеНачисления.Показатель5Завершения,
		|	ПлановыеНачисления.Показатель6Завершения,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	ИСТИНА,
		|	ДАТАВРЕМЯ(1, 1, 1)
		|ИЗ
		|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления
		|ГДЕ
		|	ПлановыеНачисления.Сотрудник = &Ссылка
		|	И ПлановыеНачисления.Организация = &Организация
		|	И ПлановыеНачисления.ПериодЗавершения <= &Период
		|	И ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПлановыеУдержания.Период,
		|	ПлановыеУдержания.Действие,
		|	ПлановыеУдержания.ВидРасчета,
		|	ПлановыеУдержания.ВидРасчета,
		|	ЛОЖЬ,
		|	ПлановыеУдержания.ДокументОснование,
		|	ПлановыеУдержания.Регистратор,
		|	ПлановыеУдержания.Показатель1,
		|	ПлановыеУдержания.Показатель2,
		|	ПлановыеУдержания.Показатель3,
		|	ПлановыеУдержания.Показатель4,
		|	ПлановыеУдержания.Показатель5,
		|	ПлановыеУдержания.Показатель6,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	ЛОЖЬ,
		|	ПлановыеУдержания.ПериодЗавершения
		|ИЗ
		|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержания
		|ГДЕ
		|	ПлановыеУдержания.ФизЛицо = &Физлицо
		|	И ПлановыеУдержания.Организация = &Организация
		|	И ПлановыеУдержания.Период <= &Период
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПлановыеУдержания.ПериодЗавершения,
		|	ПлановыеУдержания.ДействиеЗавершения,
		|	ПлановыеУдержания.ВидРасчета,
		|	ПлановыеУдержания.ВидРасчета,
		|	ЛОЖЬ,
		|	ПлановыеУдержания.ДокументОснование,
		|	ПлановыеУдержания.Регистратор,
		|	ПлановыеУдержания.Показатель1Завершения,
		|	ПлановыеУдержания.Показатель2Завершения,
		|	ПлановыеУдержания.Показатель3Завершения,
		|	ПлановыеУдержания.Показатель4Завершения,
		|	ПлановыеУдержания.Показатель5Завершения,
		|	ПлановыеУдержания.Показатель6Завершения,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	ЛОЖЬ,
		|	ДАТАВРЕМЯ(1, 1, 1)
		|ИЗ
		|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержания
		|ГДЕ
		|	ПлановыеУдержания.ФизЛицо = &Физлицо
		|	И ПлановыеУдержания.Организация = &Организация
		|	И ПлановыеУдержания.ПериодЗавершения <= &Период
		|	И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаписиПлановыхОрганизации.ВидРасчетаИзмерение,
		|	ЗаписиПлановыхОрганизации.ДокументОснование,
		|	МАКСИМУМ(ЗаписиПлановыхОрганизации.Период) КАК Период
		|ПОМЕСТИТЬ КрайниеДатыПлановыхОрганизации
		|ИЗ
		|	ЗаписиПлановыхОрганизации КАК ЗаписиПлановыхОрганизации
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаписиПлановыхОрганизации.ВидРасчетаИзмерение,
		|	ЗаписиПлановыхОрганизации.ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПлановыеНачисленияУдержания.Период,
		|	ПлановыеНачисленияУдержания.Действие,
		|	ПлановыеНачисленияУдержания.ВидРасчета,
		|	ПлановыеНачисленияУдержания.ДокументОснование
		|ПОМЕСТИТЬ СрезПоследнихОрганизации
		|ИЗ
		|	ЗаписиПлановыхОрганизации КАК ПлановыеНачисленияУдержания
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КрайниеДатыПлановыхОрганизации КАК КрайниеДатыПлановыхОрганизации
		|		ПО ПлановыеНачисленияУдержания.ВидРасчетаИзмерение = КрайниеДатыПлановыхОрганизации.ВидРасчетаИзмерение
		|			И ПлановыеНачисленияУдержания.ДокументОснование = КрайниеДатыПлановыхОрганизации.ДокументОснование
		|			И ПлановыеНачисленияУдержания.Период = КрайниеДатыПлановыхОрганизации.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА СрезПоследнихОрганизации.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|				И ПлановыеНачисленияУдержания.Период = СрезПоследнихОрганизации.Период
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ДействующаяЗапись,
		|	ВЫБОР
		|		КОГДА СрезПоследнихОрганизации.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ИсторияДействующейЗаписи,
		|	ВЫБОР
		|		КОГДА СрезПоследнихОрганизации.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|		ИНАЧЕ СрезПоследнихОрганизации.Период
		|	КОНЕЦ КАК ПериодПрекращения,
		|	ПлановыеНачисленияУдержания.Период,
		|	ПлановыеНачисленияУдержания.Действие,
		|	ПлановыеНачисленияУдержания.ВидРасчета,
		|	ПлановыеНачисленияУдержания.ЭтоОсновноеНачисление,
		|	ПлановыеНачисленияУдержания.Регистратор,
		|	ПлановыеНачисленияУдержания.Показатель1,
		|	ПлановыеНачисленияУдержания.Показатель2,
		|	ПлановыеНачисленияУдержания.Показатель3,
		|	ПлановыеНачисленияУдержания.Показатель4,
		|	ПлановыеНачисленияУдержания.Показатель5,
		|	ПлановыеНачисленияУдержания.Показатель6,
		|	ПлановыеНачисленияУдержания.ТарифныйРазряд1,
		|	ПлановыеНачисленияУдержания.ТарифныйРазряд2,
		|	ПлановыеНачисленияУдержания.ТарифныйРазряд3,
		|	ПлановыеНачисленияУдержания.ТарифныйРазряд4,
		|	ПлановыеНачисленияУдержания.ТарифныйРазряд5,
		|	ПлановыеНачисленияУдержания.ТарифныйРазряд6,
		|	ПлановыеНачисленияУдержания.ЭтоНачисление,
		|	ВЫБОР
		|		КОГДА СрезПоследнихОрганизации.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|				И ПлановыеНачисленияУдержания.Период = СрезПоследнихОрганизации.Период
		|			ТОГДА ПлановыеНачисленияУдержания.ПериодЗавершения
		|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|	КОНЕЦ КАК ПериодЗавершения
		|ИЗ
		|	ЗаписиПлановыхОрганизации КАК ПлановыеНачисленияУдержания
		|		ЛЕВОЕ СОЕДИНЕНИЕ СрезПоследнихОрганизации КАК СрезПоследнихОрганизации
		|		ПО ПлановыеНачисленияУдержания.ВидРасчета = СрезПоследнихОрганизации.ВидРасчета
		|			И ПлановыеНачисленияУдержания.ДокументОснование = СрезПоследнихОрганизации.ДокументОснование
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДействующаяЗапись УБЫВ,
		|	ПлановыеНачисленияУдержания.ЭтоОсновноеНачисление УБЫВ,
		|	ИсторияДействующейЗаписи УБЫВ,
		|	ПериодПрекращения УБЫВ,
		|	ПлановыеНачисленияУдержания.Период УБЫВ";
			
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 4;
		
		НомераРезультатов.Вставить("ПлановыеНачисленияОрганизации", ОчереднойНомерЗапроса);
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаПлановыеНачисленияОрганизаций

Функция ТекстЗапросаПлановыеНачисленияКомпании(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["ПлановыеНачисленияКомпании"] Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ПлановыеНачисления.Период,
		|	ПлановыеНачисления.Действие,
		|	ПлановыеНачисления.ВидРасчетаИзмерение,
		|	ПлановыеНачисления.ВидРасчета,
		|	ВЫБОР
		|		КОГДА ПлановыеНачисления.ВидРасчетаИзмерение = ЗНАЧЕНИЕ(ПланВидовРасчета.УправленческиеНачисления.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоОсновноеНачисление,
		|	ПлановыеНачисления.Регистратор,
		|	ПлановыеНачисления.Показатель1,
		|	ПлановыеНачисления.Показатель2,
		|	ПлановыеНачисления.Показатель3,
		|	ПлановыеНачисления.Показатель4,
		|	ПлановыеНачисления.Показатель5,
		|	ПлановыеНачисления.Показатель6,
		|	ПлановыеНачисления.ТарифныйРазряд1,
		|	ПлановыеНачисления.ТарифныйРазряд2,
		|	ПлановыеНачисления.ТарифныйРазряд3,
		|	ПлановыеНачисления.ТарифныйРазряд4,
		|	ПлановыеНачисления.ТарифныйРазряд5,
		|	ПлановыеНачисления.ТарифныйРазряд6,
		|	ИСТИНА КАК ЭтоНачисление,
		|	ПлановыеНачисления.ПериодЗавершения КАК ПериодЗавершения
		|ПОМЕСТИТЬ ЗаписиПлановыхКомпании
		|ИЗ
		|	РегистрСведений.ПлановыеНачисленияРаботников КАК ПлановыеНачисления
		|ГДЕ
		|	ПлановыеНачисления.ФизЛицо = &Физлицо
		|	И ПлановыеНачисления.Период <= &Период
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПлановыеНачисления.ПериодЗавершения,
		|	ПлановыеНачисления.ДействиеЗавершения,
		|	ПлановыеНачисления.ВидРасчетаИзмерение,
		|	ВЫБОР
		|		КОГДА ПлановыеНачисления.ВидРасчетаЗавершения = ЗНАЧЕНИЕ(ПланВидовРасчета.УправленческиеНачисления.ПустаяСсылка)
		|			ТОГДА ПлановыеНачисления.ВидРасчета
		|		ИНАЧЕ ПлановыеНачисления.ВидРасчетаЗавершения
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ПлановыеНачисления.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	ПлановыеНачисления.Регистратор,
		|	ПлановыеНачисления.Показатель1Завершения,
		|	ПлановыеНачисления.Показатель2Завершения,
		|	ПлановыеНачисления.Показатель3Завершения,
		|	ПлановыеНачисления.Показатель4Завершения,
		|	ПлановыеНачисления.Показатель5Завершения,
		|	ПлановыеНачисления.Показатель6Завершения,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	ИСТИНА,
		|	ДАТАВРЕМЯ(1, 1, 1)
		|ИЗ
		|	РегистрСведений.ПлановыеНачисленияРаботников КАК ПлановыеНачисления
		|ГДЕ
		|	ПлановыеНачисления.ФизЛицо = &Физлицо
		|	И ПлановыеНачисления.ПериодЗавершения <= &Период
		|	И ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПлановыеУдержания.Период,
		|	ПлановыеУдержания.Действие,
		|	ПлановыеУдержания.ВидРасчета,
		|	ПлановыеУдержания.ВидРасчета,
		|	ЛОЖЬ,
		|	ПлановыеУдержания.Регистратор,
		|	ПлановыеУдержания.Показатель1,
		|	ПлановыеУдержания.Показатель2,
		|	ПлановыеУдержания.Показатель3,
		|	ПлановыеУдержания.Показатель4,
		|	ПлановыеУдержания.Показатель5,
		|	ПлановыеУдержания.Показатель6,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	ЛОЖЬ,
		|	ПлановыеУдержания.ПериодЗавершения
		|ИЗ
		|	РегистрСведений.ПлановыеУдержанияРаботников КАК ПлановыеУдержания
		|ГДЕ
		|	ПлановыеУдержания.ФизЛицо = &Физлицо
		|	И ПлановыеУдержания.Период <= &Период
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПлановыеУдержания.ПериодЗавершения,
		|	ПлановыеУдержания.ДействиеЗавершения,
		|	ПлановыеУдержания.ВидРасчета,
		|	ПлановыеУдержания.ВидРасчета,
		|	ЛОЖЬ,
		|	ПлановыеУдержания.Регистратор,
		|	ПлановыеУдержания.Показатель1Завершения,
		|	ПлановыеУдержания.Показатель2Завершения,
		|	ПлановыеУдержания.Показатель3Завершения,
		|	ПлановыеУдержания.Показатель4Завершения,
		|	ПлановыеУдержания.Показатель5Завершения,
		|	ПлановыеУдержания.Показатель6Завершения,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	ЛОЖЬ,
		|	ДАТАВРЕМЯ(1, 1, 1)
		|ИЗ
		|	РегистрСведений.ПлановыеУдержанияРаботников КАК ПлановыеУдержания
		|ГДЕ
		|	ПлановыеУдержания.ФизЛицо = &Физлицо
		|	И ПлановыеУдержания.ПериодЗавершения <= &Период
		|	И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаписиПлановыхКомпании.ВидРасчетаИзмерение,
		|	МАКСИМУМ(ЗаписиПлановыхКомпании.Период) КАК Период
		|ПОМЕСТИТЬ КрайниеДатыПлановыхКомпании
		|ИЗ
		|	ЗаписиПлановыхКомпании КАК ЗаписиПлановыхКомпании
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаписиПлановыхКомпании.ВидРасчетаИзмерение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПлановыеНачисленияУдержания.Период,
		|	ПлановыеНачисленияУдержания.Действие,
		|	ПлановыеНачисленияУдержания.ВидРасчета
		|ПОМЕСТИТЬ СрезПоследнихКомпании
		|ИЗ
		|	ЗаписиПлановыхКомпании КАК ПлановыеНачисленияУдержания
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КрайниеДатыПлановыхКомпании КАК КрайниеДатыПлановыхКомпании
		|		ПО ПлановыеНачисленияУдержания.ВидРасчетаИзмерение = КрайниеДатыПлановыхКомпании.ВидРасчетаИзмерение
		|			И ПлановыеНачисленияУдержания.Период = КрайниеДатыПлановыхКомпании.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА СрезПоследнихКомпании.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|				И ПлановыеНачисленияУдержания.Период = СрезПоследнихКомпании.Период
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ДействующаяЗапись,
		|	ВЫБОР
		|		КОГДА СрезПоследнихКомпании.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ИсторияДействующейЗаписи,
		|	ВЫБОР
		|		КОГДА СрезПоследнихКомпании.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|		ИНАЧЕ СрезПоследнихКомпании.Период
		|	КОНЕЦ КАК ПериодПрекращения,
		|	ПлановыеНачисленияУдержания.Период,
		|	ПлановыеНачисленияУдержания.Действие,
		|	ПлановыеНачисленияУдержания.ВидРасчета,
		|	ПлановыеНачисленияУдержания.ЭтоОсновноеНачисление,
		|	ПлановыеНачисленияУдержания.Регистратор,
		|	ПлановыеНачисленияУдержания.Показатель1,
		|	ПлановыеНачисленияУдержания.Показатель2,
		|	ПлановыеНачисленияУдержания.Показатель3,
		|	ПлановыеНачисленияУдержания.Показатель4,
		|	ПлановыеНачисленияУдержания.Показатель5,
		|	ПлановыеНачисленияУдержания.Показатель6,
		|	ПлановыеНачисленияУдержания.ТарифныйРазряд1,
		|	ПлановыеНачисленияУдержания.ТарифныйРазряд2,
		|	ПлановыеНачисленияУдержания.ТарифныйРазряд3,
		|	ПлановыеНачисленияУдержания.ТарифныйРазряд4,
		|	ПлановыеНачисленияУдержания.ТарифныйРазряд5,
		|	ПлановыеНачисленияУдержания.ТарифныйРазряд6,
		|	ПлановыеНачисленияУдержания.ЭтоНачисление,
		|	ВЫБОР
		|		КОГДА СрезПоследнихКомпании.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|				И ПлановыеНачисленияУдержания.Период = СрезПоследнихКомпании.Период
		|			ТОГДА ПлановыеНачисленияУдержания.ПериодЗавершения
		|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|	КОНЕЦ КАК ПериодЗавершения
		|ИЗ
		|	ЗаписиПлановыхКомпании КАК ПлановыеНачисленияУдержания
		|		ЛЕВОЕ СОЕДИНЕНИЕ СрезПоследнихКомпании КАК СрезПоследнихКомпании
		|		ПО ПлановыеНачисленияУдержания.ВидРасчета = СрезПоследнихКомпании.ВидРасчета
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДействующаяЗапись УБЫВ,
		|	ПлановыеНачисленияУдержания.ЭтоОсновноеНачисление УБЫВ,
		|	ИсторияДействующейЗаписи УБЫВ,
		|	ПериодПрекращения УБЫВ,
		|	ПлановыеНачисленияУдержания.Период УБЫВ";
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 4;
		
		НомераРезультатов.Вставить("ПлановыеНачисленияКомпании", ОчереднойНомерЗапроса);
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаПлановыеНачисленияКомпании

Функция ТекстЗапросаЕжемесячныеПоказателиОрганизации(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["ЗарплатаОрганизации"] Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ЗначенияПоказателейСхемМотивации.ПериодДействия КАК ПериодДействия,
		|	ЗначенияПоказателейСхемМотивации.Показатель,
		|	ЗначенияПоказателейСхемМотивации.Значение,
		|	ЗначенияПоказателейСхемМотивации.Сотрудник,
		|	ЗначенияПоказателейСхемМотивации.Организация,
		|	ЗначенияПоказателейСхемМотивации.Подразделение,
		|	ЗначенияПоказателейСхемМотивации.Показатель.ТочностьПредставления КАК ТочностьПредставления
		|ИЗ
		|	РегистрСведений.ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации
		|ГДЕ
		|	ЗначенияПоказателейСхемМотивации.Сотрудник = &Ссылка
		|	И (ЗначенияПоказателейСхемМотивации.Организация = &Организация
		|			ИЛИ ЗначенияПоказателейСхемМотивации.Организация = &ТекущееОбособленноеПодразделение)
		|	И ЗначенияПоказателейСхемМотивации.Показатель.ВидПоказателя = ЗНАЧЕНИЕ(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПериодДействия УБЫВ";
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 1;
		
		НомераРезультатов.Вставить("ЕжемесячныеПоказателиОрганизации", ОчереднойНомерЗапроса);
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаЕжемесячныеПоказателиОрганизации

Функция ТекстЗапросаЕжемесячныеПоказателиКомпании(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["ЗарплатаКомпании"] Тогда
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ЗначенияПоказателейСхемМотивации.ПериодДействия,
		|	ЗначенияПоказателейСхемМотивации.Показатель,
		|	ЗначенияПоказателейСхемМотивации.Значение,
		|	ЗначенияПоказателейСхемМотивации.Сотрудник,
		|	ЗначенияПоказателейСхемМотивации.Организация,
		|	ЗначенияПоказателейСхемМотивации.Подразделение,
		|	ЗначенияПоказателейСхемМотивации.Показатель.ТочностьПредставления КАК ТочностьПредставления
		|ИЗ
		|	РегистрСведений.ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации
		|ГДЕ
		|	ЗначенияПоказателейСхемМотивации.Сотрудник.Физлицо = &Физлицо
		|	И ЗначенияПоказателейСхемМотивации.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|	И ЗначенияПоказателейСхемМотивации.Показатель.ВидПоказателя = ЗНАЧЕНИЕ(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПериодДействия УБЫВ
		|";
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 1;
		
		НомераРезультатов.Вставить("ЕжемесячныеПоказателиКомпании", ОчереднойНомерЗапроса);
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаЕжемесячныеПоказателиКомпании

Функция ТекстЗапросаИмущественныеВычеты(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["ЗарплатаОрганизации"] Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Уведомление.Ссылка,
		|	Уведомление.Ссылка.НалоговыйПериод,
		|	Уведомление.Расходы,
		|	Уведомление.ПроцентыПоКредитам,
		|	Уведомление.НомерВходящегоДокумента,
		|	Уведомление.ДатаУведомления
		|ИЗ
		|	Документ.НДФЛПодтверждениеПраваНаИмущественныйВычет.РаботникиОрганизации КАК Уведомление
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			МАКСИМУМ(НДФЛПодтверждениеПраваНаИмущественныйВычет.Ссылка) КАК Ссылка
		|		ИЗ
		|			Документ.НДФЛПодтверждениеПраваНаИмущественныйВычет.РаботникиОрганизации КАК НДФЛПодтверждениеПраваНаИмущественныйВычет
		|		ГДЕ
		|			НДФЛПодтверждениеПраваНаИмущественныйВычет.ФизЛицо = &Физлицо
		|			И НДФЛПодтверждениеПраваНаИмущественныйВычет.Ссылка.НалоговыйПериод <= ГОД(&Период)
		|			И НДФЛПодтверждениеПраваНаИмущественныйВычет.Ссылка.Организация = &Организация
		|			И НДФЛПодтверждениеПраваНаИмущественныйВычет.Ссылка.Проведен) КАК КрайнееУведомление
		|		ПО Уведомление.Ссылка = КрайнееУведомление.Ссылка
		|";
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 1;
		НомераРезультатов.Вставить("ИмущественныеВычеты", ОчереднойНомерЗапроса);
		
	КонецЕсли;	
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаИмущественныеВычеты

Функция ТекстЗапросаМероприятияОбученияРазвития(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["УченическийДоговор"] Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(РезультатыМероприятийОбученияРазвития.Мероприятие, ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних.Мероприятие) КАК Мероприятие,
		|	ЕСТЬNULL(РезультатыМероприятийОбученияРазвития.ДатаНачала, ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних.ДатаНачала) КАК ДатаНачала,
		|	ЕСТЬNULL(РезультатыМероприятийОбученияРазвития.ДатаОкончания, ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних.ДатаОкончания) КАК ДатаОкончания,
		|	ЕСТЬNULL(РезультатыМероприятийОбученияРазвития.Регистратор, ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних.Договор) КАК Регистратор,
		|	ЕСТЬNULL(РезультатыМероприятийОбученияРазвития.Период, ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних.Период) КАК Период,
		|	ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних.Договор КАК УченическийДоговор,
		|	ВЫБОР
		|		КОГДА ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних.Договор ЕСТЬ NULL 
		|			ТОГДА ""Сотрудник не возмещает расходы, понесенные работодателем на его обучение.""
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних.Погашено, ЛОЖЬ)
		|							И ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних.СпособПогашения = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияОбязательствПоУченическомуДоговору.ПриУвольнении)
		|						ИЛИ ЕСТЬNULL(ДоговорыЗайма.ОстатокОбязательства, 0) = 0
		|							И ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних.СпособПогашения = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияОбязательствПоУченическомуДоговору.ПоДоговоруЗайма)
		|					ТОГДА ""Обязательство погашено.""
		|				КОГДА ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних.СпособПогашения = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияОбязательствПоУченическомуДоговору.ПриУвольнении)
		|					ТОГДА ""Сотрудник возмещает расходы, понесенные работодателем на его обучение по шкале обязательств при увольнении.""
		|				КОГДА ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних.СпособПогашения = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияОбязательствПоУченическомуДоговору.ПоДоговоруЗайма)
		|					ТОГДА ""Сотрудник возмещает расходы, понесенные работодателем на его обучение в сумме %1 %2 по договору займа.""
		|				ИНАЧЕ """"
		|			КОНЕЦ
		|	КОНЕЦ КАК УченическийДоговорПояснение,
		|	ВЫБОР
		|		КОГДА ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних.Договор ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЗаключатьУченическийДоговор,
		|	ЕСТЬNULL(ДоговорыЗайма.ОстатокОбязательства, 0) КАК ОстатокОбязательства,
		|	ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних.Сумма КАК Сумма,
		|	ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних.СпособПогашения КАК СпособПогашения,
		|	ВЫБОР
		|		КОГДА ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних.СпособПогашения = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияОбязательствПоУченическомуДоговору.ПоДоговоруЗайма)
		|			ТОГДА ЕСТЬNULL(ДоговорыЗайма.ОбязательствоПогашено, ИСТИНА)
		|		ИНАЧЕ ЕСТЬNULL(ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних.Погашено, ЛОЖЬ)
		|	КОНЕЦ КАК Погашено,
		|	ВЫБОР
		|		КОГДА Константы.ВестиОбучениеРазвитиеПоЦентрамОтветственности
		|			ТОГДА Константы.ВалютаУправленческогоУчета
		|		ИНАЧЕ Константы.ВалютаРегламентированногоУчета
		|	КОНЕЦ КАК Валюта
		|ИЗ
		|	РегистрСведений.РезультатыМероприятийОбученияРазвития КАК РезультатыМероприятийОбученияРазвития
		|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.ОбязательстваРаботниковПоУченическимДоговорам.СрезПоследних(, ФизЛицо = &Физлицо) КАК ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних
		|		ПО РезультатыМероприятийОбученияРазвития.ФизЛицо = ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних.ФизЛицо
		|			И РезультатыМероприятийОбученияРазвития.Мероприятие = ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних.Мероприятие
		|			И РезультатыМероприятийОбученияРазвития.ДатаНачала = ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних.ДатаНачала
		|			И РезультатыМероприятийОбученияРазвития.ДатаОкончания = ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних.ДатаОкончания
		|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ПогашениеЗаймовРаботникамиОстатки.ФизЛицо КАК ФизЛицо,
		|			ПогашениеЗаймовРаботникамиОстатки.ДоговорЗайма КАК ДоговорЗайма,
		|			ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|			ПогашениеЗаймовРаботникамиОстатки.ОсновнойДолгОстаток + ПогашениеЗаймовРаботникамиОстатки.ПроцентыОстаток КАК ОстатокОбязательства,
		|			ВЫБОР
		|				КОГДА ПогашениеЗаймовРаботникамиОстатки.ОсновнойДолгОстаток + ПогашениеЗаймовРаботникамиОстатки.ПроцентыОстаток = 0
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ КАК ОбязательствоПогашено
		|		ИЗ
		|			РегистрНакопления.ПогашениеЗаймовРаботниками.Остатки(
		|					,
		|					ФизЛицо = &ФизЛицо
		|						И ДоговорЗайма ССЫЛКА Документ.УченическийДоговор) КАК ПогашениеЗаймовРаботникамиОстатки
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПогашениеЗаймовРаботникамиОрганизацийОстатки.ФизЛицо,
		|			ПогашениеЗаймовРаботникамиОрганизацийОстатки.ДоговорЗайма,
		|			ПогашениеЗаймовРаботникамиОрганизацийОстатки.Организация,
		|			ПогашениеЗаймовРаботникамиОрганизацийОстатки.ОсновнойДолгОстаток + ПогашениеЗаймовРаботникамиОрганизацийОстатки.ПроцентыОстаток,
		|			ВЫБОР
		|				КОГДА ПогашениеЗаймовРаботникамиОрганизацийОстатки.ОсновнойДолгОстаток + ПогашениеЗаймовРаботникамиОрганизацийОстатки.ПроцентыОстаток = 0
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ
		|		ИЗ
		|			РегистрНакопления.ПогашениеЗаймовРаботникамиОрганизаций.Остатки(
		|					,
		|					ФизЛицо = &ФизЛицо
		|						И ДоговорЗайма ССЫЛКА Документ.УченическийДоговор) КАК ПогашениеЗаймовРаботникамиОрганизацийОстатки) КАК ДоговорыЗайма
		|		ПО (ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних.ФизЛицо = ДоговорыЗайма.ФизЛицо)
		|			И (ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних.Договор = ДоговорыЗайма.ДоговорЗайма)
		|ГДЕ
		|	(РезультатыМероприятийОбученияРазвития.ФизЛицо = &Физлицо
		|			ИЛИ ОбязательстваРаботниковПоУченическимДоговорамСрезПоследних.ФизЛицо = &Физлицо)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 1;
		НомераРезультатов.Вставить("ОбучениеРазвитие", ОчереднойНомерЗапроса);
		
	ИначеЕсли ДоступностьПросмотр["ОбучениеРазвитие"] Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	РезультатыМероприятийОбученияРазвития.Мероприятие,
		|	РезультатыМероприятийОбученияРазвития.ДатаНачала,
		|	РезультатыМероприятийОбученияРазвития.ДатаОкончания,
		|	РезультатыМероприятийОбученияРазвития.Регистратор,
		|	РезультатыМероприятийОбученияРазвития.Период КАК Период,
		|	NULL КАК СпособПогашения,
		|	"""" КАК УченическийДоговорПояснение
		|ИЗ
		|	РегистрСведений.РезультатыМероприятийОбученияРазвития КАК РезультатыМероприятийОбученияРазвития
		|ГДЕ
		|	РезультатыМероприятийОбученияРазвития.ФизЛицо = &Физлицо
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 1;
		НомераРезультатов.Вставить("ОбучениеРазвитие", ОчереднойНомерЗапроса);
		
	КонецЕсли;
		
	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаМероприятияОбученияРазвития 

Функция ТекстЗапросаОценкиКомпетенций(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["ОбучениеРазвитие"] Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ОценкиКомпетенцийПоШкале.Период,
		|	ОценкиКомпетенцийПоШкале.Регистратор,
		|	ОценкиКомпетенцийПоШкале.Компетенция,
		|	ОценкиКомпетенцийПоШкале.Оценка
		|ПОМЕСТИТЬ ОценкиКомпетенцийПоШкале
		|ИЗ
		|	РегистрСведений.ОценкиКомпетенцийРаботников КАК ОценкиКомпетенцийПоШкале
		|ГДЕ
		|	ОценкиКомпетенцийПоШкале.ФизЛицо = &Физлицо
		|	И ОценкиКомпетенцийПоШкале.Период <= &Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА КрайниеДатыОценок.Компетенция ЕСТЬ НЕ NULL 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ДействующаяЗапись,
		|	ОценкиКомпетенцийПоШкале.Период,
		|	ОценкиКомпетенцийПоШкале.Регистратор,
		|	ОценкиКомпетенцийПоШкале.Компетенция,
		|	ОценкиКомпетенцийПоШкале.Оценка КАК ОценкаПоШкале
		|ИЗ
		|	ОценкиКомпетенцийПоШкале КАК ОценкиКомпетенцийПоШкале
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ОценкиКомпетенцийПоШкале.Компетенция КАК Компетенция,
		|			МАКСИМУМ(ОценкиКомпетенцийПоШкале.Период) КАК Период
		|		ИЗ
		|			ОценкиКомпетенцийПоШкале КАК ОценкиКомпетенцийПоШкале
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ОценкиКомпетенцийПоШкале.Компетенция) КАК КрайниеДатыОценок
		|		ПО ОценкиКомпетенцийПоШкале.Период = КрайниеДатыОценок.Период
		|			И ОценкиКомпетенцийПоШкале.Компетенция = КрайниеДатыОценок.Компетенция
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДействующаяЗапись УБЫВ,
		|	ОценкиКомпетенцийПоШкале.Период УБЫВ";
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 2;
		НомераРезультатов.Вставить("ОценкиКомпетенцийПоШкале", ОчереднойНомерЗапроса);
		
	КонецЕсли;
	
	Если ДоступностьПросмотр["ОценкаПоВопросам"] Тогда
		
		ТекстЗапроса = ТекстЗапроса + ";" + 
		"ВЫБРАТЬ
		|	РезультатыОценкиСотрудников.Мероприятие,
		|	РезультатыОценкиСотрудников.Мероприятие.ДатаОкончания КАК Период,
		|	РезультатыОценкиСотрудников.Компетенция,
		|	РезультатыОценкиСотрудников.Оценка,
		|	РезультатыОценкиСотрудников.Рейтинг
		|ПОМЕСТИТЬ ОценкиКомпетенцийПоВопросам
		|ИЗ
		|	РегистрСведений.РезультатыОценкиСотрудников КАК РезультатыОценкиСотрудников
		|ГДЕ
		|	РезультатыОценкиСотрудников.Физлицо = &Физлицо
		|	И РезультатыОценкиСотрудников.Мероприятие.ДатаОкончания <= &Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА КрайниеДатыОценок.Компетенция ЕСТЬ НЕ NULL 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ДействующаяЗапись,
		|	ОценкиКомпетенцийПоВопросам.Период,
		|	ОценкиКомпетенцийПоВопросам.Мероприятие КАК Регистратор,
		|	ОценкиКомпетенцийПоВопросам.Компетенция,
		|	ОценкиКомпетенцийПоВопросам.Оценка,
		|	ОценкиКомпетенцийПоВопросам.Рейтинг
		|ИЗ
		|	ОценкиКомпетенцийПоВопросам КАК ОценкиКомпетенцийПоВопросам
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ОценкиКомпетенцийПоВопросам.Компетенция КАК Компетенция,
		|			МАКСИМУМ(ОценкиКомпетенцийПоВопросам.Период) КАК Период
		|		ИЗ
		|			ОценкиКомпетенцийПоВопросам КАК ОценкиКомпетенцийПоВопросам
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ОценкиКомпетенцийПоВопросам.Компетенция) КАК КрайниеДатыОценок
		|		ПО ОценкиКомпетенцийПоВопросам.Период = КрайниеДатыОценок.Период
		|			И ОценкиКомпетенцийПоВопросам.Компетенция = КрайниеДатыОценок.Компетенция
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДействующаяЗапись УБЫВ,
		|	ОценкиКомпетенцийПоВопросам.Период УБЫВ";
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 2;
		НомераРезультатов.Вставить("ОценкиКомпетенцийПоВопросам", ОчереднойНомерЗапроса);
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаОценкиКомпетенций

Функция ТекстЗапросаДопускиМедосмотрыИнструктажи(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["ОхранаТруда"] Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВидыДопусковКРаботамКонтролируемыеДолжности.Ссылка
		|ПОМЕСТИТЬ ОбязательныеДопуски
		|ИЗ
		|	Справочник.ВидыДопусковКРаботам.КонтролируемыеДолжности КАК ВидыДопусковКРаботамКонтролируемыеДолжности
		|ГДЕ
		|	ВидыДопусковКРаботамКонтролируемыеДолжности.Должность = &ТекущаяДолжностьОрганизации
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВидыМедицинскихОсмотровКонтролируемыеДолжности.Ссылка
		|ИЗ
		|	Справочник.ВидыМедицинскихОсмотров.КонтролируемыеДолжности КАК ВидыМедицинскихОсмотровКонтролируемыеДолжности
		|ГДЕ
		|	ВидыМедицинскихОсмотровКонтролируемыеДолжности.Должность = &ТекущаяДолжностьОрганизации
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВидыИнструктажейПоОхранеТрудаКонтролируемыеДолжности.Ссылка
		|ИЗ
		|	Справочник.ВидыИнструктажейПоОхранеТруда.КонтролируемыеДолжности КАК ВидыИнструктажейПоОхранеТрудаКонтролируемыеДолжности
		|ГДЕ
		|	ВидыИнструктажейПоОхранеТрудаКонтролируемыеДолжности.Должность = &ТекущаяДолжностьОрганизации
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.ВидыИнструктажейПоОхранеТруда.ВводныйИнструктаж)
		|ГДЕ
		|	&ТекущаяДолжностьОрганизации <> ЗНАЧЕНИЕ(Справочник.ДолжностиОрганизаций.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВидыДопусков.Ссылка КАК ВидДопуска,
		|	ДопускиКРаботам.Период КАК ДатаПолучения,
		|	ДопускиКРаботам.СрокДействия КАК СрокДействия,
		|	ВЫБОР
		|		КОГДА ДопускиКРаботам.ВидДопуска ЕСТЬ NULL 
		|			ТОГДА ""Оформить""
		|		ИНАЧЕ ""Продлить""
		|	КОНЕЦ КАК Действие,
		|	ДопускиКРаботам.Регистратор КАК Регистратор,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ДопускиКРаботам.СрокДействия, ДАТАВРЕМЯ(1, 1, 1)) < &Период
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Просрочен,
		|	""ДопускКРаботам"" КАК ИмяМетаданныхДокумента,
		|	""ВидДопуска"" КАК ВидДопускаИмяРеквизита,
		|	ВЫБОР
		|		КОГДА ОбязательныеДопуски.Ссылка ЕСТЬ НЕ NULL 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЯвляетсяОбязательным
		|ИЗ
		|	Справочник.ВидыДопусковКРаботам КАК ВидыДопусков
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДопускиКРаботам.СрезПоследних(
		|				&Период,
		|				Сотрудник = &Ссылка
		|					И Организация = &Организация) КАК ДопускиКРаботам
		|		ПО ВидыДопусков.Ссылка = ДопускиКРаботам.ВидДопуска
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОбязательныеДопуски КАК ОбязательныеДопуски
		|		ПО ВидыДопусков.Ссылка = ОбязательныеДопуски.Ссылка
		|ГДЕ
		|	(ОбязательныеДопуски.Ссылка ЕСТЬ НЕ NULL 
		|			ИЛИ ДопускиКРаботам.ВидДопуска ЕСТЬ НЕ NULL )
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВидыМедосмотров.Ссылка,
		|	МедицинскиеОсмотры.Период,
		|	МедицинскиеОсмотры.ДатаСледующегоОсмотра,
		|	ВЫБОР
		|		КОГДА МедицинскиеОсмотры.ВидМедосмотра ЕСТЬ NULL 
		|			ТОГДА ""Оформить""
		|		ИНАЧЕ ""Продлить""
		|	КОНЕЦ,
		|	МедицинскиеОсмотры.Регистратор,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(МедицинскиеОсмотры.ДатаСледующегоОсмотра, ДАТАВРЕМЯ(1, 1, 1)) < &Период
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	""МедицинскийОсмотр"",
		|	""ВидМедосмотра"",
		|	ВЫБОР
		|		КОГДА ОбязательныеДопуски.Ссылка ЕСТЬ НЕ NULL 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|ИЗ
		|	Справочник.ВидыМедицинскихОсмотров КАК ВидыМедосмотров
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РезультатыМедицинскихОсмотров.СрезПоследних(
		|				&Период,
		|				Сотрудник = &Ссылка
		|					И Организация = &Организация) КАК МедицинскиеОсмотры
		|		ПО ВидыМедосмотров.Ссылка = МедицинскиеОсмотры.ВидМедосмотра
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОбязательныеДопуски КАК ОбязательныеДопуски
		|		ПО ВидыМедосмотров.Ссылка = ОбязательныеДопуски.Ссылка
		|ГДЕ
		|	(ОбязательныеДопуски.Ссылка ЕСТЬ НЕ NULL 
		|			ИЛИ МедицинскиеОсмотры.ВидМедосмотра ЕСТЬ НЕ NULL )
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВидыИнструктажей.Ссылка,
		|	ИнструктажиПоОхранеТруда.Период,
		|	ВЫБОР
		|		КОГДА (НЕ ВидыИнструктажей.Ссылка.ПроводитсяОднократно)
		|			ТОГДА ВЫБОР
		|					КОГДА ВидыИнструктажей.Ссылка.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)
		|						ТОГДА ДОБАВИТЬКДАТЕ(ИнструктажиПоОхранеТруда.Период, ГОД, ВидыИнструктажей.Ссылка.СрокДействия)
		|					КОГДА ВидыИнструктажей.Ссылка.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Полугодие)
		|						ТОГДА ДОБАВИТЬКДАТЕ(ИнструктажиПоОхранеТруда.Период, ПОЛУГОДИЕ, ВидыИнструктажей.Ссылка.СрокДействия)
		|					КОГДА ВидыИнструктажей.Ссылка.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал)
		|						ТОГДА ДОБАВИТЬКДАТЕ(ИнструктажиПоОхранеТруда.Период, КВАРТАЛ, ВидыИнструктажей.Ссылка.СрокДействия)
		|					КОГДА ВидыИнструктажей.Ссылка.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
		|						ТОГДА ДОБАВИТЬКДАТЕ(ИнструктажиПоОхранеТруда.Период, МЕСЯЦ, ВидыИнструктажей.Ссылка.СрокДействия)
		|					КОГДА ВидыИнструктажей.Ссылка.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Декада)
		|						ТОГДА ДОБАВИТЬКДАТЕ(ИнструктажиПоОхранеТруда.Период, ДЕКАДА, ВидыИнструктажей.Ссылка.СрокДействия)
		|					КОГДА ВидыИнструктажей.Ссылка.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
		|						ТОГДА ДОБАВИТЬКДАТЕ(ИнструктажиПоОхранеТруда.Период, НЕДЕЛЯ, ВидыИнструктажей.Ссылка.СрокДействия)
		|					КОГДА ВидыИнструктажей.Ссылка.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.День)
		|						ТОГДА ДОБАВИТЬКДАТЕ(ИнструктажиПоОхранеТруда.Период, ДЕНЬ, ВидыИнструктажей.Ссылка.СрокДействия)
		|				КОНЕЦ
		|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ИнструктажиПоОхранеТруда.ВидИнструктажа ЕСТЬ NULL 
		|			ТОГДА ""Оформить""
		|		ИНАЧЕ ВЫБОР
		|				КОГДА (НЕ ВидыИнструктажей.Ссылка.ПроводитсяОднократно)
		|					ТОГДА ""Продлить""
		|				ИНАЧЕ """"
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ИнструктажиПоОхранеТруда.Регистратор,
		|	ВЫБОР
		|		КОГДА (НЕ ВидыИнструктажей.Ссылка.ПроводитсяОднократно)
		|				И ЕСТЬNULL(ВЫБОР
		|						КОГДА ВидыИнструктажей.Ссылка.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)
		|							ТОГДА ДОБАВИТЬКДАТЕ(ИнструктажиПоОхранеТруда.Период, ГОД, ВидыИнструктажей.Ссылка.СрокДействия)
		|						КОГДА ВидыИнструктажей.Ссылка.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Полугодие)
		|							ТОГДА ДОБАВИТЬКДАТЕ(ИнструктажиПоОхранеТруда.Период, ПОЛУГОДИЕ, ВидыИнструктажей.Ссылка.СрокДействия)
		|						КОГДА ВидыИнструктажей.Ссылка.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал)
		|							ТОГДА ДОБАВИТЬКДАТЕ(ИнструктажиПоОхранеТруда.Период, КВАРТАЛ, ВидыИнструктажей.Ссылка.СрокДействия)
		|						КОГДА ВидыИнструктажей.Ссылка.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
		|							ТОГДА ДОБАВИТЬКДАТЕ(ИнструктажиПоОхранеТруда.Период, МЕСЯЦ, ВидыИнструктажей.Ссылка.СрокДействия)
		|						КОГДА ВидыИнструктажей.Ссылка.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Декада)
		|							ТОГДА ДОБАВИТЬКДАТЕ(ИнструктажиПоОхранеТруда.Период, ДЕКАДА, ВидыИнструктажей.Ссылка.СрокДействия)
		|						КОГДА ВидыИнструктажей.Ссылка.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
		|							ТОГДА ДОБАВИТЬКДАТЕ(ИнструктажиПоОхранеТруда.Период, НЕДЕЛЯ, ВидыИнструктажей.Ссылка.СрокДействия)
		|						КОГДА ВидыИнструктажей.Ссылка.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.День)
		|							ТОГДА ДОБАВИТЬКДАТЕ(ИнструктажиПоОхранеТруда.Период, ДЕНЬ, ВидыИнструктажей.Ссылка.СрокДействия)
		|					КОНЕЦ, ДАТАВРЕМЯ(1, 1, 1)) < &Период
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ИнструктажиПоОхранеТруда.Период ЕСТЬ NULL 
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ
		|	КОНЕЦ,
		|	""ИнструктажПоОхранеТруда"",
		|	""ВидИнструктажа"",
		|	ВЫБОР
		|		КОГДА ОбязательныеДопуски.Ссылка ЕСТЬ НЕ NULL 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|ИЗ
		|	Справочник.ВидыИнструктажейПоОхранеТруда КАК ВидыИнструктажей
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИнструктажиПоОхранеТруда.СрезПоследних(
		|				&Период,
		|				Сотрудник = &Ссылка
		|					И Организация = &Организация) КАК ИнструктажиПоОхранеТруда
		|		ПО ВидыИнструктажей.Ссылка = ИнструктажиПоОхранеТруда.ВидИнструктажа
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОбязательныеДопуски КАК ОбязательныеДопуски
		|		ПО ВидыИнструктажей.Ссылка = ОбязательныеДопуски.Ссылка
		|ГДЕ
		|	(ОбязательныеДопуски.Ссылка ЕСТЬ НЕ NULL 
		|			ИЛИ ИнструктажиПоОхранеТруда.ВидИнструктажа ЕСТЬ НЕ NULL )
		|
		|УПОРЯДОЧИТЬ ПО
		|	ИмяМетаданныхДокумента,
		|	ВидДопуска
		|";
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 2;
		НомераРезультатов.Вставить("ДопускиМедосмотрыИнструктажи", ОчереднойНомерЗапроса);
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаДопускиМедосмотрыИнструктажи

Функция ТекстЗапросаРаспределениеРасходов(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["РаспределениеРасходов"] Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	УчетЗаработкаРаботников.Период КАК Период,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(УчетЗаработкаРаботников.СтатьяРасходовЗарплата, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|			ТОГДА УчетЗаработкаРаботников.СтатьяРасходовЗарплата
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетЗаработкаРаботниковПодразделения.СтатьяРасходовЗарплата, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|					ТОГДА УчетЗаработкаРаботниковПодразделения.СтатьяРасходовЗарплата
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(УчетЗаработкаРаботниковКомпании.СтатьяРасходовЗарплата, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|							ТОГДА УчетЗаработкаРаботниковКомпании.СтатьяРасходовЗарплата
		|						ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатьяРасходовЗарплата,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(УчетЗаработкаРаботников.СтатьяРасходовЗарплата, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|			ТОГДА ""(действует для сотрудника)""
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетЗаработкаРаботниковПодразделения.СтатьяРасходовЗарплата, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|					ТОГДА ""(действует для подразделения)""
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(УчетЗаработкаРаботниковКомпании.СтатьяРасходовЗарплата, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|							ТОГДА ""(действует для компании)""
		|						ИНАЧЕ ""(нет действующего значения)""
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатьяРасходовЗарплатаИсточник,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(УчетЗаработкаРаботников.СтатьяРасходовНДФЛ, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|			ТОГДА УчетЗаработкаРаботников.СтатьяРасходовНДФЛ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетЗаработкаРаботниковПодразделения.СтатьяРасходовНДФЛ, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|					ТОГДА УчетЗаработкаРаботниковПодразделения.СтатьяРасходовНДФЛ
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(УчетЗаработкаРаботниковКомпании.СтатьяРасходовНДФЛ, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|							ТОГДА УчетЗаработкаРаботниковКомпании.СтатьяРасходовНДФЛ
		|						ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатьяРасходовНДФЛ,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(УчетЗаработкаРаботников.СтатьяРасходовНДФЛ, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|			ТОГДА ""(действует для сотрудника)""
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетЗаработкаРаботниковПодразделения.СтатьяРасходовНДФЛ, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|					ТОГДА ""(действует для подразделения)""
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(УчетЗаработкаРаботниковКомпании.СтатьяРасходовНДФЛ, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|							ТОГДА ""(действует для компании)""
		|						ИНАЧЕ ""(нет действующего значения)""
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатьяРасходовНДФЛИсточник,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(УчетЗаработкаРаботников.СтатьяРасходовСтраховыеВзносы, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|			ТОГДА УчетЗаработкаРаботников.СтатьяРасходовСтраховыеВзносы
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетЗаработкаРаботниковПодразделения.СтатьяРасходовСтраховыеВзносы, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|					ТОГДА УчетЗаработкаРаботниковПодразделения.СтатьяРасходовСтраховыеВзносы
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(УчетЗаработкаРаботниковКомпании.СтатьяРасходовСтраховыеВзносы, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|							ТОГДА УчетЗаработкаРаботниковКомпании.СтатьяРасходовСтраховыеВзносы
		|						ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатьяРасходовСтраховыеВзносы,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(УчетЗаработкаРаботников.СтатьяРасходовСтраховыеВзносы, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|			ТОГДА ""(действует для сотрудника)""
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетЗаработкаРаботниковПодразделения.СтатьяРасходовСтраховыеВзносы, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|					ТОГДА ""(действует для подразделения)""
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(УчетЗаработкаРаботниковКомпании.СтатьяРасходовСтраховыеВзносы, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|							ТОГДА ""(действует для компании)""
		|						ИНАЧЕ ""(нет действующего значения)""
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатьяРасходовСтраховыеВзносыИсточник,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(УчетЗаработкаРаботников.СтатьяРасходовЛьготы, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|			ТОГДА УчетЗаработкаРаботниковПодразделения.СтатьяРасходовЛьготы
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетЗаработкаРаботниковПодразделения.СтатьяРасходовЛьготы, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|					ТОГДА УчетЗаработкаРаботниковПодразделения.СтатьяРасходовЛьготы
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(УчетЗаработкаРаботниковКомпании.СтатьяРасходовЛьготы, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|							ТОГДА УчетЗаработкаРаботниковКомпании.СтатьяРасходовЛьготы
		|						ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатьяРасходовЛьготы,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(УчетЗаработкаРаботников.СтатьяРасходовЛьготы, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|			ТОГДА ""(действует для сотрудника)""
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетЗаработкаРаботниковПодразделения.СтатьяРасходовЛьготы, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|					ТОГДА ""(действует для подразделения)""
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(УчетЗаработкаРаботниковКомпании.СтатьяРасходовЛьготы, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|							ТОГДА ""(действует для компании)""
		|						ИНАЧЕ ""(нет действующего значения)""
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатьяРасходовЛьготыИсточник,
		|	УчетЗаработкаРаботниковПодразделения.НаправлениеДеятельности,
		|	ВЫБОР
		|		КОГДА ФизическиеЛица.ТекущееПодразделениеКомпании = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
		|			ТОГДА СведенияОФизлицеДляУпрУчета.Подразделение
		|		ИНАЧЕ ФизическиеЛица.ТекущееПодразделениеКомпании
		|	КОНЕЦ КАК ПодразделениеУчетаРасходов,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(УчетЗаработкаРаботниковПодразделения.Коэффициент, 0) > 0
		|			ТОГДА ""пропорционально коэффициентам""
		|		ИНАЧЕ ""пропорционально другим расходам""
		|	КОНЕЦ КАК СпособРаспределенияПредставление
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицеДляУпрУчета.СрезПоследних(&Период, Физлицо = &Физлицо) КАК СведенияОФизлицеДляУпрУчета
		|		ПО ФизическиеЛица.Ссылка = СведенияОФизлицеДляУпрУчета.Физлицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетЗаработкаРаботниковКомпании КАК УчетЗаработкаРаботниковКомпании
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Подразделения КАК Подразделения
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетЗаработкаРаботниковПодразделения КАК УчетЗаработкаРаботниковПодразделения
		|			ПО (УчетЗаработкаРаботниковПодразделения.Подразделение = Подразделения.Ссылка)
		|		ПО (ВЫБОР
		|				КОГДА ФизическиеЛица.ТекущееПодразделениеКомпании = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
		|					ТОГДА СведенияОФизлицеДляУпрУчета.Подразделение
		|				ИНАЧЕ ФизическиеЛица.ТекущееПодразделениеКомпании
		|			КОНЕЦ = Подразделения.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетЗаработкаРаботников.СрезПоследних(&Период, Физлицо = &Физлицо) КАК УчетЗаработкаРаботников
		|		ПО (УчетЗаработкаРаботников.Физлицо = ФизическиеЛица.Ссылка)
		|ГДЕ
		|	ФизическиеЛица.Ссылка = &Физлицо
		|";
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 1;
		НомераРезультатов.Вставить("РаспределениеРасходов", ОчереднойНомерЗапроса);
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаРаспределениеРасходов

Функция ТекстЗапросаСуммыРасходов(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["СуммыРасходов"] Тогда
		
		ТекстЗапроса = УчетРасходовНаПерсоналДополнительный.ТекстЗапросаСуммыРасходовНаПерсонал(Истина);
		
		// количество временных таблиц во внешнем запросе
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 23;
		
		ТекстЗапроса = ТекстЗапроса + ";" + 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА СуммыРасходов.КатегорияРасходов В (ЗНАЧЕНИЕ(Перечисление.КатегорииРасходовНаПерсонал.Зарплата), ЗНАЧЕНИЕ(Перечисление.КатегорииРасходовНаПерсонал.НДФЛ), ЗНАЧЕНИЕ(Перечисление.КатегорииРасходовНаПерсонал.СтраховыеВзносы))
		|			ТОГДА ""Зарплата""
		|		КОГДА СуммыРасходов.КатегорияРасходов = ЗНАЧЕНИЕ(Перечисление.КатегорииРасходовНаПерсонал.Льготы)
		|			ТОГДА ""Льготы""
		|		КОГДА СуммыРасходов.КатегорияРасходов = ЗНАЧЕНИЕ(Перечисление.КатегорииРасходовНаПерсонал.Обучение)
		|			ТОГДА ""Обучение""
		|		ИНАЧЕ ""Прочее""
		|	КОНЕЦ КАК ГруппаРасходов,
		|	СУММА(СуммыРасходов.Расходы) КАК Расходы
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЗНАЧЕНИЕ(Перечисление.КатегорииРасходовНаПерсонал.Зарплата) КАК КатегорияРасходов,
		|		РасходыНаЗарплату.Физлицо КАК Физлицо,
		|		РасходыНаЗарплату.Расходы КАК Расходы
		|	ИЗ
		|		РасходыНаЗарплату КАК РасходыНаЗарплату
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗНАЧЕНИЕ(Перечисление.КатегорииРасходовНаПерсонал.НДФЛ),
		|		НДФЛ.ФизЛицо,
		|		НДФЛ.СуммаНалога
		|	ИЗ
		|		НДФЛ КАК НДФЛ
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗНАЧЕНИЕ(Перечисление.КатегорииРасходовНаПерсонал.СтраховыеВзносы),
		|		СтраховыеВзносы.ФизЛицо,
		|		СтраховыеВзносы.СуммаВзносов
		|	ИЗ
		|		СтраховыеВзносы КАК СтраховыеВзносы
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗНАЧЕНИЕ(Перечисление.КатегорииРасходовНаПерсонал.Льготы),
		|		ПредоставленныеЛьготы.Физлицо,
		|		ПредоставленныеЛьготы.СуммаРасходов
		|	ИЗ
		|		ПредоставленныеЛьготы КАК ПредоставленныеЛьготы
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ПрочиеРасходы.КатегорияРасходов,
		|		ПрочиеРасходы.ФизЛицо,
		|		ПрочиеРасходы.СуммаРасходов
		|	ИЗ
		|		ПрочиеРасходы КАК ПрочиеРасходы) КАК СуммыРасходов
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА СуммыРасходов.КатегорияРасходов В (ЗНАЧЕНИЕ(Перечисление.КатегорииРасходовНаПерсонал.Зарплата), ЗНАЧЕНИЕ(Перечисление.КатегорииРасходовНаПерсонал.НДФЛ), ЗНАЧЕНИЕ(Перечисление.КатегорииРасходовНаПерсонал.СтраховыеВзносы))
		|			ТОГДА ""Зарплата""
		|		КОГДА СуммыРасходов.КатегорияРасходов = ЗНАЧЕНИЕ(Перечисление.КатегорииРасходовНаПерсонал.Льготы)
		|			ТОГДА ""Льготы""
		|		КОГДА СуммыРасходов.КатегорияРасходов = ЗНАЧЕНИЕ(Перечисление.КатегорииРасходовНаПерсонал.Обучение)
		|			ТОГДА ""Обучение""
		|		ИНАЧЕ ""Прочее""
		|	КОНЕЦ
		|";
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 1;
		НомераРезультатов.Вставить("СуммыРасходов", ОчереднойНомерЗапроса);
	
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаСуммыРасходов

Функция ТекстЗапросаОтражениеВРеглУчетеОсновногоЗаработка(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["ЗарплатаОрганизации"] Тогда
		
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(УчетОсновногоЗаработкаРаботников.СпособОтраженияВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботников.Период
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетОсновногоЗаработкаПодразделения.СпособОтраженияВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|					ТОГДА УчетОсновногоЗаработкаПодразделения.Период
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|							ТОГДА УчетОсновногоЗаработкаОрганизации.Период
		|						ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ПериодСпособаОсновныхНачислений,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(УчетОсновногоЗаработкаРаботников.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботников.Период
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетОсновногоЗаработкаПодразделения.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|					ТОГДА УчетОсновногоЗаработкаПодразделения.Период
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|							ТОГДА УчетОсновногоЗаработкаОрганизации.Период
		|						ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ПериодСпособаБЛЗаСчетРаботодателя,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(УчетОсновногоЗаработкаРаботников.СпособОтраженияВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботников.СпособОтраженияВБухучете
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетОсновногоЗаработкаПодразделения.СпособОтраженияВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|					ТОГДА УчетОсновногоЗаработкаПодразделения.СпособОтраженияВБухучете
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|							ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете
		|						ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ОтражениеНачисленийПоУмолчанию)
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СпособОтраженияОсновныхНачислений,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(УчетОсновногоЗаработкаРаботников.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботников.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетОсновногоЗаработкаПодразделения.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|					ТОГДА УчетОсновногоЗаработкаПодразделения.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ЕСТЬNULL(УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|							ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя
		|						ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоБазовымНачислениям)
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СпособОтраженияБЛЗаСчетРаботодателя
		|ИЗ
		|	Справочник.СотрудникиОрганизаций КАК Сотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете.СрезПоследних(
		|				&Период,
		|				Сотрудник = &Ссылка
		|					И Организация = &Организация) КАК УчетОсновногоЗаработкаРаботников
		|		ПО Сотрудники.Ссылка = УчетОсновногоЗаработкаРаботников.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СрезПоследних(
		|				&Период,
		|				ПодразделениеОрганизации = &ТекущееПодразделениеОрганизации
		|					И Организация = &Организация) КАК УчетОсновногоЗаработкаПодразделения
		|		ПО Сотрудники.ТекущееПодразделениеОрганизации = УчетОсновногоЗаработкаПодразделения.ПодразделениеОрганизации
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаОрганизации.СрезПоследних(&Период, Организация = &Организация) КАК УчетОсновногоЗаработкаОрганизации
		|		ПО (ИСТИНА)
		|ГДЕ
		|	Сотрудники.Ссылка = &Ссылка
		|";
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 1;
		НомераРезультатов.Вставить("ОтражениеОсновногоЗаработка", ОчереднойНомерЗапроса);
	
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаОтражениеВРеглУчетеОсновногоЗаработка

Функция ТекстЗапросаОтражениеОтдельныхНачислений(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["ЗарплатаОрганизации"] Тогда
		
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	РеглУчетПлановыхНачисленийРаботниковОрганизацийСрезПоследних.Период,
		|	РеглУчетПлановыхНачисленийРаботниковОрганизацийСрезПоследних.Регистратор,
		|	РеглУчетПлановыхНачисленийРаботниковОрганизацийСрезПоследних.ВидРасчета,
		|	РеглУчетПлановыхНачисленийРаботниковОрганизацийСрезПоследних.ДокументОснование,
		|	РеглУчетПлановыхНачисленийРаботниковОрганизацийСрезПоследних.СпособОтраженияВБухучете
		|ИЗ
		|	РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций.СрезПоследних(
		|			&Период,
		|			Сотрудник = &Ссылка
		|				И Организация = &Организация) КАК РеглУчетПлановыхНачисленийРаботниковОрганизацийСрезПоследних
		|";
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 1;
		НомераРезультатов.Вставить("ОтражениеОтдельныхНачислений", ОчереднойНомерЗапроса);
	
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаОтражениеОтдельныхНачислений

Функция ТекстЗапросаСведенияОКандидатах(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр)
	
	ТекстЗапроса = "";
	
	Если ДоступностьПросмотр["Кандидаты"] Тогда
		
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЗаявкиКандидатов.Ссылка,
		|	МИНИМУМ(ВЫБОР
		|			КОГДА Должности.Ссылка В (&ТекущаяДолжностьОрганизации, &ТекущаяДолжностьОрганизации)
		|					И ЗаявкиКандидатов.Подразделение В (&ТекущееПодразделениеОрганизации, &ТекущееПодразделениеКомпании)
		|					И ЗаявкиКандидатов.Организация В (&Организация, &ТекущееОбособленноеПодразделение)
		|				ТОГДА 1
		|			КОГДА (Должности.Ссылка В (&ТекущаяДолжностьОрганизации, &ТекущаяДолжностьОрганизации)
		|					ИЛИ ЗаявкиКандидатов.Подразделение В (&ТекущееПодразделениеОрганизации, &ТекущееПодразделениеКомпании))
		|					И ЗаявкиКандидатов.Организация В (&Организация, &ТекущееОбособленноеПодразделение)
		|				ТОГДА 2
		|			КОГДА Должности.Ссылка В (&ТекущаяДолжностьОрганизации, &ТекущаяДолжностьОрганизации)
		|					ИЛИ ЗаявкиКандидатов.Подразделение В (&ТекущееПодразделениеОрганизации, &ТекущееПодразделениеКомпании)
		|					ИЛИ ЗаявкиКандидатов.Организация В (&Организация, &ТекущееОбособленноеПодразделение)
		|				ТОГДА 3
		|			ИНАЧЕ 4
		|		КОНЕЦ) КАК Приоритет
		|ПОМЕСТИТЬ Кандидаты
		|ИЗ
		|	Справочник.ЗаявкиКандидатов КАК ЗаявкиКандидатов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДолжностиОрганизаций КАК Должности
		|		ПО ЗаявкиКандидатов.Должность = Должности.Должность
		|ГДЕ
		|	ЗаявкиКандидатов.ФизЛицо = &Физлицо
		|	И ЗаявкиКандидатов.ФизЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаявкиКандидатов.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Кандидаты.Ссылка,
		|	КОЛИЧЕСТВО(ФайлыРезюме.Файл) КАК КоличествоФайлов
		|ПОМЕСТИТЬ РезюмеКандидатов
		|ИЗ
		|	Кандидаты КАК Кандидаты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЗаявкиКандидатов.ФайлыРезюме КАК ФайлыРезюме
		|		ПО Кандидаты.Ссылка = ФайлыРезюме.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	Кандидаты.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Кандидаты.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Кандидаты.Ссылка КАК КандидатСсылка,
		|	ЗаявкиКандидатов.ДатаОткрытия КАК ДатаПоступленияКандидата,
		|	ЗаявкиКандидатов.ИсточникИнформации КАК ИсточникКандидата,
		|	ЗаявкиКандидатов.Вакансия КАК ВакансияКандидата,
		|	ЗаявкиКандидатов.Подразделение КАК ПодразделениеКандидата,
		|	ЗаявкиКандидатов.Должность КАК ДолжностьКандидата,
		|	ЗаявкиКандидатов.Организация КАК ОрганизацияКандидата,
		|	ЗаявкиКандидатов.Ответственный КАК ОтветственныйКандидата,
		|	ЗаявкиКандидатов.Комментарий КАК КомментарийКандидата,
		|	Кандидаты.Приоритет КАК ПриоритетКандидата,
		|	ЕСТЬNULL(РезюмеКандидатов.КоличествоФайлов, 0) КАК КоличествоФайловРезюме
		|ИЗ
		|	Кандидаты КАК Кандидаты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗаявкиКандидатов КАК ЗаявкиКандидатов
		|		ПО (ЗаявкиКандидатов.Ссылка = Кандидаты.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РезюмеКандидатов КАК РезюмеКандидатов
		|		ПО (РезюмеКандидатов.Ссылка = Кандидаты.Ссылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПриоритетКандидата
		|";
		
		ОчереднойНомерЗапроса = ОчереднойНомерЗапроса + 3;
		НомераРезультатов.Вставить("Кандидаты", ОчереднойНомерЗапроса);
	
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаСведенияОКандидатах

Функция ТекстЗапросаИзмененияМестаРаботыКомпании(ЗапрашиватьОклад)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Работники.Период КАК Период,
	|	Работники.Подразделение КАК Подразделение,
	|	Работники.Должность КАК Должность,
	|	Работники.ГрафикРаботы КАК ГрафикРаботы,
	|	Работники.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ИзмененияПозиции
	|ИЗ
	|	РегистрСведений.Работники КАК Работники
	|ГДЕ
	|	Работники.ФизЛицо = &Физлицо
	|;
	|";
	
	Если ЗапрашиватьОклад Тогда
		ТекстЗапроса = ТекстЗапроса + "	
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПлановыеНачисления.Период,
		|	ВЫБОР
		|		КОГДА ПоказателиВидовРасчета.Показатель.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
		|			ТОГДА ВЫБОР
		|					КОГДА ПоказателиВидовРасчета.НомерСтроки = 1
		|						ТОГДА ПлановыеНачисления.ТарифныйРазряд1
		|					КОГДА ПоказателиВидовРасчета.НомерСтроки = 2
		|						ТОГДА ПлановыеНачисления.ТарифныйРазряд2
		|					КОГДА ПоказателиВидовРасчета.НомерСтроки = 3
		|						ТОГДА ПлановыеНачисления.ТарифныйРазряд3
		|					КОГДА ПоказателиВидовРасчета.НомерСтроки = 4
		|						ТОГДА ПлановыеНачисления.ТарифныйРазряд4
		|					КОГДА ПоказателиВидовРасчета.НомерСтроки = 5
		|						ТОГДА ПлановыеНачисления.ТарифныйРазряд5
		|					КОГДА ПоказателиВидовРасчета.НомерСтроки = 6
		|						ТОГДА ПлановыеНачисления.ТарифныйРазряд6
		|					ИНАЧЕ NULL
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ПоказателиВидовРасчета.НомерСтроки = 1
		|					ТОГДА ПлановыеНачисления.Показатель1
		|				КОГДА ПоказателиВидовРасчета.НомерСтроки = 2
		|					ТОГДА ПлановыеНачисления.Показатель2
		|				КОГДА ПоказателиВидовРасчета.НомерСтроки = 3
		|					ТОГДА ПлановыеНачисления.Показатель3
		|				КОГДА ПоказателиВидовРасчета.НомерСтроки = 4
		|					ТОГДА ПлановыеНачисления.Показатель4
		|				КОГДА ПоказателиВидовРасчета.НомерСтроки = 5
		|					ТОГДА ПлановыеНачисления.Показатель5
		|				КОГДА ПоказателиВидовРасчета.НомерСтроки = 6
		|					ТОГДА ПлановыеНачисления.Показатель6
		|				ИНАЧЕ NULL
		|			КОНЕЦ
		|	КОНЕЦ КАК Оклад,
		|	ПлановыеНачисления.Регистратор,
		|	ПоказателиВидовРасчета.Показатель.ТочностьПредставления КАК ТочностьПредставления
		|ПОМЕСТИТЬ ИзмененияОклада
		|ИЗ
		|	РегистрСведений.ПлановыеНачисленияРаботников КАК ПлановыеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК ПоказателиВидовРасчета
		|		ПО ПлановыеНачисления.ВидРасчета = ПоказателиВидовРасчета.Ссылка
		|			И (ПоказателиВидовРасчета.Показатель.ТарифнаяСтавка
		|				ИЛИ ПоказателиВидовРасчета.Показатель В (ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная), ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная), ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)))
		|			И (ПоказателиВидовРасчета.ЗапрашиватьПриКадровыхПеремещениях)
		|			И (ПоказателиВидовРасчета.Ссылка.ЗачетОтработанногоВремени)
		|ГДЕ
		|	ПлановыеНачисления.ФизЛицо = &Физлицо
		|	И ПлановыеНачисления.ВидРасчетаИзмерение = ЗНАЧЕНИЕ(ПланВидовРасчета.УправленческиеНачисления.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПлановыеНачисления.ПериодЗавершения,
		|	ВЫБОР
		|		КОГДА ПоказателиВидовРасчета.Показатель.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
		|			ТОГДА ВЫБОР
		|					КОГДА ПоказателиВидовРасчета.НомерСтроки = 1
		|						ТОГДА ПлановыеНачисления.ТарифныйРазряд1Завершения
		|					КОГДА ПоказателиВидовРасчета.НомерСтроки = 2
		|						ТОГДА ПлановыеНачисления.ТарифныйРазряд2Завершения
		|					КОГДА ПоказателиВидовРасчета.НомерСтроки = 3
		|						ТОГДА ПлановыеНачисления.ТарифныйРазряд3Завершения
		|					КОГДА ПоказателиВидовРасчета.НомерСтроки = 4
		|						ТОГДА ПлановыеНачисления.ТарифныйРазряд4Завершения
		|					КОГДА ПоказателиВидовРасчета.НомерСтроки = 5
		|						ТОГДА ПлановыеНачисления.ТарифныйРазряд5Завершения
		|					КОГДА ПоказателиВидовРасчета.НомерСтроки = 6
		|						ТОГДА ПлановыеНачисления.ТарифныйРазряд6Завершения
		|					ИНАЧЕ NULL
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ПоказателиВидовРасчета.НомерСтроки = 1
		|					ТОГДА ПлановыеНачисления.Показатель1Завершения
		|				КОГДА ПоказателиВидовРасчета.НомерСтроки = 2
		|					ТОГДА ПлановыеНачисления.Показатель2Завершения
		|				КОГДА ПоказателиВидовРасчета.НомерСтроки = 3
		|					ТОГДА ПлановыеНачисления.Показатель3Завершения
		|				КОГДА ПоказателиВидовРасчета.НомерСтроки = 4
		|					ТОГДА ПлановыеНачисления.Показатель4Завершения
		|				КОГДА ПоказателиВидовРасчета.НомерСтроки = 5
		|					ТОГДА ПлановыеНачисления.Показатель5Завершения
		|				КОГДА ПоказателиВидовРасчета.НомерСтроки = 6
		|					ТОГДА ПлановыеНачисления.Показатель6Завершения
		|				ИНАЧЕ NULL
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ПлановыеНачисления.Регистратор,
		|	ПоказателиВидовРасчета.Показатель.ТочностьПредставления
		|ИЗ
		|	РегистрСведений.ПлановыеНачисленияРаботников КАК ПлановыеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК ПоказателиВидовРасчета
		|		ПО ПлановыеНачисления.ВидРасчета = ПоказателиВидовРасчета.Ссылка
		|			И (ПоказателиВидовРасчета.Показатель.ТарифнаяСтавка
		|				ИЛИ ПоказателиВидовРасчета.Показатель В (ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная), ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная), ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)))
		|			И (ПоказателиВидовРасчета.ЗапрашиватьПриКадровыхПеремещениях)
		|			И (ПоказателиВидовРасчета.Ссылка.ЗачетОтработанногоВремени)
		|ГДЕ
		|	ПлановыеНачисления.ФизЛицо = &Физлицо
		|	И ПлановыеНачисления.ВидРасчетаИзмерение = ЗНАЧЕНИЕ(ПланВидовРасчета.УправленческиеНачисления.ПустаяСсылка)
		|	И ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|;
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "	
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	NULL КАК Период,
		|	NULL КАК Оклад,
		|	NULL КАК Регистратор,
		|	0 КАК ТочностьПредставления
		|ПОМЕСТИТЬ ИзмененияОклада
		|ГДЕ
		|	ЛОЖЬ
		|;
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ИзмененияПозиции.Период, ИзмененияОклада.Период) КАК Период,
	|	ИзмененияПозиции.Подразделение,
	|	ИзмененияПозиции.Должность,
	|	ИзмененияПозиции.ГрафикРаботы,
	|";
	Если ЗапрашиватьОклад Тогда
		ТекстЗапроса = ТекстЗапроса + "	
		|	ИзмененияОклада.Оклад,
		|";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "	
	|	ЕСТЬNULL(ИзмененияПозиции.Регистратор, ИзмененияОклада.Регистратор) КАК Основание,
	|	ИзмененияОклада.ТочностьПредставления КАК ТочностьПредставления
	|ИЗ
	| 	ИзмененияПозиции КАК ИзмененияПозиции
	|	ПОЛНОЕ СОЕДИНЕНИЕ ИзмененияОклада КАК ИзмененияОклада
	|	ПО (ИзмененияОклада.Период = ИзмененияПозиции.Период)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаИзмененияМестаРаботыКомпании

Функция ТекстЗапросаИзмененияМестаРаботыОрганизации(ЗапрашиватьОклад)
	
	ТекстЗапроса =  
	"ВЫБРАТЬ
	|	Работники.Период КАК Период,
	|	Работники.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	Работники.ПодразделениеОрганизации КАК Подразделение,
	|	Работники.Должность КАК Должность,
	|	Работники.ГрафикРаботы КАК ГрафикРаботы,
	|	Работники.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ИзмененияПозиции
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК Работники
	|ГДЕ
	|	Работники.Сотрудник = &Сотрудник
	|	И Работники.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Работники.ПериодЗавершения,
	|	Работники.ОбособленноеПодразделениеЗавершения,
	|	Работники.ПодразделениеОрганизацииЗавершения,
	|	Работники.ДолжностьЗавершения,
	|	Работники.ГрафикРаботыЗавершения,
	|	Работники.Регистратор
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК Работники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ОсновноеНазначение
	|		ПО (ОсновноеНазначение.Период = Работники.ПериодЗавершения)
	|			И (ОсновноеНазначение.Сотрудник = Работники.Сотрудник)
	|			И (ОсновноеНазначение.Организация = Работники.Организация)
	|ГДЕ
	|	Работники.Сотрудник = &Сотрудник
	|	И Работники.Организация = &Организация
	|	И Работники.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|	И ОсновноеНазначение.Период ЕСТЬ NULL 
	|;
	|";
	
	Если ЗапрашиватьОклад Тогда
		ТекстЗапроса = ТекстЗапроса + "	
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПлановыеНачисления.Период,
		|	ВЫБОР
		|		КОГДА ПлановыеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПроизвольнаяФормула)
		|			ТОГДА ВЫБОР
		|					КОГДА ПоказателиВидовРасчета.Показатель.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
		|						ТОГДА ВЫБОР
		|								КОГДА ПоказателиВидовРасчета.НомерСтроки = 1
		|									ТОГДА ПлановыеНачисления.ТарифныйРазряд1
		|								КОГДА ПоказателиВидовРасчета.НомерСтроки = 2
		|									ТОГДА ПлановыеНачисления.ТарифныйРазряд2
		|								КОГДА ПоказателиВидовРасчета.НомерСтроки = 3
		|									ТОГДА ПлановыеНачисления.ТарифныйРазряд3
		|								КОГДА ПоказателиВидовРасчета.НомерСтроки = 4
		|									ТОГДА ПлановыеНачисления.ТарифныйРазряд4
		|								КОГДА ПоказателиВидовРасчета.НомерСтроки = 5
		|									ТОГДА ПлановыеНачисления.ТарифныйРазряд5
		|								КОГДА ПоказателиВидовРасчета.НомерСтроки = 6
		|									ТОГДА ПлановыеНачисления.ТарифныйРазряд6
		|								ИНАЧЕ NULL
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА ПоказателиВидовРасчета.НомерСтроки = 1
		|								ТОГДА ПлановыеНачисления.Показатель1
		|							КОГДА ПоказателиВидовРасчета.НомерСтроки = 2
		|								ТОГДА ПлановыеНачисления.Показатель2
		|							КОГДА ПоказателиВидовРасчета.НомерСтроки = 3
		|								ТОГДА ПлановыеНачисления.Показатель3
		|							КОГДА ПоказателиВидовРасчета.НомерСтроки = 4
		|								ТОГДА ПлановыеНачисления.Показатель4
		|							КОГДА ПоказателиВидовРасчета.НомерСтроки = 5
		|								ТОГДА ПлановыеНачисления.Показатель5
		|							КОГДА ПоказателиВидовРасчета.НомерСтроки = 6
		|								ТОГДА ПлановыеНачисления.Показатель6
		|							ИНАЧЕ NULL
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ПлановыеНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда
		|					ТОГДА ПлановыеНачисления.ТарифныйРазряд1
		|				ИНАЧЕ ПлановыеНачисления.Показатель1
		|			КОНЕЦ
		|	КОНЕЦ КАК Оклад,
		|	ПлановыеНачисления.Регистратор,
		|	ВЫБОР
		|		КОГДА ПлановыеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПроизвольнаяФормула)
		|			ТОГДА ПоказателиВидовРасчета.Показатель.ТочностьПредставления
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ПлановыеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке)
		|					ТОГДА 3
		|				ИНАЧЕ 2
		|			КОНЕЦ
		|	КОНЕЦ КАК ТочностьПредставления
		|ПОМЕСТИТЬ ИзмененияОклада
		|ИЗ
		|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ПоказателиВидовРасчета
		|		ПО ПлановыеНачисления.ВидРасчета = ПоказателиВидовРасчета.Ссылка
		|			И (ПоказателиВидовРасчета.Показатель.ТарифнаяСтавка
		|				ИЛИ ПоказателиВидовРасчета.Показатель В (ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная), ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная), ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)))
		|			И (ПоказателиВидовРасчета.ЗапрашиватьПриКадровыхПеремещениях)
		|			И (ПоказателиВидовРасчета.Ссылка.ЗачетОтработанногоВремени)
		|ГДЕ
		|	ПлановыеНачисления.Сотрудник = &Сотрудник
		|	И ПлановыеНачисления.Организация = &Организация
		|	И ПлановыеНачисления.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПлановыеНачисления.ПериодЗавершения,
		|	ВЫБОР
		|		КОГДА ПлановыеНачисления.ВидРасчетаЗавершения.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПроизвольнаяФормула)
		|			ТОГДА ВЫБОР
		|					КОГДА ПоказателиВидовРасчета.Показатель.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
		|						ТОГДА ВЫБОР
		|								КОГДА ПоказателиВидовРасчета.НомерСтроки = 1
		|									ТОГДА ПлановыеНачисления.ТарифныйРазряд1Завершения
		|								КОГДА ПоказателиВидовРасчета.НомерСтроки = 2
		|									ТОГДА ПлановыеНачисления.ТарифныйРазряд2Завершения
		|								КОГДА ПоказателиВидовРасчета.НомерСтроки = 3
		|									ТОГДА ПлановыеНачисления.ТарифныйРазряд3Завершения
		|								КОГДА ПоказателиВидовРасчета.НомерСтроки = 4
		|									ТОГДА ПлановыеНачисления.ТарифныйРазряд4Завершения
		|								КОГДА ПоказателиВидовРасчета.НомерСтроки = 5
		|									ТОГДА ПлановыеНачисления.ТарифныйРазряд5Завершения
		|								КОГДА ПоказателиВидовРасчета.НомерСтроки = 6
		|									ТОГДА ПлановыеНачисления.ТарифныйРазряд6Завершения
		|								ИНАЧЕ NULL
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА ПоказателиВидовРасчета.НомерСтроки = 1
		|								ТОГДА ПлановыеНачисления.Показатель1Завершения
		|							КОГДА ПоказателиВидовРасчета.НомерСтроки = 2
		|								ТОГДА ПлановыеНачисления.Показатель2Завершения
		|							КОГДА ПоказателиВидовРасчета.НомерСтроки = 3
		|								ТОГДА ПлановыеНачисления.Показатель3Завершения
		|							КОГДА ПоказателиВидовРасчета.НомерСтроки = 4
		|								ТОГДА ПлановыеНачисления.Показатель4Завершения
		|							КОГДА ПоказателиВидовРасчета.НомерСтроки = 5
		|								ТОГДА ПлановыеНачисления.Показатель5Завершения
		|							КОГДА ПоказателиВидовРасчета.НомерСтроки = 6
		|								ТОГДА ПлановыеНачисления.Показатель6Завершения
		|							ИНАЧЕ NULL
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ПлановыеНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда
		|					ТОГДА ПлановыеНачисления.ТарифныйРазряд1Завершения
		|				ИНАЧЕ ПлановыеНачисления.Показатель1Завершения
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ПлановыеНачисления.Регистратор,
		|	ВЫБОР
		|		КОГДА ПлановыеНачисления.ВидРасчетаЗавершения.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПроизвольнаяФормула)
		|			ТОГДА ПоказателиВидовРасчета.Показатель.ТочностьПредставления
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ПлановыеНачисления.ВидРасчетаЗавершения.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке)
		|					ТОГДА 3
		|				ИНАЧЕ 2
		|			КОНЕЦ
		|	КОНЕЦ
		|ИЗ
		|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ПоказателиВидовРасчета
		|		ПО ПлановыеНачисления.ВидРасчетаЗавершения = ПоказателиВидовРасчета.Ссылка
		|			И (ПоказателиВидовРасчета.Показатель.ТарифнаяСтавка
		|				ИЛИ ПоказателиВидовРасчета.Показатель В (ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная), ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная), ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)))
		|			И (ПоказателиВидовРасчета.ЗапрашиватьПриКадровыхПеремещениях)
		|			И (ПоказателиВидовРасчета.Ссылка.ЗачетОтработанногоВремени)
		|ГДЕ
		|	ПлановыеНачисления.Сотрудник = &Сотрудник
		|	И ПлановыеНачисления.Организация = &Организация
		|	И ПлановыеНачисления.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО
		|	И ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|;
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "	
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	NULL КАК Период,
		|	NULL КАК Оклад,
		|	NULL КАК Регистратор,
		|	0 КАК ТочностьПредставления
		|ПОМЕСТИТЬ ИзмененияОклада
		|ГДЕ
		|	ЛОЖЬ
		|;
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ИзмененияПозиции.Период, ИзмененияОклада.Период) КАК Период,
	|	ИзмененияПозиции.ОбособленноеПодразделение,
	|	ИзмененияПозиции.Подразделение,
	|	ИзмененияПозиции.Должность,
	|	ИзмененияПозиции.ГрафикРаботы,
	|";
	Если ЗапрашиватьОклад Тогда
		ТекстЗапроса = ТекстЗапроса + "	
		|	ИзмененияОклада.Оклад,
		|";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "	
	|	ЕСТЬNULL(ИзмененияПозиции.Регистратор, ИзмененияОклада.Регистратор) КАК Основание,
	|	ИзмененияОклада.ТочностьПредставления КАК ТочностьПредставления
	|ИЗ
	| 	ИзмененияПозиции КАК ИзмененияПозиции
	|	ПОЛНОЕ СОЕДИНЕНИЕ ИзмененияОклада КАК ИзмененияОклада
	|	ПО (ИзмененияОклада.Период = ИзмененияПозиции.Период)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаИзмененияМестаРаботыОрганизации

Функция ПолныйТекстЗапросаЧтенияДанных(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) Экспорт
	
	Возврат ТекстЗапросаОкладОрганизации(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаОкладКомпании(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаДатаДействияМестоРаботыОрганизации(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаДатаДействияМестоРаботыКомпании(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаДГПХ(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаТекущееСостояниеОрганизации(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаТекущееСостояниеКомпании(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаИспытательныйСрокОрганизации(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаИспытательныйСрокКомпании(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаДругиеМестаРаботы(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаСеверныйСтаж(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаОтсутствияОрганизации(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаОтсутствияКомпании(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаДокументыГПХ(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаЗарплатаОрганизации(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаЗарплатаКомпании(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаЛьготы(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаРазмерЛимита(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаПлановыеНачисленияОрганизаций(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаПлановыеНачисленияКомпании(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаЕжемесячныеПоказателиОрганизации(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаЕжемесячныеПоказателиКомпании(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаИмущественныеВычеты(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаМероприятияОбученияРазвития(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаОценкиКомпетенций(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаДопускиМедосмотрыИнструктажи(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаРаспределениеРасходов(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаСуммыРасходов(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаОтражениеВРеглУчетеОсновногоЗаработка(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаОтражениеОтдельныхНачислений(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаСведенияОКандидатах(ОчереднойНомерЗапроса, НомераРезультатов, ДоступностьПросмотр) + ";"
			+ ТекстЗапросаИзмененияМестаРаботыКомпании(Ложь) + ";"
			+ ТекстЗапросаИзмененияМестаРаботыОрганизации(Ложь);
			
КонецФункции // ПолныйТекстЗапросаЧтенияДанных

// Функция определяет наличие в информационной базе сотрудников физического лица
//
Функция СуществуютСотрудникиФизлица(Физлицо, ПараметрыОтбора = Неопределено) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|ГДЕ
	|	СотрудникиОрганизаций.Физлицо = &Физлицо";
	
	Если ПараметрыОтбора <> Неопределено Тогда
		Для Каждого КлючИЗначение Из ПараметрыОтбора Цикл
			ТекстЗапроса = ТекстЗапроса + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(" И %1 = &%1", КлючИЗначение.Ключ);
		КонецЦикла;
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Физлицо", Физлицо);
	
	Если ПараметрыОтбора <> Неопределено Тогда
		Для Каждого КлючИЗначение Из ПараметрыОтбора Цикл
			Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
		КонецЦикла;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат НЕ Запрос.Выполнить().Пустой()
	
КонецФункции // СуществуютСотрудникиФизлица

// Функция определяет валюту тарифной ставки по основному начислению 
//  регламентированного учета
//
// Параметры
//	ОсновноеНачисление - ссылка на вид расчета Основные начисления организаций
//
Функция ВалютаТарифнойСтавкиРегламентированногоУчета(ОсновноеНачисление) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ПоказателиНачисления.Показатель.Валюта, Константы.ВалютаРегламентированногоУчета) КАК Валюта
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновноеНачисление
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ПоказателиНачисления
	|		ПО (ОсновноеНачисление.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПроизвольнаяФормула))
	|			И (ПоказателиНачисления.Ссылка = ОсновноеНачисление.Ссылка)
	|			И (ПоказателиНачисления.Показатель.ТарифнаяСтавка
	|				ИЛИ ПоказателиНачисления.Показатель В (ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная), ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная), ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)))
	|			И (ПоказателиНачисления.ЗапрашиватьПриКадровыхПеремещениях)
	|			И (ПоказателиНачисления.Ссылка.ЗачетОтработанногоВремени)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ОсновноеНачисление.Ссылка = &ОсновноеНачисление");
	
	Запрос.УстановитьПараметр("ОсновноеНачисление", ОсновноеНачисление);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Валюта;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// РАБОТА С ОБЛАСТЯМИ ДАННЫХ ФОРМЫ

Функция СформироватьВыполнитьЗапрос(ЧастиЗапроса, ПривилегированныйРежимЧтения, НомераРезультатов, ДоступностьПросмотр, ПараметрыЗапроса) Экспорт
	
	Если ЧастиЗапроса.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ОчереднойНомерЗапроса = -1;
	НомераРезультатов.Очистить();
	ТекстЗапроса = "";
	Для Каждого ЧастьЗапроса Из ЧастиЗапроса Цикл
		ТекстЧастиЗапроса = "";
		Выполнить("ТекстЧастиЗапроса = " + ЧастьЗапроса);
		Если ЗначениеЗаполнено(ТекстЧастиЗапроса) Тогда
			ТекстЗапроса = ТекстЗапроса + ТекстЧастиЗапроса + ";";
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда
		
		Если НомераРезультатов["СуммыРасходов"] <> Неопределено Тогда
			// для запроса сумм расходов на персонал дополнительно определяется курс валюты расходов на персонал
			// проверяем курс валюты упр учета
			КурсВалютыРасходовНаПерсонал = 0;
			Отказ = Ложь;
			УчетРасходовНаПерсоналДополнительный.ПроверитьЗаполнитьКурсВалютыРасходовНаПерсонал(КурсВалютыРасходовНаПерсонал, ДобавитьМесяц(НачалоМесяца(ПараметрыЗапроса.Период), -1), Отказ);
			ПараметрыЗапроса.Вставить("КурсВалютыРасходовНаПерсонал", КурсВалютыРасходовНаПерсонал);
		КонецЕсли;
		
		Возврат ВыполнитьЗапрос(ТекстЗапроса, ПараметрыЗапроса, ПривилегированныйРежимЧтения, Истина);
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции // СформироватьВыполнитьЗапрос

Функция ТаблицаИзмененийМестаРаботы(ВидОрганизационнойСтруктуры, ЗапрашиватьОклад, ПривилегированныйРежимЧтения, ПараметрыЗапроса) Экспорт
	
	Если ВидОрганизационнойСтруктуры = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности Тогда
		ТекстЗапроса = ТекстЗапросаИзмененияМестаРаботыКомпании(ЗапрашиватьОклад);
	ИначеЕсли ВидОрганизационнойСтруктуры = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		ТекстЗапроса = ТекстЗапросаИзмененияМестаРаботыОрганизации(ЗапрашиватьОклад);
	КонецЕсли;
	
	Возврат ВыполнитьЗапрос(ТекстЗапроса, ПараметрыЗапроса, ПривилегированныйРежимЧтения).Выгрузить();

КонецФункции // ТаблицаИзмененийМестаРаботы
	