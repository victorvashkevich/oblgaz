
// Записывает версию объекта в регистр сведений
// Параметры
// Ссылка        - СправочникСсылка / ДокументСсылка - ссылка на объект ИБ
// ЧислоВерсийОбъекта - Число - число версий объекта
// ХранилищеДанных - ХранилищеЗначения - хранилище с объектом ИБ (сериализованным в Fast InfoSet)
//
Процедура ЗаписатьВерсиюОбъекта(знач Ссылка,
								знач ЧислоВерсийОбъекта,
								знач ХранилищеДанных,
								Знач Организация) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерЗаписиВерсииОбъектов = РегистрыСведений.ВерсииОбъектов.СоздатьМенеджерЗаписи();
	// Измерения
	МенеджерЗаписиВерсииОбъектов.Объект			= Ссылка;
	МенеджерЗаписиВерсииОбъектов.НомерВерсии	= Число(ЧислоВерсийОбъекта) + 1;
	МенеджерЗаписиВерсииОбъектов.Организация	= Организация;
	// Ресурсы
	МенеджерЗаписиВерсииОбъектов.ВерсияОбъекта	= ХранилищеДанных;
	// Реквизиты
	МенеджерЗаписиВерсииОбъектов.АвторВерсии	= ПараметрыСеанса.ТекущийПользователь;
	МенеджерЗаписиВерсииОбъектов.ДатаВерсии		= ТекущаяДата();
	
	МенеджерЗаписиВерсииОбъектов.Записать();
	
КонецПроцедуры

// Возвращает количество версий объекта переданного по ссылке
// Параметры
// Объект        - СправочникСсылка/ДокументСсылка - ссылка на объект ИБ
// Возвращаемое значение
// Число         - количество версий объекта Объект в регистре сведений ВерсииОбъектов
//
Функция ПолучитьКоличествоВерсийОбъекта(Ссылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ КОЛИЧЕСТВО(НомерВерсии) КАК Количество
	              | ИЗ РегистрСведений.ВерсииОбъектов
	              | ГДЕ Объект=&Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Число(Выборка.Количество);
	
КонецФункции

// Удаляет хранимые версии объекта по ссылке Ссылка из регистра ВерсииОбъектов
//
Процедура УдалитьХранимыеВерсииПоОбъекту(Ссылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.ВерсииОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Использование = Истина;
	НаборЗаписей.Отбор.Объект.Значение = Ссылка;
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Выполняется при обновлении конфигурации.
// 1. Очищает настройки версионирования по объектам, для которых версионирование не применено
// 2. Устанавливает настройки версионирования по умолчанию
//
Процедура ОбновитьНастройкиВерсионированияОбъектов() Экспорт
	
	ВерсионируемыеОбъекты = ПолучитьВерсионируемыеОбъекты();
	
	ВыборкаЗаписей = РегистрыСведений.НастройкаВерсионированияОбъектов.Выбрать();
	
	Пока ВыборкаЗаписей.Следующий() Цикл
		Если ВерсионируемыеОбъекты.Найти(ВыборкаЗаписей.ТипОбъекта) = Неопределено Тогда
			МенеджерЗаписи = ВыборкаЗаписей.ПолучитьМенеджерЗаписи();
			МенеджерЗаписи.Удалить();
		КонецЕсли;
	КонецЦикла;
	
	// составной тип из строки и ссылки на справочник Номенклатуры.
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Строка"));
	
	ВерсионируемыеОбъектыТЗ = Новый ТаблицаЗначений;
	ВерсионируемыеОбъектыТЗ.Колонки.Добавить("ТипОбъекта", 
				Новый ОписаниеТипов(МассивТипов, , Метаданные.РегистрыСведений.НастройкаВерсионированияОбъектов.Измерения.ТипОбъекта.Тип.КвалификаторыСтроки) );
	Для Каждого ТипОбъекта Из ВерсионируемыеОбъекты Цикл
		ВерсионируемыеОбъектыТЗ.Добавить();
	КонецЦикла;
	ВерсионируемыеОбъектыТЗ.ЗагрузитьКолонку(ВерсионируемыеОбъекты, "ТипОбъекта");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
			"ВЫБРАТЬ
			|	ВерсионируемыеОбъекты.ТипОбъекта
			|ПОМЕСТИТЬ ТаблицаВерсионируемыхОбъектов
			|ИЗ
			|	&ВерсионируемыеОбъекты КАК ВерсионируемыеОбъекты
			|;
			|////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаВерсионируемыхОбъектов.ТипОбъекта
			|ИЗ
			|	ТаблицаВерсионируемыхОбъектов КАК ТаблицаВерсионируемыхОбъектов
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаВерсионированияОбъектов КАК НастройкаВерсионированияОбъектов
			|			ПО НастройкаВерсионированияОбъектов.ТипОбъекта = ТаблицаВерсионируемыхОбъектов.ТипОбъекта
			|ГДЕ
			|	НастройкаВерсионированияОбъектов.Вариант ЕСТЬ NULL ";
			
	Запрос.Параметры.Вставить("ВерсионируемыеОбъекты", ВерсионируемыеОбъектыТЗ);
	ВерсионируемыеОбъектыБезНастройки = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ТипОбъекта");
	
	НаборЗаписейНастроек = РегистрыСведений.НастройкаВерсионированияОбъектов.СоздатьНаборЗаписей();
	НаборЗаписейНастроек.Прочитать();
	Для Каждого ВерсионируемыйОбъект Из ВерсионируемыеОбъектыБезНастройки Цикл
		НоваяЗапись = НаборЗаписейНастроек.Добавить();
		НоваяЗапись.ТипОбъекта = ВерсионируемыйОбъект;
		НоваяЗапись.Вариант = ПолучитьНастройкуВерсионированияПоУмолчанию(ВерсионируемыйОбъект);
		НоваяЗапись.Использовать = ? (НоваяЗапись.Вариант = Перечисления.ВариантыВерсионированияОбъектов.НеВерсионировать, Ложь, Истина);
	КонецЦикла;
	
	НаборЗаписейНастроек.Записать(Истина);
	
КонецПроцедуры

// Получает объекты информационной базы, для которых применена подсистема версионирования
// Возвращаемое значение
// Массив, элемент массива - строка, идентифицирующая объект метаданных в формате
//                           Справочник.<Имя справочника> или Документ.<Имя документа>
//
Функция ПолучитьВерсионируемыеОбъекты()
	
	Результат = Новый Массив;
	
	Для Каждого ЭлементМетаданных Из Метаданные.Справочники Цикл
		Если Метаданные.ОбщиеКоманды.ИсторияИзменений.ТипПараметраКоманды.СодержитТип(
					Тип("СправочникСсылка."+ЭлементМетаданных.Имя)) Тогда
			Результат.Добавить(ЭлементМетаданных.ПолноеИмя());
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЭлементМетаданных Из Метаданные.Документы Цикл
		Если Метаданные.ОбщиеКоманды.ИсторияИзменений.ТипПараметраКоманды.СодержитТип(
					Тип("ДокументСсылка."+ЭлементМетаданных.Имя)) Тогда
			Результат.Добавить(ЭлементМетаданных.ПолноеИмя());
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьНастройкуВерсионированияПоУмолчанию(ПолноеИмя)
	
	РазложенныйПуть = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПолноеИмя, ".");
	
	Если	РазложенныйПуть[0] = "Документы" Тогда
		Если Метаданные.НайтиПоПолномуИмени(ПолноеИмя).Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить Тогда
			Возврат Перечисления.ВариантыВерсионированияОбъектов.ВерсионироватьПриПроведении;
		Иначе
			Возврат Перечисления.ВариантыВерсионированияОбъектов.ВерсионироватьВсегда;
		КонецЕсли
	КонецЕсли;
	
	Возврат Перечисления.ВариантыВерсионированияОбъектов.НеВерсионировать;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Блок функций для работы с настройками значений

// Записывает настройку версионирования по объекту в регистр сведений
//
Процедура ЗаписатьНастройкуВерсионированияПоОбъекту(
                                  Объект,
                                  ВариантВерсионирования) Экспорт
	
	ВариантМВ = РегистрыСведений.НастройкаВерсионированияОбъектов.СоздатьМенеджерЗаписи();
	ВариантМВ.ТипОбъекта = Объект;
	ВариантМВ.Вариант = ВариантВерсионирования;
	ВариантМВ.Записать();
	
КонецПроцедуры

// Выполняет с формой действия, необходимые для подключения подсистемы версионирования
//
Процедура ПриСозданииНаСервере(Форма) Экспорт
	
	Если ПустаяСтрока(ПользователиИнформационнойБазы.ТекущийПользователь().Имя) ИЛИ РольДоступна(Метаданные.Роли.ПолныеПрава) Тогда
		ИмяФормыМассив = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Форма.ИмяФормы, ".");
		ПолноеИмяМетаданных = ИмяФормыМассив[0] + "." + ИмяФормыМассив[1];
	Иначе
		ПолноеИмяМетаданных = Неопределено;
	КонецЕсли;
	
	Форма.УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("ТипОбъектаКонфигурации", ПолноеИмяМетаданных));
	
КонецПроцедуры
