///////////////////////////////////////////////////////////////
/// Методы для создания зарплаты к выплате

#Если Клиент Тогда
Процедура СоздатьНаОсновании(ФормаВладелец, Основание, ПредварительныйУчетУдержаний = Неопределено) Экспорт
	
	Если Основание = Неопределено тогда
		Возврат
	КонецЕсли;
	
	Если НЕ Основание.Ссылка.Проведен Тогда
			Предупреждение("Создавать документы на выплату зарплаты можно только по проведенному документу!");
		Возврат;
	КонецЕсли;
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.ЗарплатаКВыплатеОрганизаций) Тогда
		
		ЗарплатаКВыплатеОрганизацийПереопределяемый.СоздатьПоОснованию(ФормаВладелец, Основание, ПредварительныйУчетУдержаний);
		
	Иначе
		Предупреждение("Нарушение прав доступа!");
	КонецЕсли;
	
КонецПроцедуры	
#КонецЕсли

///////////////////////////////////////////////////////////////
/// Методы для представления зарплаты к выплате

Функция ХарактерВыплатыВРодительномПадеже(ХарактерВыплаты) Экспорт
	
	ХарактерВыплатыВРодительномПадежеДополнительно = ЗарплатаКВыплатеОрганизацийПереопределяемый.ХарактерВыплатыВРодительномПадежеДополнительно(ХарактерВыплаты);
	
	Если ХарактерВыплатыВРодительномПадежеДополнительно <> Неопределено Тогда
		Возврат ХарактерВыплатыВРодительномПадежеДополнительно;
	ИначеЕсли ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Зарплата Тогда
		Возврат "зарплаты";
	ИначеЕсли
		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ПлановыйАванс Тогда
		Возврат "планового аванса";
	ИначеЕсли
		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.АвансЗаПервуюПоловинуМесяца Тогда
		Возврат "аванса за первую половину месяца";
	ИначеЕсли
		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ПоБольничнымЛистам Тогда
		Возврат "пособий по больничным листам";
	//ИначеЕсли
	//	ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ПоБеременностиИРодам Тогда
	//	Возврат "отпускных по беременности и родам";
	ИначеЕсли
		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Отпускные Тогда
		Возврат "отпускных";
	ИначеЕсли
		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Командировочные Тогда
		Возврат "командировочных";
	ИначеЕсли
		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Премии Тогда
		Возврат "премий";
	ИначеЕсли
		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.РасчетПриУвольнении Тогда
		Возврат "сумм при увольнении";
	ИначеЕсли
		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ПрочиеРазовыеНачисления Тогда
		Возврат "прочих разовых начислений";
	ИначеЕсли
		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ПособияФСС Тогда
		Возврат "единовременных пособий за счет ФСС";
	ИначеЕсли
		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ВозвратНДФЛ Тогда
		Возврат "возврата НДФЛ";
	ИначеЕсли
		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Задолженность Тогда
		Возврат "задолженности";
	ИначеЕсли ХарактерВыплаты.Пустая() Тогда
		Возврат "не указанного вида выплаты";
	КонецЕсли;

КонецФункции

Функция ПолучитьПредставлениеНастройкиРасчета(Документ) Экспорт
	
	// Проконтролируем сомнительные настройки
	Если НЕ ЗначениеЗаполнено(Документ.ПроцентВыплаты) ИЛИ Документ.ПроцентВыплаты < 0 Тогда
		ТекстОшибки = "ПроцентВыплаты "+ Документ.ПроцентВыплаты +"% ?"
	Иначе
		ТекстОшибки = ""
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		
		ПредставлениеНастройки = 
			"ВНИМАНИЕ! Установлены сомнительные настройки расчета: " + 
			ТекстОшибки +
			" Проверьте настройки расчета.";
			
	Иначе
	
	// Штатная работа
	
		Если ЗначениеЗаполнено(Документ.ПроцентВыплаты) И Документ.ПроцентВыплаты<>100 Тогда
			ТекстПроцент = ""+ Документ.ПроцентВыплаты +"% "+ "от причитающихся сумм"
		Иначе
			ТекстПроцент = "всеми причитающимися суммами"
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Документ.ДнейНеВыплаты) Тогда
			ТекстЗадержка = "с компенсацией за задержку на" +" "+ Документ.ДнейНеВыплаты +" "+ ОбщегоНазначения.ФормаМножественногоЧисла("день","дня","дней", Документ.ДнейНеВыплаты)
		Иначе
			ТекстЗадержка = ""
		КонецЕсли;
		
		Если Документ.ПредварительныйУчетУдержаний Тогда
			ТекстУдержания = "с предварительным учетом удержаний"
		Иначе
			ТекстУдержания = ""
		КонецЕсли;

		Если ЗначениеЗаполнено(Документ.Округление) Тогда
			ТекстОкругление = "с округлением" +" "+ Документ.Округление;
		Иначе
			ТекстОкругление = ""
		КонецЕсли;
		
		ПредставлениеНастройки = 
			"Заполнение" +
			" "+ ТекстПроцент +
			?(ЗначениеЗаполнено(ТекстОкругление), " "+ТекстОкругление, "") +
			?(ЗначениеЗаполнено(ТекстУдержания), " "+ТекстУдержания, "") +
			?(ЗначениеЗаполнено(ТекстЗадержка), " "+ТекстЗадержка, "");
			
	КонецЕсли;

	Возврат ПредставлениеНастройки;
	
КонецФункции

///////////////////////////////////////////////////////////////
/// Методы для работы с настройками расчета

#Если Клиент Тогда
	
Функция ИмяСтраницыНастройкиРасчета(ХарактерВыплаты) Экспорт
	
	ИмяСтраницыДополнительно = ЗарплатаКВыплатеОрганизацийПереопределяемый.ИмяСтраницыНастройкиРасчетаДополнительно(ХарактерВыплаты);
	
	Если ИмяСтраницыДополнительно <> Неопределено Тогда
		ИмяСтраницы = ИмяСтраницыДополнительно;
		
	ИначеЕсли ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Зарплата Тогда
		ИмяСтраницы = "Зарплата";
		
	ИначеЕсли ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ПлановыйАванс Тогда
		ИмяСтраницы = "ПлановыйАванс";
		
	ИначеЕсли ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.АвансЗаПервуюПоловинуМесяца Тогда
		ИмяСтраницы = "АвансЗаПервуюПоловинуМесяца";
		
	//ИначеЕсли ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ПоБеременностиИРодам Тогда
	//	ИмяСтраницы = "ПрочиеВыплатыБезУдержаний";
		
	ИначеЕсли 	ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ПоБольничнымЛистам	
		ИЛИ		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ПоБеременностиИРодам
		ИЛИ		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Отпускные
		ИЛИ		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Командировочные
		ИЛИ		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Премии
		ИЛИ		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.РасчетПриУвольнении
		ИЛИ		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ПрочиеРазовыеНачисления
		ИЛИ		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ПособияФСС
		ИЛИ		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Задолженность
		ИЛИ		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ПособияНаДетей Тогда
		
		ИмяСтраницы = "ПрочиеВыплаты";
		
	ИначеЕсли ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ВозвратНДФЛ Тогда
		ИмяСтраницы = "";
		
	Иначе	
		ИмяСтраницы = Неопределено;
		
	КонецЕсли;
	
	Возврат ИмяСтраницы;
	
КонецФункции
	
Процедура СохранитьНастройки(Документ) Экспорт
	
	НастройкиРасчета = СоздатьНастройки(Документ);
	СохранитьЗначение("ЗарплатаКВыплатеОрганизаций_" + Документ.ХарактерВыплаты, НастройкиРасчета);
	
КонецПроцедуры

Процедура ЗаполнитьПоНастройкам(Документ) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ИмяСтраницыНастройкиРасчета(Документ.ХарактерВыплаты)) Тогда
		НастройкиРасчета = СоздатьНастройки();
	Иначе
		НастройкиРасчета =  ВосстановитьЗначение("ЗарплатаКВыплатеОрганизаций_" + Документ.ХарактерВыплаты);
		Если НастройкиРасчета = Неопределено Тогда
			НастройкиРасчета =  СоздатьНастройки();
		КонецЕсли;
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(Документ, НастройкиРасчета);
	
КонецПроцедуры

#КонецЕсли

Функция СоздатьНастройки(Документ = Неопределено) Экспорт
	
	НастройкиРасчета = 
		Новый Структура(
			"ПроцентВыплаты,
			 |ПредварительныйУчетУдержаний,
			 |Округление",
			 100,
			 Ложь,
			 Перечисления.СпособыОкругленияЗарплатыКВыплате.ПустаяСсылка());
			 
	Если Документ <> Неопределено Тогда
		Если ЗначениеЗаполнено(Документ.ПроцентВыплаты) Тогда
			НастройкиРасчета.ПроцентВыплаты = Документ.ПроцентВыплаты
		КонецЕсли;
		Если ЗначениеЗаполнено(Документ.ПредварительныйУчетУдержаний) Тогда
			НастройкиРасчета.ПредварительныйУчетУдержаний = Документ.ПредварительныйУчетУдержаний
		КонецЕсли;
		Если ЗначениеЗаполнено(Документ.Округление) Тогда
			НастройкиРасчета.Округление = Документ.Округление
		КонецЕсли;
	КонецЕсли;
	
	Возврат НастройкиРасчета;
	
КонецФункции	

///////////////////////////////////////////////////////////////
/// Методы для расчета зарплаты к выплате

// Функция осуществляет формирование таблицы значений с коэффициентами плановых удержаний физлиц
//
// Параметр:
//   Документ - документ "Зарплата к выплате организаций"
//
Функция ПолучитьКоэффициентыПлановыхУдержаний(ФизЛица, ПериодРегистрации, Организация) Экспорт
	
	Запрос = Новый Запрос();
		
	Запрос.УстановитьПараметр("Период",				НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("ФизЛица", 			ФизЛица);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",ОбщегоНазначения.ГоловнаяОрганизация(Организация));

	МассивСпособовРасчета = Новый Массив;
	МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистПроцентом);
	МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистПроцентомДоПредела);
	МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистПроцентомСНДФЛ);
	МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистПроцентомДоПределаСНДФЛ);
	МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.Процентом);
	МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПочтовыйСбор);
	МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.КомиссионыйСбор);
	Запрос.УстановитьПараметр("УдержанияПроцентом",	МассивСпособовРасчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.ФизЛицо КАК ФизЛицо,
	|	СУММА(ВЫБОР
	|			КОГДА ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|					И ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Показатель1Завершения
	|			ИНАЧЕ ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Показатель1
	|		КОНЕЦ) КАК Процент
	|ИЗ
	|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(
	|			&Период,
	|			Организация = &ГоловнаяОрганизация
	|				И ВидРасчета.СпособРасчета В (&УдержанияПроцентом)
	|				И Физлицо В (&ФизЛица)) КАК ПлановыеУдержанияРаботниковОрганизацийСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.ФизЛицо";
	
	Возврат(Запрос.Выполнить().Выгрузить());
	
КонецФункции // ПлановыеУдержания	

// Функция осуществляет формирование таблицы значений с коэффициентами НДФЛ физлиц
//
// Параметр:
//   Документ - документ "Зарплата к выплате организаций"
//
Функция ПолучитьКоэффициентыНДФЛ(ФизЛица, ПериодРегистрации) Экспорт
	
	Запрос = Новый Запрос();
	
	Запрос.УстановитьПараметр("Период",	НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("ФизЛица",ФизЛица);
	
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФизическиеЛица.Ссылка КАК ФизЛицо,
		|	ВЫБОР
		|		КОГДА СтатусФизЛиц.НеЯвляетсяНалоговымРезидентомРФ
		|			ТОГДА 30
		//vvv комментируем
		//|		ИНАЧЕ 13
		|		ИНАЧЕ ШкалаПодоходногоНалога.Налог
		//
		|	КОНЕЦ КАК Ставка
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&Период, Физлицо В (&ФизЛица)) КАК СтатусФизЛиц
		|		ПО ФизическиеЛица.Ссылка = СтатусФизЛиц.ФизЛицо
		//vvv
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШкалаПодоходногоНалога.СрезПоследних(&Период, ) КАК ШкалаПодоходногоНалога
		|		ПО ИСТИНА
		//
		|ГДЕ
		|	ФизическиеЛица.Ссылка В(&ФизЛица)";
		
		
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // Гражданство

// Рассчитывает "усредненную" 1/300 часть ставки рефинансирования ЦБ
//
// Параметры
//  нет
//
// Возвращаемое значение:
//   число - коэффициент, на который следует умножать сумму выплаты
//
Функция ОпределитьПроцентКомпенсации(ДатаДокумента, ДнейНеВыплаты) Экспорт

	Если ДнейНеВыплаты = 0 Тогда
	    Возврат 0
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА((РАЗНОСТЬДАТ(ПериодыИзмененияСтавки.ДатаC, ПериодыИзмененияСтавки.ДатаПо, ДЕНЬ) + 1) * ПериодыИзмененияСтавки.Размер / 300 / 100), 0) КАК ПроцентКомпенсации
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА СтавкаРефинансированияЦБ.Период >= &ПервыйДеньЗадержки
	|				ТОГДА СтавкаРефинансированияЦБ.Период
	|			ИНАЧЕ &ПервыйДеньЗадержки
	|		КОНЕЦ КАК ДатаC,
	|		ЕСТЬNULL(ВЫБОР
	|				КОГДА МИНИМУМ(СледующаяДата.Период) > &ДеньВыплаты
	|					ТОГДА &ДеньВыплаты
	|				ИНАЧЕ МИНИМУМ(ДОБАВИТЬКДАТЕ(СледующаяДата.Период, ДЕНЬ, -1))
	|			КОНЕЦ, &ДеньВыплаты) КАК ДатаПо,
	|		СтавкаРефинансированияЦБ.Размер КАК Размер
	|	ИЗ
	|		РегистрСведений.СтавкаРефинансированияЦБ КАК СтавкаРефинансированияЦБ
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкаРефинансированияЦБ КАК СледующаяДата
	|			ПО СтавкаРефинансированияЦБ.Период < СледующаяДата.Период
	|	ГДЕ
	|		СтавкаРефинансированияЦБ.Период <= &ДеньВыплаты
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СтавкаРефинансированияЦБ.Размер,
	|		СтавкаРефинансированияЦБ.Период
	|	
	|	ИМЕЮЩИЕ
	|		ЕСТЬNULL(МИНИМУМ(СледующаяДата.Период), &ДеньВыплаты) > &ПервыйДеньЗадержки) КАК ПериодыИзмененияСтавки";
	
	Запрос.УстановитьПараметр("ДеньВыплаты", ДатаДокумента);
	Запрос.УстановитьПараметр("ПервыйДеньЗадержки", ДатаДокумента - 86400 * (ДнейНеВыплаты - 1));
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить()[0].ПроцентКомпенсации

КонецФункции // РассчитатьПроцентКомпенсации()

Функция СпособОкругленияТочность(СпособОкругления) Экспорт
	
	Если СпособОкругления = Перечисления.СпособыОкругленияЗарплатыКВыплате.ПятьКоп Тогда
		Возврат 0.05;
	ИначеЕсли СпособОкругления = Перечисления.СпособыОкругленияЗарплатыКВыплате.ДесятьКоп Тогда
		Возврат 0.1;
	ИначеЕсли СпособОкругления = Перечисления.СпособыОкругленияЗарплатыКВыплате.ПятьдесятКоп Тогда
		Возврат 0.5;
	ИначеЕсли СпособОкругления = Перечисления.СпособыОкругленияЗарплатыКВыплате.Рубль Тогда
		Возврат 1;
	ИначеЕсли СпособОкругления = Перечисления.СпособыОкругленияЗарплатыКВыплате.ДваРубля Тогда
		Возврат 2;
	ИначеЕсли СпособОкругления = Перечисления.СпособыОкругленияЗарплатыКВыплате.ПятьРублей Тогда
		Возврат 5;
	ИначеЕсли СпособОкругления = Перечисления.СпособыОкругленияЗарплатыКВыплате.ДесятьРублей Тогда
		Возврат 10;
	ИначеЕсли СпособОкругления = Перечисления.СпособыОкругленияЗарплатыКВыплате.ПятьдесятРублей Тогда
		Возврат 50;
	ИначеЕсли СпособОкругления = Перечисления.СпособыОкругленияЗарплатыКВыплате.СтоРублей Тогда
		Возврат 100;
	ИначеЕсли СпособОкругления = Перечисления.СпособыОкругленияЗарплатыКВыплате.ПятьсотРублей Тогда
		Возврат 500;
	ИначеЕсли СпособОкругления = Перечисления.СпособыОкругленияЗарплатыКВыплате.Тысяча Тогда
		Возврат 1000;
	Иначе
		Возврат 0.01;
	КонецЕсли;
	
КонецФункции

///////////////////////////////////////////////////////////////
/// Методы для проведения зарплаты к выплате

Процедура ПровестиПоХарактеруВыплаты(Документ) Экспорт
	
	ХарактерВыплаты = Документ.ХарактерВыплаты;
	
	Если ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ПлановыйАванс Тогда
		
		ЗарплатаКВыплатеОрганизацийПереопределяемый.ПровестиПлановыйАванс(Документ);
		
	ИначеЕсли ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.АвансЗаПервуюПоловинуМесяца Тогда
		
		ЗарплатаКВыплатеОрганизацийПереопределяемый.ПровестиАвансЗаПервуюПоловинуМесяца(Документ);
		
	Иначе
		
		ЗарплатаКВыплатеОрганизацийПереопределяемый.ПровестиРасчет(Документ, ХарактерВыплатыОтложенного(ХарактерВыплаты));
		
	КонецЕсли;

КонецПроцедуры

Функция ХарактерВыплатыОтложенного(ХарактерВыплаты)
	
	ХарактерВыплатыДополнительно = ЗарплатаКВыплатеОрганизацийПереопределяемый.ХарактерВыплатыОтложенногоДополнительно(ХарактерВыплаты);
	
	Если ХарактерВыплатыДополнительно <> Неопределено Тогда
		ХарактерВыплатыОтложенного = ХарактерВыплатыДополнительно;
	ИначеЕсли ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.РасчетПриУвольнении 
		ИЛИ ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ВозвратНДФЛ Тогда
		ХарактерВыплатыОтложенного = ХарактерВыплаты;
	Иначе
		ХарактерВыплатыОтложенного = Перечисления.ХарактерВыплатыЗарплаты.Зарплата;
	КонецЕсли;

	Возврат ХарактерВыплатыОтложенного 
	
КонецФункции	
	
//////////////////////////////////////////////////////////////////
/// Методы для заполнения зарплаты к выплате по характеру выплаты

// ПолучитьЗарплатуПоХарактеруВыплаты
// по переданному объекту и списку физлиц возвращает таблицу значений для заполнения документа ЗарплатаКВыплатеОрганизаций
// Параметры:
//	Документ - документ-объект ЗарплатаКВыплатеОрганизаций
//	ФизЛица - список физлиц по которым необходимо получить данные о зарплате
// Возвращаемое значение:
//	Таблица значений
Функция ПолучитьЗарплатуПоХарактеруВыплаты(Документ, ФизЛица = Неопределено) Экспорт
	
	ХарактерВыплаты 	= Документ.ХарактерВыплаты;
	Организация			= Документ.Организация;
	Подразделение		= Документ.ПодразделениеОрганизации;
	ПериодРегистрации	= НачалоМесяца(Документ.ПериодРегистрации);

	ДатаКадровая 	= КонецМесяца(ПериодРегистрации);
	
	// зарплата за первую половину месяца ("аванс")
	Если ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.АвансЗаПервуюПоловинуМесяца Тогда
		
		Если ЗначениеЗаполнено(Подразделение) Тогда
			ДатаКадровая = КонецДня(ПериодРегистрации + (Цел(День(КонецМесяца(ПериодРегистрации)) / 2) - 1) * 86400);
			ФизЛица = ПолучитьФизлицаРаботниковПодразделенияНаДатуБезУволенных(Организация, Подразделение, ДатаКадровая, ФизЛица)
		КонецЕсли;
		
		ЗарплатаПоХарактеруВыплаты = 
			ЗарплатаКВыплатеОрганизацийПереопределяемый.ПолучитьОстаткиЗарплатыЗаПервуюПоловинуМесяца(Документ, ФизЛица);
		
	ИначеЕсли ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ПлановыйАванс Тогда
		
		УчитыватьНевыходыДляПлановогоАванса	= ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Документ.Организация, "УчитыватьНевыходыДляПлановогоАванса");
		
		Если УчитыватьНевыходыДляПлановогоАванса Тогда
			
			МассивФизлиц = ЗарплатаКВыплатеОрганизацийПереопределяемый.ПолучитьФизлицаРаботниковДляПлановогоАванса(Документ, ФизЛица);
			
			ЗарплатаПоХарактеруВыплаты = ЗарплатаКВыплатеОрганизацийПереопределяемый.ПолучитьОстаткиПлановогоАвансаСотрудников(Документ, МассивФизлиц);
			
		Иначе
			
			Если ЗначениеЗаполнено(Подразделение) Тогда
				ФизЛица = ПолучитьФизлицаРаботниковПодразделенияНаДатуБезУволенных(Организация, Подразделение, ДатаКадровая, ФизЛица)
			КонецЕсли;
			
			ЗарплатаПоХарактеруВыплаты = ЗарплатаКВыплатеОрганизацийПереопределяемый.ПолучитьОстаткиПлановогоАванса(Документ, ФизЛица);	
			
		КонецЕсли;
		
	// зарплата за месяц	
	ИначеЕсли ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Зарплата Тогда
		
		Если ЗначениеЗаполнено(Подразделение) Тогда
			ФизЛица = ПолучитьФизлицаСотрудниковПодразделенияНаДату(Организация, Подразделение, ДатаКадровая, ФизЛица)
		КонецЕсли;
		
		ЗарплатаПоХарактеруВыплаты = 
			ЗарплатаКВыплатеОрганизацийПереопределяемый.ПолучитьОстаткиЗарплатыЗаМесяцОкончательныйРасчет(Документ, ФизЛица);
		
	ИначеЕсли ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Задолженность Тогда 
		
		Если ЗначениеЗаполнено(Подразделение) Тогда
			ФизЛица = ПолучитьФизлицаСотрудниковПодразделенияНаДату(Организация, Подразделение, ДатаКадровая, ФизЛица)
		КонецЕсли;
		
		ЗарплатаПоХарактеруВыплаты = 
			ЗарплатаКВыплатеОрганизацийПереопределяемый.ПолучитьОстаткиЗарплатыЗаМесяцЗадолженность(Документ, ФизЛица);
		
	//	выплаты по документу-основанию
	ИначеЕсли ЗарплатаКВыплатеОрганизацийПереопределяемый.ТипОснованияПоХарактеруВыплаты(ХарактерВыплаты) <> Неопределено Тогда
		
		ЗарплатаПоХарактеруВыплаты = ЗарплатаКВыплатеОрганизацийПереопределяемый.ПолучитьОстаткиЗарплатыЗаМесяцПоОснованию(Документ.ДокументОснование, ФизЛица)
		
	// выплаты по характеру выплаты	
	// Перечисления.ХарактерВыплатыЗарплаты.ПоБольничнымЛистам
	// Перечисления.ХарактерВыплатыЗарплаты.ПоБеременностиИРодам
	// Перечисления.ХарактерВыплатыЗарплаты.Отпускные
	// Перечисления.ХарактерВыплатыЗарплаты.Командировочные
	// Перечисления.ХарактерВыплатыЗарплаты.РасчетПриУвольнении
	Иначе 
		
		Если ЗначениеЗаполнено(Подразделение) Тогда
			ФизЛица = ПолучитьФизлицаРаботниковПодразделенияНаДату(Организация, Подразделение, ДатаКадровая, ФизЛица)
		КонецЕсли;
		
		ЗарплатаПоХарактеруВыплаты = 
			ЗарплатаКВыплатеОрганизацийПереопределяемый.ПолучитьОстаткиЗарплатыЗаМесяцМежрасчет(Документ, ФизЛица);

	КонецЕсли;

	Возврат ЗарплатаПоХарактеруВыплаты;
	
КонецФункции

Функция ПолучитьФизлицаСотрудниковПодразделенияНаДату(Организация, ПодразделениеОрганизации = Неопределено, Дата, ФизЛица = Неопределено)
		
	Запрос = Новый Запрос();
	
	Запрос.УстановитьПараметр("Организация",		Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",		ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ПодразделениеОрганизации",	ПодразделениеОрганизации);
	Запрос.УстановитьПараметр("Дата",						Дата);
	Запрос.УстановитьПараметр("ПоВсемФизлицам", Физлица = Неопределено);	
	Запрос.УстановитьПараметр("Физлица", Физлица);	
	
	Запрос.Текст = 
		ПолучитьТекстЗапросаФизлицаРаботниковПодразделенияНаДату()
		+ Символы.ПС
		+ "ОБЪЕДИНИТЬ "
		+ Символы.ПС +
		"ВЫБРАТЬ
		|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Физлицо
		|ИЗ
		|	Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
		|ГДЕ
		|	ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала < &Дата
		|	И (НЕ ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Физлицо В
		|				(ВЫБРАТЬ
		|					ПодразделенияФизлиц.Физлицо КАК Физлицо
		|				ИЗ
		|					ВТПодразделенияФизлиц КАК ПодразделенияФизлиц))
		|	И ДоговорНаВыполнениеРаботСФизЛицом.Проведен
		|	И ДоговорНаВыполнениеРаботСФизЛицом.Организация = &Организация
		|	И (&ПоВсемФизлицам
		|			ИЛИ ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Физлицо В (&Физлица))
		|	И ДоговорНаВыполнениеРаботСФизЛицом.ПодразделениеОрганизации В ИЕРАРХИИ(&ПодразделениеОрганизации)";
		
	Возврат(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Физлицо"));	
	
КонецФункции

Функция ПолучитьФизлицаРаботниковПодразделенияНаДату(Организация, ПодразделениеОрганизации = Неопределено, Дата, ФизЛица = Неопределено)
		
		Запрос = Новый Запрос();
		
		Запрос.УстановитьПараметр("Дата",						Дата);
		Запрос.УстановитьПараметр("ГоловнаяОрганизация",		ОбщегоНазначения.ГоловнаяОрганизация(Организация));
		Запрос.УстановитьПараметр("ПодразделениеОрганизации",	ПодразделениеОрганизации);
		Запрос.УстановитьПараметр("ПоВсемФизлицам", Физлица = Неопределено);	
		Запрос.УстановитьПараметр("Физлица", Физлица);	
		
		Запрос.Текст = ПолучитьТекстЗапросаФизлицаРаботниковПодразделенияНаДату();
		
	Возврат(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Физлицо"));	
	
КонецФункции

Функция ПолучитьФизлицаРаботниковПодразделенияНаДатуБезУволенных(Организация, ПодразделениеОрганизации = Неопределено, Дата, ФизЛица = Неопределено)
		
		Запрос = Новый Запрос();
		
		Запрос.УстановитьПараметр("Дата",						Дата);
		Запрос.УстановитьПараметр("ГоловнаяОрганизация",		ОбщегоНазначения.ГоловнаяОрганизация(Организация));
		Запрос.УстановитьПараметр("ПодразделениеОрганизации",	ПодразделениеОрганизации);
		Запрос.УстановитьПараметр("ПоВсемФизлицам", Физлица = Неопределено);	
		Запрос.УстановитьПараметр("Физлица", Физлица);	
		
		Запрос.Текст = Запрос.Текст + 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо КАК Физлицо
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|			&Дата,
		|			Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
		|				И Организация = &ГоловнаяОрганизация
		|				И (&ПоВсемФизлицам
		|					ИЛИ Сотрудник.Физлицо В (&Физлица))) КАК РаботникиОрганизацийСрезПоследних
		|ГДЕ
		|	ВЫБОР
		|			КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Дата
		|					И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостоянияЗавершения
		|			ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния
		|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|	И ВЫБОР
		|			КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Дата
		|					И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизацииЗавершения
		|			ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
		|		КОНЕЦ В ИЕРАРХИИ (&ПодразделениеОрганизации)";
		
	Возврат(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Физлицо"));	
	
КонецФункции

Функция ПолучитьТекстЗапросаФизлицаРаботниковПодразделенияНаДату()
		
Возврат
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо КАК Физлицо,
		|	ВЫБОР
		|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Дата
		|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения
		|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.Период
		|	КОНЕЦ КАК Период,
		|	ВЫБОР
		|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Дата
		|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизацииЗавершения
		|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
		|	КОНЕЦ КАК Подразделение
		|ПОМЕСТИТЬ ВТПодразделенияФизлиц
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|			&Дата,
		|			Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
		|				И Организация = &ГоловнаяОрганизация
		|				И (&ПоВсемФизлицам
		|					ИЛИ Сотрудник.Физлицо В (&Физлица))) КАК РаботникиОрганизацийСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Физлицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПодразделенияФизлиц.Физлицо
		|ИЗ
		|	ВТПодразделенияФизлиц КАК ПодразделенияФизлиц
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ПодразделенияФизлиц.Физлицо КАК Физлицо,
		|			МАКСИМУМ(ПодразделенияФизлиц.Период) КАК Период
		|		ИЗ
		|			ВТПодразделенияФизлиц КАК ПодразделенияФизлиц
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПодразделенияФизлиц.Физлицо) КАК ДействующиеПериодыФизЛиц
		|		ПО (ДействующиеПериодыФизЛиц.Физлицо = ПодразделенияФизлиц.Физлицо)
		|			И (ДействующиеПериодыФизЛиц.Период = ПодразделенияФизлиц.Период)
		|ГДЕ
		|	ПодразделенияФизлиц.Подразделение В ИЕРАРХИИ(&ПодразделениеОрганизации)";
		
КонецФункции

////////////////////////////////////////////////////////////////////////
/// Методы заполнения документа ЗарплатаКВыплатеОрганизаций

Функция ПодготовитьТаблицуЗарплатДляДокумента(Документ, ИсходнаяТаблицаЗарплат) Экспорт
	
	ЗаполненныеСтроки = Новый Массив;
	Для Каждого СтрокаЗарплаты Из ИсходнаяТаблицаЗарплат Цикл
		Если ЗначениеЗаполнено(СтрокаЗарплаты.Физлицо) 
			И СтрокаЗарплаты.Начислено > 0
			И ЗарплатаКВыплатеОрганизацийПереопределяемый.ПроверитьСтрокуЗарплаты(Документ, СтрокаЗарплаты) Тогда
			
			ЗаполненныеСтроки.Добавить(СтрокаЗарплаты);
			
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаЗарплат = ИсходнаяТаблицаЗарплат.Скопировать(ЗаполненныеСтроки);
	
	ТаблицаЗарплат.Колонки.Добавить("Сумма");
	ТаблицаЗарплат.Колонки.Добавить("Удержано");
	ТаблицаЗарплат.Колонки.Добавить("КомпенсацияЗаЗадержкуЗарплаты");
	
	Начислено = ТаблицаЗарплат.ВыгрузитьКолонку("Начислено");
	ТаблицаЗарплат.ЗагрузитьКолонку(Начислено, "Сумма");
	ТаблицаЗарплат.ЗаполнитьЗначения(0, "Удержано, КомпенсацияЗаЗадержкуЗарплаты");
	
	ТаблицаЗарплат.Сортировать("ФизЛицо");
	ТаблицаЗарплат.Индексы.Добавить("ФизЛицо");
	
	Возврат ТаблицаЗарплат;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// МЕТОДЫ ПОЛУЧЕНИЯ СОСТОЯНИЯ ДОКУМЕНТОВ

#Если Клиент Тогда

// Визуализирует состояние документа (проведен, удален, выплачивается)
//
// Параметры:
//	СостояниеДокументов
//	ОформленияСтрок
//	ЯчейкаВыплаты
//
// Возвращаемое значение:
//	Таблица значений
//
Процедура ПоказатьСостояние(СостояниеДокументов, ОформленияСтрок, ИмяЯчейкиВыплаты = "Выплачивается") Экспорт
	
	Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		ЯчейкаВыплаты = ОформлениеСтроки.Ячейки[ИмяЯчейкиВыплаты];	
	
		СостояниеДокумента = СостояниеДокументов.Найти(ОформлениеСтроки.ДанныеСтроки.Ссылка, "Ссылка");
		
		Если СостояниеДокумента = Неопределено Тогда
			ЯчейкаВыплаты.ОтображатьКартинку = Ложь;
		ИначеЕсли СостояниеДокумента.Выплачивается Тогда
			ЯчейкаВыплаты.Картинка = БиблиотекаКартинок.Зарплата;
			ЯчейкаВыплаты.ОтображатьКартинку = Истина
		Иначе
			ЯчейкаВыплаты.ОтображатьКартинку = Ложь;
		КонецЕсли;
		
		ЗарплатаКВыплатеОрганизацийПереопределяемый.УстановитьТекстСостояния(СостояниеДокумента, ОформлениеСтроки.Ячейки)
		
	КонецЦикла;

КонецПроцедуры	

#КонецЕсли

////////////////////////////////////////////////////////////////////////
/// Методы доступа к документам ЗарплатаКВыплате

// Функция возвращает шапку документа ЗарплатаКВыплате
//
// Параметры:
//  Ссылка  - документ-ссылка ЗарплатаКВыплате
//
// Возвращаемое значение:
//	Выборка с полями:
//		Организация
//		ПериодРегистрации
//		ХарактерВыплаты
//		СтатьяФинансирования
//		КОСГУ
//
Функция ПолучитьШапкуДокумента(Ссылка) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗарплатаКВыплатеОрганизаций.Организация,
	|	НАЧАЛОПЕРИОДА(ЗарплатаКВыплатеОрганизаций.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
	|	ЗарплатаКВыплатеОрганизаций.ХарактерВыплаты,
	|	НЕОПРЕДЕЛЕНО КАК ДополнительныеПоляШапки
	|ИЗ
	|	Документ.ЗарплатаКВыплатеОрганизаций КАК ЗарплатаКВыплатеОрганизаций
	|ГДЕ
	|	ЗарплатаКВыплатеОрганизаций.Ссылка = &Ссылка";
	
	Запрос.Текст = 
		СтрЗаменить(
			Запрос.Текст, 
			"НЕОПРЕДЕЛЕНО КАК ДополнительныеПоляШапки", 
			ЗарплатаКВыплатеОрганизацийПереопределяемый.ДополнительныеПоляШапкиДокумента()); 
			
			Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка;
	
КонецФункции
