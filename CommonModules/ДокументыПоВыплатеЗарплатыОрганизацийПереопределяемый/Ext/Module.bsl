
#Если ТолстыйКлиентОбычноеПриложение Тогда
	
Процедура ФормаСпискаПередОткрытиемДополнительно(Форма) Экспорт
	
	ИспользоватьУправленческийУчетЗарплаты = глЗначениеПеременной("глИспользоватьУправленческийУчетЗарплаты");
	
	Если ИспользоватьУправленческийУчетЗарплаты Тогда
		РаботаСДиалогами.ВставитьКолонкуВТабличноеПоле(1, Форма.ЭлементыФормы.ЖурналДокументовСписок, "ОтражатьВУправленческомУчете", "УУ", , "УУ", , , Тип("Флажок"), , 2);
		РаботаСДиалогами.ВставитьКолонкуВТабличноеПоле(2, Форма.ЭлементыФормы.ЖурналДокументовСписок, "ОтражатьВБухгалтерскомУчете", "БУ", , "БУ", , , Тип("Флажок"), , 2);
	КонецЕсли;
	
	РаботаСДиалогами.ВставитьКолонкуВТабличноеПоле(?(ИспользоватьУправленческийУчетЗарплаты, 8,6), Форма.ЭлементыФормы.ЖурналДокументовСписок, "СпособВыплаты", "Способ выплаты", "СпособВыплаты");
	
КонецПроцедуры

Функция ПолучитьСостояниеДокументов(Ссылки) Экспорт
	
	Возврат ЗарплатаКВыплатеОрганизацийПереопределяемый.ПолучитьСостояние(Ссылки);
	
КонецФункции

Функция СписокВидовДокументов() Экспорт
	
	СписокВидовДокументов = Новый СписокЗначений;
	СписокВидовДокументов.Добавить("ЗарплатаКВыплатеОрганизаций");
	СписокВидовДокументов.Добавить();
	СписокВидовДокументов.Добавить("ПриходныйКассовыйОрдер");
	СписокВидовДокументов.Добавить("ПлатежноеПоручениеИсходящее");
	СписокВидовДокументов.Добавить();
	СписокВидовДокументов.Добавить("СписаниеДепонентовВДоходыОрганизаций");
	
	РаботаСДиалогамиЗК.ДополнитьСписокВидовДокументов(Метаданные.ЖурналыДокументов.ДокументыПоВыплатеЗарплатыОрганизаций, СписокВидовДокументов);	

	Возврат СписокВидовДокументов;
	
КонецФункции

Процедура ДополнитьСоответствиеОбщихМодулей(СоответствиеОбщихМодулей) Экспорт
	
	СоответствиеОбщихМодулей.Вставить(Тип("ДокументСсылка.ПлатежноеПоручениеИсходящее"), ПлатежноеПоручениеИсходящееСервис);

КонецПроцедуры

Процедура ФормаСпискаПриСозданииФормыДополнительно(Форма) Экспорт
	
	// добавляем колонки программно, чтобы данные всегда были доступны
	Форма.ЖурналДокументовСписок.Колонки.Добавить("СпособВыплаты");
	Форма.ЖурналДокументовСписок.Колонки.Добавить("Организация");
	
КонецПроцедуры

#КонецЕсли