////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры, функции

////////////////////////////////////////////////////////////////////////////////
// Процедуры, функции объекта

// Заполняет табличную часть документа "Работники" списком работников компании
//
Процедура ЗаполнитьТабличнуюЧастьРаботникиПринятымиВКомпанию(Объект, ДатаНачалаПериода, ДатаОкончанияПериода) Экспорт

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ДатаНачалаПериода",		ДатаНачалаПериода);
	Запрос.УстановитьПараметр("ДатаОкончанияПериода",	ДатаОкончанияПериода);
	Запрос.УстановитьПараметр("Организация",			Объект.Организация);
	Запрос.УстановитьПараметр("Дата",					Объект.Дата);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Сотрудник,
	|	ВложенныйЗапрос.Сотрудник.Физлицо КАК Физлицо,
	|	СоответствиеПодразделенийИПодразделенийОрганизаций.ПодразделениеОрганизации,
	|	ПриемыВКомпанию.Должность КАК Должность,
	|	ВложенныйЗапрос.ЗанимаемыхСтавок,
	|	ВложенныйЗапрос.ДатаПриема,
	|	ВложенныйЗапрос.ИспытательныйСрок,
	|	ПриемыВКомпанию.ДатаУвольнения,
	|	ПриемыВКомпанию.ГрафикРаботы,
	|	ИСТИНА КАК НапомнитьПоЗавершении
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВложенныйЗапрос.Сотрудник КАК Сотрудник,
	|		ВложенныйЗапрос.ДатаПриема КАК ДатаПриема,
	|		0 КАК ИспытательныйСрок,
	|		1 КАК ЗанимаемыхСтавок
	|	ИЗ
	|		(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ПриемыВКомпанию.Сотрудник КАК Сотрудник,
	|			МИНИМУМ(ПриемыВКомпанию.ДатаПриема) КАК ДатаПриема
	|		ИЗ
	|			Документ.ПриемНаРаботу.Работники КАК ПриемыВКомпанию
	|		ГДЕ
	|			ПриемыВКомпанию.Ссылка.Проведен
	|			И ПриемыВКомпанию.ДатаПриема МЕЖДУ &ДатаНачалаПериода И &ДатаОкончанияПериода
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПриемыВКомпанию.Сотрудник) КАК ВложенныйЗапрос
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриемНаРаботу.Работники КАК ПриемыВКомпанию
	|			ПО ВложенныйЗапрос.ДатаПриема = ПриемыВКомпанию.ДатаПриема
	|				И ВложенныйЗапрос.Сотрудник = ПриемыВКомпанию.Сотрудник
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.ДатаПриема,
	|		ВложенныйЗапрос.Сотрудник) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриемНаРаботу.Работники КАК ПриемыВКомпанию
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеПодразделенийИПодразделенийОрганизаций КАК СоответствиеПодразделенийИПодразделенийОрганизаций
	|			ПО ПриемыВКомпанию.Подразделение = СоответствиеПодразделенийИПодразделенийОрганизаций.Подразделение
	|				И (СоответствиеПодразделенийИПодразделенийОрганизаций.Организация = &Организация)
	|		ПО ВложенныйЗапрос.ДатаПриема = ПриемыВКомпанию.ДатаПриема
	|			И ВложенныйЗапрос.Сотрудник = ПриемыВКомпанию.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Сотрудник.Наименование";
	
	Объект.ОсновныеНачисления.Очистить();
	Объект.РаботникиОрганизации.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры // ЗаполнитьТабличнуюЧастьРаботникиПринятымиВКомпанию()


Функция СформироватьВременныеТаблицыПоДаннымДокументаДляЛьгот(ДокументОбъект)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПриемНаРаботуРаботники.Сотрудник,
	|	ПриемНаРаботуРаботники.ФизЛицо,
	|	ПриемНаРаботуРаботники.ДатаПриема,
	|	ПриемНаРаботуРаботники.Ссылка,
	|	ПриемНаРаботуРаботники.ДатаУвольнения
	|ПОМЕСТИТЬ ДанныеДокументаРаботники
	|ИЗ
	|	Документ.ПриемНаРаботуВОрганизацию.РаботникиОрганизации КАК ПриемНаРаботуРаботники
	|ГДЕ
	|	ПриемНаРаботуРаботники.Ссылка = &Ссылка
	|	И (НЕ ПриемНаРаботуРаботники.Сторно)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриемНаРаботуЛьготы.Ссылка,
	|	ПриемНаРаботуЛьготы.НомерСтроки,
	|	ПриемНаРаботуЛьготы.Сотрудник,
	|	ПриемНаРаботуЛьготы.Физлицо,
	|	ПриемНаРаботуЛьготы.Льгота,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСЛьготой.Назначить) КАК Действие
	|ПОМЕСТИТЬ ДанныеДокументаЛьготы
	|ИЗ
	|	Документ.ПриемНаРаботуВОрганизацию.Льготы КАК ПриемНаРаботуЛьготы
	|ГДЕ
	|	ПриемНаРаботуЛьготы.Ссылка = &Ссылка";
	
	Запрос = Новый Запрос;
	
	ВременныеТаблицыДанныхДокумента = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицыДанныхДокумента;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	
	Запрос.Выполнить();
	
	Возврат ВременныеТаблицыДанныхДокумента;
	
КонецФункции

Процедура ДополнитьСтруктуруПечатныхФорм(СтруктураПечатныхФорм, ДокументОбъект) Экспорт
	
	МероприятияАдаптацииУвольнения.ДополнитьСтруктуруПечатныхФорм(СтруктураПечатныхФорм, ДокументОбъект);
	
КонецПроцедуры

Функция ПечатьДополнительныхФорм(ИмяМакета, Объект) Экспорт
	
	Возврат МероприятияАдаптацииУвольнения.ПечатьДополнительныхФорм(ИмяМакета, Объект, Объект.Дата);
	
КонецФункции

Процедура ДобавитьДополнительноПоСтроке(ДокументОбъект, СтрокаТабличнойЧасти) Экспорт
	
	ИспользованиеЛьгот.ДобавитьЛьготыПоСтроке(ДокументОбъект, СтрокаТабличнойЧасти, "РаботникиОрганизации", "Должность", "ДатаПриема", Истина);
	
КонецПроцедуры

Функция СформироватьЗапросПоНамеченнымСобытиям(ДокументОбъект)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриемНаРаботуРаботники.Ссылка.Организация КАК Организация,
	|	ПриемНаРаботуРаботники.Сотрудник,
	|	ПриемНаРаботуРаботники.ФизЛицо,
	|	ДОБАВИТЬКДАТЕ(ПриемНаРаботуРаботники.ДатаПриема, МЕСЯЦ, ПриемНаРаботуРаботники.ИспытательныйСрок) КАК Период,
	|	ДОБАВИТЬКДАТЕ(ПриемНаРаботуРаботники.ДатаПриема, МЕСЯЦ, ПриемНаРаботуРаботники.ИспытательныйСрок) КАК ДатаИзменения,
	|	ЗНАЧЕНИЕ(Перечисление.НамеченныеСобытияПоПерсоналу.РезультатИспытательногоСрока) КАК ПланируемоеСобытие,
	|	ПриемНаРаботуРаботники.ПодразделениеОрганизации,
	|	ПриемНаРаботуРаботники.Должность,
	|	0 КАК ЗанимаемыхСтавок
	|ИЗ
	|	Документ.ПриемНаРаботуВОрганизацию.РаботникиОрганизации КАК ПриемНаРаботуРаботники
	|ГДЕ
	|	ПриемНаРаботуРаботники.Ссылка = &Ссылка
	|	И (НЕ ПриемНаРаботуРаботники.Сторно)
	|	И &ВестиНаборПерсоналаПоСтруктуреЮридическихЛиц
	|	И ПриемНаРаботуРаботники.ИспытательныйСрок > 0
	|	И ПриемНаРаботуРаботники.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ВестиНаборПерсоналаПоСтруктуреЮридическихЛиц", ПолучитьФункциональнуюОпцию("ВестиНаборПерсоналаПоСтруктуреЮридическихЛиц"));
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Процедура ДобавитьДополнительныеДвижения(ДокументОбъект, Отказ, Заголовок) Экспорт
	
	МенеджерВременныхТаблиц = СформироватьВременныеТаблицыПоДаннымДокументаДляЛьгот(ДокументОбъект);
	ИспользованиеЛьгот.ДобавитьДвиженияПоДействующимЛьготам(ДокументОбъект.Движения, Отказ, МенеджерВременныхТаблиц, Заголовок, Истина);
	
	НамеченныеСобытияПоПерсоналу = ДокументОбъект.Движения.НамеченныеСобытияПоПерсоналу;
	Выборка = СформироватьЗапросПоНамеченнымСобытиям(ДокументОбъект).Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = НамеченныеСобытияПоПерсоналу.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДополнительно(ДокументОбъект) Экспорт
	
	ИспользованиеЛьгот.ЗаполнитьЛьготы(ДокументОбъект, "РаботникиОрганизации", "Должность", "ДатаПриема", Истина);
	
КонецПроцедуры

Процедура ДвиженияНаДатуУвольненияДополнительно(Движение) Экспорт
	
	Движение.ПланируемоеСобытие = Перечисления.НамеченныеСобытияПоПерсоналу.Увольнение;
	
КонецПроцедуры

Процедура ДополнитьДвиженияПоСостояниюРаботниковНаИспытательномСроке(Движение, ВыборкаПоРаботникиОрганизации) Экспорт
	
	Движение.ПериодЗавершения = ДобавитьМесяц(ВыборкаПоРаботникиОрганизации.ДатаПриема, ВыборкаПоРаботникиОрганизации.ИспытательныйСрок);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры, функции для работы формы документа

#Если ТолстыйКлиентОбычноеПриложение Тогда

Процедура ДополнитьСоставКолонок(Форма) Экспорт
	
	ИспользоватьГрейды = ОбщегоНазначенияЗК.ПолучитьЗначениеПеременной("глИспользоватьГрейды");
	ПолеРаботники = Форма.ЭлементыФормы.РаботникиОрганизации;
	Если ИспользоватьГрейды Тогда
		НомерКолонкиДолжность = ПолеРаботники.Колонки.Индекс(ПолеРаботники.Колонки.Найти("Должность"));
		КолонкаГрейд = РаботаСДиалогами.ВставитьКолонкуВТабличноеПоле(НомерКолонкиДолжность + 1, ПолеРаботники, "Грейд", "Грейд", , , , , , ПоложениеКолонки.ВТойЖеКолонке, 10);
		КолонкаГрейд.ГоризонтальноеПоложениеВКолонке = ГоризонтальноеПоложение.Право;
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ВестиНаборПерсоналаПоСтруктуреЮридическихЛиц") Тогда
		КолонкаИспытательныйСрок = ПолеРаботники.Колонки.Найти("ИспытательныйСрок");
		ПолеРаботники.Колонки.Удалить(КолонкаИспытательныйСрок);
		КолонкаУсловияПриемаНаРаботу = ПолеРаботники.Колонки.Найти("УсловияПриемаНаРаботу");
		ПолеРаботники.Колонки.Удалить(КолонкаУсловияПриемаНаРаботу);
	КонецЕсли;
	
КонецПроцедуры

Процедура РаботникиОрганизацийПриПолученииДанныхДополнительно(ПолеРаботники, ОформленияСтрок) Экспорт
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
	
		ИспользованиеГрейдов.ЗаполнитьГрейдыВТабличнойЧасти(ПолеРаботники, ОформленияСтрок, "Должность", "Грейд");
		
	#КонецЕсли
	
КонецПроцедуры 

Процедура ФормаДокументаПередОткрытиемДополнительно(Форма, ДополнительныеДействия, ДополнительныеОбработчики) Экспорт
	
	// добавляем управление льготами
	ИспользованиеЛьгот.ДобавитьСтраницуЛьготы(Форма, ДополнительныеДействия, ДополнительныеОбработчики);
	
	// управление доступностью данными о начислениях
	ЗаполнениеНачислениямиДополнительный.УстановитьДоступностьНачисленийВКадровыхДокументах(Форма, "Начисления", "РаботникиОрганизации", "РасчетчикРегламентированнойЗарплаты");	
	
КонецПроцедуры

Процедура ВыполнитьДополнительныеДействия(Форма, Кнопка) Экспорт
	
	Если Лев(Кнопка.Имя, 6) = "Льготы" Тогда
		ИспользованиеЛьгот.ВыполнитьКомандыДействияСЛьготами(Форма, Кнопка, "РаботникиОрганизации", "Должность", "ДатаПриема", Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьДополнительноПриИзменении(Форма, Элемент) Экспорт
	
	ТекущиеДанные = Форма.ЭлементыФормы.Льготы.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ТекущиеДанные.Физлицо = ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(ТекущиеДанные.Сотрудник, "Физлицо");	
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьДополнительноПоСтроке(Форма, Сотрудник) Экспорт
	
	ИспользованиеЛьгот.УдалитьЛьготыПоСтроке(Форма, Сотрудник, "РаботникиОрганизации");
	
	// управление доступностью данными о начислениях
	ЗаполнениеНачислениямиДополнительный.УстановитьДоступностьНачисленийВКадровыхДокументах(Форма, "Начисления", "РаботникиОрганизации", "РасчетчикРегламентированнойЗарплаты", Сотрудник);
	
КонецПроцедуры

Процедура ФормаДокументаРаботникиПослеУдаленияСтрокиДополнительно(Форма) Экспорт
	
	// управление доступностью данными о начислениях
	ЗаполнениеНачислениямиДополнительный.УстановитьДоступностьНачисленийВКадровыхДокументах(Форма, "Начисления", "РаботникиОрганизации", "РасчетчикРегламентированнойЗарплаты");
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры, функции для работы формы списка

Процедура ФормаСпискаПередОткрытиемДополнительно(ФормаСписка) Экспорт
		
	ЗаполнениеНачислениямиДополнительный.УстановитьДоступностьКомандыПечатиВСпискеКадровыхДокументов(ФормаСписка, "РасчетчикРегламентированнойЗарплаты");

КонецПроцедуры // ФормаСпискаПередОткрытиемДополнительно

#КонецЕсли
