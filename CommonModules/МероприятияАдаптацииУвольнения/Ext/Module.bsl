
Функция УстановитьВПадежНазваниеЕдиницыВремени(ЗначениеЕдиницыВремени, Количество)
	
	МодульКоличества = МодульЧисла(Количество);
	
	ОстатокОтДеления10	= МодульКоличества % 10;
	ОстатокОтДеления100	= МодульКоличества % 100;
	
	ВозвратнаяСтрока = Неопределено;
	Если ЗначениеЕдиницыВремени = 7 Тогда
		Если Количество	< 0 Тогда
			Если ОстатокОтДеления10 = 1 И (НЕ ОстатокОтДеления100 = 11) Тогда
				ВозвратнаяСтрока = "неделю";
			ИначеЕсли (ОстатокОтДеления10 > 1 И ОстатокОтДеления10 < 5) 
					И ((ОстатокОтДеления100 < 11) ИЛИ (ОстатокОтДеления100 > 15)) Тогда
				ВозвратнаяСтрока = "недели";
			Иначе 
				ВозвратнаяСтрока = "недель";
			КонецЕсли;
		Иначе
			Если ОстатокОтДеления10 = 1 И (НЕ ОстатокОтДеления100 = 11) Тогда
				ВозвратнаяСтрока = "недели";
			Иначе 
				ВозвратнаяСтрока = "недель";
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ЗначениеЕдиницыВремени = 1 Тогда	
		Если Количество	< 0 Тогда
			Если ОстатокОтДеления10 = 1 И (НЕ ОстатокОтДеления100 = 11) Тогда
				ВозвратнаяСтрока = "день";
			ИначеЕсли (ОстатокОтДеления10 > 1 И ОстатокОтДеления10 < 5) 
					И ((ОстатокОтДеления100 < 11) ИЛИ (ОстатокОтДеления100> 15)) Тогда
				ВозвратнаяСтрока = "дня";
			Иначе 
				ВозвратнаяСтрока = "дней";
			КонецЕсли;
		Иначе
			Если ОстатокОтДеления10 = 1 И (НЕ ОстатокОтДеления100 = 11) Тогда
				ВозвратнаяСтрока = "дня";
			Иначе 
				ВозвратнаяСтрока = "дней";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ВозвратнаяСтрока;
	
КонецФункции

// Функция возвращает модуль числа
Функция МодульЧисла(Число)
	
	Возврат ?(Число < 1, Число * (-1), Число);
	
КонецФункции

// Функция возвращает текстом срок исполнения мероприятия
Функция СрокИсполненияСтрокой(ЗначениеСдвигаМоментаВремени) Экспорт
	
	Знак 			= 	?(ЗначениеСдвигаМоментаВремени < 0, -1, 1);
	ПередСтрокой	=	?(Знак < 0, "за ", "в течение ");
	ПослеСтроки		=	?(Знак < 0, " до", " после");
	
	Если ЗначениеСдвигаМоментаВремени % 7 = 0 Тогда
		КоличествоЕдиницВремени = МодульЧисла(ЗначениеСдвигаМоментаВремени / 7);
		ЕдиницаВремени = "недель";
		ЗначениеЕдиницыВремени = 7;
	Иначе
		КоличествоЕдиницВремени = МодульЧисла(ЗначениеСдвигаМоментаВремени);
		ЕдиницаВремени = "дней";	
		ЗначениеЕдиницыВремени = 1;
	КонецЕсли;

	Возврат ПередСтрокой + Строка(КоличествоЕдиницВремени) + " " + УстановитьВПадежНазваниеЕдиницыВремени(ЗначениеЕдиницыВремени, КоличествоЕдиницВремени * Знак) + ПослеСтроки;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ЗАДАЧ АДАПТАЦИИ И УВОЛЬНЕНИЯ

// Функция формирует запрос по мероприятиям
// В режиме печати документа формирует список мероприятий по конкретному документу
//
Функция СформироватьЗапросПоМероприятиям(ДокументСсылка = Неопределено, ДатаПолученияФИО = '00010101') Экспорт
	
	РежимАдаптацииУвольненияПоЦентрамОтветственности = глЗначениеПеременной("глРежимАдаптацииУвольнения") = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности;
	
	Если РежимАдаптацииУвольненияПоЦентрамОтветственности Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДвиженияДокумента.Период,
		|	ДвиженияДокумента.ФизЛицо,
		|	ДвиженияДокумента.Подразделение,
		|	ДвиженияДокумента.Должность,
		|	МАКСИМУМ(Работники.Период) КАК ДатаПредыдущегоСобытия,
		|	ДвиженияДокумента.НомерСтроки,
		|	ДвиженияДокумента.Регистратор,
		|	ДвиженияДокумента.ПричинаИзмененияСостояния
		|ПОМЕСТИТЬ ДвиженияДокумента
		|ИЗ
		|	РегистрСведений.Работники КАК ДвиженияДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Работники КАК Работники
		|		ПО (Работники.ФизЛицо = ДвиженияДокумента.ФизЛицо)
		|			И (Работники.Период < ДвиженияДокумента.Период)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДвиженияДокумента.Период,
		|	ДвиженияДокумента.ФизЛицо,
		|	ДвиженияДокумента.Подразделение,
		|	ДвиженияДокумента.Должность,
		|	ДвиженияДокумента.НомерСтроки,
		|	ДвиженияДокумента.Регистратор,
		|	ДвиженияДокумента.ПричинаИзмененияСостояния
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДвиженияДокумента.Период,
		|	ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка) КАК Сотрудник,
		|	ДвиженияДокумента.ФизЛицо,
		|	ВЫБОР
		|		КОГДА ДвиженияДокумента.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|			ТОГДА NULL
		|		ИНАЧЕ ДвиженияДокумента.Подразделение
		|	КОНЕЦ КАК Подразделение,
		|	ВЫБОР
		|		КОГДА ДвиженияДокумента.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|			ТОГДА NULL
		|		ИНАЧЕ ДвиженияДокумента.Должность
		|	КОНЕЦ КАК Должность,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	Работники.Подразделение КАК ПрежнееПодразделение,
		|	Работники.Должность КАК ПрежняяДолжность,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ПрежняяОрганизация,
		|	ДвиженияДокумента.НомерСтроки,
		|	ДвиженияДокумента.ПричинаИзмененияСостояния,
		|	ДвиженияДокумента.Регистратор
		|ПОМЕСТИТЬ ДвиженияРаботников
		|ИЗ
		|	ДвиженияДокумента КАК ДвиженияДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Работники КАК Работники
		|		ПО ДвиженияДокумента.ФизЛицо = Работники.ФизЛицо
		|			И ДвиженияДокумента.ДатаПредыдущегоСобытия = Работники.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДвиженияДокумента.ФизЛицо,
		|	ПрежнееПодразделение,
		|	ПрежняяДолжность,
		|	Подразделение,
		|	Должность,
		|	ДвиженияДокумента.ПричинаИзмененияСостояния";
	Иначе
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДвиженияДокумента.Период,
		|	ДвиженияДокумента.Сотрудник КАК Сотрудник,
		|	ДвиженияДокумента.ПодразделениеОрганизации,
		|	ДвиженияДокумента.Должность,
		|	ДвиженияДокумента.ОбособленноеПодразделение КАК Организация,
		|	МАКСИМУМ(РаботникиОрганизации.Период) КАК ДатаПредыдущегоСобытия,
		|	ДвиженияДокумента.НомерСтроки,
		|	ДвиженияДокумента.Регистратор,
		|	ДвиженияДокумента.ПричинаИзмененияСостояния
		|ПОМЕСТИТЬ ДвиженияДокумента
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций КАК ДвиженияДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|		ПО (РаботникиОрганизации.Сотрудник = ДвиженияДокумента.Сотрудник)
		|			И (РаботникиОрганизации.Период < ДвиженияДокумента.Период)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДвиженияДокумента.Период,
		|	ДвиженияДокумента.Сотрудник,
		|	ДвиженияДокумента.ПодразделениеОрганизации,
		|	ДвиженияДокумента.Должность,
		|	ДвиженияДокумента.ОбособленноеПодразделение,
		|	ДвиженияДокумента.НомерСтроки,
		|	ДвиженияДокумента.Регистратор,
		|	ДвиженияДокумента.ПричинаИзмененияСостояния
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДвиженияДокумента.Период,
		|	ДвиженияДокумента.Сотрудник,
		|	ДвиженияДокумента.Сотрудник.Физлицо КАК ФизЛицо,
		|	ВЫБОР
		|		КОГДА ДвиженияДокумента.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|			ТОГДА NULL
		|		ИНАЧЕ ДвиженияДокумента.ПодразделениеОрганизации
		|	КОНЕЦ КАК Подразделение,
		|	ВЫБОР
		|		КОГДА ДвиженияДокумента.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|			ТОГДА NULL
		|		ИНАЧЕ ДвиженияДокумента.Должность
		|	КОНЕЦ КАК Должность,
		|	ВЫБОР
		|		КОГДА ДвиженияДокумента.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|			ТОГДА NULL
		|		ИНАЧЕ ДвиженияДокумента.Организация
		|	КОНЕЦ КАК Организация,
		|	ВЫБОР
		|		КОГДА РаботникиОрганизации.ПериодЗавершения <= ДвиженияДокумента.Период
		|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА РаботникиОрганизации.ПодразделениеОрганизацииЗавершения
		|		ИНАЧЕ РаботникиОрганизации.ПодразделениеОрганизации
		|	КОНЕЦ КАК ПрежнееПодразделение,
		|	ВЫБОР
		|		КОГДА РаботникиОрганизации.ПериодЗавершения <= ДвиженияДокумента.Период
		|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА РаботникиОрганизации.ДолжностьЗавершения
		|		ИНАЧЕ РаботникиОрганизации.Должность
		|	КОНЕЦ КАК ПрежняяДолжность,
		|	ВЫБОР
		|		КОГДА РаботникиОрганизации.ПериодЗавершения <= ДвиженияДокумента.Период
		|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА РаботникиОрганизации.ОбособленноеПодразделениеЗавершения
		|		ИНАЧЕ РаботникиОрганизации.ОбособленноеПодразделение
		|	КОНЕЦ КАК ПрежняяОрганизация,
		|	ДвиженияДокумента.НомерСтроки,
		|	ДвиженияДокумента.ПричинаИзмененияСостояния,
		|	ДвиженияДокумента.Регистратор
		|ПОМЕСТИТЬ ДвиженияРаботников
		|ИЗ
		|	ДвиженияДокумента КАК ДвиженияДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|		ПО ДвиженияДокумента.Сотрудник = РаботникиОрганизации.Сотрудник
		|			И ДвиженияДокумента.ДатаПредыдущегоСобытия = РаботникиОрганизации.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДвиженияДокумента.Сотрудник,
		|	ПрежнееПодразделение,
		|	ПрежняяДолжность,
		|	Подразделение,
		|	Должность,
		|	ДвиженияДокумента.ПричинаИзмененияСостояния";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументСсылка) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СГРУППИРОВАТЬ ПО", "ГДЕ
		|ДвиженияДокумента.Регистратор = &Регистратор
		|
		|СГРУППИРОВАТЬ ПО");
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + ";";
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФИОФизЛицСрезПоследних.ФизЛицо,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ПОМЕСТИТЬ ФИО
	|ИЗ
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаПолученияФИО, ) КАК ФИОФизЛицСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоследовательностьМероприятий.Организация КАК Организация,
	|	ПоследовательностьМероприятий.Подразделение КАК Подразделение,
	|	ПоследовательностьМероприятий.Должность КАК Должность,
	|	ПоследовательностьМероприятий.Мероприятие КАК Мероприятие,
	|	ПоследовательностьМероприятий.ВидМероприятия КАК ВидМероприятия
	|ПОМЕСТИТЬ ПоследовательностьМероприятий
	|ИЗ
	|	РегистрСведений.ПоследовательностьМероприятий КАК ПоследовательностьМероприятий
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПоследовательностьМероприятий.Организация,
	|	ВышестоящиеПодразделения.ПодчиненноеПодразделение,
	|	ПоследовательностьМероприятий.Должность,
	|	ПоследовательностьМероприятий.Мероприятие,
	|	ПоследовательностьМероприятий.ВидМероприятия
	|ИЗ
	|	РегистрСведений.ПоследовательностьМероприятий КАК ПоследовательностьМероприятий
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПодчиненныеПодразделения КАК ВышестоящиеПодразделения
	|		ПО ПоследовательностьМероприятий.Подразделение = ВышестоящиеПодразделения.Подразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Подразделение,
	|	Должность,
	|	Мероприятие,
	|	ВидМероприятия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА &РежимАдаптацииУвольненияПоЦентрамОтветственности
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДвиженияРаботников.Сотрудник
	|	КОНЕЦ КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА &РежимАдаптацииУвольненияПоЦентрамОтветственности
	|			ТОГДА ДвиженияРаботников.ФизЛицо
	|		ИНАЧЕ ДвиженияРаботников.Сотрудник.Физлицо
	|	КОНЕЦ КАК ФизЛицо,
	|	ДвиженияРаботников.Подразделение,
	|	ДвиженияРаботников.Должность,
	|	ДвиженияРаботников.Организация,
	|	ДвиженияРаботников.ПричинаИзмененияСостояния,
	|	ПоследовательностьПриПриеме.Мероприятие,
	|	ПоследовательностьПриПриеме.ВидМероприятия,
	|	ДвиженияРаботников.Регистратор,
	|	ДвиженияРаботников.Период,
	|	ДвиженияРаботников.Регистратор.Номер КАК НомерПриказа,
	|	ДвиженияРаботников.Регистратор.Дата КАК ДатаПриказа,
	|	ДвиженияРаботников.НомерСтроки
	|ПОМЕСТИТЬ Мероприятия
	|ИЗ
	|	ДвиженияРаботников КАК ДвиженияРаботников
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследовательностьМероприятий КАК ПоследовательностьПриПриеме
	|		ПО (ДвиженияРаботников.Подразделение = ПоследовательностьПриПриеме.Подразделение
	|				ИЛИ ПоследовательностьПриПриеме.Подразделение = ВЫБОР
	|					КОГДА &РежимАдаптацииУвольненияПоЦентрамОтветственности
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|				КОНЕЦ)
	|			И (ДвиженияРаботников.Должность = ПоследовательностьПриПриеме.Должность
	|				ИЛИ ПоследовательностьПриПриеме.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиОрганизаций.ПустаяСсылка))
	|			И (ВЫБОР
	|				КОГДА &РежимАдаптацииУвольненияПоЦентрамОтветственности
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ДвиженияРаботников.Организация = ПоследовательностьПриПриеме.Организация
	|			КОНЕЦ)
	|			И (ДвиженияРаботников.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу))
	|			И (ПоследовательностьПриПриеме.ВидМероприятия = ЗНАЧЕНИЕ(Перечисление.ВидыМероприятийАдаптацииУвольнения.Адаптация))
	|ГДЕ
	|	(НЕ ПоследовательностьПриПриеме.Мероприятие ЕСТЬ NULL )
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &РежимАдаптацииУвольненияПоЦентрамОтветственности
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДвиженияРаботников.Сотрудник
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &РежимАдаптацииУвольненияПоЦентрамОтветственности
	|			ТОГДА ДвиженияРаботников.ФизЛицо
	|		ИНАЧЕ ДвиженияРаботников.Сотрудник.Физлицо
	|	КОНЕЦ,
	|	ДвиженияРаботников.ПрежнееПодразделение,
	|	ДвиженияРаботников.ПрежняяДолжность,
	|	ДвиженияРаботников.ПрежняяОрганизация,
	|	ДвиженияРаботников.ПричинаИзмененияСостояния,
	|	ПоследовательностьПриУвольнении.Мероприятие,
	|	ПоследовательностьПриУвольнении.ВидМероприятия,
	|	ДвиженияРаботников.Регистратор,
	|	ДвиженияРаботников.Период,
	|	ДвиженияРаботников.Регистратор.Номер,
	|	ДвиженияРаботников.Регистратор.Дата,
	|	ДвиженияРаботников.НомерСтроки
	|ИЗ
	|	ДвиженияРаботников КАК ДвиженияРаботников
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследовательностьМероприятий КАК ПоследовательностьПриУвольнении
	|		ПО (ДвиженияРаботников.ПрежнееПодразделение = ПоследовательностьПриУвольнении.Подразделение
	|				ИЛИ ПоследовательностьПриУвольнении.Подразделение = ВЫБОР
	|					КОГДА &РежимАдаптацииУвольненияПоЦентрамОтветственности
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|				КОНЕЦ)
	|			И (ДвиженияРаботников.ПрежняяДолжность = ПоследовательностьПриУвольнении.Должность
	|				ИЛИ ПоследовательностьПриУвольнении.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиОрганизаций.ПустаяСсылка))
	|			И (ВЫБОР
	|				КОГДА &РежимАдаптацииУвольненияПоЦентрамОтветственности
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ДвиженияРаботников.ПрежняяОрганизация = ПоследовательностьПриУвольнении.Организация
	|			КОНЕЦ)
	|			И (ДвиженияРаботников.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение))
	|			И (ПоследовательностьПриУвольнении.ВидМероприятия = ЗНАЧЕНИЕ(Перечисление.ВидыМероприятийАдаптацииУвольнения.Увольнение))
	|ГДЕ
	|	(НЕ ПоследовательностьПриУвольнении.Мероприятие ЕСТЬ NULL )
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	УвольнениеСПрежнейПозиции.Сотрудник,
	|	УвольнениеСПрежнейПозиции.ФизЛицо,
	|	УвольнениеСПрежнейПозиции.ПрежнееПодразделение,
	|	УвольнениеСПрежнейПозиции.ПрежняяДолжность,
	|	УвольнениеСПрежнейПозиции.ПрежняяОрганизация,
	|	УвольнениеСПрежнейПозиции.ПричинаИзмененияСостояния,
	|	УвольнениеСПрежнейПозиции.Мероприятие,
	|	УвольнениеСПрежнейПозиции.ВидМероприятия,
	|	УвольнениеСПрежнейПозиции.Регистратор,
	|	УвольнениеСПрежнейПозиции.Период,
	|	УвольнениеСПрежнейПозиции.Регистратор.Номер,
	|	УвольнениеСПрежнейПозиции.Регистратор.Дата,
	|	УвольнениеСПрежнейПозиции.НомерСтроки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА &РежимАдаптацииУвольненияПоЦентрамОтветственности
	|				ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ ДвиженияРаботников.Сотрудник
	|		КОНЕЦ КАК Сотрудник,
	|		ВЫБОР
	|			КОГДА &РежимАдаптацииУвольненияПоЦентрамОтветственности
	|				ТОГДА ДвиженияРаботников.ФизЛицо
	|			ИНАЧЕ ДвиженияРаботников.Сотрудник.Физлицо
	|		КОНЕЦ КАК ФизЛицо,
	|		ДвиженияРаботников.ПрежнееПодразделение КАК ПрежнееПодразделение,
	|		ДвиженияРаботников.ПрежняяДолжность КАК ПрежняяДолжность,
	|		ДвиженияРаботников.ПрежняяОрганизация КАК ПрежняяОрганизация,
	|		ДвиженияРаботников.Подразделение КАК Подразделение,
	|		ДвиженияРаботников.Должность КАК Должность,
	|		ДвиженияРаботников.Организация КАК Организация,
	|		ДвиженияРаботников.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния,
	|		ПоследовательностьМероприятий.Мероприятие КАК Мероприятие,
	|		ПоследовательностьМероприятий.ВидМероприятия КАК ВидМероприятия,
	|		ДвиженияРаботников.Регистратор КАК Регистратор,
	|		ДвиженияРаботников.Период КАК Период,
	|		ДвиженияРаботников.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		ДвиженияРаботников КАК ДвиженияРаботников
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПоследовательностьМероприятий КАК ПоследовательностьМероприятий
	|			ПО (ДвиженияРаботников.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Перемещение))
	|				И (ПоследовательностьМероприятий.ВидМероприятия = ЗНАЧЕНИЕ(Перечисление.ВидыМероприятийАдаптацииУвольнения.Увольнение))
	|				И (ДвиженияРаботников.ПрежнееПодразделение = ПоследовательностьМероприятий.Подразделение
	|					ИЛИ ПоследовательностьМероприятий.Подразделение = ВЫБОР
	|						КОГДА &РежимАдаптацииУвольненияПоЦентрамОтветственности
	|							ТОГДА ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|					КОНЕЦ)
	|				И (ДвиженияРаботников.ПрежняяДолжность = ПоследовательностьМероприятий.Должность
	|					ИЛИ ПоследовательностьМероприятий.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиОрганизаций.ПустаяСсылка))
	|				И (ВЫБОР
	|					КОГДА &РежимАдаптацииУвольненияПоЦентрамОтветственности
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ДвиженияРаботников.ПрежняяОрганизация = ПоследовательностьМероприятий.Организация
	|				КОНЕЦ)
	|	ГДЕ
	|		(НЕ ПоследовательностьМероприятий.Мероприятие ЕСТЬ NULL )) КАК УвольнениеСПрежнейПозиции
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследовательностьМероприятий КАК УвольнениеСНовойПозиции
	|		ПО УвольнениеСПрежнейПозиции.Мероприятие = УвольнениеСНовойПозиции.Мероприятие
	|			И УвольнениеСПрежнейПозиции.ВидМероприятия = УвольнениеСНовойПозиции.ВидМероприятия
	|			И (УвольнениеСПрежнейПозиции.Подразделение = УвольнениеСНовойПозиции.Подразделение
	|				ИЛИ УвольнениеСНовойПозиции.Подразделение = ВЫБОР
	|					КОГДА &РежимАдаптацииУвольненияПоЦентрамОтветственности
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|				КОНЕЦ)
	|			И (УвольнениеСПрежнейПозиции.Должность = УвольнениеСНовойПозиции.Должность
	|				ИЛИ УвольнениеСНовойПозиции.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиОрганизаций.ПустаяСсылка))
	|			И (ВЫБОР
	|				КОГДА &РежимАдаптацииУвольненияПоЦентрамОтветственности
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ УвольнениеСПрежнейПозиции.Организация = УвольнениеСНовойПозиции.Организация
	|			КОНЕЦ)
	|ГДЕ
	|	УвольнениеСНовойПозиции.Мероприятие ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	АдаптацияВНовойПозиции.Сотрудник,
	|	АдаптацияВНовойПозиции.ФизЛицо,
	|	АдаптацияВНовойПозиции.Подразделение,
	|	АдаптацияВНовойПозиции.Должность,
	|	АдаптацияВНовойПозиции.Организация,
	|	АдаптацияВНовойПозиции.ПричинаИзмененияСостояния,
	|	АдаптацияВНовойПозиции.Мероприятие,
	|	АдаптацияВНовойПозиции.ВидМероприятия,
	|	АдаптацияВНовойПозиции.Регистратор,
	|	АдаптацияВНовойПозиции.Период,
	|	АдаптацияВНовойПозиции.Регистратор.Номер,
	|	АдаптацияВНовойПозиции.Регистратор.Дата,
	|	АдаптацияВНовойПозиции.НомерСтроки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА &РежимАдаптацииУвольненияПоЦентрамОтветственности
	|				ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ ДвиженияРаботников.Сотрудник
	|		КОНЕЦ КАК Сотрудник,
	|		ВЫБОР
	|			КОГДА &РежимАдаптацииУвольненияПоЦентрамОтветственности
	|				ТОГДА ДвиженияРаботников.ФизЛицо
	|			ИНАЧЕ ДвиженияРаботников.Сотрудник.Физлицо
	|		КОНЕЦ КАК ФизЛицо,
	|		ДвиженияРаботников.ПрежнееПодразделение КАК ПрежнееПодразделение,
	|		ДвиженияРаботников.ПрежняяДолжность КАК ПрежняяДолжность,
	|		ДвиженияРаботников.ПрежняяОрганизация КАК ПрежняяОрганизация,
	|		ДвиженияРаботников.Подразделение КАК Подразделение,
	|		ДвиженияРаботников.Должность КАК Должность,
	|		ДвиженияРаботников.Организация КАК Организация,
	|		ДвиженияРаботников.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния,
	|		ПоследовательностьМероприятий.Мероприятие КАК Мероприятие,
	|		ПоследовательностьМероприятий.ВидМероприятия КАК ВидМероприятия,
	|		ДвиженияРаботников.Регистратор КАК Регистратор,
	|		ДвиженияРаботников.Период КАК Период,
	|		ДвиженияРаботников.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		ДвиженияРаботников КАК ДвиженияРаботников
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПоследовательностьМероприятий КАК ПоследовательностьМероприятий
	|			ПО (ДвиженияРаботников.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Перемещение))
	|				И (ПоследовательностьМероприятий.ВидМероприятия = ЗНАЧЕНИЕ(Перечисление.ВидыМероприятийАдаптацииУвольнения.Адаптация))
	|				И (ДвиженияРаботников.Подразделение = ПоследовательностьМероприятий.Подразделение
	|					ИЛИ ПоследовательностьМероприятий.Подразделение = ВЫБОР
	|						КОГДА &РежимАдаптацииУвольненияПоЦентрамОтветственности
	|							ТОГДА ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|					КОНЕЦ)
	|				И (ДвиженияРаботников.Должность = ПоследовательностьМероприятий.Должность
	|					ИЛИ ПоследовательностьМероприятий.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиОрганизаций.ПустаяСсылка))
	|				И (ВЫБОР
	|					КОГДА &РежимАдаптацииУвольненияПоЦентрамОтветственности
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ДвиженияРаботников.Организация = ПоследовательностьМероприятий.Организация
	|				КОНЕЦ)
	|	ГДЕ
	|		(НЕ ПоследовательностьМероприятий.Мероприятие ЕСТЬ NULL )) КАК АдаптацияВНовойПозиции
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследовательностьМероприятий КАК АдаптацииВПрежнейПозиции
	|		ПО АдаптацияВНовойПозиции.Мероприятие = АдаптацииВПрежнейПозиции.Мероприятие
	|			И АдаптацияВНовойПозиции.ВидМероприятия = АдаптацииВПрежнейПозиции.ВидМероприятия
	|			И (АдаптацияВНовойПозиции.ПрежнееПодразделение = АдаптацииВПрежнейПозиции.Подразделение
	|				ИЛИ АдаптацииВПрежнейПозиции.Подразделение = ВЫБОР
	|					КОГДА &РежимАдаптацииУвольненияПоЦентрамОтветственности
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|				КОНЕЦ)
	|			И (АдаптацияВНовойПозиции.ПрежняяДолжность = АдаптацииВПрежнейПозиции.Должность
	|				ИЛИ АдаптацииВПрежнейПозиции.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиОрганизаций.ПустаяСсылка))
	|			И (ВЫБОР
	|				КОГДА &РежимАдаптацииУвольненияПоЦентрамОтветственности
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ АдаптацияВНовойПозиции.ПрежняяОрганизация = АдаптацииВПрежнейПозиции.Организация
	|			КОНЕЦ)
	|ГДЕ
	|	АдаптацииВПрежнейПозиции.Мероприятие ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Мероприятия.Регистратор КАК Событие,
	|	ВЫБОР
	|		КОГДА &РежимАдаптацииУвольненияПоЦентрамОтветственности
	|			ТОГДА ОсновныеСотрудники.Сотрудник
	|		ИНАЧЕ Мероприятия.Сотрудник
	|	КОНЕЦ КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА &РежимАдаптацииУвольненияПоЦентрамОтветственности
	|			ТОГДА Мероприятия.ФизЛицо
	|		ИНАЧЕ Мероприятия.Сотрудник.Физлицо
	|	КОНЕЦ КАК ФизЛицо,
	|	ФИОФизЛица.Фамилия,
	|	ФИОФизЛица.Имя,
	|	ФИОФизЛица.Отчество,
	|	Мероприятия.ВидМероприятия КАК ВидМероприятий,
	|	Мероприятия.Подразделение,
	|	Мероприятия.Должность,
	|	Мероприятия.Организация,
	|	Мероприятия.Мероприятие КАК Мероприятие,
	|	ПРЕДСТАВЛЕНИЕ(Мероприятия.Мероприятие) КАК НаименованиеМероприятия,
	|	ПРЕДСТАВЛЕНИЕ(Мероприятия.Мероприятие) КАК Наименование,
	|	ЕСТЬNULL(Мероприятия.Мероприятие.Группировать, ЛОЖЬ) КАК ГруппироватьМероприятия,
	|	Мероприятия.Мероприятие.Наименование КАК ОписаниеМероприятия,
	|	ДОБАВИТЬКДАТЕ(Мероприятия.Период, ДЕНЬ, Мероприятия.Мероприятие.ЗначениеСдвигаМоментаВремени) КАК СрокИсполнения,
	|	Мероприятия.ПричинаИзмененияСостояния,
	|	ЕСТЬNULL(Мероприятия.Мероприятие.РольИсполнителя, ЗНАЧЕНИЕ(Справочник.РолиИсполнителей.Расчетчик)) КАК Роль,
	|	Мероприятия.Период КАК Период,
	|	Мероприятия.НомерПриказа КАК НомерПриказа,
	|	Мероприятия.ДатаПриказа КАК ДатаПриказа,
	|	Мероприятия.Мероприятие.Код КАК МероприятиеКод,
	|	Мероприятия.НомерСтроки
	|ИЗ
	|	Мероприятия КАК Мероприятия
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МИНИМУМ(СотрудникиОрганизаций.Ссылка) КАК Сотрудник,
	|			ФизическиеЛица.ФизЛицо КАК ФизЛицо
	|		ИЗ
	|			(ВЫБРАТЬ
	|				Мероприятия.ФизЛицо КАК ФизЛицо,
	|				МИНИМУМ(ВЫБОР
	|						КОГДА (НЕ СотрудникиОрганизаций.Актуальность)
	|							ТОГДА 3
	|						КОГДА СотрудникиОрганизаций.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
	|							ТОГДА 1
	|						ИНАЧЕ 2
	|					КОНЕЦ) КАК Порядок
	|			ИЗ
	|				Мероприятия КАК Мероприятия
	|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|					ПО Мероприятия.ФизЛицо = СотрудникиОрганизаций.Физлицо
	|						И (СотрудникиОрганизаций.ВидДоговора <> ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
	|							ИЛИ СотрудникиОрганизаций.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
	|			
	|			СГРУППИРОВАТЬ ПО
	|				Мероприятия.ФизЛицо) КАК ФизическиеЛица
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|				ПО ФизическиеЛица.ФизЛицо = СотрудникиОрганизаций.Физлицо
	|					И (ФизическиеЛица.Порядок = ВЫБОР
	|						КОГДА (НЕ СотрудникиОрганизаций.Актуальность)
	|							ТОГДА 3
	|						КОГДА СотрудникиОрганизаций.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
	|							ТОГДА 1
	|						ИНАЧЕ 2
	|					КОНЕЦ)
	|					И (СотрудникиОрганизаций.ВидДоговора <> ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
	|						ИЛИ СотрудникиОрганизаций.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ФизическиеЛица.ФизЛицо) КАК ОсновныеСотрудники
	|		ПО Мероприятия.ФизЛицо = ОсновныеСотрудники.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ФИО КАК ФИОФизЛица
	|		ПО (ВЫБОР
	|				КОГДА &РежимАдаптацииУвольненияПоЦентрамОтветственности
	|					ТОГДА Мероприятия.ФизЛицо
	|				ИНАЧЕ Мероприятия.Сотрудник.Физлицо
	|			КОНЕЦ = ФИОФизЛица.ФизЛицо)";
	
	Если НЕ ЗначениеЗаполнено(ДокументСсылка) Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|ЛЕВОЕ СОЕДИНЕНИЕ Задача.ЗадачаИсполнителя.ДополнительныеРеквизиты КАК ЗадачиДополнительныеРеквизиты
		|ПО Мероприятия.Мероприятие = ЗадачиДополнительныеРеквизиты.Ссылка.ОбъектЗадачи
		|	И Мероприятия.Регистратор = ЗадачиДополнительныеРеквизиты.Событие
		|	И (ВЫБОР
		|		КОГДА &РежимАдаптацииУвольненияПоЦентрамОтветственности
		|			ТОГДА Мероприятия.ФизЛицо = ЗадачиДополнительныеРеквизиты.ФизЛицо
		|		ИНАЧЕ Мероприятия.Сотрудник = ЗадачиДополнительныеРеквизиты.Сотрудник
		|	КОНЕЦ)
		|ГДЕ
		|	ЗадачиДополнительныеРеквизиты.Ссылка ЕСТЬ NULL 
		|
		|ИТОГИ ПО
		|	Мероприятие,
		|	СрокИсполнения
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	МероприятиеКод
		|
		|ИТОГИ 
		|	МАКСИМУМ(Фамилия),
		|	МАКСИМУМ(Имя),
		|	МАКСИМУМ(Отчество),
		|	МАКСИМУМ(ФизЛицо),
		|	МАКСИМУМ(Период),
		|	МАКСИМУМ(НомерПриказа),
		|	МАКСИМУМ(ДатаПриказа)
		|ПО
		|	Мероприятия.ФизЛицо,
		|	ВидМероприятий
		|";
	КонецЕсли;
	
	Если НЕ РежимАдаптацииУвольненияПоЦентрамОтветственности Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПодчиненныеПодразделения", "ПодчиненныеПодразделенияОрганизаций");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = ТекстЗапроса;
	
	Если ЗначениеЗаполнено(ДокументСсылка) Тогда
		Запрос.УстановитьПараметр("Регистратор", ДокументСсылка);
	КонецЕсли;
	Запрос.УстановитьПараметр("ДатаПолученияФИО", ДатаПолученияФИО);
	Запрос.УстановитьПараметр("РежимАдаптацииУвольненияПоЦентрамОтветственности", РежимАдаптацииУвольненияПоЦентрамОтветственности);
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросПоМероприятиям

Функция ПолучитьНаименованиеЗадачи(Выборка)
	
	НаименованиеЗадачи 	= "Мероприятие " + ?(Выборка.ВидМероприятий = Перечисления.ВидыМероприятийАдаптацииУвольнения.Адаптация, "адаптации ", "увольнения")
						+ Выборка.НаименованиеМероприятия
						+ ?((НЕ Выборка.ГруппироватьМероприятия) или (Выборка.Количество() = 1),
						" для " + ОбщегоНазначенияЗК.ПредставлениеРаботника(Выборка.ФизЛицо, 2),
						" для группы сотрудников")
						+ ". Выполнить в срок до " + Формат(Выборка.СрокИсполнения, "ДЛФ=DD"); 
	
	Возврат НаименованиеЗадачи;
	
КонецФункции

Процедура НазначениеЗадачАдаптацииУвольнения() Экспорт
	
	ВыборкаПоМероприятиям = СформироватьЗапросПоМероприятиям().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	РежимАдаптацииУвольненияПоЦентрамОтветственности = глЗначениеПеременной("глРежимАдаптацииУвольнения") = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности;
	
	Пока ВыборкаПоМероприятиям.Следующий() Цикл
		ВыборкаПоДатамИсполнения = ВыборкаПоМероприятиям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоДатамИсполнения.Следующий() Цикл
			Выборка		=	ВыборкаПоДатамИсполнения.Выбрать(ОбходРезультатаЗапроса.Прямой);
			ЭтоПерваяСтрокаВГруппе = Истина;
			Пока Выборка.Следующий() Цикл
				
				Если ЭтоПерваяСтрокаВГруппе ИЛИ НЕ Выборка.Мероприятие.Группировать Тогда
					
					ЗадачаАдаптации = Задачи.ЗадачаИсполнителя.СоздатьЗадачу();
					ЗадачаАдаптации.Дата			= Выборка.СрокИсполнения;
					ЗадачаАдаптации.ВидЗадачи		= Справочники.ВидыЗадачПользователей.АдаптацияУвольнение;
					ЗадачаАдаптации.ОбъектЗадачи	= Выборка.Мероприятие;
					ЗадачаАдаптации.Наименование	= ПолучитьНаименованиеЗадачи(Выборка);
					УправлениеЗадачами.ЗаписатьАдресациюЗадачи(ЗадачаАдаптации, Выборка.Организация, Выборка.Роль, Выборка.Подразделение);
					ЗадачаАдаптации.Записать();
					
				КонецЕсли;
				
				ДополнительныеРеквизитыЗадачи		  = ЗадачаАдаптации.ДополнительныеРеквизиты.Добавить();
				ДополнительныеРеквизитыЗадачи.Событие = Выборка.Событие;
				ДополнительныеРеквизитыЗадачи.ФизЛицо = Выборка.ФизЛицо;
				ДополнительныеРеквизитыЗадачи.Сотрудник = Выборка.Сотрудник;
				ЗадачаАдаптации.Записать();
				
				ЭтоПерваяСтрокаВГруппе = Ложь;
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

// Выбирает файлы прикрепленные к элементам справочников в соответствии со списком мероприятий
// и имеющие признак ВыводитьПриПечатиМероприятий
Процедура ОткрытьПрикрепленныеФайлы(ТаблицаЗначений) 
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаЗначений", ТаблицаЗначений);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаЗначений.Подразделение,
	|	ТаблицаЗначений.Должность,
	|	ТаблицаЗначений.Мероприятие
	|ПОМЕСТИТЬ ТаблицаЗначений
	|ИЗ
	|	&ТаблицаЗначений КАК ТаблицаЗначений";
	
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДолжностиОрганизацийФайлы.Файл
	|ПОМЕСТИТЬ ПрикрепленныеФайлы
	|ИЗ
	|	ТаблицаЗначений КАК ТаблицаЗначений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДолжностиОрганизаций.Файлы КАК ДолжностиОрганизацийФайлы
	|		ПО ТаблицаЗначений.Должность = ДолжностиОрганизацийФайлы.Ссылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПодразделенияФайлы.Файл
	|ИЗ
	|	ТаблицаЗначений КАК ТаблицаЗначений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Подразделения.Файлы КАК ПодразделенияФайлы
	|		ПО ТаблицаЗначений.Подразделение = ПодразделенияФайлы.Ссылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	МероприятияАдаптацииУвольненияФайлы.Файл
	|ИЗ
	|	ТаблицаЗначений КАК ТаблицаЗначений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МероприятияАдаптацииУвольнения.Файлы КАК МероприятияАдаптацииУвольненияФайлы
	|		ПО ТаблицаЗначений.Мероприятие = МероприятияАдаптацииУвольненияФайлы.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрикрепленныеФайлы.Файл.ИмяФайла КАК ИмяФайла,
	|	ПрикрепленныеФайлы.Файл.Хранилище КАК Хранилище
	|ИЗ
	|	ПрикрепленныеФайлы КАК ПрикрепленныеФайлы";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		РаботаСФайлами.ОткрытьФайлИзХранилища(Выборка.ИмяФайла, Выборка.Хранилище,,Ложь);
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ДополнитьСтруктуруПечатныхФорм(СтруктураПечатныхФорм, ДокументОбъект) Экспорт
		
	Если ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ПоследовательностьМероприятий) Тогда
		
		// составим коллекцию метаданных документов и режимов ввода льгот им соответствующих
		РежимыВводаЛьготДокументами = Новый Соответствие;
		МетаданныеДокументов = Метаданные.Документы;
		РежимыВводаЛьготДокументами.Вставить(МетаданныеДокументов.КадровоеПеремещение, Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности);
		РежимыВводаЛьготДокументами.Вставить(МетаданныеДокументов.ПриемНаРаботу, Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности);
		РежимыВводаЛьготДокументами.Вставить(МетаданныеДокументов.Увольнение, Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности);
		РежимыВводаЛьготДокументами.Вставить(МетаданныеДокументов.КадровоеПеремещениеОрганизаций, Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц);
		РежимыВводаЛьготДокументами.Вставить(МетаданныеДокументов.ПриемНаРаботуВОрганизацию, Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц);
		РежимыВводаЛьготДокументами.Вставить(МетаданныеДокументов.УвольнениеИзОрганизаций, Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц);
		
		МетаданныеДокумента = ДокументОбъект.Метаданные();
		// Принимать решение нужно на основе действующего способа управления адаптациями и увольнениями
		ВидДокументаСоответствуетРежимуВвода = глЗначениеПеременной("глРежимАдаптацииУвольнения") = РежимыВводаЛьготДокументами[МетаданныеДокумента];
		
		Если ВидДокументаСоответствуетРежимуВвода Тогда
			
			СтруктураПечатныхФорм.Вставить("СписокМероприятий",	"Список мероприятий");
			
		КонецЕсли;
		Если МетаданныеДокумента = МетаданныеДокументов.Увольнение ИЛИ МетаданныеДокумента = МетаданныеДокументов.УвольнениеИзОрганизаций Тогда
			СтруктураПечатныхФорм.Вставить("ОбходнойЛист",	"Обходной лист");
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#Если ТолстыйКлиентОбычноеПриложение Тогда
	
// Функция формирует табличный документ с печатной формой "СписокМероприятий"
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьСпискаМероприятий(ДокументСсылка) Экспорт
	
	// получаем данные для печати
	РезультатЗапроса  	= СформироватьЗапросПоМероприятиям(ДокументСсылка);
	
	Если РезультатЗапроса.Пустой() Тогда
		
		// нет мероприятий, надо уточнить сообщение пользователю
		Расшифровки = Новый Массив;
		МассивРасшифровки = Новый Массив;
		Если ПоследовательностьМероприятийЗаполнена() Тогда
			ТекстСообщенияОбОшибке = "Нет мероприятий адаптации/увольнения, которые необходимо выполнить по этому документу";
			ВидСообщения = Перечисления.ВидыСообщений.Информация;
		Иначе
			ТекстСообщенияОбОшибке = "Не заполнена последовательность мероприятий адаптации/увольнения";	
			МассивРасшифровки.Добавить("ОткрытьФормуСписка");
			МассивРасшифровки.Добавить("РегистрыСведений.ПоследовательностьМероприятий");
			Расшифровки.Добавить(Новый Структура("Представление,Расшифровка", "Заполните последовательность мероприятий адаптации/увольнения" + " ", МассивРасшифровки));
			ВидСообщения = Перечисления.ВидыСообщений.Ошибка;
		КонецЕсли;
		
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.УдалитьСообщения();
		
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ТекстСообщенияОбОшибке, , , ВидСообщения, Расшифровки);
		ОбработкаКомментариев.ПоказатьСообщения();
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписокМероприятий";
	
	ВыборкаПоФизЛицам 	= РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	// запоминаем области макета
	Макет = ПолучитьОбщийМакет("СписокМероприятий");
	ОбластьМакетаЗаголовок		= Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакетаШапка 			= Макет.ПолучитьОбласть("Шапка"); // Шапка документа
	ОбластьМакетаВидМероприятий = Макет.ПолучитьОбласть("ВидМероприятий"); // Вид мероприятий
	ОбластьМакетаСтрока 		= Макет.ПолучитьОбласть("Строка"); // строка с описанием мероприятия
	
	// выводим данные о физ лицах
	Пока ВыборкаПоФизЛицам.Следующий() Цикл
		
		Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаПоФизЛицам); // Шапка списка
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		ВыборкаПоВидамМероприятий	=	ВыборкаПоФизЛицам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоВидамМероприятий.Следующий() Цикл		
			
			Выборка	=	ВыборкаПоВидамМероприятий.Выбрать(ОбходРезультатаЗапроса.Прямой);
			Если Выборка.Следующий() Тогда
				ОбластьМакетаВидМероприятий.Параметры.Заполнить(Выборка);
				ТабДокумент.Вывести(ОбластьМакетаВидМероприятий);
				ОбластьМакетаСтрока.Параметры.Заполнить(Выборка);
				ТабДокумент.Вывести(ОбластьМакетаСтрока);
			КонецЕсли;			
			
			Пока Выборка.Следующий() Цикл
				ОбластьМакетаСтрока.Параметры.Заполнить(Выборка);
				ТабДокумент.Вывести(ОбластьМакетаСтрока);
			КонецЦикла;
			
			ТабДокумент.Вывести(Макет.ПолучитьОбласть("КонецТаблицы"));
			ТабДокумент.Вывести(Макет.ПолучитьОбласть("ПустаяСтрока"));
			
		КонецЦикла;
		
	КонецЦикла;

	ОткрытьПрикрепленныеФайлы(РезультатЗапроса.Выгрузить());
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьСпискаМероприятий()

Функция ПечатьОбходногоЛиста(ДокументСсылка, Макет, ДатаПолученияФИО) Экспорт
	
	// получаем данные для печати
	Результаты = Новый Соответствие;
	ДобавитьВРезультаты(Результаты, СформироватьЗапросПоМероприятиям(ДокументСсылка, ДатаПолученияФИО), "Мероприятия");
	ДобавитьВРезультаты(Результаты, УченическиеДоговоры.СформироватьЗапросПоУченическимДоговорам(ДокументСсылка, ДатаПолученияФИО), "Ученические договоры");
	
	Если НЕ ЗначениеЗаполнено(Результаты) Тогда
		#Если ТолстыйКлиентОбычноеПриложение тогда
			РаботаСДиалогами.ВывестиПредупреждение("Нет данных о мероприятиях адаптации и увольнения или обязательств по ученическим договорам для заполнения обходного листа.");
		#КонецЕсли
		Возврат Неопределено;
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОбходнойЛист";
	
	ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакетаШапка     = Макет.ПолучитьОбласть("Шапка"); 
	ОбластьМакетаСтрока    = Макет.ПолучитьОбласть("Мероприятие");
	ОбластьМакетаПодвал    = Макет.ПолучитьОбласть("Подвал");
	
	
	ПервоеФизЛицо = Истина;
	
	// выводим данные о физ лицах
	Для Каждого ВыборкаПоФизЛицам Из Результаты Цикл
		
		НомерПП = 1;
		ЗначениеВыборкиПоФизЛицам = ВыборкаПоФизЛицам.Значение;
		
		ОбластьМакетаЗаголовок.Параметры.Заполнить(ЗначениеВыборкиПоФизЛицам); 
		ОбластьМакетаЗаголовок.Параметры.ДатаПриказа = Формат(ЗначениеВыборкиПоФизЛицам.ДатаПриказа, "ДФ=dd.MM.yyyy");
		ОбластьМакетаЗаголовок.Параметры.Период = Формат(ЗначениеВыборкиПоФизЛицам.Период, "ДФ=dd.MM.yyyy");
		Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.УвольнениеИзОрганизаций") Тогда
			ОбластьМакетаЗаголовок.Параметры.Организация = ДокументСсылка.Организация;
		Иначе
			ОбластьМакетаЗаголовок.Параметры.Организация = "компании";
		КонецЕсли; 
		ОбластьМакетаШапка.Параметры.Заполнить(ЗначениеВыборкиПоФизЛицам);
		
		Если ПервоеФизЛицо Тогда
			ПервоеФизЛицо = Ложь;
		Иначе
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		ОбластьМакетаПодвал.Параметры.Заполнить(ЗначениеВыборкиПоФизЛицам);
		ОбластьМакетаПодвал.Параметры.ДатаПриказа = Формат(ЗначениеВыборкиПоФизЛицам.ДатаПриказа, "ДФ=dd.MM.yyyy");
		ПредставлениеПериода = Формат(ЗначениеВыборкиПоФизЛицам.Период, "ДЛФ='DD'");
		ПозицияПробела = Найти(ПредставлениеПериода, " ");
		ПредставлениеПериода = Прав(ПредставлениеПериода, СтрДлина(ПредставлениеПериода) - ПозицияПробела);
		ОбластьМакетаПодвал.Параметры.Период =  "" + День(ЗначениеВыборкиПоФизЛицам.Период) +" "+ ПредставлениеПериода;
		
		Если НЕ ЗначениеВыборкиПоФизЛицам.Свойство("ВидыМероприятий") Тогда
			Продолжить;
		КонецЕсли;
		
		Для каждого ВыборкаПоВидамМероприятий Из ЗначениеВыборкиПоФизЛицам.ВидыМероприятий Цикл
			
			ЗначениеВыборкиПоВидамМероприятий = ВыборкаПоВидамМероприятий.Значение;
			Для каждого Выборка Из ЗначениеВыборкиПоВидамМероприятий Цикл
				ОбластьМакетаСтрока.Параметры.Заполнить(Выборка);
				ОбластьМакетаСтрока.Параметры.НомерПП = НомерПП;
				НомерПП = НомерПП + 1;
				ТабДокумент.Вывести(ОбластьМакетаСтрока);
			КонецЦикла;
			
			ТабДокумент.Вывести(ОбластьМакетаПодвал);
			
		КонецЦикла;
	КонецЦикла;

	Возврат ТабДокумент;
	
КонецФункции // ПечатьОбходногоЛиста()

Функция ПечатьДополнительныхФорм(ИмяМакета, Объект, ДатаПолученияФИО = Неопределено) Экспорт
	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "СписокМероприятий"  Тогда
		ТабДокумент = ПечатьСпискаМероприятий(Объект.Ссылка);
	ИначеЕсли ИмяМакета = "ОбходнойЛист"  Тогда
		Макет = ПолучитьОбщийМакет("ОбходнойЛист");
		ТабДокумент = ПечатьОбходногоЛиста(Объект.Ссылка, Макет, ДатаПолученияФИО);
	КонецЕсли;

	Возврат ТабДокумент;
	
КонецФункции

#КонецЕсли


Процедура ДобавитьВРезультаты(Результаты, РезультатЗапроса, ВидМероприятия)

	ВыборкаПоФизЛицам = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоФизЛицам.Следующий() Цикл
		
		ФизЛица = Результаты.Получить(ВыборкаПоФизЛицам.ФизЛицо);
		Если ФизЛица = Неопределено Тогда
			ФизЛица = Новый Структура;
		КонецЕсли;
	
		ВыборкаПоВидамМероприятий = ВыборкаПоФизЛицам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоВидамМероприятий.Следующий() Цикл
			
			Если ФизЛица.Свойство("ВидыМероприятий") Тогда
				ВидыМероприятий = ФизЛица.ВидыМероприятий;
			Иначе
				ВидыМероприятий = Новый Соответствие;;
			КонецЕсли;
			
			Мероприятия = ВидыМероприятий.Получить(ВыборкаПоВидамМероприятий.ВидМероприятий);
			Если Мероприятия = Неопределено Тогда
				Мероприятия = Новый Массив;;
			КонецЕсли;
		
			Выборка = ВыборкаПоВидамМероприятий.Выбрать(ОбходРезультатаЗапроса.Прямой);
			Пока Выборка.Следующий() Цикл
			
				Мероприятие = Новый Структура("НаименованиеМероприятия, Роль, СрокИсполнения");
				ЗаполнитьЗначенияСвойств(Мероприятие, Выборка);
				Если ВидМероприятия = "Ученические договоры" Тогда
					ШаблонТекста = НСтр("ru = 'Удержание обязательства %2 %3 по ученическому договору №%1 от %4 г.'");
					НаименованиеМероприятия 	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекста, СокрЛП(Выборка.НомерУчДоговора), 
						Выборка.СуммаРасходов, ОбщегоНазначенияЗК.ПолучитьЗначениеПеременной("глВалютаУправленческогоУчета"), Формат(Выборка.ДатаУчДоговора, "ДЛФ=Д"));
					Мероприятие.Вставить("НаименованиеМероприятия", НаименованиеМероприятия);
				КонецЕсли;
				Мероприятия.Добавить(Мероприятие);
			
			КонецЦикла; 
			ВидыМероприятий.Вставить(ВыборкаПоВидамМероприятий.ВидМероприятий, Мероприятия);
			
			ФизЛица.Вставить("ВидыМероприятий", ВидыМероприятий);
			Фамилия = ВыборкаПоФизЛицам.Фамилия;
			Имя = ВыборкаПоФизЛицам.Имя;
			Отчество = ВыборкаПоФизЛицам.Отчество;
			ФизЛица.Вставить("НаименованиеФизЛица", ОбщегоНазначенияЗК.ФамилияИнициалыФизЛица(ВыборкаПоФизЛицам.ФизЛицо, Фамилия, Имя, Отчество));
			ФизЛица.Вставить("Период", ВыборкаПоФизЛицам.Период);
			ФизЛица.Вставить("ДатаПриказа", ВыборкаПоФизЛицам.ДатаПриказа);
			ФизЛица.Вставить("НомерПриказа", ВыборкаПоФизЛицам.НомерПриказа);
			
		КонецЦикла; 
	
		Результаты.Вставить(ВыборкаПоФизЛицам.ФизЛицо, ФизЛица);
	КонецЦикла; 

КонецПроцедуры // ДобавитьВРезультаты()

Функция ПоследовательностьМероприятийЗаполнена()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	РегистрСведений.ПоследовательностьМероприятий КАК ПоследовательностьМероприятий");
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции