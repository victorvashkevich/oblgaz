Функция ПолучитьСтрокуСоединия(БД)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ПараметрыПодлюченияВнешнихБД.Параметр,
	|	ПараметрыПодлюченияВнешнихБД.Значение
	|ИЗ
	|	РегистрСведений.ПараметрыПодлюченияВнешнихБД КАК ПараметрыПодлюченияВнешнихБД
	|ГДЕ
	|	ПараметрыПодлюченияВнешнихБД.ВнешняяБД = &БД";
	
	Запрос.УстановитьПараметр("БД",БД);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтрокаПодключения = "";
	
	Пока Выборка.Следующий() Цикл
		
		СтрокаПодключения = СтрокаПодключения + СокрЛП(Выборка.Параметр)+"="+СокрЛП(Выборка.Значение)+";";
		
	КонецЦикла;
	
	Возврат СтрокаПодключения;
	
	
КонецФункции
	
Процедура ВыгрузкаВМириаду() Экспорт
	
	БД = Справочники.ВнешниеБД.Мириада;
	
	ЛогФайл = Новый ТекстовыйДокумент;

	СтрокаСоединения = ПолучитьСтрокуСоединия(БД);
		
	Connection = Новый COMОбъект("ADODB.Connection");
	
	Connection.ConnectionString = (СтрокаСоединения);
	
	Попытка
		
		Connection.Open();
		ЗаписьЖурналаРегистрации("ВыгрузкаВМириаду.ПодключениеКБДУстановлено",УровеньЖурналаРегистрации.Информация,,,"Подключение к базе данных установлено");
		
	Исключение
		
		ЗаписьЖурналаРегистрации("ВыгрузкаВМириаду.ОшибкаПодключения",УровеньЖурналаРегистрации.Ошибка,,,"Ошибка подключения к БД");
		Возврат;	
		
	КонецПопытки;
	
	
	ЗаписьЖурналаРегистрации("ВыгрузкаВМириаду.УдалениеДанных",УровеньЖурналаРегистрации.Информация,,,"Удаление предыдущих данных");
	
	Connection.Execute("delete from post");
	Connection.Execute("delete from department");
	Connection.Execute("delete from user");
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РаботникиОрганизаций.Сотрудник КАК Сотрудник,
	|	РаботникиОрганизаций.Сотрудник.ДатаУвольнения КАК ДатаУвольнения,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизаций.ПериодЗавершения <= &ДатаВыгрузки
	|				И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РаботникиОрганизаций.ОбособленноеПодразделениеЗавершения
	|		ИНАЧЕ РаботникиОрганизаций.ОбособленноеПодразделение
	|	КОНЕЦ КАК ОбособленноеПодразделение,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизаций.ПериодЗавершения <= &ДатаВыгрузки
	|				И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РаботникиОрганизаций.ОбособленноеПодразделениеЗавершения.Наименование
	|		ИНАЧЕ РаботникиОрганизаций.ОбособленноеПодразделение.Наименование
	|	КОНЕЦ КАК ОбособленноеПодразделениеНаименование,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизаций.ПериодЗавершения <= &ДатаВыгрузки
	|				И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РаботникиОрганизаций.ОбособленноеПодразделениеЗавершения.Код
	|		ИНАЧЕ РаботникиОрганизаций.ОбособленноеПодразделение.Код
	|	КОНЕЦ КАК ОбособленноеПодразделениеКод,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизаций.ПериодЗавершения <= &ДатаВыгрузки
	|				И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РаботникиОрганизаций.ОбособленноеПодразделениеЗавершения.ГоловнаяОрганизация.Код
	|		ИНАЧЕ РаботникиОрганизаций.ОбособленноеПодразделение.ГоловнаяОрганизация.Код
	|	КОНЕЦ КАК ГоловнаяОрганизацияКод,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизаций.ПериодЗавершения <= &ДатаВыгрузки
	|				И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РаботникиОрганизаций.ПодразделениеОрганизацииЗавершения
	|		ИНАЧЕ РаботникиОрганизаций.ПодразделениеОрганизации
	|	КОНЕЦ КАК Подразделение,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизаций.ПериодЗавершения <= &ДатаВыгрузки
	|				И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РаботникиОрганизаций.ПодразделениеОрганизацииЗавершения.Код
	|		ИНАЧЕ РаботникиОрганизаций.ПодразделениеОрганизации.Код
	|	КОНЕЦ КАК ПодразделениеКод,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизаций.ПериодЗавершения <= &ДатаВыгрузки
	|				И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РаботникиОрганизаций.ПодразделениеОрганизацииЗавершения.Наименование
	|		ИНАЧЕ РаботникиОрганизаций.ПодразделениеОрганизации.Наименование
	|	КОНЕЦ КАК ПодразделениеНаименование,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизаций.ПериодЗавершения <= &ДатаВыгрузки
	|				И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РаботникиОрганизаций.ПодразделениеОрганизацииЗавершения.Владелец.Код
	|		ИНАЧЕ РаботникиОрганизаций.ПодразделениеОрганизации.Владелец.Код
	|	КОНЕЦ КАК ПодразделениеВладелецКод,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизаций.ПериодЗавершения <= &ДатаВыгрузки
	|				И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РаботникиОрганизаций.ПодразделениеОрганизацииЗавершения.Родитель.Код
	|		ИНАЧЕ РаботникиОрганизаций.ПодразделениеОрганизации.Родитель.Код
	|	КОНЕЦ КАК ПодразделениеРодительКод,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизаций.ПериодЗавершения <= &ДатаВыгрузки
	|				И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РаботникиОрганизаций.ДолжностьЗавершения
	|		ИНАЧЕ РаботникиОрганизаций.Должность
	|	КОНЕЦ КАК Должность,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизаций.ПериодЗавершения <= &ДатаВыгрузки
	|				И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РаботникиОрганизаций.ДолжностьЗавершения.Код
	|		ИНАЧЕ РаботникиОрганизаций.Должность.Код
	|	КОНЕЦ КАК ДолжностьКод,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизаций.ПериодЗавершения <= &ДатаВыгрузки
	|				И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РаботникиОрганизаций.ДолжностьЗавершения.Наименование
	|		ИНАЧЕ РаботникиОрганизаций.Должность.Наименование
	|	КОНЕЦ КАК ДолжностьНаименование,
	|	РаботникиОрганизаций.ТабельныйНомер,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество,
	|	КонтактнаяИнформация.Представление КАК Телефон
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаВыгрузки, ) КАК РаботникиОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаВыгрузки, ) КАК ФИОФизЛицСрезПоследних
	|		ПО РаботникиОрганизаций.Сотрудник.Физлицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ПО РаботникиОрганизаций.Сотрудник.Физлицо = КонтактнаяИнформация.Объект
	|			И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	|			И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонМобильный))
	|
	|УПОРЯДОЧИТЬ ПО
	|	РаботникиОрганизаций.Сотрудник.Наименование";
	
	Запрос.УстановитьПараметр("ДатаВыгрузки",ТекущаяДата());
	
	ТЗПодразделения = Новый ТаблицаЗначений;
	ТЗПодразделения.Колонки.Добавить("Ссылка");
	ТЗПодразделения.Колонки.Добавить("Код");
	ТЗПодразделения.Колонки.Добавить("ВладелецКод");
	ТЗПодразделения.Колонки.Добавить("РодительКод");
	ТЗПодразделения.Колонки.Добавить("Наименование");
	ТЗПодразделения.Колонки.Добавить("ЧислоСортировки");
	
	ТЗДолжности = Новый ТаблицаЗначений;
	
	ТЗДолжности.Колонки.Добавить("Ссылка");
	ТЗДолжности.Колонки.Добавить("Код");
	ТЗДолжности.Колонки.Добавить("Наименование");
	
	
	ТЗСотрудники = Новый ТаблицаЗначений;
	ТЗСотрудники.Колонки.Добавить("Ссылка");
	ТЗСотрудники.Колонки.Добавить("ТабельныйНомер");
	ТЗСотрудники.Колонки.Добавить("ГУИД");
	ТЗСотрудники.Колонки.Добавить("ДолжностьКод");
	ТЗСотрудники.Колонки.Добавить("Фамилия");
	ТЗСотрудники.Колонки.Добавить("Имя");
	ТЗСотрудники.Колонки.Добавить("Отчество");
	ТЗСотрудники.Колонки.Добавить("Телефон");
	ТЗСотрудники.Колонки.Добавить("ПодразделениеКод");
	ТЗСотрудники.Колонки.Добавить("ДатаУвольнения");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПоискПодразделения = Новый Структура;
	ПоискДолжности = Новый Структура;
	
	ЗаписьЖурналаРегистрации("ВыгрузкаВМириаду.ОбработкаПолученныхДанных",УровеньЖурналаРегистрации.Информация,,,"Обработка полученных данных");
	
	
	Пока Выборка.Следующий() Цикл
		
		ПоискДолжности.Вставить("Ссылка",Выборка.Должность);
		
		Если ТЗДолжности.НайтиСтроки(ПоискДолжности).Количество()=0 Тогда
			
			НоваяСтрока = ТЗДолжности.Добавить();
			НоваяСтрока.Код = Выборка.ДолжностьКод;
			НоваяСтрока.Наименование = Выборка.ДолжностьНаименование;
			НоваяСтрока.Ссылка = Выборка.Должность;
			
		КонецЕсли;		
		
		ПоискПодразделения.Вставить("Ссылка",Выборка.Подразделение);
		
		Если ТЗПодразделения.НайтиСтроки(ПоискПодразделения).Количество()=0 Тогда
			
			НоваяСтрока = ТЗПодразделения.Добавить();
			НоваяСтрока.Код = Выборка.ПодразделениеКод;
			НоваяСтрока.Наименование = Выборка.ПодразделениеНаименование;
			НоваяСтрока.ВладелецКод = Выборка.ПодразделениеВладелецКод;
			НоваяСтрока.РодительКод = Выборка.ПодразделениеРодительКод;
			НоваяСтрока.Ссылка = Выборка.Подразделение;
			НоваяСтрока.ЧислоСортировки = 3;
			
		КонецЕсли;
		
		ПоискПодразделения.Вставить("Ссылка",Выборка.ОбособленноеПодразделение);
		
		Если ТЗПодразделения.НайтиСтроки(ПоискПодразделения).Количество()=0 Тогда
			
			НоваяСтрока = ТЗПодразделения.Добавить();
			НоваяСтрока.Код = Выборка.ОбособленноеПодразделениеКод;
			НоваяСтрока.Наименование = Выборка.ОбособленноеПодразделениеНаименование;
			НоваяСтрока.ВладелецКод = Выборка.ГоловнаяОрганизацияКод;			
			НоваяСтрока.Ссылка = Выборка.ОбособленноеПодразделение;
			
			Если ЗначениеЗаполнено(Выборка.ГоловнаяОрганизацияКод) ТОгда
				
				НоваяСтрока.ЧислоСортировки = 2;
				
			Иначе
				
				НоваяСтрока.ЧислоСортировки = 1;
				
			КонецЕсли;			
			
		КонецЕсли;
		
		
		НоваяСтрока = ТЗСотрудники.Добавить();
		
		НоваяСтрока.Ссылка = Выборка.Сотрудник;
		НоваяСтрока.ТабельныйНомер = Выборка.ТабельныйНомер;
		НоваяСтрока.ГУИД = Выборка.Сотрудник.УникальныйИдентификатор();
		НоваяСтрока.ДолжностьКод = Выборка.ДолжностьКод;
		НоваяСтрока.Фамилия = Выборка.Фамилия;
		НоваяСтрока.Имя = Выборка.Имя;
		НоваяСтрока.Отчество = Выборка.Отчество;
		НоваяСтрока.Имя = Выборка.Имя;
		НоваяСтрока.Телефон = Выборка.Телефон;
		НоваяСтрока.ПодразделениеКод = Выборка.ПодразделениеКод;
		НоваяСтрока.ДатаУвольнения = Выборка.ДатаУвольнения;
		
	КонецЦикла;
	

	ТЗДолжности.Сортировать("Код");
	ВыгруженоДолжностей = 0;
	
	Попытка
		
		ЗаписьЖурналаРегистрации("ВыгрузкаВМириаду.ЗаписьДанных",УровеньЖурналаРегистрации.Информация,,,"Начата запись новых данных");
		
		НачатьТранзакцию();
		
		ЛогФайл.ДобавитьСтроку("Добавляем должности...");
		
		Для каждого Стр Из ТЗДолжности Цикл
		
			id = Строка(Число(Стр.Код));
			name = СокрЛП(Стр.Наименование);
			
			CommandText = "insert into post (id, name) values ("+id+",'"+name+"')";
			Connection.Execute(CommandText);
			ВыгруженоДолжностей = ВыгруженоДолжностей + 1;
			ЛогФайл.ДобавитьСтроку("id - "+id+",name -  "+name);
			
		КонецЦикла;
	
		ТЗПодразделения.Сортировать("ЧислоСортировки,Код");
		ВыгруженоПодразделений = 0;
		
		
		ЛогФайл.ДобавитьСтроку("Добавляем подразделения...");
		
		Для каждого Стр Из ТЗПодразделения Цикл		
		
			id = Формат(Число(Стр.Код),"ЧГ=");
			name = СокрЛП(Стр.Наименование);
			
			Если ТипЗнч(Стр.Ссылка)=Тип("СправочникСсылка.Организации") ТОгда
				parent_id = "NULL";
			ИначеЕсли ЗначениеЗаполнено(Стр.РодительКод) ТОгда
				parent_id = Формат(Число(Стр.РодительКод),"ЧГ=");
			Иначе
				parent_id = Формат(Число(Стр.ВладелецКод),"ЧГ=");
			КонецЕсли;
			
			_1c_region_id = id;
			
			CommandText = "insert into department (id, name, parent_id, 1c_region_id) values ("+id+",'"+name+"',"+parent_id+","+_1c_region_id+")";
			Connection.Execute(CommandText);
			ВыгруженоПодразделений = ВыгруженоПодразделений + 1;
			
			ЛогФайл.ДобавитьСтроку("id - "+id+",name -  "+name+", parent_id - "+parent_id+",_1c_region_id - "+_1c_region_id);
			
		КонецЦикла;	
	
		ТЗСотрудники.Сортировать("Ссылка");
		
		ВыгруженоСотрудников = 0;
		
		ЛогФайл.ДобавитьСтроку("Добавляем сотрудников...");
		
		Для каждого Стр Из ТЗСотрудники Цикл
		
			human_id = Формат(Число(Стр.ТабельныйНомер),"ЧГ=");
			GUID = стр.ГУИД;
			post_id = Формат(Число(Стр.ДолжностьКод),"ЧГ=");
			_1c_region_id = Формат(Число(Стр.ПодразделениеКод),"ЧГ=");
			firstname = Стр.Имя;
			lastname = Стр.Фамилия;
			patronymic = Стр.Отчество;
			phone = СокрЛП(Стр.Телефон);
			fired = ?(ЗначениеЗаполнено(Стр.ДатаУвольнения) и Стр.ДатаУвольнения<=ТекущаяДата(),1,0);
			
			CommandText = "insert into user (human_id, GUID, fired, post_id, firstname, lastname, patronymic, phone, 1c_region_id) values ("+human_id+",'"+GUID+"',"+fired+","+post_id+",'"+firstname+"','"+lastname+"','"+patronymic+"','"+phone+"',"+_1c_region_id+")";			
			Connection.Execute(CommandText);
			ВыгруженоСотрудников = ВыгруженоСотрудников + 1;
			
			ЛогФайл.ДобавитьСтроку("human_id - "+Строка(human_id)+", GUID - "+GUID+", fired - "+fired+",post_id - "+Строка(post_id)+",firstname - "+firstname+",lastname - "+lastname+", patronymic - "+patronymic+", phone - "+phone+", 1c_region_id - "+ Строка(_1c_region_id));

		КонецЦикла;
	
		ЗафиксироватьТранзакцию();
		
		ЗаписьЖурналаРегистрации("ВыгрузкаВМириаду.ЗаписьДанных",УровеньЖурналаРегистрации.Информация,,,"Запись новых данных успешно завершена");
		
		//Сообщить("Выгружено сотрудников "+Строка(ВыгруженоСотрудников));
		//Сообщить("Выгружено подразделений "+Строка(ВыгруженоПодразделений));
		//Сообщить("Выгружено должностей "+Строка(ВыгруженоДолжностей));
	
	Исключение
		
		ЗаписьЖурналаРегистрации("ВыгрузкаВМириаду.ЗаписьДанных",УровеньЖурналаРегистрации.Ошибка,,,"Ошибка записи новых данных: "+ОписаниеОшибки()+". Команда: "+CommandText);
		ОтменитьТранзакцию();
		
	КонецПопытки;
	
	ЛогФайл.Записать("C:\1C\debug\1c_keycloack_"+СтрЗаменить(СтрЗаменить(СтрЗаменить(ТекущаяДата(),".","_")," ","_"),":","_")+".log");
 //  RS = Новый COMОбъект("ADODB.Recordset"); 
 //  RS.CursorType=3;
 //  
 //  RS.ActiveConnection=Connection;
 //  RS.Open("select * from post");
 //   
 //  RS.MoveFirst(); 
 //   
 //  Пока RS.EOF()=0 Цикл
 //   
 //   	name = RS.Fields("name").Value;
 //   	Сообщить(name);
 //
 //	   RS.MoveNext();    
 //      
 //  КонецЦикла;    
 //  
 //  RS.Close();
 
    Connection.Close();
	
КонецПроцедуры
