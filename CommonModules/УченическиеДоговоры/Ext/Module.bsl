///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ЗАДАЧ ПО УЧЕНИЧЕСКИМ ДОГОВОРАМ

// Функция формирует запрос по ученическим договорам
// В режиме печати документа формирует список обязательств по ученическим договорам
//
Функция СформироватьЗапросПоУченическимДоговорам(ДокументСсылка = Неопределено, ДатаПолученияФИО = '00010101') Экспорт
	
	ВестиОбучениеРазвитиеПоЦентрамОтветственности = ПолучитьФункциональнуюОпцию("ВестиОбучениеРазвитиеПоЦентрамОтветственности");
	
	Если ВестиОбучениеРазвитиеПоЦентрамОтветственности Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ОбязательстваРаботниковПоУченическимДоговорам.Период,
		|	Увольнение.Ссылка КАК Событие,
		|	ОбязательстваРаботниковПоУченическимДоговорам.ФизЛицо КАК ФизЛицо,
		|	ФИОФизЛицСрезПоследних.Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя,
		|	ФИОФизЛицСрезПоследних.Отчество,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыМероприятийАдаптацииУвольнения.Увольнение) КАК ВидМероприятий,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	РаботникиСрезПоследних.Подразделение КАК Подразделение,
		|	УченическийДоговор.Ссылка КАК УченическийДоговор,
		|	УченическийДоговор.Номер КАК НомерУчДоговора,
		|	УченическийДоговор.Дата КАК ДатаУчДоговора,
		|	ОбязательстваРаботниковПоУченическимДоговорам.Сумма КАК СуммаРасходов,
		|	ОбязательстваРаботниковПоУченическимДоговорам.Период КАК СрокИсполнения,
		|	ЗНАЧЕНИЕ(Справочник.РолиИсполнителей.Расчетчик) КАК Роль,
		|	Увольнение.Номер КАК НомерПриказа,
		|	Увольнение.Дата КАК ДатаПриказа
		|ИЗ
		|	РегистрСведений.ОбязательстваРаботниковПоУченическимДоговорам.СрезПоследних(, Регистратор = &Регистратор) КАК ОбязательстваРаботниковПоУченическимДоговорам
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Увольнение КАК Увольнение
		|		ПО ОбязательстваРаботниковПоУченическимДоговорам.Регистратор = Увольнение.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УченическийДоговор КАК УченическийДоговор
		|		ПО ОбязательстваРаботниковПоУченическимДоговорам.Договор = УченическийДоговор.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Работники.СрезПоследних(, ) КАК РаботникиСрезПоследних
		|		ПО ОбязательстваРаботниковПоУченическимДоговорам.ФизЛицо = РаботникиСрезПоследних.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаПолученияФИО, ) КАК ФИОФизЛицСрезПоследних
		|		ПО ОбязательстваРаботниковПоУченическимДоговорам.ФизЛицо = ФИОФизЛицСрезПоследних.ФизЛицо";
	Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ОбязательстваРаботниковПоУченическимДоговорам.Период КАК Период,
		|	Увольнение.Ссылка КАК Событие,
		|	ОбязательстваРаботниковПоУченическимДоговорам.ФизЛицо КАК ФизЛицо,
		|	ФИОФизЛицСрезПоследних.Фамилия КАК Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя КАК Имя,
		|	ФИОФизЛицСрезПоследних.Отчество КАК Отчество,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыМероприятийАдаптацииУвольнения.Увольнение) КАК ВидМероприятий,
		|	ОбязательстваРаботниковПоУченическимДоговорам.Организация,
		|	ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка) КАК Подразделение,
		|	УченическийДоговор.Ссылка КАК УченическийДоговор,
		|	УченическийДоговор.Номер КАК НомерУчДоговора,
		|	УченическийДоговор.Дата КАК ДатаУчДоговора,
		|	ОбязательстваРаботниковПоУченическимДоговорам.Сумма КАК СуммаРасходов,
		|	ОбязательстваРаботниковПоУченическимДоговорам.Период КАК СрокИсполнения,
		|	ЗНАЧЕНИЕ(Справочник.РолиИсполнителей.Расчетчик) КАК Роль,
		|	Увольнение.Номер КАК НомерПриказа,
		|	Увольнение.Дата КАК ДатаПриказа
		|ИЗ
		|	РегистрСведений.ОбязательстваРаботниковПоУченическимДоговорам.СрезПоследних(, Регистратор = &Регистратор) КАК ОбязательстваРаботниковПоУченическимДоговорам
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УвольнениеИзОрганизаций КАК Увольнение
		|		ПО ОбязательстваРаботниковПоУченическимДоговорам.Регистратор = Увольнение.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УченическийДоговор КАК УченическийДоговор
		|		ПО ОбязательстваРаботниковПоУченическимДоговорам.Договор = УченическийДоговор.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаПолученияФИО, ) КАК ФИОФизЛицСрезПоследних
		|		ПО ОбязательстваРаботниковПоУченическимДоговорам.ФизЛицо = ФИОФизЛицСрезПоследних.ФизЛицо";
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДокументСсылка) Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|		ЛЕВОЕ СОЕДИНЕНИЕ Задача.ЗадачаИсполнителя КАК Задачи
		|		ПО (Увольнение.Ссылка = Задачи.ОбъектЗадачи)
		|			И (Задачи.ВидЗадачи = ЗНАЧЕНИЕ(Справочник.ВидыЗадачПользователей.ОбязательстваПоУченическомуДоговору))
		|ГДЕ
		|	ОбязательстваРаботниковПоУченическимДоговорам.Погашено
		|	И Задачи.Ссылка ЕСТЬ NULL ";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|ГДЕ
		|	ОбязательстваРаботниковПоУченическимДоговорам.Погашено
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОбязательстваРаботниковПоУченическимДоговорам.НомерСтроки,
		|	НомерПриказа
		|ИТОГИ
		|	МАКСИМУМ(ФизЛицо),
		|	МАКСИМУМ(ОбязательстваРаботниковПоУченическимДоговорам.Период),
		|	МАКСИМУМ(НомерПриказа),
		|	МАКСИМУМ(ДатаПриказа)
		|ПО
		|	ФизЛицо,
		|	ВидМероприятий";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Если ЗначениеЗаполнено(ДокументСсылка) Тогда
		Запрос.УстановитьПараметр("Регистратор", ДокументСсылка);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Регистратор = &Регистратор", "");
	КонецЕсли;
	Запрос.УстановитьПараметр("ДатаПолученияФИО", ДатаПолученияФИО);
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросПоУченическимДоговорам

Функция ПолучитьНаименованиеЗадачи(Выборка)
	
	ШаблонТекста = НСтр("ru = 'Удержание по ученическому договору №%3 от %4 с %1 в срок до %2'");
	НаименованиеЗадачи 	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекста, 
		ОбщегоНазначенияЗК.ПредставлениеРаботника(Выборка.ФизЛицо, 2), Формат(Выборка.СрокИсполнения, "ДЛФ=DD"), Выборка.НомерУчДоговора, Формат(Выборка.ДатаУчДоговора, "ДЛФ=DD"));
	
	Возврат НаименованиеЗадачи;
	
КонецФункции // ПолучитьНаименованиеЗадачи

Процедура НазначениеЗадачПоУченическимДоговорам() Экспорт
	
	ВыборкаПоУченическимДоговорам = СформироватьЗапросПоУченическимДоговорам().Выбрать();
	
	Пока ВыборкаПоУченическимДоговорам.Следующий() Цикл
		
		ЗадачаПоУченическомуДоговору = Задачи.ЗадачаИсполнителя.СоздатьЗадачу();
		ЗадачаПоУченическомуДоговору.Дата			= ВыборкаПоУченическимДоговорам.СрокИсполнения;
		ЗадачаПоУченическомуДоговору.ВидЗадачи		= Справочники.ВидыЗадачПользователей.ОбязательстваПоУченическомуДоговору;
		ЗадачаПоУченическомуДоговору.ОбъектЗадачи	= ВыборкаПоУченическимДоговорам.Событие;
		ЗадачаПоУченическомуДоговору.Наименование	= ПолучитьНаименованиеЗадачи(ВыборкаПоУченическимДоговорам);
		УправлениеЗадачами.ЗаписатьАдресациюЗадачи(ЗадачаПоУченическомуДоговору, ВыборкаПоУченическимДоговорам.Организация, ВыборкаПоУченическимДоговорам.Роль, ВыборкаПоУченическимДоговорам.Подразделение);
		ЗадачаПоУченическомуДоговору.Записать();
		
	КонецЦикла;
	
КонецПроцедуры // НазначениеЗадачПоУченическимДоговорам

// Процедура предназначена для отражения в учете погашения 
//  обязательств по ученическим договорам увольняемого сотрудника,
//  а также компенсации расходов связанных с обучением
//
Процедура ПогаситьОбязательстваПриУвольнении(Движения, ДокументУвольнениеСсылка) Экспорт
	
	Выборка = УченическиеДоговорыСервер.СформироватьЗапросПоОбязательствам(ДокументУвольнениеСсылка).Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Движения.ОбязательстваРаботниковПоУченическимДоговорам.Добавить(), Выборка);
	КонецЦикла;
	
КонецПроцедуры // ПогаситьОбязательстваПриУвольнении