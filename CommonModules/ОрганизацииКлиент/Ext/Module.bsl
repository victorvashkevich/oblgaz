Процедура ФормаЭлементаСписокОтветственныхЛицПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ, ЭтаФорма) Экспорт
	
	Если Не ОтменаРедактирования и Элемент.ТекущиеДанные.ОтветственноеЛицо.Пустая() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Функция возвращает список доступных для отображения и ввода 
//ответственных лиц организации
Функция СформироватьСписокДоступныхОтветственныхЛиц()
	
	СписокДоступныхОтЛ = Новый СписокЗначений;
	СписокДоступныхОтЛ.Добавить(Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
	СписокДоступныхОтЛ.Добавить(Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер);
	СписокДоступныхОтЛ.Добавить(Перечисления.ОтветственныеЛицаОрганизаций.РуководительКадровойСлужбы);
	СписокДоступныхОтЛ.Добавить(Перечисления.ОтветственныеЛицаОрганизаций.Кассир);
	СписокДоступныхОтЛ.Добавить(Перечисления.ОтветственныеЛицаОрганизаций.УполномоченныйПредставитель);
	//СписокДоступныхОтЛ.Добавить(Перечисления.ОтветственныеЛицаОрганизаций.ОтветственныйЗаНалоговыеРегистры);
	СписокДоступныхОтЛ.Добавить(Перечисления.ОтветственныеЛицаОрганизаций.Исполнитель);
	СписокДоступныхОтЛ.Добавить(Перечисления.ОтветственныеЛицаОрганизаций.ПредседательПрофкома);
	
	
	Возврат СписокДоступныхОтЛ;
	
КонецФункции

// Управление видимостью колонки Период в табличном поле СписокОтветственныхЛиц
// и отбором по последним
Процедура УстановитьПоказИсторииОтветственных(ПоказыватьИсторию, ЭтаФорма)
	
	//ЭлементыФормы.СписокОтветственныхЛиц.Колонки.Период.Видимость = ПоказыватьИсторию;
	ЭтаФорма.ЭлементыФормы.СписокОтветственныхЛиц.ВыбиратьСрез = ?(ПоказыватьИсторию, ИспользованиеСреза.НеИспользовать, ИспользованиеСреза.Последние);
	
КонецПроцедуры

Процедура УстановкаОтборовДляОтветственныхЛиц(ЭтаФорма)
	
	Если ЭтаФорма.ЭтоНовый() Тогда
		Возврат;
	КонецЕсли;
	
	СписокОтветственныхЛиц	= ЭтаФорма.СписокОтветственныхЛиц;
	ЭлементыФормы			= ЭтаФорма.ЭлементыФормы;
	
	// Установка Списка ответственных лиц
	СписокОтветственныхЛиц.Отбор.СтруктурнаяЕдиница.ВидСравнения  = ВидСравнения.Равно;
	СписокОтветственныхЛиц.Отбор.СтруктурнаяЕдиница.Значение      = ЭтаФорма.Ссылка;
	СписокОтветственныхЛиц.Отбор.СтруктурнаяЕдиница.Использование = Истина;
	ЭлементыФормы.СписокОтветственныхЛиц.НастройкаОтбора.СтруктурнаяЕдиница.Доступность = Ложь;
	
	СписокДоступныхОтвЛиц = СформироватьСписокДоступныхОтветственныхЛиц();
	СписокОтветственныхЛиц.Отбор.ОтветственноеЛицо.ВидСравнения  = ВидСравнения.ВСписке;
	СписокОтветственныхЛиц.Отбор.ОтветственноеЛицо.Значение      = СписокДоступныхОтвЛиц;
	СписокОтветственныхЛиц.Отбор.ОтветственноеЛицо.Использование = Истина;
	ЭлементыФормы.СписокОтветственныхЛиц.НастройкаОтбора.ОтветственноеЛицо.Доступность = Ложь;
	
	// Ограничение на ввод значения
	ЭлементыФормы.СписокОтветственныхЛиц.Колонки.ОтветственноеЛицо.ЭлементУправления.СписокВыбора = СписокДоступныхОтвЛиц;
	
	УстановитьПоказИсторииОтветственных(ЭлементыФормы.КоманднаяПанельСпискаОтветственных.Кнопки.История.Пометка, ЭтаФорма);
	
КонецПроцедуры

Процедура ФормаЭлементаПриОткрытии(ЭтаФорма) Экспорт
	
	ЭлементыФормы = ЭтаФорма.ЭлементыФормы;
			
	УстановкаОтборовДляОтветственныхЛиц(ЭтаФорма);
	
	ЭтаФорма.СписокОтветственныхЛиц.Порядок.Установить("ОтветственноеЛицо, Период");
	Для Каждого ЭлементПорядка Из ЭлементыФормы.СписокОтветственныхЛиц.НастройкаПорядка Цикл
		ЭлементПорядка.Доступность = Ложь;
	КонецЦикла;

	
КонецПроцедуры

Процедура ФормаЭлементаКоманднаяПанельСпискаОтветственныхИстория(Кнопка, ЭтаФорма) Экспорт
	
	Кнопка.Пометка = Не Кнопка.Пометка;
	
	УстановитьПоказИсторииОтветственных(Кнопка.Пометка, ЭтаФорма);
	
КонецПроцедуры