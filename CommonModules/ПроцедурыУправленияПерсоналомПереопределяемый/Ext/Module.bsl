

// Проверяет, заполнен ли регламентированный производственный календарь за переданный период 
//
// Параметры
//  ДатаНач, ДатаКон - дата, определяют проверяемый период
//  ВыводитьСообщения - булево - признак вывода сообщений в окно сообщений, по умолчанию - ложь
//
// Возвращаемое значение:
//   Булево  - если колендарь заполнен за весь период
//
Функция РегламентированныйКалендарьЗаполнен(ДатаНач, ДатаКон, ВыводитьСообщения = Ложь) Экспорт 

	Сообщение = "";
	КалендарьЗаполнен = ПроцедурыУправленияПерсоналом.РегламентированныйКалендарьЗаполнен(ДатаНач, ДатаКон, Сообщение); 
	Если Не КалендарьЗаполнен и ВыводитьСообщения Тогда
		Сообщить(Сообщение + "
		|Интерфейсы: ""Полный"", ""Расчет зарплаты организаций"", ""Кадровый учет организаций"", пункт меню Предприятие - Производственный календарь.");
	КонецЕсли;
	
    Возврат КалендарьЗаполнен
	
КонецФункции // РегламентированныйКалендарьЗаполнен()

////////////////////////////////////////////////////////////////////////////////
// ГОЛОВНЫЕ ОРГАНИЗАЦИИ И ОБОСОБЛЕННЫЕ ПОДРАЗДЕЛЕНИЯ


// Функция ищет резюме кандидата
//
// В параметр ТиповаяАнкета будет передана ссылка на найденную типовую анкету
Функция НайтиРезюмеКандидата(ЗаявкаКандидата, ТиповаяАнкета = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ЗаявкаКандидата",	ЗаявкаКандидата);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА Должности.АнкетаРезюмеКандидата ЕСТЬ NULL 
	|				ИЛИ Должности.АнкетаРезюмеКандидата = ЗНАЧЕНИЕ(Справочник.ТиповыеАнкеты.ПустаяСсылка)
	|			ТОГДА Константы.АнкетаРезюмеКандидата
	|		ИНАЧЕ Должности.АнкетаРезюмеКандидата
	|	КОНЕЦ КАК ТиповаяАнкета
	|ИЗ
	|	Константы КАК Константы
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЗаявкиКандидатов.Должность.АнкетаРезюмеКандидата КАК АнкетаРезюмеКандидата
	|		ИЗ
	|			Справочник.ЗаявкиКандидатов КАК ЗаявкиКандидатов
	|		ГДЕ
	|			ЗаявкиКандидатов.Ссылка = &ЗаявкаКандидата) КАК Должности
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА Должности.АнкетаРезюмеКандидата ЕСТЬ NULL 
	|					ИЛИ Должности.АнкетаРезюмеКандидата = ЗНАЧЕНИЕ(Справочник.ТиповыеАнкеты.ПустаяСсылка)
	|				ТОГДА Константы.АнкетаРезюмеКандидата
	|			ИНАЧЕ Должности.АнкетаРезюмеКандидата
	|		КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.ТиповыеАнкеты.ПустаяСсылка)";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ТиповаяАнкета	= Выборка.ТиповаяАнкета;
		
	Иначе
		Возврат Неопределено;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТиповаяАнкета",		ТиповаяАнкета);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Опрос.Ссылка
	|ИЗ
	|	Документ.Опрос КАК Опрос
	|ГДЕ
	|	Опрос.ОпрашиваемоеЛицо = &ЗаявкаКандидата
	|	И Опрос.ТиповаяАнкета = &ТиповаяАнкета
	|
	|УПОРЯДОЧИТЬ ПО
	|	Опрос.Дата УБЫВ";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
		
	Иначе
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБЕСПЕЧЕНИЯ РАБОТЫ ФОРМ ДОКУМЕНТОВ

#Если Клиент Тогда
	
Процедура ОбработкаВыбораТабличнойЧастиСЗаполнениемПоказателейРасчета(ВыбранноеЗначение, ТабличнаяЧасть) Экспорт

	Для Каждого Сотрудник Из ВыбранноеЗначение.Сотрудники Цикл
		Если ТабличнаяЧасть.НайтиСтроки(Новый Структура("Сотрудник", Сотрудник)).Количество() = 0 Тогда
			СтрокаТабличнойЧасти = ТабличнаяЧасть.Добавить();
			СтрокаТабличнойЧасти.Сотрудник	= Сотрудник;
			СтрокаТабличнойЧасти.ФизЛицо	= Сотрудник.ФизЛицо;
			Для Каждого Параметр Из ВыбранноеЗначение.ПараметрыПодбора Цикл
				Если ЗначениеЗаполнено(Параметр.Значение) Тогда
					СтрокаТабличнойЧасти[Параметр.Ключ] = Параметр.Значение;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры //ОбработкаВыбораТабличнойЧастиСЗаполнениемПоказателейРасчета


Процедура ОткрытьФормуВыбораСотрудникаОрганизацииСПоказателями(МДРеквизиты, ЭлементыФормы, Ссылка, Дата, ГоловнаяОрганизация, ТабличнаяЧасть, ИмяТЧ, ЕстьТРиВалюта, НаименованиеПоказатель, МассивПоказателей = Неопределено) Экспорт
	
	РеквизитыПодбора = Новый Массив;
	ПредставленияПодбора = Новый Соответствие;
	
	Для СчПоказателей = 1 По 6 Цикл
		Если МассивПоказателей <> Неопределено И МассивПоказателей.Найти("Показатель"+СчПоказателей) = Неопределено Тогда
			Продолжить
		КонецЕсли;
		Если ЕстьТРиВалюта И ЭлементыФормы[ИмяТЧ].Колонки["НаименованиеПоказательТР" + СчПоказателей].Видимость Тогда
			РеквизитыПодбора.Добавить(МДРеквизиты["ТарифныйРазряд" + СчПоказателей]);
			ПредставленияПодбора.Вставить(МДРеквизиты["ТарифныйРазряд" + СчПоказателей], ЭлементыФормы[ИмяТЧ].Колонки["НаименованиеПоказательТР" + СчПоказателей].ТекстШапки);
		ИначеЕсли ЭлементыФормы[ИмяТЧ].Колонки["Показатель" + СчПоказателей].Видимость Тогда
			РеквизитыПодбора.Добавить(МДРеквизиты["Показатель" + СчПоказателей]);
			ПредставленияПодбора.Вставить(МДРеквизиты["Показатель" + СчПоказателей], ЭлементыФормы[ИмяТЧ].Колонки[НаименованиеПоказатель + СчПоказателей].ТекстШапки);
			Если ЕстьТРиВалюта Тогда
				Если ЭлементыФормы[ИмяТЧ].Колонки["Валюта" + СчПоказателей].Видимость Тогда
					РеквизитыПодбора.Добавить(МДРеквизиты["Валюта" + СчПоказателей]);
					ПредставленияПодбора.Вставить(МДРеквизиты["Валюта" + СчПоказателей], "Установлена валюта");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыПодбора = Новый Структура;
	ПараметрыПодбора.Вставить("Реквизиты", РеквизитыПодбора);
	ПараметрыПодбора.Вставить("Представления", ПредставленияПодбора);
	
	Если ГоловнаяОрганизация = Неопределено Тогда
		ОткрытьФормуВыбораСотрудника(ЭлементыФормы[ИмяТЧ], Ссылка, Ложь, Дата, , ТабличнаяЧасть.ВыгрузитьКолонку("Сотрудник"),,ПараметрыПодбора);
	Иначе
		ОткрытьФормуВыбораСотрудникаОрганизации(ЭлементыФормы[ИмяТЧ], Ссылка, Ложь, Дата, ГоловнаяОрганизация, 2,, ТабличнаяЧасть.ВыгрузитьКолонку("Сотрудник") , , , ПараметрыПодбора);
	КонецЕсли;
	
КонецПроцедуры //ЗаполнитьРеквизитыПодбораПоказателямиРасчета

// Функция ищет единственного сотрудника среди работников предприятия или организаций по
//  началу его наименования
//
// Параметры
//  СтандартнаяОбработка – параметр стандартной обработки события обработчика АвтоПодборТекста
//	Режим – число, определяет источники, из которых производится подбор 
//	Текст  - начальные буквы ФИО, текст из обработчика АвтоПодборТекста
//	Организация – ссылка на организацию по которой подбирать сотрудников (работников)
//	ВозвращатьФизлицо – параметр определяет, что должна вернуть функция, наименование Сотрудника или Физлица
//	ТолькоАктуальных – параметр определяет, вести поиск среди всех сотрудников, или только актуальных
//	Регистратор - при вызове из приема на работу передаем ссылку на текущий Документ
//
// Возвращаемое значение
//  строка - наименование найденного сотрудника, физлица, если он единственный
Функция ПодобратьФИОСотрудника(СтандартнаяОбработка, Режим, Знач Текст, Организация = Неопределено, ВозвращатьФизлицо = Ложь, ТолькоАктуальные = Истина, Регистратор = Неопределено) Экспорт
	
	ТекстАвтоПодбора = "";
	СтандартнаяОбработка = Ложь;
	
	Запрос = Новый Запрос;
		
	// заменим спецсимволы
	Текст = СтрЗаменить(Текст, "~", "~~");
	Текст = СтрЗаменить(Текст, "%", "~%");
	Текст = СтрЗаменить(Текст, "_", "~_");
	Текст = СтрЗаменить(Текст, "[", "~[");
	Текст = СтрЗаменить(Текст, "-", "~-");
	Текст = Текст+"%";
	
	Запрос.УстановитьПараметр("Текст", Текст);
	
	//условие по Организации используем, если в качестве параметра передана не пустая ссылка на справочник
	Если ЗначениеЗаполнено(Организация) и ТипЗнч(Организация) = Тип("СправочникСсылка.Организации") Тогда
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Иначе
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", Справочники.Организации.ПустаяСсылка());
	КонецЕсли;
	Запрос.УстановитьПараметр("НеОтбиратьПоОрганизации", Не (ЗначениеЗаполнено(Организация) и ТипЗнч(Организация) = Тип("СправочникСсылка.Организации")));
	
	Запрос.УстановитьПараметр("НеУчитыватьАктуальность", Не ТолькоАктуальные);
	
	Если Режим = 0 или Режим = 1 или Режим = 6 Тогда
		
		ДоговорыГПХ = Новый Массив;
		ДоговорыГПХ.Добавить(Перечисления.ВидыДоговоровСФизЛицами.Авторский);
		ДоговорыГПХ.Добавить(Перечисления.ВидыДоговоровСФизЛицами.Подряда);
		Запрос.УстановитьПараметр("ДоговорыГПХ", ДоговорыГПХ);
		
		СписокДоговоров = Новый Массив;
		СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);
		Запрос.УстановитьПараметр("СписокДоговоров", СписокДоговоров);
		
		Если ВозвращатьФизлицо Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
            |   Сотрудники.ФизлицоНаименование КАК Наименование
            |ИЗ
            |   (ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
            |       Работники.Сотрудник.Физлицо.Наименование КАК ФизлицоНаименование
            |   ИЗ
            |       РегистрСведений.РаботникиОрганизаций КАК Работники
            |   ГДЕ
            |       Работники.Сотрудник.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
            |       И (&НеОтбиратьПоОрганизации
            |               ИЛИ Работники.Сотрудник.Организация = &ГоловнаяОрганизация)
            |       И (&НеУчитыватьАктуальность
            |               ИЛИ Работники.Сотрудник.Актуальность)
            |       И Работники.Сотрудник.ВидДоговора В(&СписокДоговоров)
            |   
            |   ОБЪЕДИНИТЬ
            |   
            |   ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
            |       Договорники.Физлицо.Наименование
            |   ИЗ
            |       Справочник.СотрудникиОрганизаций КАК Договорники
            |   ГДЕ
            |       Договорники.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
            |       И (&НеОтбиратьПоОрганизации
            |               ИЛИ Договорники.Организация = &ГоловнаяОрганизация)
            |       И (&НеУчитыватьАктуальность
            |               ИЛИ Договорники.Актуальность)
            |       И Договорники.ВидДоговора В(&ДоговорыГПХ)) КАК Сотрудники";
			
		Иначе
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
            |   Сотрудники.Наименование КАК Наименование
            |ИЗ
            |   (ВЫБРАТЬ РАЗЛИЧНЫЕ
            |       Работники.Сотрудник.Наименование КАК Наименование
            |   ИЗ
            |       РегистрСведений.РаботникиОрганизаций КАК Работники
            |   ГДЕ
            |       Работники.Сотрудник.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
            |       И (&НеОтбиратьПоОрганизации
            |               ИЛИ Работники.Сотрудник.Организация = &ГоловнаяОрганизация)
            |       И (&НеУчитыватьАктуальность
            |               ИЛИ Работники.Сотрудник.Актуальность)
            |       И Работники.Сотрудник.ВидДоговора В(&СписокДоговоров)
            |   
            |   ОБЪЕДИНИТЬ
            |   
            |   ВЫБРАТЬ РАЗЛИЧНЫЕ
            |       Договорники.Наименование
            |   ИЗ
            |       Справочник.СотрудникиОрганизаций КАК Договорники
            |   ГДЕ
            |       Договорники.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
            |       И (&НеОтбиратьПоОрганизации
            |               ИЛИ Договорники.Организация = &ГоловнаяОрганизация)
            |       И (&НеУчитыватьАктуальность
            |               ИЛИ Договорники.Актуальность)
            |       И Договорники.ВидДоговора В(&ДоговорыГПХ)) КАК Сотрудники";
			
		КонецЕсли;
		
	ИначеЕсли Режим = 2 или Режим = 3 или Режим = 4 или Режим = 5 или Режим = 7 или Режим = 9 или Режим = 10 Тогда
		
		СписокДоговоров = Новый Массив;
		Если Режим = 2 Тогда
			СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);
		ИначеЕсли Режим = 3 Тогда
			СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);
		ИначеЕсли Режим = 4 Тогда
			СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);
		ИначеЕсли Режим = 5 Тогда
			СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);
		ИначеЕсли Режим = 7 Тогда
			СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);
		ИначеЕсли Режим = 9 Тогда
		ИначеЕсли Режим = 10 Тогда
		КонецЕсли;
		Запрос.УстановитьПараметр("СписокДоговоров", СписокДоговоров);
		
		Если ВозвращатьФизлицо Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
            |   Работники.Сотрудник.Физлицо.Наименование КАК Наименование
            |ИЗ
            |   РегистрСведений.РаботникиОрганизаций КАК Работники
            |ГДЕ
            |   Работники.Сотрудник.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
            |   И (&НеОтбиратьПоОрганизации
            |           ИЛИ Работники.Сотрудник.Организация = &ГоловнаяОрганизация)
            |   И (&НеУчитыватьАктуальность
            |           ИЛИ Работники.Сотрудник.Актуальность)
            |   И Работники.Сотрудник.ВидДоговора В(&СписокДоговоров)";
			
		Иначе
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
            |   Работники.Сотрудник.Наименование КАК Наименование
            |ИЗ
            |   РегистрСведений.РаботникиОрганизаций КАК Работники
            |ГДЕ
            |   Работники.Сотрудник.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
            |   И (&НеОтбиратьПоОрганизации
            |           ИЛИ Работники.Сотрудник.Организация = &ГоловнаяОрганизация)
            |   И (&НеУчитыватьАктуальность
            |           ИЛИ Работники.Сотрудник.Актуальность)
            |   И Работники.Сотрудник.ВидДоговора В(&СписокДоговоров)";
			
		КонецЕсли;
		
	ИначеЕсли Режим = 8 Тогда
		
		СписокДоговоров = Новый Массив;
		СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.Подряда);
		СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.Авторский);
		Запрос.УстановитьПараметр("СписокДоговоров", СписокДоговоров);
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
        |   Сотрудники.Наименование КАК Наименование
        |ИЗ
        |   Справочник.СотрудникиОрганизаций КАК Сотрудники
        |ГДЕ
        |   Сотрудники.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
        |   И (&НеОтбиратьПоОрганизации
        |           ИЛИ Сотрудники.Организация = &ГоловнаяОрганизация)
        |   И (&НеУчитыватьАктуальность
        |           ИЛИ Сотрудники.Актуальность)
        |   И Сотрудники.ВидДоговора В(&СписокДоговоров)";
		
	ИначеЕсли Режим = 11 или Режим = 12 Тогда	
		
		Если Регистратор = Неопределено И (Режим = 11 ИЛИ Режим = 12) Тогда
			Регистратор = Документы.ПриемНаРаботуВОрганизацию.ПустаяСсылка();
		КонецЕсли;
		Запрос.УстановитьПараметр("Регистратор", Регистратор);
		
		СписокДоговоров = Новый Массив;
		Если Режим = 11 Тогда
			СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);
		ИначеЕсли Режим = 12 Тогда
		КонецЕсли;
		Запрос.УстановитьПараметр("СписокДоговоров", СписокДоговоров);
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
        |   Сотрудники.Наименование КАК Наименование
        |ИЗ
        |   Справочник.СотрудникиОрганизаций КАК Сотрудники
        |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
        |       ПО Сотрудники.Ссылка = Работники.Сотрудник
        |           И (Работники.Регистратор <> &Регистратор)
        |ГДЕ
        |   Сотрудники.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
        |   И (&НеОтбиратьПоОрганизации
        |           ИЛИ Сотрудники.Организация = &ГоловнаяОрганизация)
        |   И (&НеУчитыватьАктуальность
        |           ИЛИ Сотрудники.Актуальность)
        |   И Работники.Сотрудник ЕСТЬ NULL 
        |   И Сотрудники.ВидДоговора В(&СписокДоговоров)";
		
	ИначеЕсли Режим = 13  Тогда
		
		Запрос.УстановитьПараметр("ДатаАктуальности", ОбщегоНазначения.ПолучитьРабочуюДату());
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Работники.ФизЛицо,
		|	Сотрудники.Ссылка КАК Сотрудник,
		|	Сотрудники.ВидДоговора,
		|	ВЫБОР
		|		КОГДА Сотрудники.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоТрудовойДоговор
		|ПОМЕСТИТЬ ВТ_ФизическиеЛица
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
		|		Работники.ФизЛицо КАК ФизЛицо
		|	ИЗ
		|		РегистрСведений.Работники КАК Работники
		|	ГДЕ
		|		Работники.ФизЛицо.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~"") КАК Работники
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК Сотрудники
		|		ПО Работники.ФизЛицо = Сотрудники.Физлицо
		|ГДЕ
		|	Сотрудники.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
		|	И (&НеУчитыватьАктуальность
		|			ИЛИ Сотрудники.Актуальность)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ЭтоТрудовойДоговор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	РаботникиОсновноеМесто.Сотрудник,
		|	РаботникиОсновноеМесто.Сотрудник.Физлицо КАК Физлицо,
		|	ВЫБОР
		|		КОГДА РаботникиОсновноеМесто.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоОсновноеМестоРаботы
		|ПОМЕСТИТЬ ВТ_Сотрудники_ТрудовойДоговор
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|			&ДатаАктуальности,
		|			Сотрудник В
		|				(ВЫБРАТЬ
		|					ВТ_ФизическиеЛица.Сотрудник
		|				ИЗ
		|					ВТ_ФизическиеЛица
		|				ГДЕ
		|					ВТ_ФизическиеЛица.ЭтоТрудовойДоговор)) КАК РаботникиОсновноеМесто
		|ГДЕ
		|	ВЫБОР
		|			КОГДА РаботникиОсновноеМесто.ПериодЗавершения <= &ДатаАктуальности
		|					И РаботникиОсновноеМесто.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|				ТОГДА РаботникиОсновноеМесто.ПричинаИзмененияСостоянияЗавершения
		|			ИНАЧЕ РаботникиОсновноеМесто.ПричинаИзмененияСостояния
		|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ЭтоОсновноеМестоРаботы,
		|	Физлицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
		|	СписокСотрудников.Сотрудник.Наименование КАК Наименование,
		|	СписокСотрудников.Физлицо.Наименование КАК ФизлицоНаименование
		|ИЗ
		|	(ВЫБРАТЬ
		|		МАКСИМУМ(РаботникиОсновноеМесто.Сотрудник) КАК Сотрудник,
		|		РаботникиОсновноеМесто.Физлицо КАК Физлицо,
		|		1 КАК Приоритет
		|	ИЗ
		|		ВТ_Сотрудники_ТрудовойДоговор КАК РаботникиОсновноеМесто
		|	ГДЕ
		|		РаботникиОсновноеМесто.ЭтоОсновноеМестоРаботы
		|	
		|	СГРУППИРОВАТЬ ПО
		|		РаботникиОсновноеМесто.Физлицо
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		МАКСИМУМ(РаботникиСовместительство.Сотрудник),
		|		РаботникиСовместительство.Физлицо,
		|		2
		|	ИЗ
		|		ВТ_Сотрудники_ТрудовойДоговор КАК РаботникиСовместительство
		|	ГДЕ
		|		(НЕ РаботникиСовместительство.ЭтоОсновноеМестоРаботы)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		РаботникиСовместительство.Физлицо
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		МАКСИМУМ(СотрудникиДУ.Сотрудник),
		|		СотрудникиДУ.ФизЛицо,
		|		ВЫБОР
		|			КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
		|				ТОГДА 3
		|			КОГДА СотрудникиДУ.ЭтоТрудовойДоговор
		|				ТОГДА 4
		|			ИНАЧЕ 5
		|		КОНЕЦ
		|	ИЗ
		|		ВТ_ФизическиеЛица КАК СотрудникиДУ
		|	
		|	СГРУППИРОВАТЬ ПО
		|		СотрудникиДУ.ФизЛицо,
		|		ВЫБОР
		|			КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
		|				ТОГДА 3
		|			КОГДА СотрудникиДУ.ЭтоТрудовойДоговор
		|				ТОГДА 4
		|			ИНАЧЕ 5
		|		КОНЕЦ) КАК СписокСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СписокФизическихЛиц.Физлицо КАК Физлицо,
		|			МИНИМУМ(СписокФизическихЛиц.Приоритет) КАК Приоритет
		|		ИЗ
		|			(ВЫБРАТЬ
		|				РаботникиОсновноеМесто.Физлицо КАК Физлицо,
		|				1 КАК Приоритет
		|			ИЗ
		|				ВТ_Сотрудники_ТрудовойДоговор КАК РаботникиОсновноеМесто
		|			ГДЕ
		|				РаботникиОсновноеМесто.ЭтоОсновноеМестоРаботы
		|			
		|			ОБЪЕДИНИТЬ
		|			
		|			ВЫБРАТЬ
		|				РаботникиСовместительство.Физлицо,
		|				2
		|			ИЗ
		|				ВТ_Сотрудники_ТрудовойДоговор КАК РаботникиСовместительство
		|			ГДЕ
		|				(НЕ РаботникиСовместительство.ЭтоОсновноеМестоРаботы)
		|			
		|			ОБЪЕДИНИТЬ
		|			
		|			ВЫБРАТЬ
		|				СотрудникиДУ.ФизЛицо,
		|				ВЫБОР
		|					КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
		|						ТОГДА 3
		|					КОГДА СотрудникиДУ.ЭтоТрудовойДоговор
		|						ТОГДА 4
		|					ИНАЧЕ 5
		|				КОНЕЦ
		|			ИЗ
		|				ВТ_ФизическиеЛица КАК СотрудникиДУ) КАК СписокФизическихЛиц
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СписокФизическихЛиц.Физлицо) КАК СписокФизическихЛиц
		|		ПО СписокСотрудников.Физлицо = СписокФизическихЛиц.Физлицо
		|			И СписокСотрудников.Приоритет = СписокФизическихЛиц.Приоритет";
		
	Иначе
		
		Возврат ТекстАвтоПодбора;
		
	КонецЕсли;		
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		ТекстАвтоПодбора = Выборка.Наименование;
	КонецЕсли;

	Возврат ТекстАвтоПодбора;
	
КонецФункции // ПодобратьФИОСотрудника()

// Функция ищет сотрудника среди работников предприятия или организаций по
//  началу его наименования
//
// Параметры
// 	СтандартнаяОбработка – параметр стандартной обработки события обработчика АвтоПодборТекста
//	Режим – число, определяет источники, из которых производится подбор
//	Текст  - начальные буквы ФИО, текст из обработчика АвтоПодборТекста
//	Организация – ссылка на организацию по которой подбирать сотрудников (работников)
//	ВозвращатьФизлицо – параметр определяет, что должна вернуть функция, ссылку на Сотрудника или Физлицо
//	ТолькоАктуальных – параметр определяет, вести поиск среди всех сотрудников, или только актуальных
//	Регистратор - при вызове из приема на работу передаем ссылку на текущий Документ
//
// Возвращаемое значение
//  СписокЗначений - список подходящих физлиц, если их найдено не более 50
//  Неопределено - если найдено более 50 подходящих физлиц
//
Функция ПодобратьСписокСотрудников(СтандартнаяОбработка, Режим, Знач Текст, Организация = Неопределено, ВозвращатьФизлицо = Ложь, ТолькоАктуальные = Истина, Регистратор = Неопределено) Экспорт
	
	Если ПустаяСтрока(Текст) Тогда
		Возврат Новый СписокЗначений;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	// заменим спецсимволы
	Текст = СОКРЛП(Текст);
	Текст = СтрЗаменить(Текст, "~", "~~");
	Текст = СтрЗаменить(Текст, "%", "~%");
	Текст = СтрЗаменить(Текст, "_", "~_");
	Текст = СтрЗаменить(Текст, "[", "~[");
	Текст = СтрЗаменить(Текст, "-", "~-");
	Текст = Текст+"%";
	
	Запрос.УстановитьПараметр("Текст", Текст);
	
	//условие по Организации используем, если в качестве параметра передана не пустая ссылка на справочник
	Если ЗначениеЗаполнено(Организация) и ТипЗнч(Организация) = Тип("СправочникСсылка.Организации") Тогда
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Иначе
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", Справочники.Организации.ПустаяСсылка());
	КонецЕсли;
	Запрос.УстановитьПараметр("НеОтбиратьПоОрганизации", Не (ЗначениеЗаполнено(Организация) и ТипЗнч(Организация) = Тип("СправочникСсылка.Организации")));
	
	Запрос.УстановитьПараметр("НеУчитыватьАктуальность", Не ТолькоАктуальные);
	
	
    Если Режим = 0 или Режим = 1 или Режим = 6 Тогда
		
		ДоговорыГПХ = Новый Массив;
		ДоговорыГПХ.Добавить(Перечисления.ВидыДоговоровСФизЛицами.Авторский);
		ДоговорыГПХ.Добавить(Перечисления.ВидыДоговоровСФизЛицами.Подряда);
		Запрос.УстановитьПараметр("ДоговорыГПХ", ДоговорыГПХ);
		
		СписокДоговоров = Новый Массив;
		СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);
		Запрос.УстановитьПараметр("СписокДоговоров", СписокДоговоров);
		
		Если ВозвращатьФизлицо Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
			|	Сотрудники.Физлицо КАК Ссылка,
			|	Сотрудники.ФизлицоНаименование КАК Наименование,
			|	Сотрудники.Код КАК Код,
			|	Сотрудники.НайденоПоНаименованию КАК НайденоПоНаименованию,
			|	Сотрудники.СотрудникНаименование КАК СотрудникНаименование
			|ИЗ
			|	(ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
			|		Работники.Сотрудник.Физлицо КАК Физлицо,
			|		Работники.Сотрудник.Физлицо.Наименование КАК ФизлицоНаименование,
			|		Работники.Сотрудник.Код КАК Код,
			|		ИСТИНА КАК НайденоПоНаименованию,
			|		Работники.Сотрудник.Наименование КАК СотрудникНаименование
			|	ИЗ
			|		РегистрСведений.РаботникиОрганизаций КАК Работники
			|	ГДЕ
			|		Работники.Сотрудник.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
			|		И (&НеОтбиратьПоОрганизации
			|				ИЛИ Работники.Сотрудник.Организация = &ГоловнаяОрганизация)
			|		И (&НеУчитыватьАктуальность
			|				ИЛИ Работники.Сотрудник.Актуальность)
			|		И Работники.Сотрудник.ВидДоговора В(&СписокДоговоров)
			|	
			|	ОБЪЕДИНИТЬ
			|	
			|	ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
			|		Договорники.Физлицо,
			|		Договорники.Физлицо.Наименование,
			|		Договорники.Код,
			|		ИСТИНА,
			|		Договорники.Наименование
			|	ИЗ
			|		Справочник.СотрудникиОрганизаций КАК Договорники
			|	ГДЕ
			|		Договорники.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
			|		И (&НеОтбиратьПоОрганизации
			|				ИЛИ Договорники.Организация = &ГоловнаяОрганизация)
			|		И (&НеУчитыватьАктуальность
			|				ИЛИ Договорники.Актуальность)
			|		И Договорники.ВидДоговора В(&ДоговорыГПХ)
			|	
			|	ОБЪЕДИНИТЬ
			|	
			|	ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
			|		Работники.Сотрудник.Физлицо,
			|		Работники.Сотрудник.Физлицо.Наименование,
			|		Работники.Сотрудник.Код,
			|		ЛОЖЬ,
			|		Работники.Сотрудник.Наименование
			|	ИЗ
			|		РегистрСведений.РаботникиОрганизаций КАК Работники
			|	ГДЕ
			|		Работники.Сотрудник.Код ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
			|		И (&НеОтбиратьПоОрганизации
			|				ИЛИ Работники.Сотрудник.Организация = &ГоловнаяОрганизация)
			|		И (&НеУчитыватьАктуальность
			|				ИЛИ Работники.Сотрудник.Актуальность)
			|		И Работники.Сотрудник.ВидДоговора В(&СписокДоговоров)
			|	
			|	ОБЪЕДИНИТЬ
			|	
			|	ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
			|		Договорники.Физлицо,
			|		Договорники.Физлицо.Наименование,
			|		Договорники.Код,
			|		ЛОЖЬ,
			|		Договорники.Наименование
			|	ИЗ
			|		Справочник.СотрудникиОрганизаций КАК Договорники
			|	ГДЕ
			|		Договорники.Код ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
			|		И (&НеОтбиратьПоОрганизации
			|				ИЛИ Договорники.Организация = &ГоловнаяОрганизация)
			|		И (&НеУчитыватьАктуальность
			|				ИЛИ Договорники.Актуальность)
			|		И Договорники.ВидДоговора В(&ДоговорыГПХ)) КАК Сотрудники
			|
			|УПОРЯДОЧИТЬ ПО
			|	СотрудникНаименование УБЫВ";
			
		Иначе
			
			Запрос.УстановитьПараметр("ДатаАктуальности", ОбщегоНазначения.ПолучитьРабочуюДату());
			Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
			|	Работники.Сотрудник КАК Сотрудник,
			|	Работники.Сотрудник.Наименование КАК СотрудникНаименование,
			|	Работники.Сотрудник.Актуальность КАК Актуальность,
			|	ИСТИНА КАК НайденоПоНаименованию
			|ПОМЕСТИТЬ ВТ_СписокРаботников
			|ИЗ
			|	РегистрСведений.РаботникиОрганизаций КАК Работники
			|ГДЕ
			|	Работники.Сотрудник.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
			|	И (&НеОтбиратьПоОрганизации
			|			ИЛИ Работники.Сотрудник.Организация = &ГоловнаяОрганизация)
			|	И (&НеУчитыватьАктуальность
			|			ИЛИ Работники.Сотрудник.Актуальность)
			|	И Работники.Сотрудник.ВидДоговора В(&СписокДоговоров)
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
			|	Работники.Сотрудник,
			|	Работники.Сотрудник.Наименование,
			|	Работники.Сотрудник.Актуальность,
			|	ЛОЖЬ
			|ИЗ
			|	РегистрСведений.РаботникиОрганизаций КАК Работники
			|ГДЕ
			|	Работники.Сотрудник.Код ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
			|	И (&НеОтбиратьПоОрганизации
			|			ИЛИ Работники.Сотрудник.Организация = &ГоловнаяОрганизация)
			|	И (&НеУчитыватьАктуальность
			|			ИЛИ Работники.Сотрудник.Актуальность)
			|	И Работники.Сотрудник.ВидДоговора В(&СписокДоговоров)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Сотрудник
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
			|	ВТ_СписокРаботников.Сотрудник.Код КАК Код,
			|	ВТ_СписокРаботников.Сотрудник КАК Ссылка,
			|	ВЫБОР
			|		КОГДА ВТ_СписокРаботников.Сотрудник.Актуальность
			|			ТОГДА ВЫБОР
			|					КОГДА РаботникиСрезПоследних.ПериодЗавершения <= &ДатаАктуальности
			|							И РаботникиСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
			|						ТОГДА ВЫБОР
			|								КОГДА РаботникиСрезПоследних.ПричинаИзмененияСостоянияЗавершения = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
			|									ТОГДА ""(ув.) "" + ВТ_СписокРаботников.СотрудникНаименование
			|								ИНАЧЕ ВТ_СписокРаботников.СотрудникНаименование
			|							КОНЕЦ
			|					ИНАЧЕ ВЫБОР
			|							КОГДА РаботникиСрезПоследних.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
			|								ТОГДА ""(ув.) "" + ВТ_СписокРаботников.СотрудникНаименование
			|							ИНАЧЕ ВТ_СписокРаботников.СотрудникНаименование
			|						КОНЕЦ
			|				КОНЕЦ
			|		ИНАЧЕ ""(не актуалент) "" + ВТ_СписокРаботников.СотрудникНаименование
			|	КОНЕЦ КАК Наименование,
			|	ВТ_СписокРаботников.НайденоПоНаименованию КАК НайденоПоНаименованию
			|ИЗ
			|	ВТ_СписокРаботников КАК ВТ_СписокРаботников
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
			|				&ДатаАктуальности,
			|				Сотрудник В
			|					(ВЫБРАТЬ
			|						ВТ_СписокРаботников.Сотрудник
			|					ИЗ
			|						ВТ_СписокРаботников)) КАК РаботникиСрезПоследних
			|		ПО (РаботникиСрезПоследних.Сотрудник = ВТ_СписокРаботников.Сотрудник)
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
			|	Договорники.Код КАК Код,
			|	Договорники.Ссылка,
			|	ВЫБОР
			|		КОГДА Договорники.Актуальность
			|			ТОГДА Договорники.Наименование
			|		ИНАЧЕ ""(не актуалент) "" + Договорники.Наименование
			|	КОНЕЦ,
			|	ИСТИНА
			|ИЗ
			|	Справочник.СотрудникиОрганизаций КАК Договорники
			|ГДЕ
			|	Договорники.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
			|	И (&НеОтбиратьПоОрганизации
			|			ИЛИ Договорники.Организация = &ГоловнаяОрганизация)
			|	И (&НеУчитыватьАктуальность
			|			ИЛИ Договорники.Актуальность)
			|	И Договорники.ВидДоговора В(&ДоговорыГПХ)
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
			|	Договорники.Код КАК Код,
			|	Договорники.Ссылка,
			|	ВЫБОР
			|		КОГДА Договорники.Актуальность
			|			ТОГДА Договорники.Наименование
			|		ИНАЧЕ ""(не актуалент) "" + Договорники.Наименование
			|	КОНЕЦ,
			|	ЛОЖЬ
			|ИЗ
			|	Справочник.СотрудникиОрганизаций КАК Договорники
			|ГДЕ
			|	Договорники.Код ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
			|	И (&НеОтбиратьПоОрганизации
			|			ИЛИ Договорники.Организация = &ГоловнаяОрганизация)
			|	И (&НеУчитыватьАктуальность
			|			ИЛИ Договорники.Актуальность)
			|	И Договорники.ВидДоговора В(&ДоговорыГПХ)
			|
			|УПОРЯДОЧИТЬ ПО
			|	Наименование УБЫВ";
			
		КонецЕсли;

	ИначеЕсли Режим = 2 или Режим = 3 или Режим = 4 или Режим = 5 или Режим = 7 или Режим = 9 или Режим = 10 Тогда
		
		СписокДоговоров = Новый Массив;
		Если Режим = 2 Тогда
			СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);
		ИначеЕсли Режим = 3 Тогда
			СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);
		ИначеЕсли Режим = 4 Тогда
			СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);
		ИначеЕсли Режим = 5 Тогда
			СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);
		ИначеЕсли Режим = 7 Тогда
			СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);
		ИначеЕсли Режим = 9 Тогда
		ИначеЕсли Режим = 10 Тогда
		КонецЕсли;
		Запрос.УстановитьПараметр("СписокДоговоров", СписокДоговоров);
		
		Если ВозвращатьФизлицо Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
			|	Сотрудники.Физлицо КАК Ссылка,
			|	Сотрудники.ФизлицоНаименование КАК Наименование,
			|	Сотрудники.Код КАК Код,
			|	Сотрудники.НайденоПоНаименованию КАК НайденоПоНаименованию,
			|	Сотрудники.СотрудникНаименование КАК СотрудникНаименование
			|ИЗ
			|	(ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
			|		Работники.Сотрудник.Физлицо КАК Физлицо,
			|		Работники.Сотрудник.Физлицо.Наименование КАК ФизлицоНаименование,
			|		Работники.Сотрудник.Код КАК Код,
			|		ИСТИНА КАК НайденоПоНаименованию,
			|		Работники.Сотрудник.Наименование КАК СотрудникНаименование
			|	ИЗ
			|		РегистрСведений.РаботникиОрганизаций КАК Работники
			|	ГДЕ
			|		Работники.Сотрудник.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
			|		И (&НеОтбиратьПоОрганизации
			|				ИЛИ Работники.Сотрудник.Организация = &ГоловнаяОрганизация)
			|		И (&НеУчитыватьАктуальность
			|				ИЛИ Работники.Сотрудник.Актуальность)
			|		И Работники.Сотрудник.ВидДоговора В(&СписокДоговоров)
			|	
			|	ОБЪЕДИНИТЬ
			|	
			|	ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
			|		Работники.Сотрудник.Физлицо,
			|		Работники.Сотрудник.Физлицо.Наименование,
			|		Работники.Сотрудник.Код,
			|		ЛОЖЬ,
			|		Работники.Сотрудник.Наименование
			|	ИЗ
			|		РегистрСведений.РаботникиОрганизаций КАК Работники
			|	ГДЕ
			|		Работники.Сотрудник.Код ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
			|		И (&НеОтбиратьПоОрганизации
			|				ИЛИ Работники.Сотрудник.Организация = &ГоловнаяОрганизация)
			|		И (&НеУчитыватьАктуальность
			|				ИЛИ Работники.Сотрудник.Актуальность)
			|		И Работники.Сотрудник.ВидДоговора В(&СписокДоговоров)) КАК Сотрудники
			|
			|УПОРЯДОЧИТЬ ПО
			|	СотрудникНаименование УБЫВ";
			
		Иначе
			
			Запрос.УстановитьПараметр("ДатаАктуальности", ОбщегоНазначения.ПолучитьРабочуюДату());
			Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
			|	Работники.Сотрудник.Код КАК Код,
			|	Работники.Сотрудник КАК Сотрудник,
			|	Работники.Сотрудник.Наименование КАК СотрудникНаименование,
			|	Работники.Сотрудник.Актуальность КАК Актуальность,
			|	ИСТИНА КАК НайденоПоНаименованию
			|ПОМЕСТИТЬ ВТ_СписокРаботников
			|ИЗ
			|	РегистрСведений.РаботникиОрганизаций КАК Работники
			|ГДЕ
			|	Работники.Сотрудник.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
			|	И (&НеОтбиратьПоОрганизации
			|			ИЛИ Работники.Сотрудник.Организация = &ГоловнаяОрганизация)
			|	И (&НеУчитыватьАктуальность
			|			ИЛИ Работники.Сотрудник.Актуальность)
			|	И Работники.Сотрудник.ВидДоговора В(&СписокДоговоров)
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
			|	Работники.Сотрудник.Код КАК Код,
			|	Работники.Сотрудник,
			|	Работники.Сотрудник.Наименование,
			|	Работники.Сотрудник.Актуальность,
			|	ЛОЖЬ
			|ИЗ
			|	РегистрСведений.РаботникиОрганизаций КАК Работники
			|ГДЕ
			|	Работники.Сотрудник.Код ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
			|	И (&НеОтбиратьПоОрганизации
			|			ИЛИ Работники.Сотрудник.Организация = &ГоловнаяОрганизация)
			|	И (&НеУчитыватьАктуальность
			|			ИЛИ Работники.Сотрудник.Актуальность)
			|	И Работники.Сотрудник.ВидДоговора В(&СписокДоговоров)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Сотрудник
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
			|	ВТ_СписокРаботников.Код,
			|	ВТ_СписокРаботников.Сотрудник КАК Ссылка,
			|	ВЫБОР
			|		КОГДА ВТ_СписокРаботников.Сотрудник.Актуальность
			|			ТОГДА ВЫБОР
			|					КОГДА РаботникиСрезПоследних.ПериодЗавершения <= &ДатаАктуальности
			|							И РаботникиСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
			|						ТОГДА ВЫБОР
			|								КОГДА РаботникиСрезПоследних.ПричинаИзмененияСостоянияЗавершения = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
			|									ТОГДА ""(ув.) "" + ВТ_СписокРаботников.СотрудникНаименование
			|								ИНАЧЕ ВТ_СписокРаботников.СотрудникНаименование
			|							КОНЕЦ
			|					ИНАЧЕ ВЫБОР
			|							КОГДА РаботникиСрезПоследних.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
			|								ТОГДА ""(ув.) "" + ВТ_СписокРаботников.СотрудникНаименование
			|							ИНАЧЕ ВТ_СписокРаботников.СотрудникНаименование
			|						КОНЕЦ
			|				КОНЕЦ
			|		ИНАЧЕ ""(не актуалент) "" + ВТ_СписокРаботников.СотрудникНаименование
			|	КОНЕЦ КАК Наименование,
			|	ВТ_СписокРаботников.НайденоПоНаименованию КАК НайденоПоНаименованию
			|ИЗ
			|	ВТ_СписокРаботников КАК ВТ_СписокРаботников
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
			|				&ДатаАктуальности,
			|				Сотрудник В
			|					(ВЫБРАТЬ
			|						ВТ_СписокРаботников.Сотрудник
			|					ИЗ
			|						ВТ_СписокРаботников)) КАК РаботникиСрезПоследних
			|		ПО (РаботникиСрезПоследних.Сотрудник = ВТ_СписокРаботников.Сотрудник)
			|
			|УПОРЯДОЧИТЬ ПО
			|	Наименование УБЫВ";
			
		КонецЕсли;

	ИначеЕсли Режим = 8 Тогда
		
		СписокДоговоров = Новый Массив;
		СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.Подряда);
		СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.Авторский);
		Запрос.УстановитьПараметр("СписокДоговоров", СписокДоговоров);
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
		|	Договорники.Код КАК Код,
		|	Договорники.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА Договорники.Актуальность
		|			ТОГДА Договорники.Наименование
		|		ИНАЧЕ ""(не актуалент) "" + Договорники.Наименование
		|	КОНЕЦ КАК Наименование,
		|	ИСТИНА КАК НайденоПоНаименованию
		|ИЗ
		|	Справочник.СотрудникиОрганизаций КАК Договорники
		|ГДЕ
		|	Договорники.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
		|	И (&НеОтбиратьПоОрганизации
		|			ИЛИ Договорники.Организация = &ГоловнаяОрганизация)
		|	И (&НеУчитыватьАктуальность
		|			ИЛИ Договорники.Актуальность)
		|	И Договорники.ВидДоговора В(&СписокДоговоров)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
		|	Договорники.Код КАК Код,
		|	Договорники.Ссылка,
		|	ВЫБОР
		|		КОГДА Договорники.Актуальность
		|			ТОГДА Договорники.Наименование
		|		ИНАЧЕ ""(не актуалент) "" + Договорники.Наименование
		|	КОНЕЦ,
		|	ЛОЖЬ
		|ИЗ
		|	Справочник.СотрудникиОрганизаций КАК Договорники
		|ГДЕ
		|	Договорники.Код ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
		|	И (&НеОтбиратьПоОрганизации
		|			ИЛИ Договорники.Организация = &ГоловнаяОрганизация)
		|	И (&НеУчитыватьАктуальность
		|			ИЛИ Договорники.Актуальность)
		|	И Договорники.ВидДоговора В(&СписокДоговоров)";
		
	ИначеЕсли Режим = 11 или Режим = 12 Тогда	
		
		Если Регистратор = Неопределено И (Режим = 11 ИЛИ Режим = 12) Тогда
			Регистратор = Документы.ПриемНаРаботуВОрганизацию.ПустаяСсылка();
		КонецЕсли;
		Запрос.УстановитьПараметр("Регистратор", Регистратор);
		
		СписокДоговоров = Новый Массив;
		Если Режим = 11 Тогда
			СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);
		ИначеЕсли Режим = 12 Тогда
		КонецЕсли;
		Запрос.УстановитьПараметр("СписокДоговоров", СписокДоговоров);
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
		|	Сотрудники.Код КАК Код,
		|	ВЫБОР
		|		КОГДА Сотрудники.Актуальность
		|			ТОГДА Сотрудники.Наименование
		|		ИНАЧЕ ""(не актуалент) "" + Сотрудники.Наименование
		|	КОНЕЦ КАК Наименование,
		|	Сотрудники.Ссылка КАК Ссылка,
		|	ИСТИНА КАК НайденоПоНаименованию
		|ИЗ
		|	Справочник.СотрудникиОрганизаций КАК Сотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
		|		ПО Сотрудники.Ссылка = Работники.Сотрудник
		|			И (Работники.Регистратор <> &Регистратор)
		|ГДЕ
		|	Сотрудники.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
		|	И Работники.Сотрудник ЕСТЬ NULL 
		|	И (&НеОтбиратьПоОрганизации
		|			ИЛИ Сотрудники.Организация = &ГоловнаяОрганизация)
		|	И (&НеУчитыватьАктуальность
		|			ИЛИ Сотрудники.Актуальность)
		|	И Сотрудники.ВидДоговора В(&СписокДоговоров)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
		|	Сотрудники.Код КАК Код,
		|	ВЫБОР
		|		КОГДА Сотрудники.Актуальность
		|			ТОГДА Сотрудники.Наименование
		|		ИНАЧЕ ""(не актуалент) "" + Сотрудники.Наименование
		|	КОНЕЦ,
		|	Сотрудники.Ссылка,
		|	ЛОЖЬ
		|ИЗ
		|	Справочник.СотрудникиОрганизаций КАК Сотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
		|		ПО Сотрудники.Ссылка = Работники.Сотрудник
		|			И (Работники.Регистратор <> &Регистратор)
		|ГДЕ
		|	Сотрудники.Код ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
		|	И Работники.Сотрудник ЕСТЬ NULL 
		|	И (&НеОтбиратьПоОрганизации
		|			ИЛИ Сотрудники.Организация = &ГоловнаяОрганизация)
		|	И (&НеУчитыватьАктуальность
		|			ИЛИ Сотрудники.Актуальность)
		|	И Сотрудники.ВидДоговора В(&СписокДоговоров)";
		
	ИначеЕсли Режим = 13 Тогда
		
		Запрос.УстановитьПараметр("ДатаАктуальности", ОбщегоНазначения.ПолучитьРабочуюДату());
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
		|	ФизическиеЛица.ФизЛицо,
		|	ФизическиеЛица.Сотрудник,
		|	ФизическиеЛица.ВидДоговора,
		|	ФизическиеЛица.ЭтоТрудовойДоговор КАК ЭтоТрудовойДоговор,
		|	ФизическиеЛица.НайденоПоНаименованию
		|ПОМЕСТИТЬ ВТ_ФизическиеЛица
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Работники.ФизЛицо КАК ФизЛицо,
		|		СотрудникиОрганизаций.Ссылка КАК Сотрудник,
		|		СотрудникиОрганизаций.ВидДоговора КАК ВидДоговора,
		|		ВЫБОР
		|			КОГДА СотрудникиОрганизаций.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ КАК ЭтоТрудовойДоговор,
		|		ИСТИНА КАК НайденоПоНаименованию
		|	ИЗ
		|		(ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
		|			Работники.ФизЛицо КАК ФизЛицо
		|		ИЗ
		|			РегистрСведений.Работники КАК Работники
		|		ГДЕ
		|			Работники.ФизЛицо.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~"") КАК Работники
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
		|			ПО Работники.ФизЛицо = СотрудникиОрганизаций.Физлицо
		|	ГДЕ
		|		СотрудникиОрганизаций.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
		|		И (&НеУчитыватьАктуальность
		|				ИЛИ СотрудникиОрганизаций.Актуальность)
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Работники.ФизЛицо,
		|		СотрудникиОрганизаций.Ссылка,
		|		СотрудникиОрганизаций.ВидДоговора,
		|		ВЫБОР
		|			КОГДА СотрудникиОрганизаций.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ,
		|		ЛОЖЬ
		|	ИЗ
		|		(ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
		|			СотрудникиОрганизаций.Ссылка КАК Ссылка,
		|			СотрудникиОрганизаций.ВидДоговора КАК ВидДоговора,
		|			СотрудникиОрганизаций.Физлицо КАК Физлицо
		|		ИЗ
		|			Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
		|		ГДЕ
		|			СотрудникиОрганизаций.Код ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
		|			И (&НеУчитыватьАктуальность
		|					ИЛИ СотрудникиОрганизаций.Актуальность)
		|			И СотрудникиОрганизаций.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК СотрудникиОрганизаций
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Работники КАК Работники
		|			ПО (Работники.ФизЛицо = СотрудникиОрганизаций.Физлицо)) КАК ФизическиеЛица
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ЭтоТрудовойДоговор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	РаботникиОсновноеМесто.Сотрудник,
		|	РаботникиОсновноеМесто.Сотрудник.Физлицо КАК Физлицо,
		|	ВЫБОР
		|		КОГДА РаботникиОсновноеМесто.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоОсновноеМестоРаботы,
		|	ВТ_ФизическиеЛица.НайденоПоНаименованию
		|ПОМЕСТИТЬ ВТ_Сотрудники_ТрудовойДоговор
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|			&ДатаАктуальности,
		|			Сотрудник В
		|				(ВЫБРАТЬ
		|					ВТ_ФизическиеЛица.Сотрудник
		|				ИЗ
		|					ВТ_ФизическиеЛица
		|				ГДЕ
		|					ВТ_ФизическиеЛица.ЭтоТрудовойДоговор)) КАК РаботникиОсновноеМесто
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ФизическиеЛица КАК ВТ_ФизическиеЛица
		|		ПО РаботникиОсновноеМесто.Сотрудник = ВТ_ФизическиеЛица.Сотрудник
		|ГДЕ
		|	ВЫБОР
		|			КОГДА РаботникиОсновноеМесто.ПериодЗавершения <= &ДатаАктуальности
		|					И РаботникиОсновноеМесто.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|				ТОГДА РаботникиОсновноеМесто.ПричинаИзмененияСостоянияЗавершения
		|			ИНАЧЕ РаботникиОсновноеМесто.ПричинаИзмененияСостояния
		|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ЭтоОсновноеМестоРаботы,
		|	Физлицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 51
		|	СписокСотрудников.Сотрудник КАК Ссылка,
		|	СписокСотрудников.Сотрудник.Наименование КАК Наименование,
		|	СписокСотрудников.Сотрудник.Код КАК Код,
		|	СписокСотрудников.Физлицо КАК Физлицо,
		|	СписокСотрудников.Физлицо.Наименование КАК ФизлицоНаименование,
		|	СписокСотрудников.НайденоПоНаименованию КАК НайденоПоНаименованию
		|ИЗ
		|	(ВЫБРАТЬ
		|		МАКСИМУМ(РаботникиОсновноеМесто.Сотрудник) КАК Сотрудник,
		|		РаботникиОсновноеМесто.Физлицо КАК Физлицо,
		|		1 КАК Приоритет,
		|		МАКСИМУМ(РаботникиОсновноеМесто.НайденоПоНаименованию) КАК НайденоПоНаименованию
		|	ИЗ
		|		ВТ_Сотрудники_ТрудовойДоговор КАК РаботникиОсновноеМесто
		|	ГДЕ
		|		РаботникиОсновноеМесто.ЭтоОсновноеМестоРаботы
		|	
		|	СГРУППИРОВАТЬ ПО
		|		РаботникиОсновноеМесто.Физлицо
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		МАКСИМУМ(РаботникиСовместительство.Сотрудник),
		|		РаботникиСовместительство.Физлицо,
		|		2,
		|		МАКСИМУМ(РаботникиСовместительство.НайденоПоНаименованию)
		|	ИЗ
		|		ВТ_Сотрудники_ТрудовойДоговор КАК РаботникиСовместительство
		|	ГДЕ
		|		(НЕ РаботникиСовместительство.ЭтоОсновноеМестоРаботы)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		РаботникиСовместительство.Физлицо
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		МАКСИМУМ(СотрудникиДУ.Сотрудник),
		|		СотрудникиДУ.ФизЛицо,
		|		ВЫБОР
		|			КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
		|				ТОГДА 3
		|			КОГДА СотрудникиДУ.ЭтоТрудовойДоговор
		|				ТОГДА 4
		|			ИНАЧЕ 5
		|		КОНЕЦ,
		|		МАКСИМУМ(СотрудникиДУ.НайденоПоНаименованию)
		|	ИЗ
		|		ВТ_ФизическиеЛица КАК СотрудникиДУ
		|	
		|	СГРУППИРОВАТЬ ПО
		|		СотрудникиДУ.ФизЛицо,
		|		ВЫБОР
		|			КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
		|				ТОГДА 3
		|			КОГДА СотрудникиДУ.ЭтоТрудовойДоговор
		|				ТОГДА 4
		|			ИНАЧЕ 5
		|		КОНЕЦ) КАК СписокСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СписокФизическихЛиц.Сотрудник КАК Сотрудник,
		|			СписокФизическихЛиц.Физлицо КАК Физлицо,
		|			МИНИМУМ(СписокФизическихЛиц.Приоритет) КАК Приоритет,
		|			СписокФизическихЛиц.НайденоПоНаименованию КАК НайденоПоНаименованию
		|		ИЗ
		|			(ВЫБРАТЬ
		|				РаботникиОсновноеМесто.Сотрудник КАК Сотрудник,
		|				РаботникиОсновноеМесто.Физлицо КАК Физлицо,
		|				1 КАК Приоритет,
		|				РаботникиОсновноеМесто.НайденоПоНаименованию КАК НайденоПоНаименованию
		|			ИЗ
		|				ВТ_Сотрудники_ТрудовойДоговор КАК РаботникиОсновноеМесто
		|			ГДЕ
		|				РаботникиОсновноеМесто.ЭтоОсновноеМестоРаботы
		|			
		|			ОБЪЕДИНИТЬ
		|			
		|			ВЫБРАТЬ
		|				РаботникиСовместительство.Сотрудник,
		|				РаботникиСовместительство.Физлицо,
		|				2,
		|				РаботникиСовместительство.НайденоПоНаименованию
		|			ИЗ
		|				ВТ_Сотрудники_ТрудовойДоговор КАК РаботникиСовместительство
		|			ГДЕ
		|				(НЕ РаботникиСовместительство.ЭтоОсновноеМестоРаботы)
		|			
		|			ОБЪЕДИНИТЬ
		|			
		|			ВЫБРАТЬ
		|				СотрудникиДУ.Сотрудник,
		|				СотрудникиДУ.ФизЛицо,
		|				ВЫБОР
		|					КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
		|						ТОГДА 3
		|					КОГДА СотрудникиДУ.ЭтоТрудовойДоговор
		|						ТОГДА 4
		|					ИНАЧЕ 5
		|				КОНЕЦ,
		|				СотрудникиДУ.НайденоПоНаименованию
		|			ИЗ
		|				ВТ_ФизическиеЛица КАК СотрудникиДУ) КАК СписокФизическихЛиц
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СписокФизическихЛиц.Физлицо,
		|			СписокФизическихЛиц.НайденоПоНаименованию,
		|			СписокФизическихЛиц.Сотрудник) КАК СписокФизическихЛиц
		|		ПО СписокСотрудников.Физлицо = СписокФизическихЛиц.Физлицо
		|			И СписокСотрудников.Приоритет = СписокФизическихЛиц.Приоритет";
		
	Иначе
		
		Возврат Новый СписокЗначений;
		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Количество = Выборка.Количество();
	
	Если Количество < 51 Тогда
		
		Значение = Новый СписокЗначений;
		Пока Выборка.Следующий() Цикл
			Значение.Добавить(Выборка.Ссылка, ?(Выборка.НайденоПоНаименованию,Выборка.Наименование, Выборка.Код + " (" + Выборка.Наименование + ")"));
		КонецЦикла;
		
		СтандартнаяОбработка = Ложь;
		Возврат Значение;
		
	Иначе
		// значений для выбора больше 50
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции // ПодобратьСписокСотрудников()

// Процедура открывает форму выбора сотрудников организации
// Параметры:
//	Владелец 			- владелец формы
//	Ключ 				- ключ, ссылка на документ из которого открывается форма
//	ЗакрыватьПриВыборе 	- Булево
//	ДатаСреза 			- дата, передается в форму для получения доп. данных по сотруднику на эту дату
//	ГоловнаяОрганизация - головная организация
//	Режим 				- число
//	СтандартнаяОбработка- Булево
//	ТекущееЗначение 	- ссылка на элемент, на котором необходимо спозиционироваться при открытии формы, либо массив уже подобранных сотров
//	НеВыбиратьГруппы	- булево, признак выбора в списке групп и элементов
//
Процедура ОткрытьФормуВыбораСотрудникаОрганизации(Владелец, Ключ, ЗакрыватьПриВыборе, ДатаСреза, ГоловнаяОрганизация = Неопределено, Режим = 0, СтандартнаяОбработка = Неопределено, ТекущееЗначение = Неопределено, НеВыбиратьГруппы = Истина, ВыборФизлица = Ложь, ПараметрыПодбора = Неопределено) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Форма = Справочники.СотрудникиОрганизаций.ПолучитьФормуВыбора(, Владелец, Ключ);
	
	Форма.ДатаСреза 					= ДатаСреза;
	Если НеВыбиратьГруппы Тогда
		Форма.ПараметрВыборГруппИЭлементов	= ИспользованиеГруппИЭлементов.Элементы;
	Иначе
		Форма.ПараметрВыборГруппИЭлементов	= ИспользованиеГруппИЭлементов.ГруппыИЭлементы;
	КонецЕсли;	
	Форма.РежимВыбора					= Истина;
	Форма.ЗакрыватьПриВыборе			= ЗакрыватьПриВыборе;
	Форма.ВыборФизлица					= ВыборФизлица;
	Форма.мПараметрыПодбора				= ПараметрыПодбора;
	
	Если ТекущееЗначение <> Неопределено Тогда
		Если ТипЗнч(ТекущееЗначение) = Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда
			Форма.ПараметрТекущаяСтрока		= ТекущееЗначение;
			
		ИначеЕсли ТипЗнч(ТекущееЗначение) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
			Запрос = Новый Запрос;
			
			Запрос.УстановитьПараметр("Физлицо",				ТекущееЗначение);
			Запрос.УстановитьПараметр("ГоловнаяОрганизация",	ГоловнаяОрганизация);
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СотрудникиОрганизаций.Ссылка,
			|	ВЫБОР
			|		КОГДА (НЕ СотрудникиОрганизаций.Актуальность)
			|			ТОГДА 3
			|		КОГДА СотрудникиОрганизаций.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
			|			ТОГДА 1
			|		ИНАЧЕ 2
			|	КОНЕЦ КАК Порядок
			|ИЗ
			|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
			|ГДЕ
			|	(СотрудникиОрганизаций.ВидДоговора <> ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
			|			ИЛИ СотрудникиОрганизаций.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
			|	И СотрудникиОрганизаций.Физлицо = &Физлицо
			|	И СотрудникиОрганизаций.Организация = &ГоловнаяОрганизация
			|
			|УПОРЯДОЧИТЬ ПО
			|	Порядок";
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Форма.ПараметрТекущаяСтрока	= Выборка.Ссылка;
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(ТекущееЗначение) = Тип("Массив") Тогда
			Форма.мМассивВыбранныхЗначений = ТекущееЗначение;
			
		Иначе
			ОбщегоНазначения.СообщитьОбОшибке("Неверный тип параметра: " + ТипЗнч(ТекущееЗначение));
			
		КонецЕсли;
	КонецЕсли;
	
	//установим отборы
	Если ЗначениеЗаполнено(ГоловнаяОрганизация) Тогда
		Форма.Отбор.Организация.Установить(ГоловнаяОрганизация);
		Форма.Отбор.Организация.Использование = ЗначениеЗаполнено(ГоловнаяОрганизация);
	КонецЕсли;
		
	СписокДоговоров = Новый СписокЗначений;
	Если Режим = 1 Тогда
		
		СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);
		СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.Подряда);
		СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.Авторский);
		
	ИначеЕсли Режим = 2 Тогда
		
		СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);
		
	ИначеЕсли Режим = 3 Тогда
		
		СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);
		
	ИначеЕсли Режим = 4 Тогда
		
		СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);
		
	ИначеЕсли Режим = 5 Тогда
		
		СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);
		
	ИначеЕсли Режим = 6 Тогда
		
		СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);
		СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.Подряда);
		СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.Авторский);
		
	ИначеЕсли Режим = 7 Тогда
		
		СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);
		
	ИначеЕсли Режим = 8 Тогда
		
		СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.Подряда);
		СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.Авторский);
		
	ИначеЕсли Режим = 0 Тогда
		
		СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);
		СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.Подряда);
		СписокДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.Авторский);
		
	Иначе // для остальных режимов ничего не показываем
	КонецЕсли;
	
	Форма.Отбор.ВидДоговора.ВидСравнения	= ВидСравнения.ВСписке;
	Форма.Отбор.ВидДоговора.Использование	= Истина;
	Форма.Отбор.ВидДоговора.Значение		= СписокДоговоров;
	
	Форма.Открыть();
	
КонецПроцедуры // ОткрытьФормуВыбораСотрудникаОрганизации()

Процедура ОткрытьФормуВыбораСотрудника(Владелец, Ключ, ЗакрыватьПриВыборе, ДатаСреза, СтандартнаяОбработка = Неопределено, ТекущееЗначение = Неопределено, ВыборФизлица = Ложь, ПараметрыПодбора = Неопределено, Подразделение = Неопределено) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Форма = Справочники.СотрудникиОрганизаций.ПолучитьФормуВыбора(, Владелец, Ключ);
	
	Форма.ДатаСреза 					= ДатаСреза;
	Форма.ПараметрВыборГруппИЭлементов	= ИспользованиеГруппИЭлементов.Элементы;
	Форма.РежимВыбора					= Истина;
	Форма.ЗакрыватьПриВыборе			= ЗакрыватьПриВыборе;
	Форма.ВыборФизлица					= ВыборФизлица;
	Форма.мПараметрыПодбора				= ПараметрыПодбора;
	
	Если ТекущееЗначение <> Неопределено Тогда
		Если ТипЗнч(ТекущееЗначение) = Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда
			Форма.ПараметрТекущаяСтрока	= ТекущееЗначение;
			
		ИначеЕсли ТипЗнч(ТекущееЗначение) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
			Запрос = Новый Запрос;
			
			Запрос.УстановитьПараметр("Физлицо",	ТекущееЗначение);
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СотрудникиОрганизаций.Ссылка,
			|	ВЫБОР
			|		КОГДА СотрудникиОрганизаций.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
			|			ТОГДА ВЫБОР
			|					КОГДА СотрудникиОрганизаций.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
			|						ТОГДА 1
			|					ИНАЧЕ 2
			|				КОНЕЦ
			|		ИНАЧЕ 3
			|	КОНЕЦ КАК Порядок
			|ИЗ
			|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
			|ГДЕ
			|	((НЕ СотрудникиОрганизаций.ВидДоговора В (ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий), ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)))
			|			ИЛИ СотрудникиОрганизаций.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
			|	И СотрудникиОрганизаций.Физлицо = &Физлицо
			|
			|УПОРЯДОЧИТЬ ПО
			|	Порядок";
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Форма.ПараметрТекущаяСтрока	= Выборка.Ссылка;
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(ТекущееЗначение) = Тип("Массив") Тогда
			Форма.мМассивВыбранныхЗначений = ТекущееЗначение;
			
		Иначе
			ОбщегоНазначения.СообщитьОбОшибке("Неверный тип параметра: " + ТипЗнч(ТекущееЗначение));
			
		КонецЕсли;
	КонецЕсли;
	
	Форма.Отбор.ВидЗанятости.ВидСравнения = ВидСравнения.НеРавно;
	Форма.Отбор.ВидЗанятости.Использование = Истина;
	Форма.Отбор.ВидЗанятости.Значение = Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство;
	
	Если Подразделение <> Неопределено Тогда
		Форма.Отбор.ТекущееПодразделениеКомпании.ВидСравнения	= ВидСравнения.ВСписке;
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Спр.Ссылка
		|ИЗ
		|	Справочник.Подразделения КАК Спр
		|ГДЕ
		|	Спр.Родитель В (&Ссылка)";
		
		Ссылка = ?(Подразделение = Неопределено ИЛИ Подразделение.Пустая(), Неопределено, Подразделение);
		СписокПодразделений = Новый СписокЗначений;
		СписокПодразделений.Добавить(Ссылка);
		Пока Ссылка <> Неопределено  Цикл
			Запрос.УстановитьПараметр("Ссылка",	Ссылка);
			СписокСсылок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
			Если СписокСсылок.Количество() > 0 Тогда
				Для Каждого Ссылка Из СписокСсылок Цикл
					СписокПодразделений.Добавить(Ссылка);
				КонецЦикла;
				Ссылка = СписокСсылок;
			Иначе
				Ссылка = Неопределено;
			КонецЕсли;
		КонецЦикла;
		
		Форма.Отбор.ТекущееПодразделениеКомпании.Значение		= СписокПодразделений;
		Форма.Отбор.ТекущееПодразделениеКомпании.Использование	= Истина;
	КонецЕсли;
	
	Форма.Открыть();
	
КонецПроцедуры // ОткрытьФормуВыбораСотрудника()

// Функция возвращаект сведения о позиции штатного расписания на выбранную дату
// для измерений Подразделение и Должность
//
Функция СведенияОПозицииШтатногоРасписания(Период, Подразделение, Должность) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ДатаАктуальности",	Период);
	Запрос.УстановитьПараметр("Подразделение",		Подразделение);
	Запрос.УстановитьПараметр("Должность",			Должность);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.КоличествоСтавок,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.МинимальнаяТарифнаяСтавка,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.МаксимальнаяТарифнаяСтавка,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.ВидТарифнойСтавки,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.ГрафикРаботы,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.ВалютаТарифнойСтавки,
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.ОсобыеУсловияТруда
	|ИЗ
	|	РегистрСведений.ШтатноеРасписаниеОрганизаций.СрезПоследних(
	|		&ДатаАктуальности,
	|		ПодразделениеОрганизации = &Подразделение
	|			И Должность = &Должность) КАК ШтатноеРасписаниеОрганизацийСрезПоследних";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // СведенияОПозицииШтатногоРасписания()

#КонецЕсли


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МЕХАНИЗМА ОСТАТКИ ОТПУСКОВ РЕГЛ. УЧЕТА

Функция ВернутьОписаниеОтпуска(ВыборкаПоОстаткам, УпрУчет = Ложь) Экспорт
	
	Комментарий	= Строка(ВыборкаПоОстаткам.ДнейОтпуска) + " " + ОбщегоНазначения.ФормаМножественногоЧисла("день","дня","дней",ВыборкаПоОстаткам.ДнейОтпуска);
	
	РасшифровкаКомментария = "";
	
	Если ВыборкаПоОстаткам.ОтпускВСчетЕжегодногоБезТекущегоГода > 0 Тогда
		РасшифровкаКомментария = ", " + ВыборкаПоОстаткам.ОтпускВСчетЕжегодногоБезТекущегоГода + " " + ОбщегоНазначения.ФормаМножественногоЧисла("день","дня","дней",ВыборкаПоОстаткам.ОтпускВСчетЕжегодногоБезТекущегоГода) + " за счет отпусков прошлых лет";
	КонецЕсли;
	
	Если УпрУчет и ВыборкаПоОстаткам.ОтпускВСчетДополнительного > 0 Тогда
		Если ПустаяСтрока(РасшифровкаКомментария) Тогда
			РасшифровкаКомментария = ", ";
		Иначе
			РасшифровкаКомментария = РасшифровкаКомментария + " и ";
		КонецЕсли;
		РасшифровкаКомментария = РасшифровкаКомментария + Строка(ВыборкаПоОстаткам.ОтпускВСчетДополнительного) + " " + ОбщегоНазначения.ФормаМножественногоЧисла("день","дня","дней",ВыборкаПоОстаткам.ОтпускВСчетДополнительного) + " доп. отпуска";
	КонецЕсли;
	
	Если ВыборкаПоОстаткам.ОтпускАвансом > 0 Тогда
		Если ПустаяСтрока(РасшифровкаКомментария) Тогда
			РасшифровкаКомментария = ", ";
		Иначе
			РасшифровкаКомментария = РасшифровкаКомментария + " и ";
		КонецЕсли;
		РасшифровкаКомментария = РасшифровкаКомментария + Строка(ВыборкаПоОстаткам.ОтпускАвансом) + " " + ОбщегоНазначения.ФормаМножественногоЧисла("день","дня","дней",ВыборкаПоОстаткам.ОтпускАвансом) + " в счет будущего периода";
	КонецЕсли;
	
	Комментарий = Комментарий + РасшифровкаКомментария;
	
	Если ВыборкаПоОстаткам.ДатаПриемаНаРаботу > ДобавитьМесяц(ВыборкаПоОстаткам.ДатаПолученияДанных, -6) Тогда
		Если Не ПустаяСтрока(Комментарий) Тогда
			Комментарий = Комментарий + ". ";
		КонецЕсли;
		Комментарий = Комментарий + "Дата приема на работу: " + Формат(ВыборкаПоОстаткам.ДатаПриемаНаРаботу, "ДФ='д ММММ гггг ""года""'");
		
	ИначеЕсли ВыборкаПоОстаткам.ДатаПриемаНаРаботу = NULL Тогда
		Если Не ПустаяСтрока(Комментарий) Тогда
			Комментарий = Комментарий + ". ";
		КонецЕсли;
		Комментарий = Комментарий + "Не принят на работу";
		
	КонецЕсли;
	
	Если УпрУчет И ВыборкаПоОстаткам.Мероприятие <> NULL Тогда
		Если Не ПустаяСтрока(Комментарий) Тогда
			Комментарий = Комментарий + ". ";
		КонецЕсли;
		Комментарий = Комментарий + "Отпуск пересекается с мероприятием """ + ВыборкаПоОстаткам.Мероприятие + """";
	КонецЕсли;
	
	Возврат Комментарий;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ формирования движений кадровых документов по плановым начислениям работников организации

Функция СформироватьТекстЗапросаПоПроверкеСоответствияШтатномуРасписанию() Экспорт 
	
	Возврат
	"ВЫБРАТЬ
	|	ТЧНачисления.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТЧНачисления.ЗанимаемыхСтавок <> 1
	|			ТОГДА ИСТИНА
	|		КОГДА ТЧНачисления.ЗачетОтработанногоВремени
	|				И ТЧНачисления.Действие В (ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Начать), ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Изменить))
	|			ТОГДА ВЫБОР
	|					КОГДА ТЧНачисления.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам))
	|							И ШтатноеРасписаниеОрганизаций.ВидТарифнойСтавки = ЗНАЧЕНИЕ(Перечисление.ВидыТарифныхСтавок.Месячная)
	|						ТОГДА ВЫБОР
	|								КОГДА ТЧНачисления.ТребуетВводаТарифногоРазряда
	|									ТОГДА ВЫБОР
	|											КОГДА РазмерТарифныхСтавок.Размер < ШтатноеРасписаниеОрганизаций.МинимальнаяТарифнаяСтавка
	|												ТОГДА ЛОЖЬ
	|											КОГДА РазмерТарифныхСтавок.Размер > ШтатноеРасписаниеОрганизаций.МаксимальнаяТарифнаяСтавка
	|												ТОГДА ЛОЖЬ
	|											ИНАЧЕ ИСТИНА
	|										КОНЕЦ
	|								ИНАЧЕ ВЫБОР
	|										КОГДА ТЧНачисления.Показатель1 < ШтатноеРасписаниеОрганизаций.МинимальнаяТарифнаяСтавка
	|											ТОГДА ЛОЖЬ
	|										КОГДА ТЧНачисления.Показатель1 > ШтатноеРасписаниеОрганизаций.МаксимальнаяТарифнаяСтавка
	|											ТОГДА ЛОЖЬ
	|										ИНАЧЕ ИСТИНА
	|									КОНЕЦ
	|							КОНЕЦ
	|					КОГДА ТЧНачисления.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке)
	|							И ШтатноеРасписаниеОрганизаций.ВидТарифнойСтавки = ЗНАЧЕНИЕ(Перечисление.ВидыТарифныхСтавок.Дневная)
	|						ТОГДА ВЫБОР
	|								КОГДА ТЧНачисления.ТребуетВводаТарифногоРазряда
	|									ТОГДА ВЫБОР
	|											КОГДА РазмерТарифныхСтавок.Размер < ШтатноеРасписаниеОрганизаций.МинимальнаяТарифнаяСтавка
	|												ТОГДА ЛОЖЬ
	|											КОГДА РазмерТарифныхСтавок.Размер > ШтатноеРасписаниеОрганизаций.МаксимальнаяТарифнаяСтавка
	|												ТОГДА ЛОЖЬ
	|											ИНАЧЕ ИСТИНА
	|										КОНЕЦ
	|								ИНАЧЕ ВЫБОР
	|										КОГДА ТЧНачисления.Показатель1 < ШтатноеРасписаниеОрганизаций.МинимальнаяТарифнаяСтавка
	|											ТОГДА ЛОЖЬ
	|										КОГДА ТЧНачисления.Показатель1 > ШтатноеРасписаниеОрганизаций.МаксимальнаяТарифнаяСтавка
	|											ТОГДА ЛОЖЬ
	|										ИНАЧЕ ИСТИНА
	|									КОНЕЦ
	|							КОНЕЦ
	|					КОГДА ТЧНачисления.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке)
	|							И ШтатноеРасписаниеОрганизаций.ВидТарифнойСтавки = ЗНАЧЕНИЕ(Перечисление.ВидыТарифныхСтавок.Часовая)
	|						ТОГДА ВЫБОР
	|								КОГДА ТЧНачисления.ТребуетВводаТарифногоРазряда
	|									ТОГДА ВЫБОР
	|											КОГДА РазмерТарифныхСтавок.Размер < ШтатноеРасписаниеОрганизаций.МинимальнаяТарифнаяСтавка
	|												ТОГДА ЛОЖЬ
	|											КОГДА РазмерТарифныхСтавок.Размер > ШтатноеРасписаниеОрганизаций.МаксимальнаяТарифнаяСтавка
	|												ТОГДА ЛОЖЬ
	|											ИНАЧЕ ИСТИНА
	|										КОНЕЦ
	|								ИНАЧЕ ВЫБОР
	|										КОГДА ТЧНачисления.Показатель1 < ШтатноеРасписаниеОрганизаций.МинимальнаяТарифнаяСтавка
	|											ТОГДА ЛОЖЬ
	|										КОГДА ТЧНачисления.Показатель1 > ШтатноеРасписаниеОрганизаций.МаксимальнаяТарифнаяСтавка
	|											ТОГДА ЛОЖЬ
	|										ИНАЧЕ ИСТИНА
	|									КОНЕЦ
	|							КОНЕЦ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК РазмерСоответствуетШТР
	|ПОМЕСТИТЬ ВТДанныеШтатногоРасписания
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТЧНачисления.НомерСтроки КАК НомерСтроки,
	|		ТЧНачисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|		ТЧНачисления.Должность КАК Должность,
	|		ТЧНачисления.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
	|		ТЧНачисления.ТарифныйРазряд1 КАК ТарифныйРазряд1,
	|		ТЧНачисления.ТарифныйРазряд2 КАК ТарифныйРазряд2,
	|		ТЧНачисления.ТарифныйРазряд3 КАК ТарифныйРазряд3,
	|		ТЧНачисления.ТарифныйРазряд4 КАК ТарифныйРазряд4,
	|		ТЧНачисления.ТарифныйРазряд5 КАК ТарифныйРазряд5,
	|		ТЧНачисления.ТарифныйРазряд6 КАК ТарифныйРазряд6,
	|		ТЧНачисления.Показатель1 КАК Показатель1,
	|		ТЧНачисления.ЗачетОтработанногоВремени КАК ЗачетОтработанногоВремени,
	|		ТЧНачисления.ТребуетВводаТарифногоРазряда КАК ТребуетВводаТарифногоРазряда,
	|		ТЧНачисления.СпособРасчета КАК СпособРасчета,
	|		ТЧНачисления.Действие КАК Действие,
	|		МАКСИМУМ(ШтатноеРасписаниеОрганизаций.Период) КАК ПериодШтР,
	|		МАКСИМУМ(РазмерТарифныхСтавок.Период) КАК ПериодРазряда
	|	ИЗ
	|		ВТДанныеОНачислениях КАК ТЧНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтатноеРасписаниеОрганизаций КАК ШтатноеРасписаниеОрганизаций
	|			ПО ТЧНачисления.ПодразделениеОрганизации = ШтатноеРасписаниеОрганизаций.ПодразделениеОрганизации
	|				И ТЧНачисления.Должность = ШтатноеРасписаниеОрганизаций.Должность
	|				И ТЧНачисления.Период >= ШтатноеРасписаниеОрганизаций.Период
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
	|			ПО ТЧНачисления.Период >= РазмерТарифныхСтавок.Период
	|				И ТЧНачисления.ТарифныйРазряд1 = РазмерТарифныхСтавок.ТарифныйРазряд
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТЧНачисления.ПодразделениеОрганизации,
	|		ТЧНачисления.Должность,
	|		ТЧНачисления.ЗанимаемыхСтавок,
	|		ТЧНачисления.ТарифныйРазряд1,
	|		ТЧНачисления.ТарифныйРазряд2,
	|		ТЧНачисления.ТарифныйРазряд3,
	|		ТЧНачисления.ТарифныйРазряд4,
	|		ТЧНачисления.ТарифныйРазряд5,
	|		ТЧНачисления.ТарифныйРазряд6,
	|		ТЧНачисления.Показатель1,
	|		ТЧНачисления.ЗачетОтработанногоВремени,
	|		ТЧНачисления.ТребуетВводаТарифногоРазряда,
	|		ТЧНачисления.СпособРасчета,
	|		ТЧНачисления.Действие,
	|		ТЧНачисления.НомерСтроки) КАК ТЧНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтатноеРасписаниеОрганизаций КАК ШтатноеРасписаниеОрганизаций
	|		ПО ТЧНачисления.ПериодШтР = ШтатноеРасписаниеОрганизаций.Период
	|			И ТЧНачисления.ПодразделениеОрганизации = ШтатноеРасписаниеОрганизаций.ПодразделениеОрганизации
	|			И ТЧНачисления.Должность = ШтатноеРасписаниеОрганизаций.Должность
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
	|		ПО ТЧНачисления.ПериодРазряда = РазмерТарифныхСтавок.Период
	|			И (ТЧНачисления.ТарифныйРазряд1 = РазмерТарифныхСтавок.ТарифныйРазряд
	|				ИЛИ ТЧНачисления.ТарифныйРазряд2 = РазмерТарифныхСтавок.ТарифныйРазряд
	|				ИЛИ ТЧНачисления.ТарифныйРазряд3 = РазмерТарифныхСтавок.ТарифныйРазряд
	|				ИЛИ ТЧНачисления.ТарифныйРазряд4 = РазмерТарифныхСтавок.ТарифныйРазряд
	|				ИЛИ ТЧНачисления.ТарифныйРазряд5 = РазмерТарифныхСтавок.ТарифныйРазряд
	|				ИЛИ ТЧНачисления.ТарифныйРазряд6 = РазмерТарифныхСтавок.ТарифныйРазряд)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки";
КонецФункции // СформироватьТекстЗапросаПоПроверкеСоответствияШтатномуРасписанию()

//vvv
// Заполняет реквизит "КраткийСоставДокумента" документа по его табличным частям.
//
// Параметры
//  ТЧДокумента					– табличная часть документа по которой происходит заполнение реквизита
//  ДополнительнаяТЧДокумента	- табличная часть документа, как правило это ТЧ с дополнительными начислениями
//
// Возвращаемое значение:
//   строка, значение реквизита "КраткийСоставДокумента".
//
Функция ЗаполнитьКраткийСоставДокумента(ТЧДокумента, ИмяРеквизита = "Сотрудник") Экспорт

	КраткийСоставДокумента = "";
	
	КоличествоТЧ = 1;
	КраткийСоставДокументаЗаполнен = Ложь;
	ОбработанныеСсылки = Новый Соответствие;
	Для каждого ТабличнаяЧастьДокумента Из ТЧДокумента Цикл
		
		Если НЕ КраткийСоставДокументаЗаполнен Тогда
			
			Для каждого СтрокаТЧ Из ТабличнаяЧастьДокумента Цикл
				
				СсылкаДляФИО = СтрокаТЧ[ИмяРеквизита];
				
				Если ОбработанныеСсылки.Получить(СсылкаДляФИО) <> Истина Тогда
					
					ОбработанныеСсылки.Вставить(СсылкаДляФИО, Истина);
					
					ФИОФизЛица = ПроцедурыУправленияПерсоналом.ФамилияИнициалыФизЛица(СсылкаДляФИО);
					Если СтрДлина(КраткийСоставДокумента) < 100 Тогда
						КраткийСоставДокумента = КраткийСоставДокумента + ", " + ФИОФизЛица;
					Иначе
						
						Если КоличествоТЧ = 1 Тогда
							КраткийСоставДокумента = Сред(КраткийСоставДокумента,3,95) + "...";
						Иначе
							
							Если Лев(КраткийСоставДокумента,2) = ", " Тогда
								КраткийСоставДокумента = Сред(КраткийСоставДокумента,3,95) + "...";
							Иначе
								КраткийСоставДокумента = Лев(КраткийСоставДокумента,97) + "...";
							КонецЕсли;
							
						КонецЕсли; 
						
						КраткийСоставДокументаЗаполнен = Истина;
						Прервать;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
			КоличествоТЧ = КоличествоТЧ + 1;
			
		КонецЕсли; 
		
		Если КраткийСоставДокументаЗаполнен Тогда
			Прервать
		КонецЕсли; 
		
	КонецЦикла; 
	
	Если Лев(КраткийСоставДокумента,2) = ", " Тогда
		ДлинаСтроки = СтрДлина(КраткийСоставДокумента);
		Если ДлинаСтроки < 100 Тогда
			КраткийСоставДокумента = Сред(КраткийСоставДокумента,3)
		Иначе
			КраткийСоставДокумента = Сред(КраткийСоставДокумента,3,95) + "...";
		КонецЕсли; 
		
	КонецЕсли;
	
	Возврат КраткийСоставДокумента;
	
КонецФункции // ЗаполнитьКраткийСоставДокумента()









