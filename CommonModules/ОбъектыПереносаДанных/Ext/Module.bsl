////////////////////////////////////////////////////////////////////////////////
// Функции для переноса данных из ЗУП 2.5 / ЗБУ 1.0
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС

Функция ВыполнитьАлгоритм(ИмяАлгоритма, Знач Алгоритмы,
	ИсходящиеДанные = "", ВходящиеДанные = "", Источник = "", Приемник = "", ТипПриемника = "", Значение = "", Выражение = "",
	Пусто = "", ВыборкаДанных = "", Объект = "", КоллекцияОбъектов = "", ОбъектКоллекции = "", ИмяПКО = "", ИмяПКОВидСубконто = "",
	НомерПКО = "", НомерПКС = "", Правило = "", КлючВыгружаемыхДанных = "", НеЗапоминатьВыгруженные = "", НеЗамещатьОбъектПриЗагрузке = "",
	ВсеОбъектыВыгружены = "", ТолькоПолучитьУзелСсылки = "", РежимЗаписи = "", РежимПроведения = "", СтандартнаяОбработка = "",
	НеЗамещать = "", НеОчищать = "", УзелСсылки = "", УзелКоллекцииОбъектов = "", УзелОбъектаКоллекции = "", УзелСвойства = "") Экспорт
	
	ВидСубконто	= Алгоритмы;
	Субконто	= Неопределено;
	
	Выполнить(Алгоритмы[ИмяАлгоритма]);
	
	Возврат Субконто;
	
КонецФункции

Процедура Массив_Добавить(Массив, Элемент) Экспорт
	
	Массив.Добавить(Элемент);
	
КонецПроцедуры

Функция Массив_Количество(Массив) Экспорт
	
	Возврат Массив.Количество();
	
КонецФункции

Функция Массив_Найти(Массив, Значение) Экспорт
	
	Результат = Массив.Найти(Значение);
	
	Если Результат = Неопределено Тогда
		Возврат 0;
	КонецЕсли;
	
	Возврат Результат + 1;
	
КонецФункции

Функция Массив_Получить(Массив, Индекс) Экспорт
	
	Возврат Массив[Индекс - 1];
	
КонецФункции

Процедура Массив_Установить(Массив, Индекс, Элемент) Экспорт

	Массив[Индекс-1] = Элемент;

КонецПроцедуры

Функция НовыйОбъект(ТипОбъекта) Экспорт
	
	Если ТипОбъекта = "Структура" Тогда
		Возврат Новый Структура;
		
	ИначеЕсли ТипОбъекта = "Массив" Тогда
		Возврат Новый Массив;
		
	ИначеЕсли ТипОбъекта = "ТаблицаЗначений" Тогда
		Возврат Новый ТаблицаЗначений;
		
	ИначеЕсли ТипОбъекта = "Соответствие" Тогда
		Возврат Новый Соответствие;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция Структура_Получить(Структура, ИмяРеквизита) Экспорт
	
	Попытка
		Возврат Структура[ИмяРеквизита];
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

Процедура Структура_Установить(Структура, ИмяРеквизита, ЗначениеРеквизита) Экспорт
	
	Структура.Вставить(ИмяРеквизита, ЗначениеРеквизита);
	
КонецПроцедуры

Функция СтрокаТаблицыЗначенийВСтруктуру(СтрокаТаблицыЗначений) Экспорт
	
	Возврат ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаТаблицыЗначений);
	
КонецФункции

Функция ТаблицаЗначений_ДобавитьКолонку(ТаблицаЗначений, Колонка) Экспорт
	
	Возврат ТаблицаЗначений.Колонки.Добавить(Колонка);
	
КонецФункции

Функция ТаблицаЗначений_ДобавитьСтроку(ТаблицаЗначений) Экспорт
	
	Возврат ТаблицаЗначений.Добавить();
	
КонецФункции

Процедура ТаблицаЗначений_ДополнитьТаблицу(ТаблицаИсточник, ТаблицаПриемник) Экспорт
	
	ОбщегоНазначенияЗК.ДополнитьТаблицу(ТаблицаИсточник, ТаблицаПриемник);
	
КонецПроцедуры

Функция ТаблицаЗначений_Количество(ТаблицаЗначений) Экспорт
	
	Возврат ТаблицаЗначений.Количество();
	
КонецФункции

Функция ТаблицаЗначений_НайтиСтроки(Знач ТаблицаЗначений, Знач ИменаПолей, Знач Значение1, Знач Значение2 = Неопределено, Знач Значение3 = Неопределено, Знач Значение4 = Неопределено, Знач Значение5 = Неопределено) Экспорт
	
	СтруктураПоиска	= Новый Структура(ИменаПолей, Значение1, Значение2, Значение3, Значение4, Значение5);
	
	Если ТипЗнч(Значение1) <> Тип("Структура")
		И ТипЗнч(Значение2) <> Тип("Структура")
		И ТипЗнч(Значение3) <> Тип("Структура")
		И ТипЗнч(Значение4) <> Тип("Структура")
		И ТипЗнч(Значение5) <> Тип("Структура") Тогда
		Возврат ТаблицаЗначений.НайтиСтроки(СтруктураПоиска);
	КонецЕсли;
	
	МассивПолей		= ОбщегоНазначенияЗК.РазложитьСтрокуВМассивПодстрок(СтрЗаменить(ИменаПолей, " ", ""));
	
	НайденныеСтроки = Новый Массив;
	
	Для Каждого СтрокаТЗ Из ТаблицаЗначений Цикл
		СтрокаПодходит = Истина;
		Для Каждого ПолеПоиска Из МассивПолей Цикл
			ЗначениеПоля	= СтрокаТЗ[ПолеПоиска];
			ЗначениеПоиска	= СтруктураПоиска[ПолеПоиска];
			
			Если ТипЗнч(ЗначениеПоля) = Тип("Структура") Тогда
				ЗначениеПоля	= ЗначениеПоля.Ссылка;
				ЗначениеПоиска	= ЗначениеПоиска.Ссылка;
			КонецЕсли;
			
			Если ЗначениеПоля <> ЗначениеПоиска Тогда
				СтрокаПодходит = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
			
		Если Не СтрокаПодходит Тогда
			Продолжить;
		КонецЕсли;
		
		НайденныеСтроки.Добавить(СтрокаТЗ);
	КонецЦикла;
	
	Возврат НайденныеСтроки;
	
КонецФункции

Функция ТаблицаЗначений_НайденнаяСтрокаПоИндексу(ТаблицаЗначений, Массив, Индекс) Экспорт
	
	Возврат Массив[Индекс - 1]; // В массиве возвращается СтрокаТабличнойЧасти, обращение к таблице значений не требуется
	
КонецФункции

Процедура ТаблицаЗначений_Очистить(ТаблицаЗначений) Экспорт
	
	ТаблицаЗначений.Очистить();
	
КонецПроцедуры

Функция ТаблицаЗначений_Получить(ТаблицаЗначений, Индекс) Экспорт
	
	Возврат ТаблицаЗначений[Индекс-1];
	
КонецФункции

Процедура ТаблицаЗначений_УдалитьСтроку(СтрокаТаблицыЗначений) Экспорт
	
	СтрокаТаблицыЗначений.Владелец().Удалить(СтрокаТаблицыЗначений);
	
КонецПроцедуры

Функция СтрокаТаблицыЗначений_Получить(СтрокаТаблицыЗначений, ИмяПоля) Экспорт
	
	Возврат СтрокаТаблицыЗначений[ИмяПоля];
	
КонецФункции

Процедура СтрокаТаблицыЗначений_Установить(СтрокаТаблицыЗначений, ИмяПоля, ЗначениеПоля) Экспорт
	
	СтрокаТаблицыЗначений[ИмяПоля] = ЗначениеПоля;
	
КонецПроцедуры
