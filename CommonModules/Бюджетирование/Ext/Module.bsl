// Функция возвращает ближайшую дату начала периода планирования
//
// Параметры
//	Периодичность (Перечисления.Периодичность)	- периодичность планирования по сценарию.
//	ДатаВПериоде (Дата)							- произвольная дата
//
// Возвращаемое значение:
//	ДатаНачалаПериода		– ближайшая дата начала периода планирования
//
Функция ДатаНачалаПериода(ДатаВПериоде,Периодичность) Экспорт
	
	Если НЕ ТипЗнч(ДатаВПериоде)=Тип("Дата") Тогда
		Возврат '00010101';
	КонецЕсли;
	
	Если Периодичность=Перечисления.Периодичность.День Тогда
		Возврат НачалоДня(ДатаВПериоде);
	ИначеЕсли Периодичность=Перечисления.Периодичность.Неделя Тогда
		Возврат НачалоНедели (ДатаВПериоде);
	ИначеЕсли Периодичность=Перечисления.Периодичность.Месяц Тогда
		Возврат НачалоМесяца (ДатаВПериоде);
	ИначеЕсли Периодичность=Перечисления.Периодичность.Квартал Тогда
		Возврат НачалоКвартала (ДатаВПериоде);
	ИначеЕсли Периодичность=Перечисления.Периодичность.Год Тогда
		Возврат НачалоГода (ДатаВПериоде);
	Иначе
		Возврат НачалоДня(ДатаВПериоде);
	КонецЕсли;
	
КонецФункции // ДатаНачалаПериода()

// Функция возвращает ближайшую дату окончания периода планирования
//
// Параметры
//	Периодичность (Перечисления.Периодичность)	- периодичность планирования по сценарию.
//	ДатаВПериоде (Дата)							- произвольная дата
//
// Возвращаемое значение:
//	ДатаКонцаПериода	– ближайшая дата окончания периода планирования
//
Функция ДатаКонцаПериода(ДатаВПериоде,Периодичность) Экспорт
	
	Если Периодичность=Перечисления.Периодичность.День Тогда
		Возврат КонецДня(ДатаВПериоде);
	ИначеЕсли Периодичность=Перечисления.Периодичность.Неделя Тогда
		Возврат КонецНедели (ДатаВПериоде);
	ИначеЕсли Периодичность=Перечисления.Периодичность.Месяц Тогда
		Возврат КонецМесяца (ДатаВПериоде);
	ИначеЕсли Периодичность=Перечисления.Периодичность.Квартал Тогда
		Возврат КонецКвартала (ДатаВПериоде);
	ИначеЕсли Периодичность=Перечисления.Периодичность.Год Тогда
		Возврат КонецГода (ДатаВПериоде);
	Иначе
		Возврат КонецДня(ДатаВПериоде);
	КонецЕсли;
	
КонецФункции // ДатаКонцаПериода()


// Функция добавляет интервал к дате
//
// Параметры:
//	Периодичность (Перечисления.Периодичность)	- пнриодичность планирования по сценарию.
//	ДатаВПериоде (Дата)							- произвольная дата
//	Смещение (число)							- определяет направление и количество периодов, в котором сдвигается дата
//
// Возвращаемое значение:
//	Дата, отстоящая от исходной на заданное количество периодов 
//
Функция ДобавитьИнтервал(ДатаПериода,Периодичность,Смещение) Экспорт
	
	Если Периодичность = Перечисления.Периодичность.День Тогда
		НоваяДатаПериода = ДатаПериода + Смещение*24*3600;
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Неделя Тогда
		НоваяДатаПериода = ДатаПериода + Смещение*7*24*3600;
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Месяц Тогда
		НоваяДатаПериода = ДобавитьМесяц(ДатаПериода, Смещение);
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Квартал Тогда
		НоваяДатаПериода = ДобавитьМесяц(ДатаПериода, Смещение*3);
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Год Тогда
		НоваяДатаПериода = ДобавитьМесяц(ДатаПериода, Смещение*12);
		
	Иначе
		НоваяДатаПериода=НачалоДня(ДатаПериода) + Смещение*24*3600;
		
	КонецЕсли;
	
	Возврат НоваяДатаПериода;
	
КонецФункции // ДобавитьИнтервал()

// Возвращает число дней в переданном периоде
//
// Параметры
//	Периодичность	– Перечисление.Периодичность элемент перечисления, 
//					  для которого вычисляется количество дней
//
// Возвращаемое значение:
//	ЧислоДнейВПериоде (число)	– число дней в переданном периоде
//
Функция ЧислоДнейВПериоде(Периодичность) Экспорт
	
	Если Периодичность=Перечисления.Периодичность.День Тогда
		ЧислоДнейВПериоде=1;
	ИначеЕсли Периодичность=Перечисления.Периодичность.Неделя Тогда
		ЧислоДнейВПериоде=7;
	ИначеЕсли Периодичность=Перечисления.Периодичность.Месяц Тогда
		ЧислоДнейВПериоде=30;
	ИначеЕсли Периодичность=Перечисления.Периодичность.Квартал Тогда
		ЧислоДнейВПериоде=90;
	ИначеЕсли Периодичность=Перечисления.Периодичность.Год Тогда
		ЧислоДнейВПериоде=365;
	Иначе
		ЧислоДнейВПериоде=0;
	КонецЕсли;
	
	Возврат ЧислоДнейВПериоде;	
	
КонецФункции // ЧислоДнейВПериоде()

// Возвращает текст фрагмента запроса с выборками по стандартным периодам
//
// Параметры
//	Периодичность(строка)	– периодичность выборки данных запроса
//  Период(строка)			- имя измерения, в котором хранится период данных
//
// Возвращаемое значение:
//	ТекстЗапросаПоПериодам	– текст фрагмента запроса
//
Функция СформироватьТекстЗапросаПоПериодам(Периодичность,Период) Экспорт
	
	СписокПериодов=Новый СписокЗначений;
	СписокПериодов.Добавить("День");
	СписокПериодов.Добавить("Неделя");
	СписокПериодов.Добавить("Месяц");
	СписокПериодов.Добавить("Квартал");
	СписокПериодов.Добавить("Год");
	
	ТекстЗапросаПоПериодам="";
	
	НачальныйИндекс=СписокПериодов.Индекс(СписокПериодов.НайтиПоЗначению(Периодичность));
	
	Для Сч=НачальныйИндекс По СписокПериодов.Количество()-1 Цикл
		
		ТекущаяПериодичность=СписокПериодов.Получить(Сч).Значение;
		ТекстЗапросаПоПериодам=ТекстЗапросаПоПериодам+"
		|НачалоПериода("+Период+", "+ТекущаяПериодичность+") КАК Период"+ТекущаяПериодичность+",";
		
	КонецЦикла;
	
	Возврат ТекстЗапросаПоПериодам;
	
КонецФункции // СформироватьТекстЗапросаПоПериодам()

// Возвращает строку, описывающую период, определяемый переданными
// датой и периодичностью.
//
// Параметры
//	ДатаВПериоде:Дата		- дата из периода
//	Периодичность: Строка	- строка, определяющая периодичность
//
// Возвращаемое значение:
//	СтрокаПериод: строка	– представление периода для вывода в отчетах
//
Функция ПолучитьПериодСтрокой(ДатаВПериоде, Периодичность) Экспорт
	
	Если Периодичность = "Год" Тогда
		ФорматДаты = "ДФ='гггг ""г.""'";
		
	ИначеЕсли Периодичность = "Квартал" Тогда
		ФорматДаты = "ДФ='к"" квартал"" гггг ""г.""'";
		
	ИначеЕсли Периодичность = "Месяц" Тогда
		ФорматДаты = "ДФ='ММММ гггг ""г.""'";
		
	ИначеЕсли Периодичность = "Неделя" Тогда
		ФорматДаты = "ДФ='""Неделя (""дд.ММ.гггг'";
		
	ИначеЕсли Периодичность = "День" Тогда
		ФорматДаты = "ДФ='дд.ММ.гггг ""г.""'";
		
	Иначе
		ФорматДаты = "";
		
	КонецЕсли;
	
	СтрокаПериод = "" + Формат(ДатаВПериоде, ФорматДаты);
	Если Периодичность = "Неделя" И ТипЗнч(ДатаВПериоде) = Тип("Дата") Тогда
		СтрокаПериод = "" + НеделяГода(ДатаВПериоде) + "-ая " + СтрокаПериод + Формат(КонецНедели(ДатаВПериоде), "ДФ='"" - ""дд.ММ.гггг)'");
	КонецЕсли;
	
	Возврат СтрокаПериод;
	
КонецФункции // ПолучитьПериодСтрокой()


// Предназначена для реализации "произвольного" ввода даты-месяца
// подбирает по переданному тексту строку-представление даты или список таких строк
// в переданный параметр ДатаПоТексту возвращает подобранную по тексту дату
Функция ПериодПодобратьПоТексту(Текст, Периодичность, ДатаПоТексту = Неопределено) ЭКспорт
	
	СписокВозврата = Новый СписокЗначений;
	
	ТекущаяДата		= ОбщегоНазначения.ПолучитьРабочуюДату();
	ТекущийГод		= Год(ТекущаяДата);
	ТекущийКвартал	= Цел(Месяц(ТекущаяДата) / 4) + 1;
	ТекущийМесяц	= Месяц(ТекущаяДата);
	ТекущаяНеделя	= НеделяГода(ТекущаяДата);
	ТекущийДень		= День(ТекущаяДата);
	
	НачалоГода		= НачалоГода(ТекущаяДата);
	НачалоМесяца	= НачалоМесяца(ТекущаяДата);
	КонецГода		= КонецГода(ТекущаяДата);
	
	Если ПустаяСтрока(Текст) Тогда
		Возврат СписокВозврата;
	КонецЕсли;
	
	Если Найти(Текст, ".") <> 0 Тогда
		Подстроки = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(Текст, ".");
		ИспользуемыйРазделитель = ".";
		
	ИначеЕсли Найти(Текст, ",") <> 0 Тогда
		Подстроки = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(Текст, ",");
		ИспользуемыйРазделитель = ",";
		
	ИначеЕсли Найти(Текст, "-") <> 0 Тогда
		Подстроки = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(Текст, "-");
		ИспользуемыйРазделитель = "-";
		
	ИначеЕсли Найти(Текст, "/") <> 0 Тогда
		Подстроки = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(Текст, "/");
		ИспользуемыйРазделитель = "/";
		
	ИначеЕсли Найти(Текст, "\") <> 0 Тогда
		Подстроки = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(Текст, "\");
		ИспользуемыйРазделитель = "\";
		
	Иначе
		Подстроки = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(Текст, " ");
		ИспользуемыйРазделитель = " ";
		
	КонецЕсли;
	
	Если Периодичность = Перечисления.Периодичность.День Тогда
		КонецПериода = День(КонецМесяца(ТекущаяДата));
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Неделя Тогда
		КонецПериода = НеделяГода(КонецГода);
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Месяц Тогда
		КонецПериода = 12;
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Квартал Тогда
		КонецПериода = 4;
		
	КонецЕсли;
	
	Если Подстроки.Количество() = 1 И Периодичность <> Перечисления.Периодичность.Год Тогда
		// единственное слово - пытаемся получить период
		
		Если ОбщегоНазначения.ТолькоЦифрыВСтроке(Текст) Тогда
			ПериодЧислом = Число(Текст);
			
			Если ПериодЧислом >= 1 И ПериодЧислом <= КонецПериода Тогда
				Если Периодичность = Перечисления.Периодичность.День Тогда
					ДатаПоТексту = ДобавитьИнтервал(НачалоМесяца, Периодичность, ПериодЧислом - 1);
				Иначе
					ДатаПоТексту = ДобавитьИнтервал(НачалоГода, Периодичность, ПериодЧислом - 1);
				КонецЕсли;
				
				Если Периодичность = Перечисления.Периодичность.День Тогда
					Если СтрДлина(Текст) = 1 Тогда
						ФорматированнаяДата	= Формат(ДатаПоТексту, "ДФ=d/MM/yyyy");
					Иначе
						ФорматированнаяДата	= Формат(ДатаПоТексту, "ДФ=dd/MM/yyyy");
					КонецЕсли;
					
				ИначеЕсли Периодичность = Перечисления.Периодичность.Неделя Тогда
					ФорматированнаяДата = Текст + Формат(ДатаПоТексту, "ДФ=/yyyy");
					
				ИначеЕсли Периодичность = Перечисления.Периодичность.Квартал Тогда
					ФорматированнаяДата = Текст + Формат(ДатаПоТексту, "ДФ=/yyyy");
					
				ИначеЕсли Периодичность = Перечисления.Периодичность.Месяц Тогда
					Если СтрДлина(Текст) = 1 Тогда
						ФорматированнаяДата	= Формат(ДатаПоТексту, "ДФ=M/yyyy");
					Иначе
						ФорматированнаяДата	= Формат(ДатаПоТексту, "ДФ=MM/yyyy");
					КонецЕсли;
					
				Иначе // Год
					ФорматированнаяДата = Текст;
					
				КонецЕсли;
				
				СписокВозврата.Добавить(ФорматированнаяДата);
			КонецЕсли;
				
		Иначе
			Если Периодичность = Перечисления.Периодичность.Месяц Тогда
				СписокМесяцев = СписокМесяцевПоСтроке(Текст);
				Для Каждого Месяц Из СписокМесяцев Цикл
					ДатаПоТексту = Дата(ТекущийГод, Месяц, 1);
					СписокВозврата.Добавить(Формат(ДатаПоТексту, "ДФ='ММММ гггг ""г""'"));
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
	
	Иначе
		Если Периодичность = Перечисления.Периодичность.День Тогда
			Если Подстроки.Количество() >= 2 И Не ПустаяСтрока(Подстроки[1]) И ОбщегоНазначения.ТолькоЦифрыВСтроке(Подстроки[1]) Тогда
				Месяц				= Число(Подстроки[1]);
				Если Месяц >= 1 И Месяц <= КонецПериода Тогда
					ФорматДляМесяца	= Прав("MM", СтрДлина(Подстроки[1]));
				Иначе
					Возврат СписокВозврата;
				КонецЕсли;
			Иначе
				Если ОбщегоНазначения.ТолькоЦифрыВСтроке(Подстроки[1]) Тогда
					Месяц				= ТекущийМесяц;
					ФорматДляМесяца		= "MM";
				Иначе
					СписокМесяцев = СписокМесяцевПоСтроке(Подстроки[1]);
					Если СписокМесяцев.Количество() = 1 Тогда
						Месяц				= СписокМесяцев[0];
						ФорматДляМесяца		= "MMMM";
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если Подстроки.Количество() >= 3 И Не ПустаяСтрока(Подстроки[2]) И ОбщегоНазначения.ТолькоЦифрыВСтроке(Подстроки[2]) Тогда
				Год				= Число(Лев(Формат(ТекущийГод, "ЧГ="), 4-СтрДлина(Подстроки[2])) + Подстроки[2]);
				Если Год >= 1900 И Год < 3000 Тогда
					ФорматДляГода	= Прав("yyyy", СтрДлина(Подстроки[2]));
				Иначе
					Возврат СписокВозврата;
				КонецЕсли;
			Иначе
				Год				= ТекущийГод;
				ФорматДляГода	= "yyyy";
			КонецЕсли;
			
			Если Подстроки.Количество() >= 1 И Не ПустаяСтрока(Подстроки[0]) И ОбщегоНазначения.ТолькоЦифрыВСтроке(Подстроки[0]) Тогда
				День				= Число(Подстроки[0]);
				Если День >= 1 И Месяц <> Неопределено И День <= День(КонецМесяца(Дата(Год, Месяц, 1))) Тогда
					ФорматДляДня	= Прав("dd", СтрДлина(Подстроки[0]));
				Иначе
					Возврат СписокВозврата;
				КонецЕсли;
			Иначе
				Возврат СписокВозврата;
			КонецЕсли;
			
			ДатаПоТексту = Дата(Год, Месяц, День);
			
			Если Подстроки.Количество() < 3 ИЛИ ПустаяСтрока(Подстроки[2]) Тогда
				ФорматированнаяДата	= Формат(ДатаПоТексту, "ДФ='" + ФорматДляДня + ИспользуемыйРазделитель + ФорматДляМесяца + ИспользуемыйРазделитель + ФорматДляГода + "'");
			Иначе
				ФорматированнаяДата	= "";
			КонецЕсли;
			
		ИначеЕсли Периодичность = Перечисления.Периодичность.Неделя Тогда
			Если Подстроки.Количество() >= 2 И Не ПустаяСтрока(Подстроки[1]) И ОбщегоНазначения.ТолькоЦифрыВСтроке(Подстроки[1]) Тогда
				Год				= Число(Лев(Формат(ТекущийГод, "ЧГ="), 4-СтрДлина(Подстроки[1])) + Подстроки[1]);
				Если Год >= 1900 И Год < 3000 Тогда
					ФорматДляГода	= Прав("yyyy", СтрДлина(Подстроки[1]));
				Иначе
					Возврат СписокВозврата;
				КонецЕсли;
			Иначе
				Год				= ТекущийГод;
				ФорматДляГода	= "yyyy";
			КонецЕсли;
			
			Если Подстроки.Количество() >= 1 И Не ПустаяСтрока(Подстроки[0]) И ОбщегоНазначения.ТолькоЦифрыВСтроке(Подстроки[0]) Тогда
				Неделя	= Число(Подстроки[0]) - 1;
				Если Неделя < 1 ИЛИ Неделя > НеделяГода(Дата(Год, 12, 31)) Тогда
					Возврат СписокВозврата;
				КонецЕсли;
			Иначе
				Возврат СписокВозврата;
			КонецЕсли;
			
			ДатаПоТексту = ДобавитьИнтервал(Дата(Год, 1, 1), Периодичность, Неделя);
			
			Если Подстроки.Количество() < 2 ИЛИ ПустаяСтрока(Подстроки[1]) Тогда
				ФорматированнаяДата	= Подстроки[0] + ИспользуемыйРазделитель + Формат(ДатаПоТексту, "ДФ='" + ФорматДляГода + "'");
			Иначе
				ФорматированнаяДата	= "";
			КонецЕсли;
			
		ИначеЕсли Периодичность = Перечисления.Периодичность.Месяц Тогда
			Если Подстроки.Количество() >= 1 И Не ПустаяСтрока(Подстроки[0]) И ОбщегоНазначения.ТолькоЦифрыВСтроке(Подстроки[0]) Тогда
				Месяц			= Число(Подстроки[0]);
				Если Месяц >= 1 И Месяц <= КонецПериода Тогда
					ФорматДляМесяца	= Прав("MM", СтрДлина(Подстроки[0]));
				Иначе
					Возврат СписокВозврата;
				КонецЕсли;
			Иначе
				Возврат СписокВозврата;
			КонецЕсли;
			
			Если Подстроки.Количество() >= 2 И Не ПустаяСтрока(Подстроки[1]) И ОбщегоНазначения.ТолькоЦифрыВСтроке(Подстроки[1]) Тогда
				Год				= Число(Лев(Формат(ТекущийГод, "ЧГ="), 4-СтрДлина(Подстроки[1])) + Подстроки[1]);
				Если Год >= 1900 И Год < 3000 Тогда
					ФорматДляГода	= Прав("yyyy", СтрДлина(Подстроки[1]));
				Иначе
					Возврат СписокВозврата;
				КонецЕсли;
			Иначе
				Год				= ТекущийГод;
				ФорматДляГода	= "yyyy";
			КонецЕсли;
			
			ДатаПоТексту = Дата(Год, Месяц, 1);
			
			Если Подстроки.Количество() < 2 ИЛИ ПустаяСтрока(Подстроки[1]) Тогда
				ФорматированнаяДата	= Формат(ДатаПоТексту, "ДФ='" + ФорматДляМесяца + ИспользуемыйРазделитель + ФорматДляГода + "'");
			Иначе
				ФорматированнаяДата	= "";
			КонецЕсли;
			
		ИначеЕсли Периодичность = Перечисления.Периодичность.Квартал Тогда
			Если Подстроки.Количество() >= 1 И Не ПустаяСтрока(Подстроки[0]) И ОбщегоНазначения.ТолькоЦифрыВСтроке(Подстроки[0]) Тогда
				Квартал	= (Число(Подстроки[0]));
				Если Квартал < 1 ИЛИ Квартал > КонецПериода Тогда
					Возврат СписокВозврата;
				КонецЕсли;
			Иначе
				Возврат СписокВозврата;
			КонецЕсли;
			
			Если Подстроки.Количество() >= 2 И Не ПустаяСтрока(Подстроки[1]) И ОбщегоНазначения.ТолькоЦифрыВСтроке(Подстроки[1]) Тогда
				Год				= Число(Лев(Формат(ТекущийГод, "ЧГ="), 4-СтрДлина(Подстроки[1])) + Подстроки[1]);
				Если Год >= 1900 И Год < 3000 Тогда
					ФорматДляГода	= Прав("yyyy", СтрДлина(Подстроки[1]));
				Иначе
					Возврат СписокВозврата;
				КонецЕсли;
			Иначе
				Год				= ТекущийГод;
				ФорматДляГода	= "yyyy";
			КонецЕсли;
			
			ДатаПоТексту = Дата(Год, (Квартал - 1) * 3 + 1, 1);
			
			Если Подстроки.Количество() < 2 ИЛИ ПустаяСтрока(Подстроки[1]) Тогда
				ФорматированнаяДата	= Подстроки[0] + ИспользуемыйРазделитель + Формат(ДатаПоТексту, "ДФ='" + ФорматДляГода + "'");
			Иначе
				ФорматированнаяДата	= "";
			КонецЕсли;
			
		ИначеЕсли Периодичность = Перечисления.Периодичность.Год Тогда
			Если Подстроки.Количество() >= 1 И Не ПустаяСтрока(Подстроки[0]) И ОбщегоНазначения.ТолькоЦифрыВСтроке(Подстроки[0]) Тогда
				Год				= Число(Лев(Формат(ТекущийГод, "ЧГ="), 4-СтрДлина(Подстроки[0])) + Подстроки[0]);
				Если Год >= 1900 И Год < 3000 Тогда
					ФорматДляГода	= Прав("yyyy", СтрДлина(Подстроки[0]));
				Иначе
					Возврат СписокВозврата;
				КонецЕсли;
			Иначе
				Возврат СписокВозврата;
			КонецЕсли;
			
			ДатаПоТексту = Дата(Год, 1, 1);
			
			Если Подстроки.Количество() < 2 ИЛИ ПустаяСтрока(Подстроки[1]) Тогда
				ФорматированнаяДата = Подстроки[0] + " год";
			Иначе
				ФорматированнаяДата	= "";
			КонецЕсли;
			
		КонецЕсли;
		
		СписокВозврата.Добавить(ФорматированнаяДата);
		
	КонецЕсли;
	
	Возврат СписокВозврата;
	
КонецФункции

// подбирает массив номеров месяцев, соответствующих переданной строке
// например, для строки "ма" это будут 3 и 5, для "а" - 4 и 8
// используется в ПодобратьДатуПоТексту
//
Функция СписокМесяцевПоСтроке(Текст)
	
	СписокМесяцев = Новый СписокЗначений;
	Месяцы = Новый Соответствие;
	МесяцыВозврата = Новый Массив;
	
	Для Счетчик = 1 По 12 Цикл
		Представление = Формат(Дата(2000, Счетчик, 1), "ДФ='ММММ'");
		СписокМесяцев.Добавить(Счетчик, Представление);
		ПроцедурыУправленияПерсоналом.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), Представление, 2, Представление);
		СписокМесяцев.Добавить(Счетчик, Представление);
		Представление = Формат(Дата(2000, Счетчик, 1), "ДФ='МММ'");
		СписокМесяцев.Добавить(Счетчик, Представление);
	КонецЦикла;
	
	Для Каждого ЭлементСписка Из СписокМесяцев Цикл
		Если ВРег(Текст) = ВРег(Лев(ЭлементСписка.Представление, СтрДлина(Текст))) Тогда
			Месяцы[ЭлементСписка.Значение] = 0;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Элемент Из Месяцы Цикл
		МесяцыВозврата.Добавить(Элемент.Ключ);
	КонецЦикла;
	
	Возврат МесяцыВозврата;
	
КонецФункции

Процедура ПериодАвтоПодборТекста(Текст, ТекстАвтоПодбора, Периодичность, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Список = ПериодПодобратьПоТексту(Текст, Периодичность);
	Если Список.Количество() = 1 Тогда
		ТекстАвтоПодбора = Список[0].Значение;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПериодОкончаниеВводаТекста(Текст, Значение, Периодичность, СтандартнаяОбработка, ДатаПоТексту = Неопределено) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Список = ПериодПодобратьПоТексту(Текст, Периодичность, ДатаПоТексту);
	Если Список.Количество() = 1 Тогда
		Значение = Список[0].Значение;
	Иначе
		Значение = Список;
	КонецЕсли;
	
КонецПроцедуры

#Если Клиент Тогда

// Процедура обрабатывает событие начала выбора из списка в поле периода
// Процедура исполняется только на клиенте
//
Процедура ПериодНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка, Форма, ДатаВПериоде, Периодичность, НачальноеЗначение = Неопределено) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Если НачальноеЗначение = Неопределено Тогда
		НачальноеЗначение = ДатаВПериоде;
	КонецЕсли;
	
	СписокВыбора = Новый СписокЗначений;
	НачалоТекущегоГода = НачалоГода(НачальноеЗначение);
	НачалоПрошлогоГода = НачалоГода(НачалоТекущегоГода - 1);
	СписокВыбора.Добавить(НачалоПрошлогоГода, (Формат(НачалоПрошлогоГода, "ДФ='yyyy'") + "..."));
	НачалоМесяцаЗаполнения = НачалоТекущегоГода;
	ЭлементПоУмолчанию = Неопределено;
	Пока Год(НачальноеЗначение) = Год(НачалоМесяцаЗаполнения) Цикл
		ДобавленныйЭлемент = СписокВыбора.Добавить(НачалоМесяцаЗаполнения, ПолучитьПериодСтрокой(НачалоМесяцаЗаполнения, ОбщегоНазначения.ПолучитьИмяЭлементаПеречисленияПоЗначению(Периодичность)));
		Если НачальноеЗначение = НачалоМесяцаЗаполнения Тогда
			ЭлементПоУмолчанию = ДобавленныйЭлемент;
		КонецЕсли;
		НачалоМесяцаЗаполнения = ДобавитьИнтервал(НачалоМесяцаЗаполнения, Периодичность, 1);
	КонецЦикла;
	НачалоСледующегоГода = КонецГода(НачалоТекущегоГода) + 1;
	СписокВыбора.Добавить(НачалоСледующегоГода, (Формат(НачалоСледующегоГода, "ДФ='yyyy'") + "..."));
	
	ВыбранныйЭлемент = Форма.ВыбратьИзСписка(СписокВыбора, Элемент, ЭлементПоУмолчанию);
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	ИначеЕсли Год(ВыбранныйЭлемент.Значение) <> Год(НачальноеЗначение) Тогда
		ПериодНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка, Форма, ДатаВПериоде, Периодичность, ВыбранныйЭлемент.Значение);
		Возврат;
	КонецЕсли;
	
	ДатаВПериоде = ВыбранныйЭлемент.Значение;
	Элемент.Значение  = ПолучитьПериодСтрокой(ДатаВПериоде, ОбщегоНазначения.ПолучитьИмяЭлементаПеречисленияПоЗначению(Периодичность));
	
КонецПроцедуры

#КонецЕсли
