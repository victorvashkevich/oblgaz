
#Если Клиент Тогда

// <Описание функции>
//
// Параметры
//  <Параметр1>  – <Тип.Вид> – <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  – <Тип.Вид> – <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   – <описание возвращаемого значения>
//
Функция ПолучитьТаблицуУчетныхЗаписейДляТранспорта()

	Если ПравоДоступа("Чтение", Метаданные.Справочники.УчетныеЗаписиЭлектроннойПочты) Тогда
	
		Запрос = Новый Запрос;
		
		Запрос.УстановитьПараметр("ТекущийПользователь", глЗначениеПеременной("глТекущийПользователь"));
		
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	УчетныеЗаписиЭлектроннойПочты.Ссылка                                 КАК УчетнаяЗапись,
		|	УчетныеЗаписиЭлектроннойПочты.АдресЭлектроннойПочты                  КАК АдресЭлектроннойПочты,
		|	УчетныеЗаписиЭлектроннойПочты.ИнтервалАвтоПолученияОтправкиСообщений КАК ИнтервалОбновления,
		|	УчетныеЗаписиЭлектроннойПочты.ДействиеАвтополученияОтправкиСообщений КАК Действие
		|ИЗ
		|	Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписиЭлектроннойПочты
		|ГДЕ
		|	УчетныеЗаписиЭлектроннойПочты.АвтоПолучениеОтправкаСообщений
		|	И
		|	УчетныеЗаписиЭлектроннойПочты.ОтветственныйЗаАвтоПолучениеОтправкуСообщений = &ТекущийПользователь
		|	И
		|	НЕ УчетныеЗаписиЭлектроннойПочты.ПометкаУдаления
		|";
		
		Возврат Запрос.Выполнить().Выгрузить();
	
	КонецЕсли; 

КонецФункции

Процедура ОбновитьСписокУчетныхЗаписей() Экспорт
	
	ТаблицаУчетныхЗаписей = ПолучитьТаблицуУчетныхЗаписейДляТранспорта();
	
	Если ТипЗнч(ТаблицаУчетныхЗаписей) <> Тип("ТаблицаЗначений") Тогда
		Возврат;
	КонецЕсли; 
	
	ТаблицаУчетныхЗаписей.Индексы.Добавить("УчетнаяЗапись");

	СохраненнаяТаблица = ВосстановитьЗначение("ТаблицаУчетныхЗаписейАвтоПолученияОтправки");

	Если ТипЗнч(СохраненнаяТаблица) = Тип("ТаблицаЗначений") Тогда
		Для каждого СтрокаТаблицы Из СохраненнаяТаблица Цикл
			НайденнаяСтрока = ТаблицаУчетныхЗаписей.Найти(СтрокаТаблицы.УчетнаяЗапись, "УчетнаяЗапись");
			Если НайденнаяСтрока <> Неопределено Тогда
				Если НайденнаяСтрока.ИнтервалОбновления <> СтрокаТаблицы.ИнтервалОбновления Тогда
					Сообщить("Изменился интервал автополучения/отправки писем для учетной записи """ + НайденнаяСтрока.УчетнаяЗапись + """. Новое значение " + НайденнаяСтрока.ИнтервалОбновления + " мин.");
				КонецЕсли;
				Если НайденнаяСтрока.Действие <> СтрокаТаблицы.Действие Тогда
					Сообщить("Изменилось действие автополучения/отправки писем для учетной записи """ + НайденнаяСтрока.УчетнаяЗапись + """. Новое значение " + НайденнаяСтрока.Действие + ".");
				КонецЕсли;
			Иначе
				Сообщить("Из списка автополучения/отправки удалена учетная запись """ + СтрокаТаблицы.УчетнаяЗапись + """.");
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли;
	
	УчетныеЗаписиАвтоматическогоТранспортаПисем.Очистить();
	
	Для каждого СтрокаТаблицы Из ТаблицаУчетныхЗаписей Цикл
		
		НоваяСтрокаТЧ = УчетныеЗаписиАвтоматическогоТранспортаПисем.Добавить();
		НоваяСтрокаТЧ.УчетнаяЗапись         = СтрокаТаблицы.УчетнаяЗапись;
		НоваяСтрокаТЧ.ИнтервалОбновления    = СтрокаТаблицы.ИнтервалОбновления;
		НоваяСтрокаТЧ.АдресЭлектроннойПочты = СтрокаТаблицы.АдресЭлектроннойПочты;
		НоваяСтрокаТЧ.Действие              = СтрокаТаблицы.Действие;
		
		Если ТипЗнч(СохраненнаяТаблица) = Тип("ТаблицаЗначений") Тогда
			СохраненнаяТаблица.Индексы.Добавить("УчетнаяЗапись");
			НайденнаяСтрока = СохраненнаяТаблица.Найти(СтрокаТаблицы.УчетнаяЗапись, "УчетнаяЗапись");
		Иначе
			НайденнаяСтрока = Неопределено;
		КонецЕсли;
		
		Если НайденнаяСтрока = Неопределено Тогда
			Сообщить("В список автополучения/отправки добавлена учетная запись """ + СтрокаТаблицы.УчетнаяЗапись + """. Интервал обновления " + СтрокаТаблицы.ИнтервалОбновления + " мин. Действие: " + СтрокаТаблицы.Действие);
		КонецЕсли; 
	
	КонецЦикла;
	
	СохранитьЗначение("ТаблицаУчетныхЗаписейАвтоПолученияОтправки", ТаблицаУчетныхЗаписей.Скопировать());
	
КонецПроцедуры

#КонецЕсли
