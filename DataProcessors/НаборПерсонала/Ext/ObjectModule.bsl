////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Храним текущего пользователя
Перем ТекущийПользователь Экспорт;

// Доступные учетные записи для отбора в запросах
Перем мДоступныеУчетныеЗаписиДляЧтения Экспорт;
Перем мДоступныеУчетныеЗаписиДляЗаписи Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ПолучитьСписокНеразобранныхПисем(ПолеДляУпорядочивания) Экспорт
	
	Если Не ПравоДоступа("Чтение", Метаданные.Документы.ЭлектронноеПисьмо) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("СписокУчетныхЗаписей",	мДоступныеУчетныеЗаписиДляЧтения);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЭлектронноеПисьмо.ОтправительПредставление КАК Отправитель,
	|	ЭлектронноеПисьмо.ОтправительАдресЭлектроннойПочты КАК ОтправительАдресЭлектроннойПочты,
	|	ЭлектронноеПисьмо.Тема КАК Тема,";
	Если ПолеДляУпорядочивания = "ДатаПолучения" Тогда
	Запрос.Текст = Запрос.Текст + "
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ЭлектронноеПисьмо.ДатаТранспорта, ДЕНЬ) = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК ДополнительноеУпорядочивание,";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
	|	НАЧАЛОПЕРИОДА(ВЫБОР
	|		КОГДА ЭлектронноеПисьмо.ДатаТранспорта > ЭлектронноеПисьмо.Дата
	|			ТОГДА ЭлектронноеПисьмо.Дата
	|		ИНАЧЕ ЭлектронноеПисьмо.ДатаТранспорта
	|	КОНЕЦ, ДЕНЬ) КАК ДатаПолучения,
	|	ЭлектронноеПисьмо.Ссылка,
	|	ЭлектронноеПисьмо.НеРассмотрено,
	|	ЭлектронноеПисьмо.РассмотретьПосле,
	|	ЭлектронноеПисьмо.СтатусПисьма
	|ИЗ
	|	Документ.ЭлектронноеПисьмо КАК ЭлектронноеПисьмо
	|ГДЕ
	|	ЭлектронноеПисьмо.ЗаявкаКандидата = ЗНАЧЕНИЕ(Справочник.ЗаявкиКандидатов.ПустаяСсылка)
	|	И (НЕ ЭлектронноеПисьмо.ПометкаУдаления)
	|	И ЭлектронноеПисьмо.НеРассмотрено
	|	И ЭлектронноеПисьмо.УчетнаяЗапись В (&СписокУчетныхЗаписей)
	|
	|УПОРЯДОЧИТЬ ПО
	|	"+?(ПолеДляУпорядочивания = "ДатаПолучения", "ДополнительноеУпорядочивание,", "")+"
	|	"+ПолеДляУпорядочивания+" "+НаборПерсоналаПереопределяемый.ПолучитьНаправлениеУпорядочивания(ПолеДляУпорядочивания);
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ПолучитьСписокФайловПоЗаявке(ЗаявкаКандидата) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ЗаявкаКандидата",	ЗаявкаКандидата);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХранилищеДополнительнойИнформации.Ссылка,
	|	ВЫБОР
	|		КОГДА ХранилищеДополнительнойИнформации.Наименование ПОДОБНО """"
	|			ТОГДА ХранилищеДополнительнойИнформации.ИмяФайла
	|		ИНАЧЕ ХранилищеДополнительнойИнформации.Наименование
	|	КОНЕЦ КАК Наименование
	|ИЗ
	|	Справочник.ХранилищеДополнительнойИнформации КАК ХранилищеДополнительнойИнформации
	|ГДЕ
	|	ХранилищеДополнительнойИнформации.Объект = &ЗаявкаКандидата";
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ПолучитьГруппировкуУпорядочивания(ИмяПоля) Экспорт
	
	Возврат (ИмяПоля <> "Отправитель") И (ИмяПоля <> "Наименование");
	
КонецФункции

Процедура ПолучитьДоступныеУчетныеЗаписи() Экспорт
	
	Если ПравоДоступа("Чтение", Метаданные.Справочники.УчетныеЗаписиЭлектроннойПочты) Тогда
		СтруктураУчетныхЗаписей = УправлениеЭлектроннойПочтой.ПолучитьДоступныеУчетныеЗаписи(ТекущийПользователь);

		Запрос = Новый Запрос;

		Запрос.Текст =
		"ВЫБРАТЬ
		|	УчетныеЗаписиЭлектроннойПочты.Ссылка
		|ИЗ
		|	Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписиЭлектроннойПочты
		|ГДЕ
		|	УчетныеЗаписиЭлектроннойПочты.НазначениеУчетнойЗаписи = ЗНАЧЕНИЕ(Перечисление.НазначенияУчетнойЗаписи.ПерепискаСКандидатами)
		|	И УчетныеЗаписиЭлектроннойПочты.Ссылка В (&СписокУчетныхЗаписей)";

		Запрос.УстановитьПараметр("СписокУчетныхЗаписей",	СтруктураУчетныхЗаписей.Чтение);
		мДоступныеУчетныеЗаписиДляЧтения = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");

		Запрос.УстановитьПараметр("СписокУчетныхЗаписей",	СтруктураУчетныхЗаписей.Запись);
		мДоступныеУчетныеЗаписиДляЗаписи = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	Иначе
		мДоступныеУчетныеЗаписиДляЧтения = Новый Массив;
		мДоступныеУчетныеЗаписиДляЗаписи = Новый Массив;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

ТекущийПользователь = глЗначениеПеременной("глТекущийПользователь");

ПолучитьДоступныеУчетныеЗаписи();
