//****************************************************
Функция СформироватьЗапросПоСотрудникам()
	
	Запрос=Новый Запрос;
	
	Запрос.УстановитьПараметр("ОсновноеМесто",Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы);
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ДатаАктуальности",ДатаВыгрузки);
		
	Запрос.УстановитьПараметр("Паспорт",Справочники.ДокументыУдостоверяющиеЛичность.НайтиПоНаименованию("Паспорт"));
	Запрос.УстановитьПараметр("ВидНаЖительство",Справочники.ДокументыУдостоверяющиеЛичность.НайтиПоНаименованию("Вид на жительство гражданина иностранного государства или лица без гражданства"));
	
	Запрос.Текст=
	"ВЫБРАТЬ
	|	СотрудникиОрганизаций.Ссылка,
	|	СотрудникиОрганизаций.Физлицо КАК ФизЛицо,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество,
	|	ГражданствоФизЛицСрезПоследних.Страна.Наименование КАК Гражданство,
	|	СотрудникиОрганизаций.ТекущееОбособленноеПодразделение.Наименование КАК Организация,
	|	СотрудникиОрганизаций.ТекущееОбособленноеПодразделение.Код КАК КодОрганизации,
	|	СотрудникиОрганизаций.Физлицо.ДатаРождения КАК ДатаРождения,
	|	СотрудникиОрганизаций.Физлицо.Пол КАК Пол,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументСерия,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументНомер,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументКемВыдан,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументДатаВыдачи,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ЛичныйНомер,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументСрокДействия,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументВид.КодИМНС КАК ТипДокумента,
	|	СотрудникиОрганизаций.Физлицо.МестоРождения КАК МестоРождения,
	|	КонтактнаяИнформация2.Представление КАК ТелефонДомашний,
	|	КонтактнаяИнформация3.Представление КАК АдресПрописки,
	|	КонтактнаяИнформация5.Представление КАК ЕМэйл,
	|	ЕСТЬNULL(КонтактнаяИнформация4.Представление, КонтактнаяИнформация3.Представление) КАК АдресПроживания
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаАктуальности, ) КАК ФИОФизЛицСрезПоследних
	|		ПО СотрудникиОрганизаций.Физлицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&ДатаАктуальности, ) КАК ГражданствоФизЛицСрезПоследних
	|		ПО СотрудникиОрганизаций.Физлицо = ГражданствоФизЛицСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаАктуальности, ) КАК РаботникиОрганизацийСрезПоследних
	|		ПО СотрудникиОрганизаций.Ссылка = РаботникиОрганизацийСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СемейноеПоложениеФизЛиц.СрезПоследних(&ДатаАктуальности, ) КАК СемейноеПоложениеФизЛицСрезПоследних
	|		ПО СотрудникиОрганизаций.Физлицо = СемейноеПоложениеФизЛицСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(&ДатаАктуальности, ) КАК ПаспортныеДанныеФизЛицСрезПоследних
	|		ПО СотрудникиОрганизаций.Физлицо = ПаспортныеДанныеФизЛицСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ПО СотрудникиОрганизаций.Физлицо = КонтактнаяИнформация.Объект
	|			И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	|			И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонСлужебный))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация6
	|		ПО СотрудникиОрганизаций.Физлицо = КонтактнаяИнформация6.Объект
	|			И (КонтактнаяИнформация6.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	|			И (КонтактнаяИнформация6.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонСлужебныйМобильный))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация1
	|		ПО СотрудникиОрганизаций.Физлицо = КонтактнаяИнформация1.Объект
	|			И (КонтактнаяИнформация1.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	|			И (КонтактнаяИнформация1.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонМобильный))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация2
	|		ПО СотрудникиОрганизаций.Физлицо = КонтактнаяИнформация2.Объект
	|			И (КонтактнаяИнформация2.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	|			И (КонтактнаяИнформация2.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонФизЛица))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация3
	|		ПО СотрудникиОрганизаций.Физлицо = КонтактнаяИнформация3.Объект
	|			И (КонтактнаяИнформация3.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|			И (КонтактнаяИнформация3.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресФизЛица))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация4
	|		ПО СотрудникиОрганизаций.Физлицо = КонтактнаяИнформация4.Объект
	|			И (КонтактнаяИнформация4.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|			И (КонтактнаяИнформация4.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресФизЛица))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация5
	|		ПО СотрудникиОрганизаций.Физлицо = КонтактнаяИнформация5.Объект
	|			И (КонтактнаяИнформация5.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|			И (КонтактнаяИнформация5.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресЭлектроннойПочты))
	|ГДЕ
	|	НЕ СотрудникиОрганизаций.ЭтоГруппа
	|	И СотрудникиОрганизаций.ТекущееОбособленноеПодразделение=&Организация
	|	И ((СотрудникиОрганизаций.ДатаУвольнения=ДАТАВРЕМЯ(1,1,1,0,0,0)) ИЛИ (СотрудникиОрганизаций.ДатаУвольнения>&ДатаАктуальности))
	|	И СотрудникиОрганизаций.ВидЗанятости = &ОсновноеМесто";
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции
//****************************************************
Функция СформироватьСоставСемьи()
	
	Запрос=Новый Запрос;
	
	Запрос.УстановитьПараметр("Дочь",Справочники.СтепениРодстваФизЛиц.НайтиПоНаименованию("Дочь"));
	Запрос.УстановитьПараметр("Сын",Справочники.СтепениРодстваФизЛиц.НайтиПоНаименованию("Сын"));
	Запрос.УстановитьПараметр("Муж",Справочники.СтепениРодстваФизЛиц.НайтиПоНаименованию("Муж"));
	Запрос.УстановитьПараметр("Жена",Справочники.СтепениРодстваФизЛиц.НайтиПоНаименованию("Жена"));
	
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ФизическиеЛицаСоставСемьи.Имя,
	|	ФизическиеЛицаСоставСемьи.ГодРождения,
	|	ВЫБОР 
	|		КОГДА ФизическиеЛицаСоставСемьи.СтепеньРодства=&Дочь ТОГДА ""d""
	|		КОГДА ФизическиеЛицаСоставСемьи.СтепеньРодства=&Сын ТОГДА ""s""
	|		КОГДА ФизическиеЛицаСоставСемьи.СтепеньРодства=&Муж ТОГДА ""h""
	|		КОГДА ФизическиеЛицаСоставСемьи.СтепеньРодства=&Жена ТОГДА ""w""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК СтепеньРодства,	
	|	ФизическиеЛицаСоставСемьи.Ссылка КАК ФизЛицо
	|ИЗ
	|	Справочник.ФизическиеЛица.СоставСемьи КАК ФизическиеЛицаСоставСемьи";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции
//****************************************************
Функция СформироватьОбразование()
	
	Запрос=Новый Запрос;
	
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ФизическиеЛицаОбразование.Ссылка КАК ФизЛицо,
	|	ФизическиеЛицаОбразование.ДатаОкончания,
	|	ФизическиеЛицаОбразование.УчебноеЗаведение,
	|	ФизическиеЛицаОбразование.Специальность,
	|	ФизическиеЛицаОбразование.Квалификация,
	|	ФизическиеЛицаОбразование.Диплом КАК НомерДиплома,
	|	ВЫБОР 
	|		КОГДА ФизическиеЛицаОбразование.ВидОбразования=ЗНАЧЕНИЕ(Справочник.ВидыОбразованияФизЛиц.ВысшееОбразование) ТОГДА ""Высшее""
	|		КОГДА ФизическиеЛицаОбразование.ВидОбразования=ЗНАЧЕНИЕ(Справочник.ВидыОбразованияФизЛиц.СреднееПрофессиональноеОбразование) ТОГДА ""Cреднее специальное""
	|		КОГДА ФизическиеЛицаОбразование.ВидОбразования=ЗНАЧЕНИЕ(Справочник.ВидыОбразованияФизЛиц.НачальноеПрофессиональноеОбразование) ТОГДА ""Профессионально-техническое""
	|		КОГДА ФизическиеЛицаОбразование.ВидОбразования=ЗНАЧЕНИЕ(Справочник.ВидыОбразованияФизЛиц.СреднееПолноеОбщееОбразование) ТОГДА ""Общее cреднее""
	|		КОГДА ФизическиеЛицаОбразование.ВидОбразования=ЗНАЧЕНИЕ(Справочник.ВидыОбразованияФизЛиц.ОбщееБазовое) ТОГДА ""Общее базовое""
	|	ИНАЧЕ 
	|		""""
	|	КОНЕЦ КАК ВидОбразования,
	|	ФизическиеЛицаОбразование.ОсновноеОбразование
	|ИЗ
	|	Справочник.ФизическиеЛица.Образование КАК ФизическиеЛицаОбразование";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции
//****************************************************
Функция СформироватьПовышениеКвалификации()
	
	Запрос=Новый Запрос;
	Запрос.Текст=	
	"ВЫБРАТЬ
	|	ПройденныеУчебныеКурсы.Физлицо,
	|	ПройденныеУчебныеКурсы.УчебноеЗаведение,
	|	ПройденныеУчебныеКурсы.КурсОбучения,
	|	ПройденныеУчебныеКурсы.ДатаНачала,
	|	ПройденныеУчебныеКурсы.Период КАК ДатаОкончания
	|ИЗ
	|	РегистрСведений.ПройденныеУчебныеКурсы КАК ПройденныеУчебныеКурсы";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции
//****************************************************
Функция СформироватьЯзыки()
	
	Запрос=Новый Запрос;
	
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ФизическиеЛицаЗнаниеЯзыков.Ссылка КАК ФизЛицо,
	|	ФизическиеЛицаЗнаниеЯзыков.Язык КАК Язык
	|ИЗ
	|	Справочник.ФизическиеЛица.ЗнаниеЯзыков КАК ФизическиеЛицаЗнаниеЯзыков";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

//****************************************************
Процедура ВыгрузитьДанные() Экспорт
	
	Выборка=СформироватьЗапросПоСотрудникам();
	
	ЗаписьXML=Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(ФайлВыгрузки+"\"+СокрЛП(СтрЗаменить(Строка(Организация),"""",""))+".xml","windows-1251");
		
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("root");
	
	Пока Выборка.Следующий() Цикл	
							
		ЗаписьXML.ЗаписатьНачалоЭлемента("CLIENT");
		
			ЗаписьXML.ЗаписатьНачалоЭлемента("SURNAME");ЗаписьXML.ЗаписатьТекст(ВРЕГ(Строка(Выборка.Фамилия))); ЗаписьXML.ЗаписатьКонецЭлемента();	
			ЗаписьXML.ЗаписатьНачалоЭлемента("FIRSTNAME");ЗаписьXML.ЗаписатьТекст(ВРЕГ(Строка(Выборка.Имя))); ЗаписьXML.ЗаписатьКонецЭлемента();				
			ЗаписьXML.ЗаписатьНачалоЭлемента("MIDDLENAME");ЗаписьXML.ЗаписатьТекст(ВРЕГ(Строка(Выборка.Отчество))); ЗаписьXML.ЗаписатьКонецЭлемента();	
			ЗаписьXML.ЗаписатьНачалоЭлемента("SURNAME_ENGLISH");ЗаписьXML.ЗаписатьКонецЭлемента();				
			ЗаписьXML.ЗаписатьНачалоЭлемента("FIRSTNAME_ENGLISH");ЗаписьXML.ЗаписатьКонецЭлемента();	
			ЗаписьXML.ЗаписатьНачалоЭлемента("BIRTHDAY");ЗаписьXML.ЗаписатьТекст(Строка(Формат(Выборка.ДатаРождения,"ДФ=dd.MM.yyyy"))); ЗаписьXML.ЗаписатьКонецЭлемента();						
			
			СтруктураМестоРождения = РегламентированнаяОтчетность.РазложитьМестоРождения(Выборка.МестоРождения);
			Город = СтруктураМестоРождения.НаселенныйПункт;
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("BIRTHPLACE");ЗаписьXML.ЗаписатьТекст(Город); ЗаписьXML.ЗаписатьКонецЭлемента();			

			ЗаписьXML.ЗаписатьНачалоЭлемента("DOCUMENT_TYPE");ЗаписьXML.ЗаписатьТекст(Строка(Выборка.ТипДокумента)); ЗаписьXML.ЗаписатьКонецЭлемента();
			ЗаписьXML.ЗаписатьНачалоЭлемента("DOCUMENT_NUMBER");ЗаписьXML.ЗаписатьТекст(?(СокрЛП((Выборка.ДокументСерия))="",Сред(СокрЛП(Строка(Выборка.ДокументНомер)),3),СокрЛП(Строка(Выборка.ДокументНомер)))); ЗаписьXML.ЗаписатьКонецЭлемента();
			ЗаписьXML.ЗаписатьНачалоЭлемента("DOCUMENT_SERIES");ЗаписьXML.ЗаписатьТекст(?(СокрЛП((Выборка.ДокументСерия))="",Сред(СокрЛП(Строка(Выборка.ДокументНомер)),1,2),СокрЛП(Строка(Выборка.ДокументСерия)))); ЗаписьXML.ЗаписатьКонецЭлемента();
			ЗаписьXML.ЗаписатьНачалоЭлемента("DOCUMENT_VALID");ЗаписьXML.ЗаписатьТекст(Строка(Формат(Выборка.ДокументСрокДействия,"ДФ=dd.MM.yyyy"))); ЗаписьXML.ЗаписатьКонецЭлемента();
			ЗаписьXML.ЗаписатьНачалоЭлемента("DATE_ISSUE_DOCUMENT");ЗаписьXML.ЗаписатьТекст(Строка(Формат(Выборка.ДокументДатаВыдачи,"ДФ=dd.MM.yyyy"))); ЗаписьXML.ЗаписатьКонецЭлемента();
			ЗаписьXML.ЗаписатьНачалоЭлемента("ISSUE_BY");ЗаписьXML.ЗаписатьТекст(Строка(Выборка.ДокументКемВыдан)); ЗаписьXML.ЗаписатьКонецЭлемента();			
			ЗаписьXML.ЗаписатьНачалоЭлемента("CITIZENSHIP_RB");ЗаписьXML.ЗаписатьТекст("01"); ЗаписьXML.ЗаписатьКонецЭлемента();			
			ЗаписьXML.ЗаписатьНачалоЭлемента("RESIDENT");ЗаписьXML.ЗаписатьТекст("1"); ЗаписьXML.ЗаписатьКонецЭлемента();			
			ЗаписьXML.ЗаписатьНачалоЭлемента("SEX");ЗаписьXML.ЗаписатьТекст(Врег(Лев(Выборка.Пол,1))); ЗаписьXML.ЗаписатьКонецЭлемента();
			ЗаписьXML.ЗаписатьНачалоЭлемента("PERSONAL_NUMBER");ЗаписьXML.ЗаписатьТекст(Строка(Выборка.ЛичныйНомер)); ЗаписьXML.ЗаписатьКонецЭлемента();			
			ЗаписьXML.ЗаписатьНачалоЭлемента("ADDRESS");ЗаписьXML.ЗаписатьТекст(Строка(Выборка.АдресПрописки)); ЗаписьXML.ЗаписатьКонецЭлемента();							
			Если Строка(Выборка.АдресПроживания)="" ТОгда
				ЗаписьXML.ЗаписатьНачалоЭлемента("ADDRESS_PLACE");ЗаписьXML.ЗаписатьТекст(Строка(Выборка.АдресПрописки)); ЗаписьXML.ЗаписатьКонецЭлемента();
			Иначе
				ЗаписьXML.ЗаписатьНачалоЭлемента("ADDRESS_PLACE");ЗаписьXML.ЗаписатьТекст(Строка(Выборка.АдресПроживания)); ЗаписьXML.ЗаписатьКонецЭлемента();
			КонецЕсли;
			ЗаписьXML.ЗаписатьНачалоЭлемента("PH");ЗаписьXML.ЗаписатьТекст(СокрЛП(Строка(Выборка.ТелефонДомашний))); ЗаписьXML.ЗаписатьКонецЭлемента();
			ЗаписьXML.ЗаписатьНачалоЭлемента("EMAIL");ЗаписьXML.ЗаписатьТекст(Строка(Выборка.ЕМэйл)); ЗаписьXML.ЗаписатьКонецЭлемента();
						
		ЗаписьXML.ЗаписатьКонецЭлемента();	
		
	КонецЦикла;

	ЗаписьXML.ЗаписатьКонецЭлемента();	
	ЗаписьXML.Закрыть();
	
КонецПроцедуры


Процедура ВыборФайлаДляВыгрузки(Элемент) Экспорт
	
	ДиалогФыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	Если ДиалогФыбораФайла.Выбрать() Тогда
		Элемент.Значение = ДиалогФыбораФайла.Каталог;
	КонецЕсли;
	
КонецПроцедуры