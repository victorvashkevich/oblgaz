
#Если Клиент Тогда

// Функция пытается создать HTTP осединение используя параметры
// Прокси-сервера, вводимые пользователем
//
// Параметры
//  СерверИсточник - Строка, адрес источника получения данных из сети
//
// Возвращаемое значение:
//   HTTPСоединение
//
Функция СоздатьСосединениеЧерезПрокси()

	Перем HTTP;
	Перем ПроксиСервер;
	
	// Восстановим сохраненные значения
	Восстановлено_ЗапомнитьИмяИПароль = ВосстановитьЗначение("ЗапомнитьИмяИПарольПрокси");
	Если ТипЗнч(Восстановлено_ЗапомнитьИмяИПароль) = Тип("Булево") Тогда
		ЗапомнитьИмяИПароль = Восстановлено_ЗапомнитьИмяИПароль;
	КонецЕсли; 
	Восстановлено_ИмяПользователя     = ВосстановитьЗначение("ИмяПользователяПрокси");
	Если ТипЗнч(Восстановлено_ИмяПользователя) = Тип("Строка") Тогда
		ИмяПользователя = Восстановлено_ИмяПользователя;
	КонецЕсли; 
	Восстановлено_ПарольПользователя  = ВосстановитьЗначение("ПарольПользователяПрокси");
	Если ТипЗнч(Восстановлено_ПарольПользователя) = Тип("Строка") Тогда
		ПарольПользователя = Восстановлено_ПарольПользователя;
	КонецЕсли; 
	
	Если ЗапомнитьИмяИПароль ИЛИ ЗначениеЗаполнено(ИмяПользователя) Тогда
		ПроксиСервер = Новый ИнтернетПрокси();
		ПроксиСервер.Пользователь = ИмяПользователя;
		ПроксиСервер.Пароль       = ПарольПользователя;
		Попытка
			HTTP = Новый HTTPСоединение(СерверИсточник,,,, ПроксиСервер);
			HTTP.Получить(СтрокаПараметраПолучения, ИмяВходящегоФайла);
		Исключение
			HTTP = Неопределено;
		КонецПопытки;
	КонецЕсли;
	
	Если ТипЗнч(HTTP) <> Тип("HTTPСоединение") Тогда
	
		ФормаАвторизацииПрокси = ЭтотОбъект.ПолучитьФорму("ФормаПараметрыПрокси");
		ФормаАвторизацииПрокси.ПризнакОткрытияФормыИзЯзыка = Истина;
		Если ЗапомнитьИмяИПароль = Истина ИЛИ ЗначениеЗаполнено(ИмяПользователя) Тогда
			Если ТипЗнч(ЗапомнитьИмяИПароль) = Тип("Булево") Тогда
				ФормаАвторизацииПрокси.ЗапомнитьИмяИПароль = ЗапомнитьИмяИПароль;
			КонецЕсли;
			Если ТипЗнч(ИмяПользователя) = Тип("Строка") Тогда
				ФормаАвторизацииПрокси.ИмяПользователя = ИмяПользователя;
			КонецЕсли;
			Если ТипЗнч(ПарольПользователя) = Тип("Строка") Тогда
				ФормаАвторизацииПрокси.ПарольПользователя = ПарольПользователя;
			КонецЕсли;
		КонецЕсли;
		HTTP = ФормаАвторизацииПрокси.ОткрытьМодально();
		
	КонецЕсли; 

	Возврат HTTP;
	
КонецФункции

// Функция получает файлы с сервера с указанными параметрами и сохраняет на диск
//
// Параметры:
//  HTTP - HTTPСоединение, если приходится использовать данную функцию в цикле, то тут передается
//         переменная с созданным в предыдущей итерации цикла HTTPСоединением
// СерверИсточникПараметр - Строка, сервер, с которого необходимо получить файлы
// СтрокаПараметраПолученияПараметр - Строка, адрес ресурса на сервере.
// ИмяВходящегоФайлаПараметр - Имя файла, в который помещаются данные полученного ресурса.
//
// Возвращаемое значение:
//  Булево - Успешно получены файлы или нет.
//
Функция ЗапроситьФайлыССервера(СерверИсточникПараметр, СтрокаПараметраПолученияПараметр, ИмяВходящегоФайлаПараметр, HTTP = Неопределено) Экспорт

	СерверИсточник           = СерверИсточникПараметр;
	СтрокаПараметраПолучения = СтрокаПараметраПолученияПараметр;
	ИмяВходящегоФайла        = ИмяВходящегоФайлаПараметр;
	
	Если ТипЗнч(HTTP) <> Тип("HTTPСоединение") Тогда
		HTTP = Новый HTTPСоединение(СерверИсточник)
	КонецЕсли; 
	
	Попытка
		HTTP.Получить(СтрокаПараметраПолучения, ИмяВходящегоФайла);
		Возврат Истина;
	Исключение
		Если Найти(ОписаниеОшибки(), "407") <> 0 И Найти(НРег(ОписаниеОшибки()), "authentication") <> 0 Тогда
			// Скорее всего соединяемся через прокси
			HTTP = СоздатьСосединениеЧерезПрокси();
			Если ТипЗнч(HTTP) <> Тип("HTTPСоединение") Тогда
				Сообщить("Соединение с сервером не установлено.");
				Возврат Ложь;
			Иначе
				Возврат Истина;
			КонецЕсли; 
		Иначе
			Возврат Ложь;
		КонецЕсли;
	КонецПопытки;
	

КонецФункции

#КонецЕсли
